{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,y6I,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,gyK,6DCAA,o3F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,m7lB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8a,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,0l7C,6DCAA,s1I,6DCAA,uS,6DCAA,q/M,6DCAA,s6C,4DCAA,6hD,6DCAA,8H,6DCAA,mtQ,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,0wC,6DCAA,24B,6DCAA,ijM,4DCAA,y5C,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,ssF,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,66H,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,w3V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,62G,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,mjB,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,mBAAmB,CAAC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C,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAA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,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAC5tJ,OAAU,CAAC,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK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,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,MAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,KAAOsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,IAAI,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG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EC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,GAAGC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAAEC,EAAE,GAAG,CAACvR,KAAK,OAAQsR,EAAE,EAA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AK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,aAAa,EAAE,QAAQ,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsB2yB,GAA6B,6B,iBCArvB,IAAI9yB,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_emoji_font_radio_input.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/ephemeral_timer_selector.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/download.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/system/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"avatar\\\" class=\\\"setting-name header-setting no-select delete-files-avatars\\\">\\n                    {[print(xabber.getString(\\\"avatars\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-avatars delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <div class=\\\"input-field checkbox-field delete-avatars-checkbox\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"delete_avatars\\\"/>\\n            <label for=\\\"delete_avatars\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_confirm_delete_avatars\\\"))]}</label>\\n        </div>\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images hidden\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos hidden\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices hidden\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files hidden\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.context === 'voice'){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.context === 'voice'){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"emoji-font-field\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label class=\\\"one-line\\\" for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (hint) {]}<div class=\\\"emoji-hint\\\">{{hint}}</div>{[}]}\\n    {[ if (value === 'system') {]}<div class=\\\"emoji-hint\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_system_label\\\"))]}</div>{[}]}\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"emoji_font\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}' class=\\\"settings-block-wrap emoji_font hidden\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"setting emoji-font radio-button\\\">\\n                                <div class=\\\"emoji-fonts-list field radio-field clickable-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"emoji-font-information-wrap\\\">\\n                            <div class=\\\"emojis-preview no-select\\\">\\n                                <div class=\\\"emoji-preview\\\">😀</div>\\n                                <div class=\\\"emoji-preview\\\">😁</div>\\n                                <div class=\\\"emoji-preview\\\">😂</div>\\n                                <div class=\\\"emoji-preview\\\">😋</div>\\n                                <div class=\\\"emoji-preview\\\">😎</div>\\n                                <div class=\\\"emoji-preview\\\">😃</div>\\n                                <div class=\\\"emoji-preview\\\">😄</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🐱</div>\\n                                <div class=\\\"emoji-preview\\\">🐭</div>\\n                                <div class=\\\"emoji-preview\\\">🐛</div>\\n                                <div class=\\\"emoji-preview\\\">🕸</div>\\n                                <div class=\\\"emoji-preview\\\">🕷</div>\\n                                <div class=\\\"emoji-preview\\\">🐢</div>\\n                                <div class=\\\"emoji-preview\\\">🐑</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🍏</div>\\n                                <div class=\\\"emoji-preview\\\">🍜</div>\\n                                <div class=\\\"emoji-preview\\\">🍈</div>\\n                                <div class=\\\"emoji-preview\\\">🍕</div>\\n                                <div class=\\\"emoji-preview\\\">🥢</div>\\n                                <div class=\\\"emoji-preview\\\">🍰</div>\\n                                <div class=\\\"emoji-preview\\\">☕️</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🏋️‍♂️</div>\\n                                <div class=\\\"emoji-preview\\\">🏏</div>\\n                                <div class=\\\"emoji-preview\\\">🏉</div>\\n                                <div class=\\\"emoji-preview\\\">🥇</div>\\n                                <div class=\\\"emoji-preview\\\">🎬</div>\\n                                <div class=\\\"emoji-preview\\\">⚽️</div>\\n                                <div class=\\\"emoji-preview\\\">🎸</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🚗</div>\\n                                <div class=\\\"emoji-preview\\\">🏎</div>\\n                                <div class=\\\"emoji-preview\\\">🎡</div>\\n                                <div class=\\\"emoji-preview\\\">⛴</div>\\n                                <div class=\\\"emoji-preview\\\">🏛</div>\\n                                <div class=\\\"emoji-preview\\\">🏝</div>\\n                                <div class=\\\"emoji-preview\\\">🗿</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🖱</div>\\n                                <div class=\\\"emoji-preview\\\">📡</div>\\n                                <div class=\\\"emoji-preview\\\">🎁</div>\\n                                <div class=\\\"emoji-preview\\\">📬</div>\\n                                <div class=\\\"emoji-preview\\\">⏰</div>\\n                                <div class=\\\"emoji-preview\\\">📹</div>\\n                                <div class=\\\"emoji-preview\\\">📱</div>\\n                            </div>\\n                            <div class=\\\"preloader-wrap hidden\\\">\\n                                <div class=\\\"preloader-wrapper preloader-20px active \\\">\\n                                    <div class=\\\"spinner-layer\\\">\\n                                        <div class=\\\"circle-clipper left\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"gap-patch\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"circle-clipper right\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"emoji-font-attribution-text hidden\\\"></div>\\n                            <div class=\\\"emoji-font-external-url-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_external_url_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-download-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_downloading_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-button-background emoji-font-external-url-button hidden\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"download\\\"></svg>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting desktop-autostart checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"desktop-autostart\\\"/>\\n                                <label for=\\\"desktop-autostart\\\">{[print(xabber.getString(\\\"settings__autostart\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n            <div class=\\\"ephemeral-timer-time text-color-700\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"close\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"ephemeral-timer-dropdown active-hover\\\" data-activates=\\\"select-ephemeral-timer-{{view.cid}}\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_menu\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"select-ephemeral-timer-{{view.cid}}\\\" class=\\\"ephemeral-timer-dropdown-content dropdown-content noselect\\\">\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_none\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"5\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_5\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"10\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_10\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_15\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_30\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_60\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"300\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_300\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"600\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_600\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-ephemeral-timer\\\" data-value=\\\"900\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"ephemeral_timer_900\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"ephemeral_timer_modal__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div data-value=\\\"\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_none\\\"))]}</div>\\n        <div data-value=\\\"5\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_5\\\"))]}</div>\\n        <div data-value=\\\"10\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_10\\\"))]}</div>\\n        <div data-value=\\\"15\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_15\\\"))]}</div>\\n        <div data-value=\\\"30\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_30\\\"))]}</div>\\n        <div data-value=\\\"60\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_60\\\"))]}</div>\\n        <div data-value=\\\"300\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_300\\\"))]}</div>\\n        <div data-value=\\\"600\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_600\\\"))]}</div>\\n        <div data-value=\\\"900\\\" class=\\\"btn-set-ephemeral-timer\\\">{[print(xabber.getString(\\\"ephemeral_timer_900\\\"))]}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"invitation-reason-wrap hidden\\\">\\n        <textarea class=\\\"text-field textarea-glow input-glow account-glow\\\" type=\\\"text\\\" cols=\\\"10\\\" rows=\\\"5\\\" placeholder='{[print(xabber.getString(\\\"invitation_text_placeholder\\\"))]}' id=\\\"invitation_text\\\" name=\\\"invitation_text\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn-flat btn-main btn-invitation-reason\\\">{[print(xabber.getString(\\\"Invitation_reason_button_text\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload{[ if (encrypted) { ]} hidden{[ } ]}\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        {[ if (ephemeral_timer_text) { ]}\\n            <div class=\\\"ephemeral-timer-msg-time text-color-700{[ if (is_sender) { ]} ephemeral-timer-own-msg-time{[ } ]}\\\">{{ephemeral_timer_text}}</div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"\\n     {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]}\\n     {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]}\\n     data-time=\\\"{{timestamp}}\\\"\\n     data-uniqueid=\\\"{{unique_id}}\\\"\\n     {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]}\\n     data-from=\\\"{{from_jid}}\\\"\\n     {[if (device_id) {]} data-device-id=\\\"{{device_id}}\\\" {[}]}\\n>\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}{[ if (device_id) {]}&#013;{[print(xabber.getString('omemo__dialog_fingerprints__label_device_id'))]}: {{device_id}}{[}]}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_verified_message_title'))]}\\\" {[ if (not_verified_device) { ]}data-device-id=\\\"{{not_verified_device}}\\\" {[ } ]} data-activates=\\\"not-verified-tooltip-{{msgid}}\\\">\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-verified-icon-svg\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-decrypted-icon-svg\\\" data-svgname=\\\"information\\\"></svg>\\n        </div>\\n        <div id=\\\"not-verified-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n            <div class=\\\"not-existing-device-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_existing_device_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-verified-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_message_tooltip\\\"))]}</div>\\n            <button class=\\\"btn-manage-devices btn-flat btn-main text-color-700\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n            <div class=\\\"not-verified-previously-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_previously_message_tooltip\\\"))]}</div>\\n        </div>\\n        {[ if (ephemeral_timer_text) { ]}\\n        <div class=\\\"ephemeral-timer-msg-time text-color-700{[ if (is_sender) { ]} ephemeral-timer-own-msg-time{[ } ]}\\\">{{ephemeral_timer_text}}</div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-group-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-group-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-participant-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-participant-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/download\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,20 L19,20 L19,18 L5,18 M19,9 L15,9 L15,3 L9,3 L9,9 L5,9 L12,16 L19,9 Z\\\" id=\\\"mdi:download\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./future-synth/future-synth.mp3\": 66849,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445,\n\t\"./retro-chiptune/retro-chiptune.mp3\": 15737\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var map = {\n\t\"./_auth_request/_auth_request.mp3\": 48710,\n\t\"./_call_connecting/_call_connecting.mp3\": 2301,\n\t\"./_phone_busy/_phone_busy.mp3\": 33246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60623;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    USE_TAB_SIGNALS: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DESKTOP_AUTOSTART_OPTION: false,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    CLIENT_RESOURCE: 'xabber-web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE',\n    DEFAULT_EMOJI_FONT: 'notoColor',\n\n    EMOJI_FONTS_LIST: {\n        notoColor: {\n            name: 'NotoColorEmoji',\n            value: 'notoColor',\n            url: '../assets/fonts/notocolor/NotoColorEmoji-Regular.ttf',\n            hint: `23 MiB download from ${window.location.hostname}`,\n            attribution_text: '<p>Noto Emoji (Stands for No Tofu) is an <a href=\"https://github.com/googlefonts/noto-emoji\" target=\"_blank\">open source</a> emoji library developed by <a href=\"https://google.com/\" target=\"_blank\">Google</a>.</p><p>Version: 2.042</p><p>License: <a href=\"https://github.com/googlefonts/noto-emoji/blob/main/fonts/LICENSE\" target=\"_blank\">SIL Open Font License 1.1</a></p>',\n            order: 0\n        },\n    },\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_emoji_font_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n    addTemplate('chats.ephemeral_timer_selector');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.download');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let system_json = require('~/sounds/system/system.json'),\n        system_sound_list = [];\n\n\n    Object.keys(system_json).forEach(item => {\n        let audio = require(`~/sounds/system/${item}/${item}.mp3`),\n            system_item = {\n                file_name: item,\n                name: system_json[item].name,\n                audio: audio,\n                not_selectable: system_json[item].not_selectable,\n        };\n        system_sound_list.push(system_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.system = system_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(system_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    let emoji_size = options.emoji_size || 20,\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        return `<span ${title} class=\"emoji emoji-w${emoji_size}\" data-emoji=\"${emoji}\"><span class=\"positioned-emoji\">${emoji}</span></span>`;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        if ($(`<div>${text}</div>`).find('.positioned-emoji').length)\n            return;\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = font ? '#000' : \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.33) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof(dialog_options) === \"object\" && !Array.isArray(dialog_options)){\n                    options = [];\n                }\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n\n            if (dialog_options.quoted_text) {\n                dialog.$modal.find('.modal-content').append(`<div class=\"dialog-quoted-text\">${dialog_options.quoted_text}</div>`);\n            }\n            if (dialog_options.cancel_button_main) {\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, cancel_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {\n        return url;\n    }\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                            if (options.decode_uri) {\n                                try {\n                                    x = x.replace(list[i], decodeURI(list[i]));\n                                } catch (e) {\n                                    console.log(list[i])\n                                    console.error(e)\n                                }\n                            }\n                            else\n                                x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_duration_ephemeral_timer: function (timer) {\n        let text = '';\n        switch (timer) {\n            case '5':\n                text = '5s';\n                break;\n            case '10':\n                text = '10s';\n                break;\n            case '15':\n                text = '15s';\n                break;\n            case '30':\n                text = '30s';\n                break;\n            case '60':\n                text = '1m';\n                break;\n            case '300':\n                text = '5m';\n                break;\n            case '600':\n                text = '10m';\n                break;\n            case '900':\n                text = '15m';\n                break;\n            default:\n                text = '';\n                break;\n        }\n        return text;\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils;\n\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        // client_name: 'Xabber for Web 1'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.onerror = (msg, url, line, col, error) => {\n            utils.dialogs.error(msg + '\\n' + url + '\\n' + line + ':' + col + '\\n' + error);\n        };\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            emoji_font: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            desktop_autostart: false,\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_call_connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_auth_request',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'USE_TAB_SIGNALS',\n                'CLIENT_RESOURCE',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DESKTOP_AUTOSTART_OPTION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n            if (config.DEFAULT_EMOJI_FONT)\n                constants.DEFAULT_EMOJI_FONT = config.DEFAULT_EMOJI_FONT;\n            if (config.EMOJI_FONTS_LIST && _.isObject(config.EMOJI_FONTS_LIST))\n                constants.EMOJI_FONTS_LIST = config.EMOJI_FONTS_LIST;\n            (this._settings.get(\"emoji_font\") == 'default') && this._settings.set(\"emoji_font\", constants.DEFAULT_EMOJI_FONT);\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            let bc;\n            if (constants.USE_TAB_SIGNALS){\n                try {\n                    bc = new BroadcastChannel(\"xabber-web\");\n                } catch (e) {\n                    console.log(e);\n                }\n                if (bc){\n                    bc.onmessage = (event) => {\n                        if (event.data === `1` && !bc.disabled_client) {\n                            bc.postMessage(`2`);\n                        }\n                        if (event.data === `2`) {\n                            bc.disabled_client = true\n                        }\n                    };\n\n                    bc.postMessage(`1`);\n                }\n            }\n            if (bc && bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                let emoji_dfd = new $.Deferred();\n                emoji_dfd.done(() => {\n                    self._cache.save('notifications', granted);\n                    self._cache.save('endpoint_key', undefined);\n                    self.check_config.resolve(true);\n                })\n                if (self._settings.get(\"emoji_font\") === 'system' || !Object.keys(constants.EMOJI_FONTS_LIST).length)\n                    emoji_dfd.resolve();\n                else {\n                    let emoji_obj = constants.EMOJI_FONTS_LIST[self._settings.get(\"emoji_font\")],\n                        emoji_url;\n                    if (emoji_obj && emoji_obj.url) {\n                        emoji_url = emoji_obj.url;\n                        self.loadEmojiFont(emoji_url, emoji_dfd);\n                    }\n                    else {\n                        emoji_dfd.resolve();\n                    }\n                }\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    scrollToChildPlus: function ($child, plus_scroll) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        plus_scroll = plus_scroll || 0;\n\n        this.scrollTo(scrollTop + plus_scroll);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return (scrollHeight - (scrollTop + offsetHeight)) < 10;\n    },\n\n    destroyView: function() {\n        this.data.set('removed', true);\n        // COMPLETELY UNBIND THE VIEW\n        this.undelegateEvents();\n        this.$el.removeData().unbind();\n        // Remove view from DOM\n        this.remove();\n        Backbone.View.prototype.remove.call(this);\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    if (chat.get('unread') || chat.get('const_unread')){\n                        xabber.error(chat);\n                    }\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n        xabber.recountAllMessageCounter();\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else if(this.$el.length) {\n            this.$el[0].requestFullscreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function (status) {\n        let status_text;\n        if (this.model.get('status') == 'device_busy')\n            status_text = 'dialog_jingle_message__status_device_busy';\n        else if (this.model.get('status') == 'busy')\n            status_text = 'dialog_jingle_message__status_busy';\n        else if (this.model.get('status') == 'accepted_another_device')\n            status_text = 'dialog_jingle_message__status_another_device_accepted';\n        else\n            status_text = 'dialog_jingle_message__status_disconnected';\n        this.updateStatusText(xabber.getString(status_text));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"click .setting.desktop-autostart label\": \"setDesktopAutostart\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change .emoji-fonts-list input[type=radio][name=emoji_font]\": \"changeEmojiFont\",\n        \"click .emoji-font-external-url-button\": \"loadExternalEmojiFont\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:emoji_font', this.updateEmojiFontLabel, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language,\n            emoji_font = settings.emoji_font;\n        this.updateSounds();\n        this.updateLanguages();\n        this.updateEmojiFonts();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        if (constants.DESKTOP_AUTOSTART_OPTION) {\n            this.$('.desktop-autostart input[type=checkbox]')\n                .prop({checked: settings.desktop_autostart});\n        } else {\n            this.$('.desktop-autostart').remove();\n        }\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${emoji_font}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.updateEmojiFontLabel();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n            this.settings_single_account_modal.destroyView();\n            this.settings_single_account_modal = undefined;\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    updateEmojiFonts: function () {\n        let emoji_fonts_list = constants.EMOJI_FONTS_LIST;\n\n        if (!Object.keys(emoji_fonts_list).length) {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"').addClass('hidden');\n            return;\n        }\n        this.$('.settings-tab[data-block-name=\"emoji_font\"').removeClass('hidden');\n\n        this.$('.emoji-fonts-list').html('<form action=\"#\"></form>');\n\n        let system_element = $(templates.setting_emoji_font_radio_input({\n            input_name: 'emoji_font',\n            input_id: `${this.cid}-emoji-font-system`,\n            label: xabber.getString(\"settings__menu_item__emoji_font_system\"),\n            value: 'system',\n            hint: null,\n        }));\n\n        this.$('.emoji-fonts-list').append(system_element);\n        emoji_fonts_list = Object.values(emoji_fonts_list);\n\n        emoji_fonts_list.sort((a, b) => {\n            return a.order - b.order;\n        })\n\n        emoji_fonts_list.forEach((item) => {\n            let item_name = item.name,\n                element = $(templates.setting_emoji_font_radio_input({\n                    input_name: 'emoji_font',\n                    input_id: `${this.cid}-emoji-font-${item.value}`,\n                    label: item_name,\n                    value: item.value,\n                    hint: item.hint,\n                }));\n            this.$('.emoji-fonts-list').append(element);\n        });\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setDesktopAutostart: function (ev) {\n        let value = !this.model.get('desktop_autostart');\n        this.model.save('desktop_autostart', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.desktop-autostart').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    changeEmojiFont: function (ev) {\n        let value = ev.target.value,\n            emoji_font = constants.EMOJI_FONTS_LIST[value],\n            current_time;\n\n\n        if (!emoji_font && value !== 'system'){\n            $(ev.target).closest('.emoji-font-field').detach();\n            utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"));\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                .prop('checked', true);\n            return\n        }\n        this.load_emoji_external_dfd = new $.Deferred();\n        this.load_emoji_external_dfd.done(() => {\n\n            this.font_load_dfd = new $.Deferred();\n            this.currently_loaded_font_value = value;\n\n            this.font_load_dfd.done((response) => {\n                if (this.emoji_load_date !== current_time)\n                    return;\n                this.$('.emoji_font .preloader-wrap').addClass('hidden');\n                this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n                this.$('.emoji_font .emojis-preview').removeClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n                this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n                this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                    .prop('disabled', false);\n\n                this.font_load_dfd = null;\n                this.currently_loaded_font_value = null;\n                if (response && response.error){\n                    this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n                    this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n                        .prop('checked', true);\n                    $(ev.target).prop('disabled', true);\n                } else {\n                    this.model.save('emoji_font', value);\n                }\n            });\n\n            this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            let emoji_url = value === 'system' ? value : emoji_font.url;\n            this.load_emoji_external_dfd = null;\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.emoji_load_date = Date.now();\n            current_time = this.emoji_load_date;\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_downloading_text\"));\n            xabber.loadEmojiFont(emoji_url, this.font_load_dfd);\n        });\n\n        this.$('.emoji_font .emojis-preview').addClass('hidden');\n        this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n\n        if (emoji_font && emoji_font.is_outside_url && value !== 'system'){\n            this.$('.emoji_font .emoji-font-external-url-text').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').removeClass('hidden');\n        } else {\n            this.load_emoji_external_dfd.resolve();\n        }\n    },\n\n    loadExternalEmojiFont: function (ev) {\n        this.load_emoji_external_dfd && this.load_emoji_external_dfd.resolve();\n    },\n\n    updateEmojiFontLabel: function () {\n        if (!constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')] && this.model.get('emoji_font') !== 'system') {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"))\n            return;\n        }\n        let label = this.model.get('emoji_font') === 'system' ? 'system' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].name,\n            attribution_text = this.model.get('emoji_font') === 'system' ? '' : constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].attribution_text;\n        if (label === 'system')\n            label = xabber.getString(\"settings__menu_item__emoji_font_system\");\n        this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(label);\n        this.$('.emoji-font-attribution-text').switchClass('hidden', !attribution_text);\n        this.$('.emoji-font-attribution-text').html(attribution_text);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.model.get('emoji_font')}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n            .prop('disabled', false);\n        this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n        this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n        this.$('.emoji_font .preloader-wrap').addClass('hidden');\n        this.$('.emoji_font .emoji-font-download-text').addClass('hidden');\n        this.$('.emoji_font .emojis-preview').removeClass('hidden');\n        if (this.font_load_dfd && this.currently_loaded_font_value){\n            this.$('.emoji_font .emojis-preview').addClass('hidden');\n            this.$('.emoji-font-attribution-text').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-download-text').removeClass('hidden');\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font]`)\n                .prop('disabled', true);\n            this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${this.currently_loaded_font_value}\"]`)\n                .prop('checked', true);\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_downloading_text\"));\n        }\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    loadEmojiFont: function (url, dfd) {\n        xabber.error('loading Font!');\n        if (url && url !== 'system') {\n            let FontName = \"EmojiFont\",\n                FontURL = url,\n                emoji_font = new FontFace(FontName, `url(${FontURL})`),\n                font_loaded;\n\n            let load_check_interval = setInterval(() => {\n                console.log('status - ' + emoji_font.status);\n                if (emoji_font.status == 'loaded' || emoji_font.status == 'error'){\n                    clearInterval(load_check_interval);\n                    if (emoji_font.status == 'loaded' && !font_loaded){\n                        font_loaded = true;\n                        console.log('loaded - interval');\n                        document.fonts.add(emoji_font);\n                        $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                        dfd && dfd.resolve({});\n                    } else if (emoji_font.status == 'error' && !font_loaded) {\n                        font_loaded = true;\n                        console.log('error - interval');\n                        utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\"));\n                        $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                        dfd && dfd.resolve({error: true});\n                    }\n                }\n            }, 1000);\n\n            emoji_font.load().then(() => {\n                console.log('loaded');\n                if (font_loaded)\n                    return;\n                font_loaded = true;\n                document.fonts.add(emoji_font);\n                $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                dfd && dfd.resolve({});\n            }).catch((error) => {\n                console.log('error');\n                if (font_loaded)\n                    return;\n                font_loaded = true;\n                utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_error_loading\") + error);\n                $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                dfd && dfd.resolve({error: true});\n            });\n        } else if (url === 'system'){\n            console.log('system font');\n            $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n            dfd && dfd.resolve({});\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        if (!this.get('focused')) {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        }\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n\n\n    autostartHandler: function () {\n        if (!constants.DESKTOP_AUTOSTART_OPTION)\n            return;\n        if (!window.electronAPI || !window.electronAPI.autostartHandler)\n            return;\n        let desktop_autostart = this._settings.get('desktop_autostart');\n\n        window.electronAPI.autostartHandler(Boolean(desktop_autostart));\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this._settings.on(\"change:desktop_autostart\", this.autostartHandler, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n    this.autostartHandler();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n    xabber.trigger('toolbar_initialized');\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(constants.CLIENT_NAME).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(constants.CLIENT_NAME).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n\n    _onOpen: function() {\n        Strophe.info(\"Websocket open\");\n        var start = this._buildStream();\n        this._conn.xmlOutput(start.tree());\n\n        var startString = Strophe.serialize(start);\n        this._conn.rawOutput(startString);\n        this.socket.send(startString);\n        this._conn.openCheckTimeout = setTimeout(() => { // check of that open was sent but was not received from server\n            if (this._conn.open_received) {\n                return;\n            } else {\n                console.log('disconnected on open not being received')\n                this._conn.disconnect();\n                return;\n            }\n        }, 5000)\n    },\n\n    _handleStreamStart: function(message) {\n        var error = false;\n\n        // Check for errors in the <open /> tag\n        var ns = message.getAttribute(\"xmlns\");\n        if (typeof ns !== \"string\") {\n            error = \"Missing xmlns in <open />\";\n        } else if (ns !== Strophe.NS.FRAMING) {\n            error = \"Wrong xmlns in <open />: \" + ns;\n        }\n\n        var ver = message.getAttribute(\"version\");\n        if (typeof ver !== \"string\") {\n            error = \"Missing version in <open />\";\n        } else if (ver !== \"1.0\") {\n            error = \"Wrong version in <open />: \" + ver;\n        }\n\n        if (error) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n            this._conn._doDisconnect();\n            return false;\n        }\n        clearTimeout(this._conn.openCheckTimeout);\n        return true;\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\nStrophe.addNamespace('EPHEMERAL', 'urn:xmpp:ephemeral:0');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/' + constants.CLIENT_RESOURCE + '-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                console.log('started reconnecting');\n                utils.callback_popup_message('started reconnecting', 3000);\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                this.connection && clearTimeout(this.connection.openCheckTimeout);\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                console.log('reconnected main connection');\n                utils.callback_popup_message(`reconnected main connection , conn_retries: ${this.session.get('conn_retries')}`, 5000);\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({\n                    connected: true,\n                    reconnected: true,\n                    reconnecting: false,\n                    conn_retries: 0\n                });\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                this.connection && clearTimeout(this.connection.openCheckTimeout);\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    console.log(`started another reconnecting, conn_retries: ${this.session.get('conn_retries')},status: ${status} ,condition: ${condition} `);\n                    utils.callback_popup_message(`started another reconnecting, conn_retries: ${this.session.get('conn_retries')},status: ${status} ,condition: ${condition} `, 3000);\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection && clearTimeout(this.change_password_connection.openCheckTimeout);\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection && clearTimeout(this.unregister_account_connection.openCheckTimeout);\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function (text) {\n            if (!this.auth_view && !text){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            } else if (text){\n                if (this.auth_view)\n                    return;\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                    no_reconnect: true\n                });\n                let dialog_text = xabber.getString(\"XMPP_EXCEPTION\") + \": \" + text;\n                utils.dialogs.ask_extended(xabber.getString(\"error\"), xabber.getString(\"modal_policy_violation_text\"),\n                    {modal_class: 'modal-policy-violation', no_dialog_options: true, quoted_text: text, cancel_button_main: true},\n                    {\n                        ok_button_text: xabber.getString(\"disable_account\"),\n                        cancel_button_text: xabber.getString(\"account_settings\"),\n                        optional_button: 'account-reconnect',\n                        optional_button_text: xabber.getString(\"account_reconnect\")\n                    }).done((res) => {\n                    if (res){\n                        if (res === 'account-reconnect')\n                            this.reconnect();\n                        else {\n                            this.save('enabled', false);\n                            this.deactivate()\n                        }\n                    } else {\n                        this.showSettingsModal();\n                    }\n                });\n                return;\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.dfd_presence = new $.Deferred();\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                this.fast_connection && clearTimeout(this.fast_connection.openCheckTimeout);\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.dfd_presence = new $.Deferred();\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg && msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice){\n                        formData.append('media_type', file.type + '+voice');\n                        formData.append('context', 'voice');\n                    }\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    formData.append('context', 'avatar');\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id){\n                    let options = {id: file_id, contexts: ['file', 'voice']};\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFileByUrl: function (file_url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_url){\n                    let options = {file: file_url, contexts: ['file', 'voice']};\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"change:omemo_enabled\", this.onOmemoChanged, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount(true);\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login', {chat_item: null});\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onOmemoChanged: function (account) {\n        this.trigger('omemo_changed', account);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            if (this.current_options.type === 'avatars'){\n                this.getAvatars(this.current_options)\n            } else {\n                this.getFiles(this.current_options)\n            }\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                if (options.type === 'voice'){\n                    options.contexts = 'voice';\n                    delete options.type;\n                }\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        if (options.type)\n                            response.type = options.type;\n                        else if (options.contexts)\n                            response.type = options.contexts;\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\", contexts: \"avatar\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                delete options.type;\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = 'avatars';\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id, contexts: ['avatar']}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"change #delete_avatars\": \"onChangeCheckbox\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.delete_percent = null;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.$('.delete-avatars-checkbox input').prop('checked', false);\n        this.$('.btn-confirm').prop('disabled', false);\n        this.$('.delete-avatars-checkbox').addClass('hidden');\n        this.$('.delete-avatars-checkbox').addClass('hidden2');\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    onChangeCheckbox: function (ev) {\n        let $elem = $(ev.target);\n        this.delete_avatars = $elem.prop('checked');\n        this.$('.delete-files-avatars').switchClass('hidden', !$elem.prop('checked'));\n        if (!this.has_files) {\n            this.$('.media-gallery-delete-items-wrap .no-files').switchClass('hidden', $elem.prop('checked'));\n            this.$('.delete-files-text').switchClass('hidden', !$elem.prop('checked'));\n            this.$('.btn-confirm').prop('disabled', !$elem.prop('checked'));\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        this.delete_avatars = false;\n        this.delete_percent = percent;\n        this.has_files = false;\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion();\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            !options && (options = {});\n            options = Object.assign({obj_per_page: 50}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                let url;\n                if (this.delete_percent === '100'){\n                    url = this.account.get('gallery_url') + 'v1/files/';\n                    options.contexts = ['file', 'avatar', 'voice'];\n                } else {\n                    url = this.account.get('gallery_url') + 'v1/files/percent/' + this.delete_percent + '/';\n                }\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: url,\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    traditional: true,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            if (this.delete_percent === '100'){\n                                this.$('.delete-avatars-checkbox').removeClass('hidden');\n                            }\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            if (!this.has_files) {\n                                this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                                this.$('.delete-files-text').addClass('hidden');\n                                this.$('.btn-confirm').prop('disabled', true);\n                            }\n                        } else if (current_page === 1 && response.items) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                            this.$('.delete-files-text').addClass('hidden');\n                            this.$('.btn-confirm').prop('disabled', true);\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.$('.delete-files-text').addClass('hidden');\n                        this.$('.btn-confirm').prop('disabled', true);\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                item.is_avatar = Boolean(item.context === 'avatar');\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (!item.is_avatar){\n                    this.has_files = true;\n                }\n                if (item.is_avatar) {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-avatars'));\n                    if (this.delete_percent !== '100')\n                        this.$('.delete-files-avatars').removeClass('hidden');\n                    else {\n                        this.$('.delete-avatars-checkbox').removeClass('hidden2');// сделать чтобы рисовало no files если при 100% есть только аватары и скрывалось появлялось на нажатие чекбокса,\n\n                    }\n                } else if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.context === 'voice'){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.delete_percent)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                    let options = {}, url;\n                    if (this.delete_percent === '100'){\n                        url = this.account.get('gallery_url') + 'v1/files/';\n                        if (this.delete_avatars)\n                            options.contexts = ['file', 'avatar', 'voice'];\n                        else\n                            options.contexts = ['file', 'voice'];\n                    } else {\n                        url = this.account.get('gallery_url') + 'v1/files/percent/' + this.delete_percent + '/';\n                    }\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: url ,\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify(options),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            this.close();\n                            console.log(response)\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(constants.CLIENT_NAME);\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        let devices_count = this.model.x_tokens_list.length, handled_devices = 0;\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') === '0');\n                    }\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                    handled_devices++;\n                    if (handled_devices === devices_count){\n                        if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                            this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') === '0');\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n                handled_devices++;\n                if (handled_devices === devices_count){\n                    if (!_.isUndefined(this.$('.device-encryption-warning').attr('data-not-trusted-count')))\n                        this.$('.device-encryption-warning').switchClass('hidden', this.$('.device-encryption-warning').attr('data-not-trusted-count') === '0');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.data.get('removed'))\n            return;\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(constants.CLIENT_NAME);\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id', contexts: 'avatar'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatarSelecter: function () {\n        if (this.contact){\n            this.addNotOwnAvatar();\n        } else {\n            this.addAvatar();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    addNotOwnAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.contact.pubAvatar(image, participant_node, () => {\n                    this.current_items = [];\n                    this.close();\n                    if (this.parent && this.participant) {\n                        this.parent.updateMemberAvatar(this.participant, true);\n                    }\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.contact.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, participant_node, () => {\n                            this.close();\n                            if (this.parent && this.participant) {\n                                this.parent.updateMemberAvatar(this.participant, true);\n                            }\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.$('.circle-icon').addClass('disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function (ev) {\n        let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = blob;\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    if (this.participant.get('jid') === this.account.get('jid'))\n                        this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            this.auth_connection && clearTimeout(this.auth_connection.openCheckTimeout);\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (this.account && this.account.connection){\n                        if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                            this.endAuth();\n                        } else {\n                            this.stepped_auth_complete = true\n                            if (this.first_features_received)\n                                this.successFeedback();\n                        }\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== this.account.get('jid'))\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            constants.CLIENT_NAME,\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n                utils.callback_popup_message('this.connection.connected: ' + this.connection.connected, 2000);\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            utils.callback_popup_message('downtime main to disconnect: ' + downtime, 2000);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.fast_connection.connected)\n                utils.callback_popup_message('this.connection.connected: ' + this.fast_connection.connected, 2000);\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            utils.callback_popup_message('downtime fast to disconnect: ' + downtime, 2000);\n            console.log(this.fast_connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let dfd = new $.Deferred();\n\n        dfd.done((data, http_avatar) => {\n            if (http_avatar) {\n                let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                    iq_pub_metadata.c('thumbnail', {\n                        xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                        url: thumbnail.url,\n                        width: thumbnail.width,\n                        height: thumbnail.height,\n                    }).up()\n                })\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }\n            else {\n                let avatar_hash = image.hash || sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    },\n                    (data_error) => {\n                        errback && errback(data_error);\n                    });\n            }\n        });\n        if (image.uploaded){\n            dfd.resolve(image, true)\n        }\n        else if (this.account.get('gallery_token') && this.account.get('gallery_url') && !image.generated && !image.uploaded){\n            let file = image.name ? image : image.file;\n            this.account.uploadAvatar(file, (res) => {\n                if (res.thumbnails && res.thumbnails.length || res.file){\n                    res.type = file.type;\n                    dfd.resolve(res, true)\n                } else\n                    dfd.resolve(image.base64)\n            }, (res) => {\n                dfd.resolve(image.base64)\n            });\n        } else\n            dfd.resolve(image.base64)\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children(`thumbnail[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL}`).attr('uri'),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            let chat_content = this.account.chats.get(this.hash_id);\n            if (chat_content && chat_content.item_view && chat_content.item_view.content){\n                chat_content = chat_content.item_view.content;\n                let is_scrolled = chat_content.isScrolledToBottom();\n                if (is_scrolled)\n                    chat_content.scrollToBottom();\n            }\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .description-edit-wrap .btn-choose-image\": \"chooseAvatar\",\n        \"click .description-edit-wrap .btn-selfie\": \"makeSelfie\",\n        \"click .description-edit-wrap .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value.envelope), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-selfie\": \"makeSelfie\",\n        \"click .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.participant.on(\"change:avatar_url\", this.updateMemberAvatar, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.participant-details-edit-wrap').hasClass('hidden') && this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member, url_forced) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)) && !url_forced)\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.account.groupchat_settings && (this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings && this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length || !this.account || this.account.session.get('delete')){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings && this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else{\n            contact && contact.set('sync_deleted', false);\n        }\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        (unread_msgs_count == 0) && (options.sync_timestamp = chat_timestamp);\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        } else if (message.length && !msg){\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (!(encrypted && !this.account.omemo)){\n            let last_read_msg_item = chat.messages.get(last_read_msg);\n            if (last_read_msg_item && unread_msgs_count){\n                let unread_msgs = chat.messages.filter(m => m.get('timestamp') > last_read_msg_item.get('timestamp') && !m.isSenderMe());\n                unread_msgs.forEach(message => message.set('is_unread', true));\n                let readen_unread_msgs = chat.messages.filter(m => m.get('timestamp') > last_read_msg_item.get('timestamp') && !m.isSenderMe() && m.get('was_readen')),\n                    last_readen_unread_msg = readen_unread_msgs[readen_unread_msgs.length - 1];\n                readen_unread_msgs.forEach((message) => {\n                    message.set('is_unread', false);\n                });\n                unread_msgs_count = unread_msgs_count - readen_unread_msgs.length;\n                (unread_msgs_count < 0) && (unread_msgs_count = 0);\n                if (last_readen_unread_msg){\n                    chat.sendMarker(last_readen_unread_msg.get('msgid'), 'displayed', last_readen_unread_msg.get('stanza_id'), last_readen_unread_msg.get('contact_stanza_id'), last_readen_unread_msg.get('encrypted') && last_readen_unread_msg.get('ephemeral_timer'), true)\n                }\n            }\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.sendPresence();\n                    this.account.dfd_presence.resolve();\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver'),\n            iq_type = $(iq).attr('type');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item, iq_type);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item, iq_type) {\n        let jid = item.getAttribute('jid'), to_send_available;\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n            if (iq_type === 'set')\n                to_send_available = true;\n        }\n        if (subscription === 'from') {\n            attrs.subscription_request_in = false;\n            if (iq_type === 'set')\n                to_send_available = true;\n        }\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n        if (to_send_available){\n            this.account.sendPresence();\n        }\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let $current_tab = this.$('.settings-block-wrap:not(.hidden)'),\n            selected = $current_tab.find('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.blocked-invitations').append(tmp);\n            this.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                    this.sendPresence();\n                    this.dfd_presence.resolve();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    },\n\n    handleEphemeralMessage: function () {\n        if (this.collection.account.omemo){\n            this.collection.account.omemo.cached_messages.putMessage(this.collection.chat.contact, this.get('stanza_id'), {ephemeral_removed: true});\n        }\n        if (!this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content = new xabber.ChatContentView({chat_item: this.collection.chat.item_view});\n        this.collection.chat.item_view.content.removeMessage(this);\n    },\n\n    checkEphemeralTimer: function () {\n        if (this.get('ethemeral_removed') || !this.get('displayed_time'))\n            return;\n\n        let date = this.get('displayed_time');\n\n        let msgDate = new Date(date),\n            currentDate = new Date(),\n            seconds = (currentDate.getTime() - msgDate.getTime()) / 1000;\n\n        let time_difference = this.get('ephemeral_timer') - seconds;\n        clearTimeout(this.ephemeral_timeout);\n        if (time_difference <= 0){\n            this.handleEphemeralMessage();\n        } else {\n            this.ephemeral_timeout = setTimeout(() => {\n                this.handleEphemeralMessage();\n            }, (time_difference * 1000))\n        }\n    },\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    checkEphemeralTimers: function (models, options) {\n        let displayed_time,\n            ephemeral_msgs = this.filter(msg => msg.get('ephemeral_timer'));\n        ephemeral_msgs.reverse().forEach((msg) => {\n            if (msg.get('is_unread') || (msg.isSenderMe() && msg.get('state') === constants.MSG_DELIVERED))\n                return;\n            if (msg.get('displayed_time') && !msg.get('dynamic_displayed_time'))\n                displayed_time = msg.get('displayed_time');\n            else if (displayed_time){\n                msg.set('dynamic_displayed_time', true)\n                msg.set('displayed_time', displayed_time);\n            }\n            msg.checkEphemeralTimer();\n        });\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message && this.chat && this.chat.get('saved')){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched) {\n            if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted){\n                message.set('ephemeral_timer', $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer'));\n                options.sync_timestamp && message.set('displayed_time', options.sync_timestamp)\n                if (this.chat.contact){\n                    let cached_msg = this.account.omemo.cached_messages.getMessage(this.chat.contact, $message.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'));\n                    if (cached_msg && cached_msg.envelope && cached_msg.displayed_time){\n                        message.set('displayed_time', cached_msg.displayed_time)\n                    }\n                }\n                message.collection.checkEphemeralTimers();\n            }\n            return message;\n        }\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n                not_verified_device: options.not_verified_device || null,\n                not_verified_device_no_device: options.not_verified_device_no_device || null,\n                device_id: options.device_id || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children(`thumbnail[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL}\"]`).attr('uri'),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted) {\n            attrs.ephemeral_timer = $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer');\n            options.sync_timestamp && (attrs.displayed_time = options.sync_timestamp);\n            if (this.chat.contact){\n                let cached_msg = this.account.omemo.cached_messages.getMessage(this.chat.contact, $message.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'));\n                if (cached_msg && cached_msg.envelope && cached_msg.displayed_time){\n                    attrs.displayed_time = cached_msg.displayed_time;\n                }\n            }\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length && !$message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').closest('system-message').length && options.encrypted){\n            message.collection.checkEphemeralTimers();\n        }\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n\nxabber.EphemeralTimerSelector = xabber.BasicView.extend({\n    className: 'modal main-modal change-ephemeral-timer-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.ephemeral_timer_selector,\n\n    events: {\n        \"click .btn-set-ephemeral-timer\": \"changeTimer\",\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.account = options.account;\n        this.updateColorScheme();\n        this.updateScrollBar();\n        if (this.model.get('chat_ephemeral_timer')){\n            this.updateSelectedTimer();\n        }\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    onRender: function (options) {\n        if (this.model.get('chat_ephemeral_timer')){\n            this.scrollToChildPlus(this.$(`.btn-set-ephemeral-timer.selected`), -45);\n        }\n\n    },\n\n    updateSelectedTimer: function () {\n        let $el = this.$(`.btn-set-ephemeral-timer[data-value=\"${this.model.get('chat_ephemeral_timer')}\"`);\n        this.$(`.btn-set-ephemeral-timer`).removeClass('selected');\n        $el.addClass('selected');\n    },\n\n    changeTimer: function (ev) {\n        let $el = $(ev.target).closest('.btn-set-ephemeral-timer');\n        this.$(`.btn-set-ephemeral-timer`).removeClass('selected');\n        $el.addClass('selected')\n        this.model.set('chat_ephemeral_timer', $el.attr('data-value'));\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          try {\n              navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n                  this.local_stream = media_stream;\n                  this.$local_video[0].srcObject = media_stream;\n                  let video_track = this.initVideoTrack();\n                  this.local_stream.addTrack(video_track);\n                  this.conn.addTrack(video_track, this.local_stream);\n                  media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              });\n          } catch (e) {\n              utils.dialogs.error(e);\n          }\n      },\n\n      createVideoStream: function () {\n          try {\n              navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n                  this.$local_video[0].srcObject = media_stream;\n                  media_stream.getVideoTracks().forEach((track) => {\n                      this.local_stream.addTrack(track);\n                      this.conn.addTrack(track, this.local_stream);\n                      this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n                  });\n              });\n          } catch (e) {\n                  utils.dialogs.error(e);\n              }\n          },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('unread', 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n      setEphemeralTimer: function (ev) {\n          if (!this.get('encrypted'))\n              return;\n          this.set('chat_ephemeral_timer', $(ev.target).closest('.btn-set-ephemeral-timer').attr('data-value'))\n      },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    showEphemeralTimerSelector: function (full_jid, session_id) {\n        this.ephemeral_timer_selector = new xabber.EphemeralTimerSelector();\n        this.ephemeral_timer_selector.show({model: this, account: this.account});\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy(status);\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall('accepted_another_device');\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_call_busy);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id, is_ephemeral, send_pending) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        is_ephemeral && stanza.up().c('store', {xmlns: Strophe.NS.HINTS});\n        is_ephemeral && stanza.up().c('encryption', {xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION, namespace: Strophe.NS.OMEMO});\n        is_ephemeral && stanza.up().c('conversation', {xmlns: Strophe.NS.SYNCHRONIZATION, type: Strophe.NS.OMEMO, jid: this.contact.get('jid')});\n        send_pending && this.account._pending_stanzas.push({stanza: stanza});\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (!enc_msg && this.account.omemo){\n                let cached_msg = this.account.omemo.cached_messages.getMessage(this.contact, marked_stanza_id);\n                if (cached_msg && cached_msg.envelope && !cached_msg.displayed_time){\n                    cached_msg.displayed_time = $message.find('time').attr('stamp');\n                    cached_msg && this.account.omemo.cached_messages.putMessage(this.contact, marked_stanza_id, cached_msg);\n                }\n            }\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n            if ($message.find('time').length && msg.get('ephemeral_timer')) {\n                msg.set('displayed_time', $message.find('time').attr('stamp'));\n                msg.collection.checkEphemeralTimers();\n            }\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => {\n            message.set('state', constants.MSG_DISPLAYED);\n            if (message.get('ephemeral_timer')){\n                message.set('displayed_time', Date.now());\n                message.collection.checkEphemeralTimers();\n            }\n        });\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id, callback, errback) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              if (message.get('was_readen'))\n                  return;\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              message.set('was_readen', true);\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.openChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .not-decrypted-tooltip .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.contact.on(\"update_trusted\", this.updateMsgsMissingDevices, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.on(\"device_trusted\", this.updateMsgsDeviceTrusting, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateMsgsDeviceTrusting: function (device_id, jid) {\n        if (!this.model.get('encrypted') || !device_id || !this.contact || this.contact.get('jid') !== jid )\n            return;\n        this.$(`.not-decrypted-icon[data-device-id=\"${device_id}\"]`).each((idx, item) => {\n            let $msg = $(item).closest('.chat-message');\n            $msg.removeClass('not-verified');\n            $msg.addClass('not-verified-previously');\n        })\n    },\n\n    updateMsgsMissingDevices: function (trust, peer) {\n        if (!this.model.get('encrypted') || !peer || !this.contact)\n            return;\n\n        this.$(`.chat-message:not(.not-existing-device)`).each((idx, item) => {\n            let $item = $(item);\n            if ($item.attr('data-device-id') && !peer.devices[$item.attr('data-device-id')] && $item.attr('data-from') != this.account.get('jid')){\n                $item.hasClass('not-verified') && $item.addClass('not-verified-previously');\n                $item.removeClass('not-verified');\n                $item.addClass('not-existing-device');\n            }\n        })\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'), last_visible_msg.get('encrypted') && last_visible_msg.get('ephemeral_timer'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('unread', 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'), msg.get('encrypted') && msg.get('ephemeral_timer'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else{\n                    this.model._wait_load_unread_history.resolve();\n                }\n            }\n            if (options.unread_history_first && !messages.length){\n                this.backToBottom();\n                this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else if (this.model.messages.models.length && this.model.messages.models[index - 1]) {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.ephemeral_timer = attrs.ephemeral_timer || this.model.get('ephemeral_timer');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n        attrs.not_verified_device = attrs.not_verified_device || null;\n        attrs.not_verified_device_no_device = attrs.not_verified_device_no_device || null;\n        attrs.device_id = attrs.device_id || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.not_verified_device && !attrs.not_verified_device_no_device && 'not-verified',\n            attrs.not_verified_device_no_device && 'not-existing-device',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                ephemeral_timer_text: utils.pretty_duration_ephemeral_timer(attrs.ephemeral_timer),\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                ephemeral_timer_text: utils.pretty_duration_ephemeral_timer(attrs.ephemeral_timer),\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n                if (attrs.hasOwnProperty('is_contact_trusted')){\n                    $message.attr('data-trust', attrs.is_contact_trusted);\n                }\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        $message = $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('msg_el', $message);\n        return $message;\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file.thumbnail && stanza.c('thumbnail', {\n                    xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                    uri: file.thumbnail\n                }).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            if (this.model.get('group_chat')){\n                stanza.c('retry', {xmlns: Strophe.NS.DELIVERY, to: this.model.get('jid')}).up();\n            } else\n                stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            this.model.get('chat_ephemeral_timer') && stanza.c('ephemeral', {xmlns: Strophe.NS.EPHEMERAL, timer: this.model.get('chat_ephemeral_timer')}).up();\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting, has_reconnected;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n                this.account.session.once('change:reconnected', () => {\n                    _pending_time = 5;\n                    console.log('change reconnected ');\n                    has_reconnected = true;\n                });\n            });\n            let _interval = setInterval(() => {\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (was_reconnecting && has_reconnected && (_pending_time > 10)){\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            ephemeral_timer: this.model.get('encrypted') && this.model.get('chat_ephemeral_timer'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else if (this.model.get('encrypted')){\n            this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                attrs.is_contact_trusted = obj.trust;\n                _dfd_info.resolve();\n            });\n        } else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice){\n                formData.append('media_type', file.type + '+voice');\n                formData.append('context', 'voice');\n            }\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        if (self.model.get('encrypted')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                        }\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        if (self.model.get('encrypted')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                        }\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            if (self.model.get('encrypted')){\n                                self.bottom.setEditedMessageAttachments(message, true);\n                                self.bottom.setRedactedUploadMessage(message);\n                            }\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                if (this.model.get('encrypted')){\n                    this.bottom.setEditedMessageAttachments(message, true);\n                    this.bottom.setRedactedUploadMessage(message);\n                }\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            if (!message.get('was_readen')){\n                $msg.addClass('unread-message');\n                $msg.addClass('unread-message-background');\n            }\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            message.set('was_readen', true);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n            if (message.get('ephemeral_timer')) {\n                message.set('displayed_time', new Date());\n                message.collection.checkEphemeralTimers();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('not-decrypted-icon') || $elem.closest('.dropdown-content').length || $elem.closest('.not-decrypted-icon').length)\n            return;\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') ||  $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    let avatar_url = $message.find('info').attr('url');\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    avatar_url && participant.set('avatar_url', avatar_url);\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n\n        if (chat && chat.get('encrypted') && options.encrypted && !options.synced_msg && !options.is_archived){\n            if ($message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').length){\n                chat.set('chat_ephemeral_timer', $message.find('[xmlns=\"' + Strophe.NS.EPHEMERAL + '\"]').attr('timer'));\n            } else {\n                chat.set('chat_ephemeral_timer', null);\n            }\n        }\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        xabber.accounts.on(\"omemo_changed\", this.updateAccountEncryptedChats, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    updateAccountEncryptedChats: function (account) {\n        let enc_chats = account.chats.filter(chat => chat.get('encrypted'))\n        enc_chats.forEach((item) => {\n            let view = this.child(item.id);\n            if (view){\n                view.$el.switchClass('hidden', !account.get('omemo_enabled'));\n                if (account.get('omemo_enabled'))\n                    account.omemo.checkContactFingerprints(item.contact);\n            }\n        });\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (item.get('encrypted') && item.account && !item.account.omemo)\n            view.$el.addClass('hidden');\n        else if (item.get('encrypted') && item.account && item.account.omemo)\n            view.$el.removeClass('hidden');\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    setTimeout(() => {\n                        view.model._wait_load_unread_history.resolve();\n                    }, 10000)\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop,\n                    scrolled_to_bottom = view.content.isScrolledToBottom(),\n                    unread_scroll = (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom));\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                if (view.model.get('unread') && unread_scroll) {\n                    view.content.scrollToUnread();\n                    view.content._long_reading_timeout = true;\n                    view.content._no_scrolling_event = false;\n                    view.content.onScroll();\n                }\n                (!scrolled_to_bottom || !unread_scroll) && current_scrolling && view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        this.$(`textarea[name=\"invitation_text\"]`).val('');\n        this.$('.invitation-reason-wrap').addClass('hidden');\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    showReasonWrap: function () {\n        this.$('.invitation-reason-wrap').switchClass('hidden');\n        if (this.$('.invitation-reason-wrap').hasClass('hidden'))\n            this.$(`textarea[name=\"invitation_text\"]`).val('');\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n        this.$('.btn-invitation-reason').click(() => {\n            this.showReasonWrap();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (!$target.hasClass('click-selected') && itemIdx > -1){\n            this.$(`.list-item[data-jid=\"${contact_jid}\"]`).removeClass('click-selected');\n            this.selected_contacts.splice(itemIdx, 1);\n            this.updateCounter();\n            return;\n        }\n        $target.toggleClass('click-selected');\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t(reason_text);\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t(reason_text).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n        \"click .btn-set-ephemeral-timer\": \"setEphemeralTimer\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.ephemeral-timer-dropdown').switchClass('hidden', !this.model.get('encrypted'));\n        this.$('.ephemeral-timer-dropdown').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings && this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n    setEphemeralTimer: function (ev) {\n        this.model.setEphemeralTimer(ev);\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .ephemeral-timer-time\": \"showEphemeralTimerSelector\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"change:chat_ephemeral_timer\", this.updateEphemeralTimer, this);\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        this.updateEphemeralTimer();\n        this.$('.ephemeral-timer-time').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.edit-message-wrap').hideIf(this.model.get('encrypted'));\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    showEphemeralTimerSelector: function () {\n        this.model.showEphemeralTimerSelector();\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    updateEphemeralTimer: function () {\n        this.$('.ephemeral-timer-time').addClass('hidden');\n        if (!this.model.get('encrypted'))\n            return;\n        this.$('.ephemeral-timer-time').text(utils.pretty_duration_ephemeral_timer(this.model.get('chat_ephemeral_timer')));\n        utils.pretty_duration_ephemeral_timer(this.model.get('chat_ephemeral_timer')) && this.$('.ephemeral-timer-time').removeClass('hidden');\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        if (quill_content && quill_content.ops && quill_content.ops.length){\n            let text = quill_content.ops[0].insert;\n            if (text && text.trimStart) {\n                let trimmed_text = text.trimStart();\n                if (text.length != trimmed_text.length){\n                    quill_content.ops[0].insert = trimmed_text;\n                    this.quill.setContents(quill_content, 'user');\n                    this.quill.disable();\n                    setTimeout(() => {\n                        this.focusOnInput();\n                        this.quill.root.focus();\n                    },1)\n                }\n            }\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text && !this.model.get('encrypted')) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        // if (clipboard_data) {\n            if (clipboard_data && clipboard_data.files.length > 0) {\n                console.log('true');\n                ev.preventDefault();\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data && clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    console.log('true');\n                    ev.preventDefault();\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                // else {\n                //     let text = _.escape(clipboard_data.getData('text')),\n                //         arr_text = Array.from(text);\n                //     arr_text.forEach((item, idx) => {\n                //         if (item == '\\n')\n                //             arr_text.splice(idx, 1, '</p><p>');\n                //         if (item == ' ')\n                //             arr_text.splice(idx, 1, '&nbsp');\n                //     });\n                //     text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                //     let range = window.getSelection().getRangeAt(0);\n                //     range.insertNode($('<div>' + text + '</div>')[0]);\n                // }\n            }\n            // else {\n            //     let text = _.escape(clipboard_data.getData('text')),\n            //         arr_text = Array.from(text);\n            //     arr_text.forEach((item, idx) => {\n            //         if (item == '\\n')\n            //             arr_text.splice(idx, 1, '</p><p>');\n            //         if (item == ' ')\n            //             arr_text.splice(idx, 1, '&nbsp');\n            //     });\n            //     text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n            //     let range = window.getSelection().getRangeAt(0);\n            //     range.insertNode($('<div>' + text + '</div>')[0]);\n            // }\n        // }\n        // if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n        //     this.view.sendChatState('composing');\n        // this.focusOnInput();\n        // this.displaySend();\n        // xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertText(caret_idx++, emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        if (!this.account.chat_settings)\n            return;\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target_text = $(ev.target).closest('.emoji-wrap').text();\n            this.typeEmoticon($target_text);\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file.thumbnail && stanza.c('thumbnail', {\n                    xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                    uri: file.thumbnail\n                }).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message], true);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, {envelope: decrypted_msg});\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages, on_rewrite) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && ((my_msgs == $msgs.length) || on_rewrite) && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.sources && item.sources.length && this.account.deleteFileByUrl(item.sources[0],(response) => {\n                    item.sources = null;\n                }, (err) => {\n                    item.sources = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.sources && item.sources.length && this.account.deleteFileByUrl(item.sources[0],(response) => {\n                    item.sources = null;\n                }, (err) => {\n                    item.sources = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.sources && item.sources.length && this.account.deleteFileByUrl(item.sources[0],(response) => {\n                    item.sources = null;\n                }, (err) => {\n                    item.sources = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n            this.account.trigger('device_trusted', device.id, this.jid);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n        this.account.set(\"omemo_enabled\", true);\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, {envelope: plaintext});\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            let device_id = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid');\n            options.device_id = device_id;\n            if (cached_msg && cached_msg.ephemeral_removed)\n                return;\n\n            if (cached_msg && cached_msg.envelope) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg.envelope);\n                        if ($message.find('displayed-time').length){\n                            options.displayed_time = $message.find('displayed-time').attr('stamp');\n                        }\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n\n                        if (!options.not_verified_device){\n                            let peer = this.getPeer(contact.get('jid')),\n                                device = peer.devices[device_id];\n                            if (device && device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (_.isUndefined(trusted)){\n                                    options.not_verified_device = device_id;\n                                    options.not_verified_device_no_device = false;\n                                }\n                            } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = true;\n                            }\n                        }\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, {envelope: decrypted_msg});\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, {envelope: decrypted_msg});\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n\n                    if (!options.not_verified_device){\n                        let peer = this.getPeer(contact.get('jid')),\n                            device = peer.devices[device_id];\n                        if (device && device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (_.isUndefined(trusted)){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = false;\n                            }\n                        } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                            options.not_verified_device = device_id;\n                            options.not_verified_device_no_device = true;\n                        }\n                    }\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust, peer);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p && p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n\n        let prekeys_id_list = Object.keys(this.prekeys.getAll()),\n            prekeys_length = prekeys_id_list.length;\n\n        if (prekeys_length && prekeys_length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - prekeys_length,\n                last_id,\n                counter = 0,\n                used_last_id = 0;\n\n            last_id = Number(prekeys_id_list[prekeys_length - 1]);\n            if (last_id === NaN)\n                xabber.error('last_id is NaN!')\n\n            if (!_.isEmpty(this.own_used_prekeys.getAll())){\n                let used_prekeys_id_list = Object.keys(this.own_used_prekeys.getAll());\n\n                used_last_id = used_prekeys_id_list[used_prekeys_id_list.length - 1];\n                used_last_id = Number(used_last_id);\n\n                if (used_last_id && (used_last_id > last_id)){\n                    last_id = used_last_id;\n                }\n            }\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                xabber.error(i);\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys.push(prekey);\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        xabber.error(pks);\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_emoji_font_radio_input.html\": 73122,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/ephemeral_timer_selector.html\": 70275,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/download.html\": 58712,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":58,\"bs\":0,\"ca\":23,\"cs\":99,\"cy\":0,\"da\":0,\"de\":44,\"el\":27,\"es-ES\":31,\"es-latin\":61,\"et\":0,\"fa\":4,\"fi\":8,\"fil\":13,\"fr\":32,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":99,\"is\":0,\"it\":64,\"ja\":18,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":59,\"pt-BR\":63,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":62,\"sat\":1,\"sco\":0,\"si-LK\":32,\"sk\":18,\"sl\":25,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":34,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":61,\"uk\":25,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":99,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.122\",\"version_description\":\"fixed emoji font hint and attribution in constants\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","USE_TAB_SIGNALS","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DESKTOP_AUTOSTART_OPTION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","CLIENT_RESOURCE","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","DEFAULT_EMOJI_FONT","EMOJI_FONTS_LIST","notoColor","name","value","url","hint","window","location","hostname","attribution_text","order","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","system_json","system_sound_list","system_item","system","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","emoji_size","title","replace","removeEmoji","replaceEmoji","selector","text","length","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","isArray","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","quoted_text","append","cancel_button_main","inverted_buttons","img_details","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","console","log","replaceAll","RegExp","uuid","c","r","random","toString","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","Number","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","getDomainFromUrl","a","test","href","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_duration_ephemeral_timer","timer","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","repeat","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","utils","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","msg","line","col","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","emoji_font","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","desktop_autostart","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","bc","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","BroadcastChannel","onmessage","event","disabled_client","postMessage","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","emoji_dfd","emoji_url","emoji_obj","loadEmojiFont","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","scrollToChildPlus","plus_scroll","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","destroyView","undelegateEvents","removeData","unbind","call","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","cancelFullScreen","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","status_text","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateEmojiFontLabel","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","updateEmojiFonts","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","emoji_fonts_list","system_element","setting_emoji_font_radio_input","b","item_name","current_sound","pause","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setDesktopAutostart","setPrivateSound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","platform_text","modal_classes","changeEmojiFont","current_time","load_emoji_external_dfd","font_load_dfd","currently_loaded_font_value","response","emoji_load_date","is_outside_url","loadExternalEmojiFont","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","font_loaded","FontFace","load_check_interval","fonts","add","load","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","autostartHandler","electronAPI","Boolean","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","_onOpen","startString","openCheckTimeout","open_received","disconnect","_handleStreamStart","ns","FRAMING","ver","_doDisconnect","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onAuthFailed","CONNECTED","onTokenRevoked","DISCONNECTED","flush","_main_interval_worker","terminate","onConnectionConflict","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","deactivate","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","contexts","deleteFileByUrl","file_url","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onOmemoChanged","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getAvatars","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","filterType","sorting","order_by","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","delete_percent","onRender","onChangeCheckbox","delete_avatars","has_files","deletePercent","percent","current_page_preview","getFilesForDeletion","traditional","renderForDeletion","is_avatar","context","dropdown_settings","deleteFilesFiltered","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","devices_count","handled_devices","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","participant","current_items","current_file","addAvatarSelecter","addNotOwnAvatar","addAvatar","img_from_gallery","createFileFromURL","participant_node","updateMemberAvatar","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveNotOwnAvatar","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","chat_content","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","makeSelfie","makeEmojiAvatar","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","envelope","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","url_forced","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","sprite","tag_name","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","sync_timestamp","isSenderMe","last_read_msg_item","readen_unread_msgs","last_readen_unread_msg","sendMarker","messages_unread","is_last_sync","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","new_roster_version","iq_type","onRosterItem","is_version","to_send_available","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","selectUnblock","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","handleEphemeralMessage","putMessage","ephemeral_removed","checkEphemeralTimer","date","msgDate","getTime","time_difference","ephemeral_timeout","checkEphemeralTimers","displayed_time","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","EPHEMERAL","cached_msg","getMessage","is_between_anchors","not_encrypted","not_verified_device","not_verified_device_no_device","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","ephemeral_timer","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","ephemeral_timer_selector","updateSelectedTimer","changeTimer","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","setEphemeralTimer","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","showEphemeralTimerSelector","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","is_ephemeral","send_pending","by","EXPLICIT_MESSAGE_ENCRYPTION","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","enc_msg","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMsgsMissingDevices","updateMyInfo","updateMsgsDeviceTrusting","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trust","peer","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","ephemeral_timer_text","main","is_contact_trusted","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","has_reconnected","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","checkContactFingerprints","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","updateAccountEncryptedChats","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","scrolled_to_bottom","unread_scroll","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","showReasonWrap","addUser","itemIdx","reason_text","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","updateEphemeralTimer","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","quill_content","getContents","ops","insert","trimmed_text","setContents","bottom_height","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","domNode","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","$target_text","forced","emoji_item","innerText","content_concat","content_attrs","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","arr_text","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","on_rewrite","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","encryptedMessage","encryptedElement","myKeys","rid","kex","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","prekeys_id_list","prekeys_length","last_id","missing_keys","used_last_id","NaN","isEmpty","used_prekeys_id_list","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}