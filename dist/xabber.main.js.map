{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,0jD,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,4DCAA,uoH,6DCAA,k8E,6DCAA,k6B,2DCAA,o2B,6DCAA,miL,6DCAA,8wiB,6DCAA,+jD,6DCAA,mf,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,01E,6DCAA,0pE,4DCAA,w9B,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,i8xD,6DCAA,2hI,6DCAA,uS,6DCAA,qpO,6DCAA,mzC,4DCAA,6hD,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,qrB,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,miE,6DCAA,6e,6DCAA,0J,6DCAA,0sE,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,oR,6DCAA,iR,6DCAA,ujI,6DCAA,6xO,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,07R,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,+qD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,wwB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,49B,6DCAA,4iC,6DCAA,yiC,6DCAA,q/B,6DCAA,i5B,6DCAA,mrC,6DCAA,ksC,6DCAA,m+B,6DCAA,0rC,6DCAA,kpD,6DCAA,4/B,4DCAA,u8B,6DCAA,4qC,6DCAA,oqC,6DCAA,q5B,6DCAA,olB,6DCAA,qsB,6DCAA,2mB,6DCAA,oxC,6DCAA,85B,6DCAA,onB,6DCAA,6gC,6DCAA,6oC,6DCAA,i4B,6DCAA,2xB,6DCAA,k7B,6DCAA,6xB,6DCAA,yqB,6DCAA,2sB,4DCAA,gqB,6DCAA,svB,4DCAA,6yC,6DCAA,y5B,6DCAA,uyB,6DCAA,szB,6DCAA,mpB,6DCAA,qlC,6DCAA,siC,6DCAA,2kD,6DCAA,q0B,6DCAA,o7E,6DCAA,gkC,6DCAA,m6B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,s/B,6DCAA,osB,4DCAA,otD,6DCAA,s5B,6DCAA,0rC,6DCAA,i8B,6DCAA,k4B,6DCAA,kjC,6DCAA,y6B,4DCAA,g7C,4DCAA,mvB,6DCAA,svB,6DCAA,siB,6DCAA,yqB,6DCAA,i4C,6DCAA,+jB,6DCAA,izB,6DCAA,k/B,6DCAA,yyB,6DCAA,i/B,4DCAA,q8B,6DCAA,4hB,6DCAA,w7B,6DCAA,ymC,6DCAA,qsB,6DCAA,gxB,6DCAA,ioB,6DCAA,6xL,6DCAA,g/B,6DCAA,q/C,6DCAA,y6B,6DCAA,qvC,6DCAA,6vC,6DCAA,gsC,6DCAA,uyB,6DCAA,88B,4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CLC,KAAM,cAEVI,UAAW,CACPL,IAAK,kCACLC,KAAM,yBAEVK,WAAY,CACRN,IAAK,mCACLC,KAAM,0BAIdM,mBAAoB,CAChBC,IAAK,CACDR,IAAK,wCACLC,KAAM,yBAEVQ,IAAK,CACDT,IAAK,sCACLC,KAAM,mBAEVF,GAAI,CACAC,IAAK,0CACLC,KAAM,cAIdS,gBAAiB,SAAUC,GACvB,MAAO,CACH,kBAAqB,+CACrB,iBAAoB,8CACpB,mBAAsB,gDACtB,gBAAmB,6CACnB,kBAAqB,+CACrB,OAAU,oCACV,QAAW,qCACX,MAAS,oCACXA,EACN,EAEAC,aAAc,OACdC,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,GAAI,sBACJ,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS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AAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,O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F,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAC5tJ,OAAU,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,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CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,KACvmI,MAAS,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,IAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,IAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,KAG1mKC,EAAW,SAAUH,GACrB,GAAIA,EAAO,MACP,OAAOtN,OAAOC,aAAaqN,GAE/B,IAAII,EAASJ,EAAO,MAChBK,EAAO,OAAUD,GAAU,IAC3BE,EAAQ,OAAmB,KAATF,GACtB,OAAO1N,OAAOC,aAAa0N,GAAM3N,OAAOC,aAAa2N,EACzD,EAEIC,EAAa,CAAC,EAAG,EAAM,CAAC,EAa5B,IAAK,IAAIzG,KAAciG,EACnB,SAAOA,EAASjG,IAAa,SAAU0G,GACnC,IAAIC,EAAQN,EAASK,EAAKR,MAC1BO,EAAWE,GAASD,GACnB,EAAI1G,KAAgB,EAAIA,GAAc,IACvC,EAAIA,GAAY4G,KAAKD,EACzB,IAGJ,IAAIE,EAAe,qGAEnBjO,OAAOkO,UAAUC,QAAU,SAAUvC,GACjCA,IAAYA,EAAU,CAAC,GACvB,IAAIwC,EAASxC,EAAQwC,OACjBC,EAAWD,EAAUxC,EAAQyC,UAAY,OAAU,MACnDC,EAAa1C,EAAQ0C,YAAc,GACnCC,EAAO3C,EAAQ2C,KAAO,WAAW3C,EAAQ2C,SAAU,GACnDC,EAAQ5C,EAAQ4C,MAAQ,WAAW5C,EAAQ4C,UAAW,GAC1D,OAAO5B,KAAK6B,QAAQR,GAAc,SAAUF,GACxC,IAAIzB,EAAOuB,EAAWE,GAClBW,EAAapC,GAAQqC,OAAOrC,EAAKgB,MAAMsB,SAAS,IACpD,GAAItC,EAAM,CAGN,OAFCoC,EAAWG,OAAS,IAAOH,EAAa,IAAII,OAAO,EAAIJ,EAAWG,QAAUH,GAEtE,IAAML,GADc,QAAbA,EAAsBD,EAAS,uCAAyC,2CAA6CM,EAAa,QAAW,IACzHH,EAAOC,EAAQ,wBAA0BF,GACtEF,EAAU,WAAaA,EAAb,kCAAgEE,EAAahC,EAAKiB,EAAlF,OAAsGe,EAAahC,EAAKkB,EAAK,QAAW,MACnJ,QAAUO,EAFP,iBAGcA,EAAQ,KACjC,CAEI,OAAOA,CACf,GACJ,EAEA/N,OAAOkO,UAAUa,YAAc,WAC3B,OAAOnC,KAAK6B,QAAQR,GAAc,SAAUF,GAExC,OADWF,EAAWE,GAEX,GAEAA,CAEf,GACJ,EAEA/N,OAAOkO,UAAUc,aAAe,WAC5B,OAAOpC,KAAK6B,QAAQR,GAAc,SAAUF,GAExC,OADWF,EAAWE,GAEX,IAEAA,CAEf,GACJ,EAEA,eAAe,SAAUkB,EAAUrD,GAK/B,OAJAgB,KAAKH,KAAKwC,GAAUvC,MAAK,WACrB,IAAIwC,EAAO,IAAEtC,MAAML,OACnB,IAAEK,MAAML,KAAK2C,EAAKf,QAAQvC,GAC9B,IACOgB,IACX,EAEA,SACIuC,IAAK,EACLC,IAAK3B,EACL4B,WA9EkB,SAAUC,GAC5B,IAAIvB,EACJ,IAAK,IAAI3G,KAAciG,EACpB,GAAIA,EAASjG,GAAYkI,GAAM,CAC3BvB,EAAQV,EAASjG,GAAYkI,GAC7B,KACJ,CAEH,OAAO7B,EAASM,EAAMT,KAC1B,GCjCA,IAAI9C,EAAI,IACJ,EAAI,IACJ+E,EAAS,gBAETC,EAAe,CAAC,EAEhBC,EAAS,CACT,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,UACjC,WAMAC,EAAY,SAAUC,EAASC,EAAaC,GAC5CD,EAAcA,GAAe,GAC7BC,EAAYA,GAAa,IAGzB,IAFA,IAAIC,EAAiBC,KAAKJ,GACtBK,EAAa,GACRtC,EAAS,EAAGA,EAASoC,EAAejB,OAAQnB,GAAUmC,EAAW,CAGtE,IAFA,IAAII,EAAQH,EAAeG,MAAMvC,EAAQA,EAASmC,GAC9CK,EAAc,IAAIC,MAAMF,EAAMpB,QACzBuB,EAAI,EAAGA,EAAIH,EAAMpB,OAAQuB,IAC9BF,EAAYE,GAAKH,EAAMI,WAAWD,GAEtC,IAAIE,EAAY,IAAIC,WAAWL,GAC/BF,EAAWhC,KAAKsC,EACpB,CAEA,OADW,IAAIE,KAAKR,EAAY,CAACS,KAAMb,GAE3C,EAEIc,EAAc,SAAU9I,GAGxB,OAFAgF,KAAKxK,IAAMuO,OAAOC,IAAIC,gBAAgBnB,EAAU9H,IAChD4H,EAAa5H,GAASgF,KACfA,IACX,EAEIkE,EAAiB,SAAUlJ,GAE3B,GAAIA,aAAiB8I,EACjB,OAAO9I,EACJ,GAAIA,IAAU4C,EAAEuG,SAASnJ,IAAmC,GAAzBA,EAAMoJ,QAAQ,SAAgBxG,EAAEyG,SAASrJ,IAAUA,EAAMxF,KAAoC,GAA7BwF,EAAMxF,IAAI4O,QAAQ,SAAe,CACvI,GAAIxG,EAAEuG,SAASnJ,GACX,MAAO,CAACxF,IAAKwF,GACZ,GAAI4C,EAAEyG,SAASrJ,GAChB,OAAOA,CACf,CACA,OAAO4H,EAAa5H,IAAU,IAAI8I,EAAY9I,EAClD,EAqCIsJ,EAAkB,SAAUvF,GAC5B,IAAIwF,EAAQxF,EAAOA,EAAKyF,OAAS,GAC7BC,EAAcnI,KAAKoI,MAAM/B,EAAO4B,GAAOd,WAAW,GAAKZ,EAAOZ,QAClE,OAAOY,EAAO4B,EAClB,EAEIE,EAAe,SAAUC,EAAMC,GAY/B,OAXID,EAAKE,MAAQF,EAAKG,OACdH,EAAKE,MAAQD,IACbD,EAAKG,QAAUF,EAAWD,EAAKE,MAC/BF,EAAKE,MAAQD,GAGbD,EAAKG,OAASF,IACdD,EAAKE,OAASD,EAAWD,EAAKG,OAC9BH,EAAKG,OAASF,GAGfD,CACX,EAmGA,EAAEI,GAAGC,UAAY,SAAUjK,EAAO4J,IA1DrB,SAAUM,EAAUC,EAAcC,GAC3C,IAAIC,EAAY,EAAEH,GACdI,EAAM,CACFC,gBAAiB,QAAUJ,EAAa3P,IAAM,KAC9CgQ,eAAgB,QAChBC,gBAAiB,QAEzBJ,EAAUC,IAAIA,EAClB,CAoDII,CAAO1F,KADYkE,EAAelJ,GAEtC,EAEA,UACIkJ,eAAgBA,EAChByB,aAAc7C,EACd8C,iBAjKmB,SAAU7G,EAAM8G,EAAOC,EAAMhB,EAAOC,GAEvD,IAGIgB,EAAYC,EACZC,EAAcC,EAJdC,EAAShL,SAASiL,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MACxB/B,EAAQxF,EAAOA,EAAKyF,OAAS,GACN+B,EAAgBhC,EAAMrF,MAAM,IAAK,GA2B5D,OAxBA6G,EAAaQ,EAAc,GAC3BP,EAAaO,EAActE,OAAS,EAAIsE,EAAc,GAAK,GAC3DN,EAAeF,EAAW,IAAM,GAE5BG,EADAF,EACgBA,EAAU,GAETD,EAAW9D,OAAS,EAAI8D,EAAW,GAAK,GAG7DI,EAAOrB,MAAQA,GAAS,IACxBqB,EAAOpB,OAASA,GAAU,IAC1BsB,EAAIG,KAAK,EAAG,EAAG1B,GAAS,IAAKC,GAAU,KACvCsB,EAAII,UAAYZ,GAASvB,EAAgBvF,GACzCsH,EAAIK,OACJL,EAAIP,KAAOA,GAAQ,wBACnBO,EAAII,UAAY,OAChBJ,EAAIM,UAAY,SACZb,GACAO,EAAIO,aAAe,cACnBP,EAAIQ,SAAStC,EAAOO,EAAM,GAAK,IAAMC,EAAO,EAAY,IAARA,GAAiB,MAGjEsB,EAAIQ,SAASZ,EAAaa,cAAcZ,EAAcY,cAAe,IAAK,KAClEX,EAAOY,YAAYlF,QAAQ,+CAAgD,GAE3F,EAiIImF,kBAnDoB,SAAUC,GAC9B,IAAIC,EAAY,IAAIC,MACfC,EAAMrD,OAAOC,IAAIC,gBAAgBgD,GACjCnW,EAAW,IAAI,EAAEuW,SAoCrB,OAnCAH,EAAUI,OAAS,WACfJ,EAAUI,OAAS,KACnB,IAIIC,EAAWC,EAJXrB,EAAShL,SAASiL,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MACxBxB,EAAQoC,EAAUO,aAClB1C,EAASmC,EAAUQ,cAEnBC,EAAWhD,EAAa,CAACG,MAAOA,EAAOC,OAAQA,GAlK7C,KAmKNoB,EAAOrB,MAAQ6C,EAAS7C,MACxBqB,EAAOpB,OAAS4C,EAAS5C,OACzBsB,EAAIuB,UAAUV,EAAW,EAAG,EAAGf,EAAOrB,MAAOqB,EAAOpB,QACpDwC,EAAYpB,EAAOY,YAAYlF,QAAQ,+CAAgD,IACvFkC,OAAOC,IAAI6D,gBAAgBT,GAC3BjB,EAAO2B,QAAQC,IACX,IAAIC,EAAS,IAAIC,WACjBD,EAAOV,OAAS,WACZC,EAAYS,EAAOE,OAAOrG,QAAQ,+CAAgD,IAClF,IAAIsG,EAAchF,KAAKoE,GACpBa,EAAQ,IAAIzE,WAAWwE,EAAYlG,QAEtC,IAAK,IAAIuB,EAAI,EAAGA,EAAI2E,EAAYlG,OAAQuB,IACpC4E,EAAM5E,GAAK2E,EAAY1E,WAAWD,GAEtCgE,EAAOpJ,KAAKgK,GACZtX,EAASuX,QAAQd,EAAWC,EAAMW,EAAYlG,OAClD,EAAEqG,KAAKtI,MACPgI,EAAOO,cAAcR,EAAK,GAC3Bd,EAAKpD,KAAM,GAClB,EACAqD,EAAUsB,QAAU,WAChBtB,EAAUsB,QAAU,KACpBzE,OAAOC,IAAI6D,gBAAgBT,GAC3BtW,EAASuX,SAAQ,GAAO,GAAO,EACnC,EACAnB,EAAUE,IAAMA,EACTtW,EAAS2X,SACrB,EAYIC,gBAAiBpE,EACjBqE,oBA3DsB,SAAUC,GAChC,OAA8B,GAA1BA,EAAOxE,QAAQ,QACRwE,EACJ1E,EAAe0E,EAAO/G,QAAQ,+CAAgD,KAAKrM,GAC9F,EAwDIqT,cA7GgB,SAAU5B,GAC1B,IAAIC,EAAY,IAAIC,MAChBC,EAAMrD,OAAOC,IAAIC,gBAAgBgD,GACjCnW,EAAW,IAAI,EAAEuW,SAiCrB,OAhCAH,EAAUI,OAAS,WACfJ,EAAUI,OAAS,KACnB,IAAInB,EAAShL,SAASiL,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MACxBxB,EAAQoC,EAAUO,aAClB1C,EAASmC,EAAUQ,cACnBoB,EAAY7B,EAAKpD,KACjBkF,EAAY9B,EAAKlI,KACjB4I,EAAWhD,EAAa,CAACG,MAAOA,EAAOC,OAAQA,GA3GxC,MA4GO,kBAAdkC,EAAKpD,OACLoD,EAAKnC,MAAQA,EACbmC,EAAKlC,OAASA,EACdjU,EAASuX,QAAQpB,IAErBd,EAAOrB,MAAQ6C,EAAS7C,MACxBqB,EAAOpB,OAAS4C,EAAS5C,OACzBsB,EAAIuB,UAAUV,EAAW,EAAG,EAAGS,EAAS7C,MAAO6C,EAAS5C,QACxDoB,EAAO2B,QAAQC,IACX,MAAMd,EAAO,IAAI+B,KAAK,CAACjB,GAAOgB,EAAW,CACrClF,KAAMiF,EACNG,aAAcC,KAAKC,QAEvBrY,EAASuX,QAAQpB,EAAK,GACvB6B,EAAW,IACd/E,OAAOC,IAAI6D,gBAAgBT,EAC/B,EACAF,EAAUsB,QAAU,WAChBtB,EAAUsB,QAAU,KACpBzE,OAAOC,IAAI6D,gBAAgBT,GAC3BtW,EAASuX,SAAQ,EACrB,EACAnB,EAAUE,IAAMA,EACTtW,EAAS2X,SACpB,G,gBCnJI,GAAI,IACJ,GAAI,IAGJW,IADmB,GAAE,SAAS5J,KAAK,KAAM,UAAU6J,SAAS,6BAC9C,IAEdC,GAAQ,SAAUC,EAAmBvK,GAEjCgB,KAAKwJ,OAAS,GADdD,aAA6BE,SACbF,IAEAA,GAEpBvJ,KAAKhB,QAAUA,GAAW,CAAC,EAC3BgB,KAAK0J,OAAS,IAAI,GAAErC,QACxB,EAEA,IAAIsC,GAAY,SAAUC,EAAIC,GAC1B,OAAI,wBAA2BD,GACpB,mBAAsBA,EAAI,CAAEE,YAAa,UAAWC,QAASF,IAAShI,QAAQ,OAAQ,KAAKA,QAAQ,YAAa,KAAKA,QAAQ,OAAQ,SACrI,8BACA,8BAAiC+H,EAAI,CAAEE,YAAa,UAAWC,QAASF,IAAShI,QAAQ,OAAQ,KAAKA,QAAQ,YAAa,KAAKA,QAAQ,OAAQ,SAEhJ,EACf,EAEA,GAAEmI,OAAOV,GAAMhI,UAAW,CACtB2I,KAAM,SAAUjL,GAUZ,OATIgB,KAAKhB,QAAQkL,WACbd,GAAYhI,KAAKpB,MACO,IAAvBoJ,GAAYnH,QAAiBjC,KAAKmK,SAEnCnK,KAAKmK,QAETC,YAAW,KACPjP,SAASkP,iBAAiB,QAASrK,KAAKsK,aAAahC,KAAKtI,MAAM,GACjE,KACIA,KAAK0J,OAAOjB,SACvB,EAEA0B,MAAO,WACHnK,KAAKwJ,OAAOH,SAAS,GAAE,YAAYkB,KAAK,QAASvK,MACjD,IAAIwK,EAAgB,GAAEC,KAAKzK,KAAKhB,QAAS,CAAC,cAC1C,GAAEgL,OAAOQ,EAAe,CACpBE,qBAAqB,EACrBC,cAAe,OAGf3K,KAAKhB,QAAQkL,WACblK,KAAKwJ,OAAOoB,IAAI,cAAe,SAAUC,EAAInL,GACzCM,KAAKwJ,OAAOsB,SACZ9K,KAAK0J,OAAOrB,QAAQ3I,EAAKqL,OACzB3B,GAAY4B,QACZ5B,GAAYnH,QAAUmH,GAAY,GAAGe,OACzC,EAAE7B,KAAKtI,OAGXA,KAAKwJ,OAAOyB,WAAWT,EAC3B,EAEAU,MAAO,SAAUlM,GACb,IAAIwL,EAAgB,GAAEC,KAAKzL,EAAS,CAAC,YAAa,sBAAuB,kBACzE,GAAEgL,OAAOQ,EAAe,CACpBW,SAAU,WACN,GAAInL,KAAKhB,QAAQkL,UAAW,CACxB,IAAIxK,EAAO,GAAE0L,YAAYpM,EAAQ2L,eAAiB,KAAO3L,EAAQ2L,cACjE3K,KAAKmL,SAASzL,EAClB,CACIV,EAAQ0L,oBAC8B,mBAA3B1K,KAAKhB,QAAgB,UAC5BgB,KAAKhB,QAAQmM,YAGbnL,KAAKhB,QAAQkL,WACblK,KAAKmL,WAEwB,mBAAtBnM,EAAgB,UACvBA,EAAQmM,WAGpB,EAAE7C,KAAKtI,QAGXA,KAAKwJ,OAAOe,KAAK,QAAS,MAC1BvK,KAAKwJ,OAAO6B,YAAYb,EAC5B,EAEAW,SAAU,SAAUJ,GAChB5P,SAASmQ,oBAAoB,QAAStL,KAAKsK,cAC3CtK,KAAKwJ,OAAO+B,QAAQ,cAAe,CAACR,MAAOA,GAC/C,EAEAT,aAAc,SAAUO,GACD,KAAfA,EAAGW,UACHxL,KAAKwJ,OAAO3J,KAAK,kCAAkC4L,QACnDZ,EAAGa,iBAEX,IAGJ,GAAE1G,GAAGiG,WAAa,GAAEjG,GAAG2G,UAEvB,GAAE3G,GAAG2G,UAAY,SAAU3M,GAEvB,OADY,IAAIsK,GAAMtJ,KAAMhB,GACfiL,MACjB,EAEA,GAAEjF,GAAGqG,YAAc,GAAErG,GAAG4G,WAExB,GAAE5G,GAAG4G,WAAa,SAAU5M,GACxB,IAAI6M,EAAQ7L,KAAKuK,KAAK,SAClBsB,EACAA,EAAMX,MAAMlM,GAEZgB,KAAKqL,YAAYrM,EAEzB,EAEA,UACIsK,MAAOA,GAEPwC,YAAa,WACT1C,GAAc,EAClB,EAEA2C,QAAS,CACLC,OAAQ,SAAUC,EAAQ3J,EAAM4J,EAASC,EAAgBC,EAAMC,GAC3D,IAAIC,EAAS,IAAIhD,IAAM,WACnB4C,IAAYA,EAAU,CAAC,GACvBC,IAAmBA,EAAiB,IACpC,IAAII,EAAYL,EAAQK,UACpBC,EAAgBN,EAAQM,cACxBC,GAAoBP,EAAQO,kBAAoB,IAAIC,UAGxD,OAFAH,IAAcA,EAAY,CAACjK,KAAMiK,EAAUjK,MAAQqH,GAAU,QAC7D6C,IAAkBA,EAAgB,CAAClK,KAAMkK,EAAclK,MAAQqH,GAAU,YAClE,cAAsB,CACzBsC,OAAQA,EACR3J,KAAMA,EACNiK,UAAWA,EACXC,cAAeA,EACfC,iBAAkBA,EAClBN,eAAgBA,EAChBC,KAAMA,GAAQ,GACdC,YAAaA,GAAe,IAEpC,GAAG,CAACnC,WAAW,IA4Ef,OA1EIiC,EAAeE,aACfC,EAAO9C,OAAOrJ,SAASgM,EAAeE,aAGtCF,EAAeQ,mBACfL,EAAO9C,OAAO3J,KAAK,wBAAwBF,KAAK,IAChD2M,EAAO9C,OAAO3J,KAAK,kBAAkBK,YAAY,YACjDoM,EAAO9C,OAAO3J,KAAK,cAAcM,SAAS,YAC1CmM,EAAO9C,OAAO3J,KAAK,iBAAiBM,SAAS,qBAG7CgM,EAAeS,cACfN,EAAO9C,OAAO3J,KAAK,kBAAkBgN,OAAO,uCAAuCA,OAAO,sEAC1FP,EAAO9C,OAAO3J,KAAK,6BAA6ByC,KAAKwK,GAAOnD,UAAU,YACtE2C,EAAO9C,OAAO3J,KAAK,yBAAyBgN,OAAO,iDACnDP,EAAO9C,OAAO3J,KAAK,4BAA4BF,KAAKwM,EAAeS,aACnEN,EAAO9C,OAAO3J,KAAK,6BAA6B4L,OAAM,WAClDa,EAAO9C,OAAO3J,KAAK,4BAA4BkN,YAAY,UAAWT,EAAO9C,OAAO3J,KAAK,4BAA4BmN,SAAS,UAClI,KAGAb,EAAec,4BACfX,EAAO9C,OAAO3J,KAAK,wBAAwBF,KAAK,IAChD2M,EAAO9C,OAAO3J,KAAK,uBAAuB,GAAGuH,IAAM+E,EAAec,0BAClEX,EAAO9C,OAAO3J,KAAK,sBAAsBK,YAAY,WAGrDiM,EAAehG,SACfmG,EAAO9C,OAAO3J,KAAK,wBAAwBF,KAAK,IAChD2M,EAAO9C,OAAO3J,KAAK,sBAAsBF,KAAK,IAAIO,YAAY,UAAU,GAAGgN,YAAYf,EAAehG,QAClGgG,EAAegB,aACf,GAAE,qCAAqCxN,KAAKwM,EAAegB,aAAa9D,SAASiD,EAAO9C,OAAO3J,KAAK,wBAGxGsM,EAAeiB,eACfd,EAAO9C,OAAO3J,KAAK,iBAAiBgN,OAAO,uDAG3CV,EAAekB,yBAA2BlB,EAAemB,cACzDhB,EAAO9C,OAAO3J,KAAK,wBAAwBF,KAAK,GAAE,mCAAqCwM,EAAekB,wBAA0B,uBAAuBE,IAAIpB,EAAemB,cAG9KhB,EAAO9C,OAAO3J,KAAK,wBAAwB4L,OAAM,SAAUZ,GACvD,IAAI2C,EAAS,GAAE3C,EAAG4C,QAAQ/N,KAAK,UAC3BgO,EAAWpB,EAAO9C,OAAO3J,KAAK,kBAC9B8N,EAAmBrB,EAAO9C,OAAO3J,KAAK,eAC1C,GAAI2N,GAAUE,EAASzL,OAAQ,CAC3B,IAAIiG,EAAS,CAAC,EACd,GAAEpI,KAAK4N,GAAU,SAAUxM,GACvB,IAAI0M,EAAQ,GAAE1M,GACdgH,EAAO0F,EAAMlO,KAAK,SAAWkO,EAAM/N,KAAK,SAAS0K,KAAK,UAC1D,IACA+B,EAAOpB,MAAM,CAACP,cAAezC,GACjC,MACI,GAAIyF,EAAiB1L,OACjB,GAAI,GAAE4I,EAAG4C,QAAQT,SAAS,cACtBV,EAAOpB,MAAM,CAACP,eAAe,SAC1B,GAAI,GAAEE,EAAG4C,QAAQT,SAAS,mBAC7BV,EAAOpB,MAAM,CAACP,cAAe6C,QAE5B,CACD,IAAIK,EAAaF,EAAiBJ,MAClCjB,EAAOpB,MAAM,CAACP,cAAekD,GACjC,MAGAvB,EAAOpB,MAAM,CAACP,cAAe6C,GAEzC,IAEAlB,EAAO9C,OAAO3J,KAAK,8BAA8B4L,OAAM,WAC/Ca,EAAOpB,MAAM,CAACP,eAAe,GACrC,IAEO2B,EAAOrC,MAClB,EAEA6D,QAAS,SAAUxL,EAAM6J,GACrB,OAAOnM,KAAKgM,OAAOrC,GAAU,WAAYrH,EAAM,CAACiK,WAAW,GAAOJ,EACtE,EAEA4B,MAAO,SAAUzL,EAAM6J,GACnB,OAAOnM,KAAKgM,OAAOrC,GAAU,+CAAgDrH,EAAM,CAACiK,WAAW,GAAOJ,EAC1G,EAEA6B,IAAK,SAAU/B,EAAQ3J,EAAM6J,EAAgBD,EAASE,GAClD,IAAI6B,EAASC,EAKb,OAJIhC,IACA+B,EAAU/B,EAAQiC,eAClBD,EAAchC,EAAQkC,oBAEnBpO,KAAKgM,OAAOC,EAAQ3J,EAAM,CAACiK,UAAW,CAACjK,KAAM2L,GAAUzB,cAAe,CAAClK,KAAM4L,IAAe/B,EAAgBC,EACvH,EAEAiC,aAAc,SAAUpC,EAAQ3J,EAAM6J,EAAgBD,GAClD,IAAI+B,EAASK,EAKb,OAJIpC,IACA+B,EAAU/B,EAAQiC,eAClBG,IAAmBpC,EAAuB,iBAAI,CAAC,CAACnB,MAAOmB,EAAQoC,gBAAiBvP,KAAMmN,EAAQqC,wBAE3FvO,KAAKgM,OAAOC,EAAQ3J,EAAM,CAACiK,UAAW,CAACjK,KAAM2L,GAAUzB,eAAe,EAAMC,iBAAkB6B,GAAkBnC,EAAgB,WAC3I,EAEAqC,gBAAiB,SAAUvC,EAAQ3J,EAAM6J,EAAgBD,GACrD,IAAI+B,EAASQ,EAKb,OAJIvC,IACA+B,EAAU/B,EAAQiC,eAClBM,IAAiBvC,EAA0B,oBAAI,CAAC,CAACnB,MAAOmB,EAAQwC,UAAW3P,KAAMmN,EAAQyC,sBAEtF3O,KAAKgM,OAAOC,EAAQ3J,EAAM,CAACiK,UAAW,CAACjK,KAAM2L,GAAUxB,iBAAkBgC,EAAejC,eAAe,GAAOL,EACzH,EAEAyC,OAAQ,SAAU3C,EAAQ3J,GACtB,OAAOtC,KAAKgM,OAAOC,EAAQ3J,EAAM,CAACiK,WAAW,GACjD,ICtQR,IAAI,GAAI,IACJ,GAAI,IAER,GAAEvH,GAAG6J,gBAAkB,WACnB,IAAK7O,KAAKiC,OACN,OAAOjC,KAEX,IAAI8O,EAAK9O,KAAK,GAEd,GADA8O,EAAGC,QACE,GAAE3D,YAAYrH,OAAOiL,eAAkB,GAAE5D,YAAYjQ,SAAS8T,cAO5D,IAAK,GAAE7D,YAAYjQ,SAAS+T,KAAKC,iBAAkB,CACtD,IAAIC,EAAYjU,SAAS+T,KAAKC,kBAC9BC,EAAUC,kBAAkBP,GAC5BM,EAAUE,UAAS,GACnBF,EAAUG,QACd,MAZiF,CAC7E,IAAIC,EAAQrU,SAAS8T,cACrBO,EAAMC,mBAAmBX,GACzBU,EAAMF,UAAS,GACf,IAAII,EAAM3L,OAAOiL,eACjBU,EAAIC,kBACJD,EAAIE,SAASJ,EACjB,CAMA,OAAOxP,IACX,EAEA,GAAEgF,GAAG6K,mBAAqB,WAKtB,OAJW7P,KAAK8P,2BAEZ9P,KAAKL,KAAK,IAEPK,IACX,EAEA,GAAEgF,GAAG+K,kBAAoB,WAErB,OADA/P,KAAKL,KAAK,IACHK,IACX,EAEA,GAAEgF,GAAGgL,iBAAmB,SAAUrQ,GAC9B,IAAI+P,EAAKF,EAET,GADAxP,KAAK,GAAG+O,QACJhL,OAAOiL,cAGP,IADAU,EAAM3L,OAAOiL,gBACLiB,YAAcP,EAAIQ,WAAY,EAClCV,EAAQE,EAAIO,WAAW,IACjBE,iBAIN,IAAIrB,EAAK3T,SAASiL,cAAc,OAChC0I,EAAGsB,UAAYzQ,EAEf,IADA,IAA8C0Q,EAAMC,EAAhDC,EAAOpV,SAASqV,yBACXH,EAAOvB,EAAG2B,YACfH,EAAWC,EAAKrD,YAAYmD,GAEhCb,EAAMkB,WAAWH,GAGbD,KACAd,EAAQA,EAAMmB,cACRC,cAAcN,GACpBd,EAAMF,UAAS,GACfI,EAAIC,kBACJD,EAAIE,SAASJ,GAErB,OACOrU,SAAS0V,WAAwC,WAA3B1V,SAAS0V,UAAUhN,MAEhD1I,SAAS0V,UAAU5B,cAAc6B,UAAUnR,GAE/C,OAAOK,IACX,EAEA,GAAEgF,GAAG8K,wBAA0B,WAC3B,IAAIiB,EAAO,GAAE,SAASpR,KAAKK,KAAKL,QAyBhC,OAxBAoR,EAAKlR,KAAK,UAAUC,MAAK,WACrB,GAAEE,MAAMgR,YAAY,GAAEhR,MAAMN,KAAK,SACrC,IACAqR,EAAKlR,KAAK,KAAKC,MAAK,WAChB,GAAEE,MAAMgR,YAAY,GAAEhR,MAAML,OAAS,KACzC,IAIAoR,EAAKlR,KAAK,QAAQC,MAAK,WACnB,GAAEE,MAAMgR,YAAY,GAAEhR,MAAML,OAChC,IACAoR,EAAKlR,KAAK,OAAOC,MAAK,WAClB,IAAImR,EAAQ,GAAEjR,MACdiR,EAAMpR,KAAK,MAAMqR,SACjB,IAAIvR,EAAOsR,EAAMtR,OACbsR,EAAMjE,SAAS,SACfiE,EAAMD,YAAYrR,GAElBsR,EAAMD,YAAY,KAAKrR,EAC/B,IAIOoR,EAAKzO,MAChB,EChGA,IAAI,GAAI,IACJ,GAAI,IACJzE,GAAS,SAGb,GAAEmH,GAAG+H,YAAc,SAAUoE,EAAOC,GAShC,OARyB,IAArBC,UAAUpP,SACVmP,GAAapR,KAAKgN,SAASmE,IAE3BC,EACApR,KAAKG,SAASgR,GAEdnR,KAAKE,YAAYiR,GAEdnR,IACX,EAEA,GAAEgF,GAAGsM,OAAS,SAAUF,GACpB,OAAOpR,KAAK+M,YAAY,UAAWqE,EACvC,EAEA,GAAEpM,GAAGuM,OAAS,SAAUH,GACpB,OAAOpR,KAAK+M,YAAY,SAAUqE,EACtC,EAEA,IAAII,GAAe,SAAUhc,GACzB,IAAIic,EAAmC,IAA3Bjc,EAAI4O,QAAQ,YAAiD,IAA5B5O,EAAI4O,QAAQ,YAAqB,GAAK,UAC/EsN,EAAc,GAClB,IACIA,EAAcC,UAAUC,UAAUpc,IAAMqM,QAAQ,UAAWgQ,QAAQhQ,QAAQ,MAAO,MAItF,CAFA,MAAOiQ,GACHJ,EAAclc,CAClB,CACA,IACIA,EAAMoc,UAAUpc,EAET,CAAX,MAAOsc,GAAI,CACX,MAAO,kDAAkDL,EAAKC,EAAc,KAAKlc,EAAI,MACzF,EAEA,GAAEwP,GAAG+M,aAAe,SAAU/S,GAuC1B,OAtCAA,IAAYA,EAAU,CAAC,IACVA,EAAQqD,SAAWrC,KAAKH,KAAKb,EAAQqD,UAAYrC,MACvDF,MAAK,SAAU0D,EAAGwO,GACrB,IAAIC,EAAO,GAAED,GACTE,EAAc,GACdC,EAAa,iGAEjBF,EAAK,GAAGG,WAAWC,QAAQ,SAAUhC,GACjC,IAAIiC,EAAQ,GAAEjC,GACV1P,EAAI0P,EAAKkC,UACb,GAAqB,MAAjBlC,EAAKmC,QAIJ,CACqB,UAAlBnC,EAAKoC,WACL9R,EAAI,GAAEkR,OAAOS,EAAMhQ,SACvB,IAAIoQ,EAAO/R,GAAKA,EAAEgS,MAAMR,GAExB,GADAO,EAAOnP,MAAMqP,KAAK,IAAIC,IAAIH,KACrBA,EAED,YADAR,GAAevR,GAGnB,GAAoB,IAAhB+R,EAAKzQ,QAAgByQ,EAAK,KAAO/R,EACjCuR,GAAelT,EAAQ8T,WAAalB,UAAUjR,GAAK6Q,GAAa7Q,OAC7D,CACH,IAAK6C,EAAI,EAAGA,EAAIkP,EAAKzQ,OAAQuB,IAErB7C,EADA3B,EAAQ8T,WACJnS,EAAEkB,QAAQ6Q,EAAKlP,GAAIoO,UAAUc,EAAKlP,KAElC7C,EAAEoS,WAAW,IAAIC,OAAO,WAAWN,EAAKlP,GAAG3B,QAAQ,sBAAuB,WAAW,KAAM,KAAO2P,GAAakB,EAAKlP,KAEhI0O,GAAevR,CACnB,CACJ,MAvBIuR,GAAevR,CAwBvB,EAAE2H,KAAKtI,OACPiS,EAAKtS,KAAKuS,EACd,IACOlS,IACX,EAEA,IAAIiT,GAAQ,CACRC,KAAM,WACF,MAAO,uCAAuCrR,QAAQ,SAAS,SAAUsR,GACrE,IAAIC,EAAoB,GAAhB9W,KAAK+W,SAAgB,EAE7B,OADa,KAALF,EAAWC,EAAQ,EAAJA,EAAU,GACxBpR,SAAS,GACtB,GACJ,EAEAsR,KAAM,SAAUC,GACZ,OAAOxP,OAAOyP,KAAK,GAAEC,SAASC,mBAAmBH,IACrD,EAEAI,KAAM,SAAUJ,GACZ,OAAOK,mBAAmB,GAAE/B,OAAO9N,OAAOZ,KAAKoQ,IACnD,EAEApK,IAAK,WACD,OAAO7M,KAAKoI,MAAM7G,GAAOsL,MAAQ,IACrC,EAEA0K,YAAa,SAAUC,GAEnB,OADeA,EAAYjW,GAAOiW,GAAajW,MAC/BkW,OAAO,WAC3B,EAEAC,YAAa,SAAUF,EAAWC,GAE9B,OADeD,EAAYjW,GAAOiW,GAAajW,MAC/BkW,OAAOA,GAAU,qBACrC,EAEAE,gBAAiB,SAAUH,EAAWC,GAElC,OADeD,EAAYjW,GAAOiW,GAAajW,MAC/BkW,OAAOA,GAAU,wBACrC,EAEAG,kCAAmC,SAAUJ,GAEzC,OADAA,EAAY/R,OAAO+R,EAAYjW,GAAOiW,GAAajW,MAC/CA,GAAOiW,GAAWK,QAAQ,OAAOC,OAAOvW,KAASsW,QAAQ,SAAWpS,OAAOlE,KAASwW,SAAS,GAAI,SAAWP,GACrGjW,GAAOiW,GAAWC,OAAO,YAEhChS,OAAOlE,KAASwW,SAAS,GAAI,UAAYP,GAAa/R,OAAOlE,KAASwW,SAAS,EAAG,UAAYP,EACvFjW,GAAOiW,GAAWC,OAAO,OAEhChS,OAAOlE,KAASwW,SAAS,EAAG,SAAWP,GAAa/R,OAAOlE,KAASwW,SAAS,EAAG,UAAYP,EACrFjW,GAAOiW,GAAWC,OAAO,SAEhCD,GAAa/R,OAAOlE,KAASwW,SAAS,EAAG,SAAWP,EAC7CjW,GAAOiW,GAAWC,OAAO,mBADpC,CAGJ,EAEAO,sBAAuB,SAAUR,GAC7B,IAAIS,EAAWT,EAAYjW,GAAOiW,GAAajW,KAC3C2W,EAAM3W,GAAO0W,GAAUJ,QAAQ,OAC/BM,EAAO5W,GAAO0W,GAAUJ,QAAQ,QACpC,OAAIK,EAAIJ,OAAOvW,KAASsW,QAAQ,QACrBI,EAASR,OAAO,YAChBU,EAAKL,OAAOvW,KAASsW,QAAQ,SAC7BI,EAASR,OAAO,SAEhBQ,EAASR,OAAO,WAE/B,EAEAW,wBAAyB,SAAUZ,GAC/B,IAAIS,EAAWT,EAAYjW,GAAOiW,GAAajW,KAE/C,OADUA,GAAO0W,GAAUJ,QAAQ,OAC3BC,OAAOvW,KAASsW,QAAQ,QACrBI,EAASR,OAAO,YAEhBQ,EAASR,OAAO,uBAE/B,EAEAY,YAAa,SAAS9Q,GAClB,OAAIA,EAAKO,QAAQ,UAAY,CAIjC,EAEAwQ,iBAAkB,SAASpf,GACvB,IAAIqf,EAAI1Z,SAASiL,cAAc,KAI/B,OAHI5Q,IAAQ,gBAAgBsf,KAAKtf,KAC7BA,EAAM,UAAYA,GACtBqf,EAAElT,KAAOnM,EACFqf,EAAEE,QACb,EAEAC,YAAa,SAASnR,GAClB,OAAIA,EAAKO,QAAQ,UAAY,CAIjC,EAEA6Q,eAAgB,SAAUC,GACtB,IAAIC,EAAWlC,GAAMmC,iBAAiBF,GACtC,MAAiB,UAAbC,EACO,YACM,UAAbA,EACO,iBACM,UAAbA,EACO,gBACM,aAAbA,EACO,wBACM,iBAAbA,EACO,mBACM,YAAbA,EACO,cACM,SAAbA,EACO,WACM,QAAbA,EACO,eACJ,UACX,EAEAE,mBAAoB,SAAUH,GAC1B,IAAIC,EAAWlC,GAAMmC,iBAAiBF,GACtC,MAAiB,UAAbC,EACO,QACM,UAAbA,EACO,aACM,UAAbA,EACO,aACM,aAAbA,EACO,gBACM,iBAAbA,EACO,oBACM,YAAbA,EACO,WACM,SAAbA,EACO,OACM,QAAbA,EACO,WACJ,MACX,EAEAC,iBAAkB,SAAUF,GACxB,OAAI,oCAAoCA,GAC7B,QACP,oCAAoCA,GAC7B,QACP,oCAAoCA,GAC7B,QACP,uCAAuCA,GAChC,WACP,kCAAkCA,GAC3B,MACP,2CAA2CA,GACpC,eACP,sCAAsCA,GAC/B,UACP,oCAAoCA,GAC7B,mBACJ,MACX,EAEAI,8BAA+B,SAAUJ,GACrC,IAAIrR,EAAOoP,GAAMmC,iBAAiBF,GAGlC,MADU,QAATrR,IAAoBA,EAAO,YADf,CAAC,IAAK,IAAK,IAAK,IAAK,KAEvB0R,SAAS1R,EAAK,IACd,MAAQA,EAER,KAAOA,CACtB,EAEA2R,YAAa,SAAU5Q,GACnB,OAAKA,EAED,GAAE6Q,MAAM1T,OAAO6C,IACRA,EACPA,EAAO,KACAA,EAAK,KACLA,EAAO,SACNA,EAAK,MAAM8Q,QAAQ,GAAG,OACvB9Q,EAAO,YACNA,EAAK,SAAS8Q,QAAQ,GAAG,QAEzB9Q,EAAK,YAAY8Q,QAAQ,GAAG,OAV7B,EAYf,EAEAC,gBAAiB,SAAUC,GACvB,OAAI,GAAEH,MAAM1T,OAAO6T,IACRA,EACP,GAAExK,YAAYwK,IAA0B,KAAbA,EACpB,GACPA,EAAW,GACH,MAAQA,EAChBA,EAAW,GACH,KAAOA,EACfA,GAAY,GACJtZ,KAAKuZ,MAAMD,EAAS,IAAM,KAAQA,EAAS,GAAK,GAAO,IAAOA,EAAS,GAAOA,EAAS,SADnG,CAEJ,EAEAE,YAAa,SAAU/W,GACnB,OAAOA,EAAQA,EAAK,GAAG+H,cAAgB/H,EAAK8C,QAAQ,IAAI,KAAKkU,OAAO,GAAGC,cAAiB,EAC5F,EAEAC,cAAe,SAAUC,EAAQnL,GAC7B,OAAOoL,OAAOC,KAAKF,GAAQrW,MAAKwW,GAAOH,EAAOG,KAAStL,GAC3D,EAEAuL,aAAc,SAAU/C,EAAKX,EAAM2D,GAE/B,OADAA,EAAK,GAAEC,SAASD,GAAMA,EAAK,IAAIhD,GAAKtR,OAChCsR,EAAItR,SAAW,IAAIsR,GAAKtR,OACjBsR,EAAIlQ,MAAMuP,EAAM2D,GAEhBhT,MAAMqP,KAAKW,GAAKlQ,MAAMuP,EAAM2D,GAAInX,KAAK,GACpD,EAEAqX,kBAAmB,SAAUvH,EAAMwH,GAC/B,IAAKA,IAAiBA,EAAazU,OAC/B,OAAOiN,EACXA,EAAOA,GAAQ,GACfwH,EAAeA,EAAaC,QAAOC,GAAgB,cAAXA,EAAE/S,MAAmC,YAAX+S,EAAE/S,OACpE,IAAIgT,EAActT,MAAMqP,KAAK,oBAAuB1D,IAKpD,OAJAwH,GAAgBA,EAAarE,QAAQ,SAAUyE,GAC3C,IAAK,IAAIpU,EAAMoU,EAAIC,MAAOrU,EAAMoU,EAAIE,IAAKtU,IACrCmU,EAAYnU,GAAO,EAC3B,EAAE4F,KAAKtI,OACA,sBAAyB6W,EAAYzX,KAAK,IAAIoF,OACzD,EAEAyS,kBAAmB,SAAUC,EAASC,GAClC,IAAIC,EAAQ,GAAEC,MAAMH,EAAQI,YACxBC,EAAWH,EAAMG,UAAY,GAC7BC,EAAUJ,EAAMI,SAAW,GAC3Bd,EAAeU,EAAMK,iBAAmB,GACxCC,EAAcN,EAAMM,aAAe,GACnCC,EAAcpU,MAAMqP,KAAK,oBAAuBwE,EAAMQ,kBAAoBR,EAAMF,SAAW,KAmF/F,OAlFCC,IAAgBA,EAAc,QAE/BT,EAAarE,QAAQ,SAAUwF,GAC3B,IAAK,IAAInV,EAAMmV,EAAMd,MAAOrU,EAAMmV,EAAMb,IAAKtU,IACzCiV,EAAYjV,GAAO,EAC3B,EAAE4F,KAAKtI,OAEPuX,EAASlF,QAAQ,SAAUyF,GACvB,IAAIC,EAAYD,EAAQf,MACpBiB,EAAUF,EAAQd,IAAOW,EAAY1V,OAAS,EAAM0V,EAAY1V,OAAS,EAAM6V,EAAQd,IAAM,EAAIvJ,EAASqK,EAAQrK,OACtH,KAAIsK,EAAYJ,EAAY1V,OAAS,GAArC,CAEA,GAAI6V,EAAQG,MAAO,CACf,IAAIrO,EAAK6D,EAAOkF,MAAM,YAClBuF,EAAMzK,EAAOkF,MAAM,YACnB/I,EACA6D,EAAS7D,EAAG,GAAGvG,MAAM,GAChB6U,EACLzK,EAASyK,EAAI,GAAG7U,MAAM,IAEtBoK,EAAS,GACTqK,EAAQK,IAAK,EAErB,MAEI1K,EAASA,EAAOpK,MAAM,GAC1B,GAAoB,YAAhB8T,EAGA,OAFAQ,EAAYI,GAAa,IAAMZ,EAAc,sBAAwB1J,EAAS,KAAOkK,EAAYI,QACjGJ,EAAYK,IAAY,KAAOb,EAAc,KAGjDQ,EAAYI,GAAa,IAAMZ,EAAc,iBAAmB1J,EAAS,oBAAsBqK,EAAQK,GAAK,oBAAsB,IAAM,KAAOR,EAAYI,GAC3JJ,EAAYK,IAAY,KAAOb,EAAc,GArBnC,CAsBd,EAAE7O,KAAKtI,OAEPwX,EAAQnF,QAAQ,SAAU+F,GACtB,IAAIL,EAAYK,EAAOrB,MACnBiB,EAAUI,EAAOpB,IAAOW,EAAY1V,OAAS,EAAM0V,EAAY1V,OAAS,EAAMmW,EAAOpB,IAAM,EAC/F,KAAIe,EAAYJ,EAAY1V,OAAS,IAEjCmW,EAAOA,OAAOnW,OAAQ,CACtB,IAAIoW,EAAa,GACbC,EAAW,GACfF,EAAOA,OAAO/F,QAAQ,SAAUkG,GACE,iBAApB,GACNF,EAAa,kDAAoDE,EAAcC,IAAM,KAAOH,EAC5FC,GAAY,SAEZD,EAAa,IAAME,EAAc,GAAGvC,cAAgB,IAAMqC,EAC1DC,GAAY,KAAOC,EAAc,GAAGvC,cAAgB,IAE5D,EAAE1N,KAAKtI,OACP2X,EAAYI,GAAaM,EAAaV,EAAYI,GAClDJ,EAAYK,IAAYM,CAC5B,CACJ,EAAEhQ,KAAKtI,OAEP0X,EAAYrF,QAAQ,SAAUoG,GAC1B,IAAIT,EAAUS,EAAMzB,IAAOW,EAAY1V,OAAS,EAAM0V,EAAY1V,OAAS,EAAMwW,EAAMzB,IAAM,EAC7F,IAAK,IAAItU,EAAM+V,EAAM1B,MAAOrU,EAAO+V,EAAM1B,MAAQ,8BAAgCrU,IAEzEiV,EAAYjV,GADZA,IAAQsV,EACW,OAEA,GAG3B,IAAK,IAAItV,EAAM+V,EAAM1B,MAAOrU,EAAMsV,EAAStV,IACvC,GAAyB,OAArBiV,EAAYjV,GAAe,CAC3B,IAAK,IAAIgW,EAAYhW,EAAM,EAAGgW,GAAchW,EAAM,8BAAgCgW,IAC9Ef,EAAYe,GAAa,GAC7BhW,GAAM,8BAAgC,CAC1C,CAEJ,GAAoB,YAAhByU,EAGA,OAFAQ,EAAYc,EAAM1B,OAAS,oBAC3BY,EAAYK,IAAY,iBAG5BL,EAAYc,EAAM1B,OAAS,sBAC3BY,EAAYK,IAAY,QAC5B,EAAE1P,KAAKtI,OAEA2X,EAAYvY,KAAK,IAAIoF,MAChC,EAEAmU,MAAO,WACH,IAAIC,EAAW7U,OAAO8U,UAAUD,SAG5BE,EAAK,KAUT,OAR0C,IAJrB,CAAC,YAAa,WAAY,SAAU,UAItC1U,QAAQwU,GACvBE,EAAK,UAC0C,IAL5B,CAAC,QAAS,QAAS,UAAW,SAKzB1U,QAAQwU,GAChCE,EAAK,WACGA,GAAM,QAAQhE,KAAK8D,KAC3BE,EAAK,SAGFA,CACX,EAEAC,iBAAkB,SAASC,GACvB,OAAOA,EAAQC,YAAcD,EAAQE,WACzC,EAEAC,kBAAmB,SAASH,GACxB,OAAOA,EAAQI,aAAeJ,EAAQK,YAC1C,EAEAC,iBAAkB,SAAUC,GACxB,IAAIC,EAAa,GAAE,4BAkBnB,OAjBAD,EAAUE,OAAOpH,QAAQ,SAAUqH,GAC/B,GAAmB,WAAfA,EAAM7V,KAAV,CAEA,GAAmB,UAAf6V,EAAM7V,KAAkB,CACxB,IAAI8V,EAAe,GAAE,8CACrBD,EAAME,OAASD,EAAa9M,OAAO,GAAE,wBAAwBvK,KAAKoX,EAAME,QACxEF,EAAMG,OAAOxH,QAAQ,SAAUtH,GAC3B,IAAI+O,EAAS,GAAE,wBAAwBxX,KAAKyI,GAC5C4O,EAAa9M,OAAOiN,EACxB,EAAExR,KAAKtI,OACPwZ,EAAW3M,OAAO8M,EACtB,CACA,GAAmB,YAAfD,EAAM7V,KAAoB,CAC1B,IAAIiW,EAAS,GAAE,cAAcJ,EAAMK,2FAA2FzX,KAAKoX,EAAME,OACzIJ,EAAW3M,OAAOiN,EACtB,CAbU,CAcd,EAAExR,KAAKtI,OACAwZ,CACX,EAEAQ,oBAAqB,SAAS1X,EAAM2X,EAAcC,GACzCnW,OAAO8U,UAAUsB,WAGtBpW,OAAO8U,UAAUsB,UAAUC,UAAU9X,GAAM+X,KAAK,WAC5C,GAAIJ,EAAc,CACd,IAAIK,EAAWL,EACfja,KAAKua,uBAAuBD,EAAU,KAC1C,CACJ,EAAEhS,KAAKtI,MAAO,WACV,GAAIka,EAAa,CACb,IAAII,EAAWJ,EACfla,KAAKua,uBAAuBD,EAAU,KAC1C,CACJ,EAAEhS,KAAKtI,MACX,EAEAua,uBAAwB,SAAUD,EAAUE,GACxC,IAAIC,EAAQ,GAAEtf,SAAS+T,MACnBwL,EAAa,GAAE,yCAAyCpY,KAAKgY,GACjEE,EAAOA,GAAQ,IACfC,EAAM5a,KAAK,2BAA2BqR,SACtCuJ,EAAM5N,OAAO6N,GACbtQ,YAAY,WACRsQ,EAAWxJ,QACf,GAAGsJ,EACP,EAEA9Y,WAAY,SAAUiZ,GAClB,IAAI/V,EACJ,OAAQ+V,GACJ,KAAK,EACD/V,EAAO,GACP,MACJ,KAAK,EACDA,EAAO,GACP,MACJ,KAAK,EACDA,EAAO,GACP,MACJ,KAAK,EACDA,EAAO,GACP,MACJ,KAAK,EACDA,EAAO,GACP,MACJ,QACIA,EAAO,GAGf,OAAOA,CACX,EAEAgW,WAAY,SAAUplB,EAAKqlB,GACvB,IAAIC,EAAM/W,OAAOkG,KAAKzU,EAAK,UACvBslB,EACAA,EAAI/L,QAEJ8L,GAAWA,GAEnB,EAEAE,eAAgB,WACZ,IAAIlK,EAAY9M,OAAOiL,eACnB6B,EAAUmK,MACVnK,EAAUmK,QACHnK,EAAUlB,iBACjBkB,EAAUlB,iBAElB,EAEAsL,UAAW,SAAUlc,GACjB,IAAImc,EAAUnX,OAAO5I,SAASggB,OAAOxI,MAAM,IAAIK,OAC3C,WAAajU,EAAK8C,QAAQ,+BAAgC,QAAU,aAExE,OAAOqZ,EAAUtH,mBAAmBsH,EAAQ,SAAME,CACtD,EAEAC,SAAU,CACNC,QAAS,WACL,OAAOzC,UAAU0C,UAAU5I,MAAM,WACrC,EACA6I,WAAY,WACR,OAAO3C,UAAU0C,UAAU5I,MAAM,cACrC,EACA8I,IAAK,WACD,OAAO5C,UAAU0C,UAAU5I,MAAM,oBACrC,EACA+I,MAAO,WACH,OAAO7C,UAAU0C,UAAU5I,MAAM,cACrC,EACAgJ,QAAS,WACL,OAAO9C,UAAU0C,UAAU5I,MAAM,cAAgBkG,UAAU0C,UAAU5I,MAAM,aAC/E,EACAiJ,IAAK,WACD,OAAQ5b,KAAKsb,WAAatb,KAAKwb,cAAgBxb,KAAKyb,OAASzb,KAAK0b,SAAW1b,KAAK2b,SACtF,GAGJE,wBAAyB,SAAUC,GAC/B,OAAOnY,WAAWiP,KAAKzP,KAAK2Y,IAAa3I,GAAKA,EAAE1P,WAAW,KAAIsY,MACnE,EAEAC,oBAAqB,SAAUC,GAC3B,OAAOzI,KAAKpgB,OAAOC,gBAAgB,IAAIsQ,WAAWsY,IACtD,EAEAC,gBAAiBC,eAAeC,EAAQC,GACpC,IAAIC,EAASvY,OAAOwY,OAAOC,OACvBC,EAAezc,KAAK0c,WAAWL,GAE/BhG,QAAYiG,EAAOK,UACnB,MACAP,EACA,CAAErd,KAAM,OAAQyI,KAAM,CAAEzI,KAAM,WAC9B,EACA,CAAC,SAKL,aAFeud,EAAOM,KAAK,OAAQvG,EAAKoG,EAG5C,EAEAC,WAAY,SAASL,GACjB,IAAIN,EAAS,IAAIc,YAAY,GACzBC,EAAQ,IAAIC,SAAShB,GAGrBiB,GADa,IAAI9a,OAAO,IACCma,EAAQra,SAAS,IAAIqB,OAAO,IAEzD,IAAK,IAAI4Z,EAAO,EAAGA,EAAO,GAAIA,GAAQ,EAAG,CACrC,IAAIC,EAAYC,SAASH,EAAS3Z,MAAM4Z,EAAMA,EAAO,GAAI,GACzDH,EAAMM,SAASH,EAAO,EAAGC,EAC7B,CAEA,OAAOnB,CACX,EAEAsB,GAAI,SAASC,GACT,IAAIxc,EAAkB,GAATwc,EAAG,IAIhB,QAHuB,IAAbA,EAAGxc,KAAmB,GAAOwc,EAAGxc,EAAS,IAAM,GAAOwc,EAAGxc,EAAS,IAAM,EAAKwc,EAAGxc,EAAS,IACnFkB,SAAS,EAG7B,EAEAub,SAAU,SAASC,GACf,IAAIC,EAAQzd,KAAKqd,GAAGG,GAGpB,OAFWL,SAASM,EAAO,EAG/B,EAEAC,aAAcvB,eAAeC,EAAQC,GACjC,IAAIhG,QAAYrW,KAAKkc,gBAAgBE,EAAQC,GACzCmB,EAAO,IAAI7Z,WAAW0S,GAK1B,OAFc,SADHrW,KAAKud,SAASC,GACS,IAAM,GAAKna,OAAO,EAGxD,EAEAsa,WAAYxB,eAAe9F,EAAKa,GAU5B,aANuBqF,OAAOC,OAAOI,KAFb,OAIpBvG,EACAa,EAIR,EAEA0G,oBAAqB,SAAUC,GAC3B,IAAI,OAAE5b,GAAW4b,EACb9B,EAAS,IAAIpY,WAAW1B,GAE5B,IAAK,IAAIuB,EAAI,EAAGA,EAAIvB,EAAQuB,IACxBuY,EAAOvY,GAAKqa,EAAOpa,WAAWD,GAGlC,OAAOuY,CACX,EAEA+B,IAAK,CACDC,UAAW,UAEXC,QAAS,IAAIja,OAAOka,YAAY,SAChCC,QAAS,IAAIna,OAAOoa,YAAY,SAEhCC,QAASjC,eAAgBkC,EAAWC,EAAUC,GAC1C,IAAIC,QAAkBza,OAAOwY,OAAOC,OAAOG,UAAU,MAAO0B,EAAW,CAACtf,KAAM,SAAS,EAAO,CAAC,YAAa,eACxG0f,EAAgB,CAAE1f,KAAM,OAAQ2f,KAAM,IAAI/a,WAAW,IAAKgb,KAAM1L,GAAM2K,oBAAoB,iBAAkBpW,KAAM,WAElH6O,QAAYtS,OAAOwY,OAAOC,OAAOoC,WAAWH,EAAeD,EAAW,KAE1EnI,EAAM,IAAI1S,WAAW0S,GAErB,IAAIwI,EAAgBxI,EAAIhT,MAAM,EAAE,IAC5Byb,EAAoBzI,EAAIhT,MAAM,GAAG,IACjC0b,EAAK1I,EAAIhT,MAAM,IAInByb,QAA0BvC,OAAOC,OAAOG,UACpC,MACAmC,EAJY,CAAE/f,KAAM,OAAQyI,KAAM,YAMlC,EAAO,CAAC,OAAQ,WAGpB,IAAIwX,QAAsB/L,GAAM0K,WAAWmB,EAAmBP,GAI9D,GAFAS,EAAgBA,EAAc3b,MAAM,EAAG2b,EAAcC,WAAa,IAE5DhM,GAAM+I,oBAAoBsC,KAAcrL,GAAM+I,oBAAoBgD,GACpE,OAEJH,QAAsB9a,OAAOwY,OAAOC,OAAOG,UAAU,MAAOkC,EAAe,CAAE,KAAQ,YAAa,EAAM,CAAC,YAGzG,IAAIK,QAAwBnb,OAAOwY,OAAOC,OAAO4B,QAAQ,CACrDrf,KAAM,UACNggB,MACDF,EAAeN,GAElB,OAAOtL,GAAM6K,IAAIE,QAAQmB,OAAOD,EACpC,EAEAE,QAASjD,eAAgBkD,GACrB,IAAIhB,EAAYta,OAAOwY,OAAO+C,gBAAgB,IAAI3b,WAAW,KACzD6a,QAAkBza,OAAOwY,OAAOC,OAAOG,UAAU,MAAO0B,EAAW,CAACtf,KAAM,SAAS,EAAO,CAAC,YAAa,eACxG0f,EAAgB,CAAE1f,KAAM,OAAQ2f,KAAM,IAAI/a,WAAW,IAAKgb,KAAM1L,GAAM2K,oBAAoB,iBAAkBpW,KAAM,WAElH6O,QAAYtS,OAAOwY,OAAOC,OAAOoC,WAAWH,EAAeD,EAAW,KAE1EnI,EAAM,IAAI1S,WAAW0S,GAErB,IAAIwI,EAAgBxI,EAAIhT,MAAM,EAAE,IAC5Byb,EAAoBzI,EAAIhT,MAAM,GAAG,IACjC0b,EAAK1I,EAAIhT,MAAM,IAEnBwb,QAAsB9a,OAAOwY,OAAOC,OAAOG,UAAU,MAAOkC,EAAe,CAAE,KAAQ,YAAa,EAAM,CAAC,YAEzG,IAAIU,QAAkBtM,GAAM6K,IAAI0B,4BAA4BT,EAAIF,EAAeQ,GAG/EP,QAA0BvC,OAAOC,OAAOG,UACpC,MACAmC,EAHY,CAAE/f,KAAM,OAAQyI,KAAM,YAKlC,EAAO,CAAC,OAAQ,WAGpB,IAAI+W,QAAgBtL,GAAM0K,WAAWmB,EAAmBS,GAMxD,OAJAhB,EAAUA,EAAQlb,MAAM,EAAGkb,EAAQU,WAAa,IAIzC,CACHQ,QAHU,IAAI9b,WAAW,IAAI0a,KAAc,IAAI1a,WAAW4a,KAGzCxC,OACjBwC,QAASgB,EAEjB,EAEAC,4BAA6BrD,eAAgB4C,EAAI1I,EAAKgJ,GAClD,IAAIK,EAAiB,CACjB3gB,KAAM,UACNggB,MAEAY,EAAmB1M,GAAM6K,IAAII,QAAQ0B,OAAOP,GAGhD,aAFsBtb,OAAOwY,OAAOC,OAAO4C,QAAQM,EAAgBrJ,EAAKsJ,EAG5E,EAEAE,kBAAmB,WACf,IAAI5d,EAAS,EACT8Z,EAAS,KAEb,IAAK,IAAIvY,KAAK6N,UACV0K,EAAS1K,UAAU7N,GACnBvB,GAAU8Z,EAAOkD,WAGrB,IAAIa,EAAS,IAAInc,WAAW1B,GACxBnB,EAAS,EAEb,IAAK,IAAI0C,KAAK6N,UACV0K,EAAS1K,UAAU7N,GACnBsc,EAAOC,IAAI,IAAIpc,WAAWoY,GAASjb,GACnCA,GAAUib,EAAOkD,WAGrB,OAAOa,EAAO/D,MAClB,EAEAiE,eAAgB7D,iBACZ,IAAI8D,EAAO,CACPlhB,KAAMkU,GAAM6K,IAAIC,UAChB9b,OAAQ,0BAKZ,aAFgB8B,OAAOwY,OAAOC,OAAO0D,YAAYD,EAAM,0BADxC,CAAC,UAAW,WAI/B,GAGJE,WAAY,WAER,IAAIC,EACAvH,UAAU0C,UAGV8E,EACAD,EAAgBhc,QAAQ,WAAa,EAGrCkc,EACAF,EAAgBhc,QAAQ,SAAW,GACnCgc,EAAgBhc,QAAQ,gBAAkB,EAG1Cmc,EACAH,EAAgBhc,QAAQ,YAAc,EAGtCoc,EACAJ,EAAgBhc,QAAQ,WAAa,EAGrC,GAAiB,IACjBoc,GAAc,GAGlB,IAAIC,EACAL,EAAgBhc,QAAQ,OAAS,EAMrC,OAHI,GAAiB,IACjBic,GAAc,GAEdG,EACO,SACPH,EACO,SACPC,EACO,KACPG,EACO,QACPF,EACO,UACJ,iBACX,EAEApf,MAAOA,EACPuf,OAAQ,GACRC,OAAQA,GACR5U,QAAS4U,GAAO5U,SAGhB,Y,kDC9yBJ,SAAe,WAAS,CACpB5a,UAAW,UACX0N,UAAW,EACX+hB,4BAA6B,KAC7B3N,MAAO,GACPC,KAAM,SACP,KAAS,G,gBCbZ,IAAI,GAAY,aACZ,GAAI,KACJ,GAAI,KACJ,GAAS,UACT,GAA8B,+BAC9B7U,GAAiB,kBACjBC,GAAyB,0BACzB4U,GAAO,QACP,GAAQ,SACR2N,GAAK,IAAIC,iBAAiB,cAE9BD,GAAGE,UAAaC,IACO,MAAfA,EAAMthB,MAAiBmhB,GAAGI,iBAC1BJ,GAAGK,YAAY,KAEA,MAAfF,EAAMthB,OACNmhB,GAAGI,iBAAkB,EACzB,EAGJJ,GAAGK,YAAY,KA6gBf,aA3gBaC,SAASC,MAAMpX,OAAO,CAC/BqX,SAAU,CACNC,eAAgB,kBAChBC,sBAAuB,kBACvBtmB,OAAO,EACPC,OAAO,EACPsmB,UAAWtO,KAAOuO,UAAU,EAAG,GAC/BC,YAAa,kBAGjBC,WAAY,WACR3hB,KAAK4hB,IAAM,GACX5hB,KAAK6hB,iBACL7hB,KAAK8hB,iBACL9hB,KAAK+hB,sBACL/hB,KAAKgiB,qBACLje,OAAO8U,UAAUoJ,eAAiBle,OAAO8U,UAAUoJ,aAAaC,eAAiBliB,KAAKgiB,mBAAmB1Z,KAAKtI,OAC9GA,KAAKmiB,UAAY,IAAIniB,KAAKoiB,SAAS,CAACxY,GAAI,YAChC,CAACyY,aAAcriB,KAAKsiB,iBAAkBC,MAAO,WACrDviB,KAAKwiB,SAAWxiB,KAAKmiB,UAAU7K,WAC/B,IAAI9hB,EAAMuO,OAAO0e,SAASC,KAAO3e,OAAO0e,SAASE,SAAS9gB,QAAQ,MAAO,KAC9C,KAAvBrM,EAAIA,EAAIyM,OAAS,IACjBzM,EAAI6N,MAAM,EAAG7N,EAAIyM,OAAS,GAC9BjC,KAAK4iB,OAAS,IAAIzB,SAAS0B,iBAAiB,CAACjZ,GAAI,SAASpU,KAClD,CAAC6sB,aAAcriB,KAAKsiB,iBAAkBC,MAAO,WACrDviB,KAAK8iB,MAAQ9iB,KAAK4iB,OAAOtL,WACzBtX,KAAK8iB,MAAMtB,WAAcxhB,KAAK+f,IAAI,YAAa/f,KAAK8iB,MAAMtB,WAC1DxhB,KAAK4iB,OAAOG,KAAK,YAAa/iB,KAAKwC,IAAI,cACvCxC,KAAKgjB,gBACLhjB,KAAKijB,iBACLjjB,KAAKkjB,aAAe,IAAI,GAAE7b,SAC1BrH,KAAKmjB,aAAe,GACpBnjB,KAAKojB,oBAAsB,KAC3BpjB,KAAKqjB,GAAG,+BAAgCrjB,KAAKsjB,gBAAiBtjB,MAC9DA,KAAKqjB,GAAG,OAAQrjB,KAAKujB,OAAQvjB,MAC7BA,KAAKwjB,kBAAoBC,YAAYzjB,KAAK0jB,kBAAkBpb,KAAKtI,MAAO,KAExE+D,OAAO4f,SAAW,KACd3jB,KAAK4jB,0BAA0B,CAKvC,EAEA7B,oBAAqB,WACjB,IAAI8B,EAAO9f,OAAO8U,UAAUiL,SAEZ,MADD3N,OAAOC,KAAK,IAA6BvW,MAAKwW,IAAQwN,EAAKzf,QAAQiS,MAAS,GAAU5a,0BAA0BooB,IAAS1N,OAAOC,KAAK,IAA6BvW,MAAKwW,IAAQ,GAAU5a,0BAA0BooB,GAAMzf,QAAQiS,QAE5OwN,EAAO,MACX7jB,KAAK+f,IAAI,mBAAoB8D,EACjC,EAEAE,iBAAkB5H,eAAgB0H,GAC9B,OAAO,IAAIG,SAAQ,CAAC3b,EAAS4b,KACzB,IAAIH,EAAW,CAAC,EAGhB,GAFAA,EAASD,KAAOA,GACfC,EAASD,OAASC,EAASD,KAAO7jB,KAAKwiB,SAASsB,UAC5B,WAAjBA,EAASD,MAAqB7jB,KAAKkkB,oBAInC,OAHAJ,EAASD,KAAO7jB,KAAKwC,IAAI,oBACzBshB,EAASK,YAAenkB,KAAKkkB,yBAC7B7b,EAAQyb,GAGZ,QAAO,KAAkBA,EAASD,KAAKhiB,QAAQ,KAAM,YAAYwY,MAAK8J,IAClEL,EAASK,YAAeA,EACxB9b,EAAQyb,EAAQ,GAClB,GAEV,EAEAM,UAAW,SAAUP,EAAMQ,GACvB,IAAIC,EAAetkB,KAAKwC,IAAI,oBACxB+hB,EAAgB,CACZ,CAACD,GAAe,CACZH,YAAankB,KAAKkkB,sBAG9BL,IAASU,EAAcV,GAAQ,CAACM,YAAaE,IAC7ChmB,GAAemmB,IAAIlmB,IACnBD,GAAeomB,KAAK,CAChBC,IAAKJ,EACLK,OAAO,EACPC,gBAAiB,IACjBC,UAAWN,IAEXV,IACAxlB,GAAeymB,eAAejB,GAC9B,GAAOkB,OAAOlB,IAElBxlB,GAAeimB,aAAejmB,GAAe2mB,UAAUV,EAC3D,EACAW,aAAc,WACV,OAAI5mB,GAAe6mB,OAAO,uBACf7mB,GAAe8mB,EAAE,uBAAuBtjB,QAAQ,OAAQ,KAAK3C,MAAM,MACnEb,GAAeimB,aACfjmB,GAAeimB,aAAa,uBAAuBziB,QAAQ,OAAQ,KAAK3C,MAAM,MAE9E,EACf,EACAyK,UAAW,SAAUC,EAAIC,GACrB,OAAIxL,GAAe6mB,OAAOtb,GACfvL,GAAe8mB,EAAEvb,EAAI,CAAEE,YAAa,UAAWC,QAASF,IAAShI,QAAQ,OAAQ,KAAKA,QAAQ,YAAa,KAAKA,QAAQ,OAAQ,SAChIxD,GAAeimB,aACfjmB,GAAeimB,aAAa1a,EAAI,CAAEE,YAAa,UAAWC,QAASF,IAAShI,QAAQ,OAAQ,KAAKA,QAAQ,YAAa,KAAKA,QAAQ,OAAQ,SAE3I,EACf,EAEAujB,kBAAmB,SAAUxb,EAAI+Q,EAAO9Q,GACpC,IAAIga,EAAOxlB,GAAeylB,SAE1B,IADczlB,GAAegnB,SAASC,eAAeC,QAAQ1B,GAEzD,OAAO7jB,KAAK2J,UAAU,GAAGC,aAAgBC,GAAU,CAAC8Q,IACxD,IAAI6K,EAASrI,SAASxC,EAAO,IAC7Btc,GAAegnB,SAASC,eAAetmB,QAAQymB,kBAAoB,KACnE,IAAIC,EAASrnB,GAAegnB,SAASC,eAAeK,UAAU9B,EAAM2B,GASpE,OARAE,EAASA,EAAO7jB,QAAQ,KAAM,KACC,MAA3BxD,GAAeylB,UAAqBzlB,GAAe6mB,OAAO,GAAGtb,WAAY8b,OACzEA,EAASrnB,GAAegnB,SAASC,eAAeK,UAAU,KAAMH,GAE5DE,GADCA,GAAUA,IAAWA,EAAOzjB,OACpB,KAEA,MAEVjC,KAAK2J,UAAU,GAAGC,WAAY8b,IAAW7b,GAAU,CAAC8Q,GAC/D,EAEA5M,MAAO,SAAU6X,GACT,GAAUzzB,WAAa,GAAUJ,iBACjC8zB,GAAQ9X,MAAM6X,EAEtB,EAEAE,KAAM,SAAUF,GACR,GAAUzzB,WAAa,GAAUH,gBACjC6zB,GAAQC,KAAKF,EAErB,EAEAjH,KAAM,SAAUiH,GACR,GAAUzzB,WAAa,GAAUF,gBACjC4zB,GAAQE,IAAIH,EAEpB,EAEAjB,MAAO,SAAUiB,GACT,GAAUzzB,WAAa,GAAUD,iBACjC2zB,GAAQE,IAAIH,EAEpB,EAEAI,iBAAkB,SAAUC,GACxB,OAAIA,GAAW,GAAKA,GAAW,IACpBjmB,KAAK2J,UAAU,iBACtBsc,EAAU,KAAOA,EAAU,KACpBjmB,KAAK2J,UAAU,oBAAqB,CAACrN,KAAKuZ,MAAMoQ,EAAQ,MAC/DA,GAAW,MAAQA,EAAU,KACtBjmB,KAAK2J,UAAU,mBACtBsc,GAAW,OACJjmB,KAAK2J,UAAU,iBAAkB,CAAC,YAAa0K,SAAS4R,EAAS,WAAWlS,OAAO,QAEnF/T,KAAK2J,UAAU,iBAAkB,CAAC,YAAa0K,SAAS4R,EAAS,WAAWC,WAAWlQ,eACtG,EAEA0N,kBAAmB,WACf,IAAK,GAAU1nB,cACX,OAEJ,IAAImqB,EAAU,IAAIC,eAClBD,EAAQlc,KAAK,MAAO,cAAciJ,MAAQ,GAC1CiT,EAAQE,mBAAqB,KACzB,GAA2B,IAAvBF,EAAQG,YAAuC,MAAnBH,EAAQI,OAAgB,CACpD,IAAIjkB,EAAMkkB,EACVL,EAAQE,mBAAqB,KAC7B,IACI/jB,EAAO6jB,EAAQM,aACfD,EAAOE,KAAKC,MAAMrkB,EAAKpD,MAAM,MAAM,GAAGmE,MAAM,GAAI,GAGpD,CAFE,MAAOyO,GACL,MACJ,CACA9R,KAAK+f,IAAI,CACLwB,sBAAuBiF,EAAKlF,eAC5BsF,oBAAqBJ,EAAKI,qBAElC,GAEJT,EAAQU,MACZ,EAEA5D,eAAgB,WACP7vB,OAAOkO,UAAUwlB,YAClB1zB,OAAOkO,UAAUwlB,UAAY,WACzB,OAAO9mB,KAAK6B,QAAQ,OAAQ,GAChC,GAECzO,OAAOkO,UAAUylB,UAClB3zB,OAAOkO,UAAUylB,QAAU,WACvB,OAAOxjB,MAAMqP,KAAKrP,MAAMqP,KAAK5S,MAAM0M,UAAUtN,KAAK,IAAI0nB,UAAU,MAAO,KAAKpa,UAAUtN,KAAK,GAC/F,EAER,EAEAmkB,OAAQ,WACAxf,OAAOijB,UAAUC,UACjBljB,OAAOijB,UAAUC,YAAY5M,MAAMxF,IAC/BA,EAAExC,SAAS6U,IACPnjB,OAAOijB,UAAUG,eAAeD,EAAGnoB,KAAI,GACzC,IAGNiB,KAAKonB,SAAS/U,SAASgV,IACnBL,UAAUG,eAAeE,EAAIC,cAAcC,SAASxoB,MACpDioB,UAAUG,eAAeE,EAAIG,0BAA0BD,SAASxoB,MAChEioB,UAAUG,eAAeE,EAAII,uBAAuBF,SAASxoB,KAAK,IAG1E,IAAI2oB,EAAoB1nB,KAAKsiB,iBAC7B,IAAK,IAAIjM,KAAOtS,OAAO4jB,cACftR,EAAIuR,WAAWF,IAAsBrR,EAAIuR,WAAW,GAAUx2B,aAAe,IAAM,GAAUC,gBAAkB,IAAM2O,KAAK8iB,MAAMlZ,MAChI7F,OAAO4jB,aAAaE,WAAWxR,EAG3C,EAEA2M,cAAe7G,iBACXnc,KAAK4iB,OAAOG,KAAK,UAAW/e,IAAIC,sBAAsBse,MAAM,GAAUhxB,iBAAiB8oB,MAAKjH,GAAKA,EAAErL,WACnG/H,KAAK4iB,OAAOG,KAAK,eAAgB/e,IAAIC,sBAAsBse,MAAM,GAAU/wB,sBAAsB6oB,MAAKjH,GAAKA,EAAErL,WAC7G/H,KAAK4iB,OAAOG,KAAK,kBAAmB/e,IAAIC,sBAAsBse,MAAM,GAAU9wB,iBAAiB4oB,MAAKjH,GAAKA,EAAErL,UAC/G,EAEAia,mBAAoB,WAChBhiB,KAAK8nB,iBAAiBC,IAClB/nB,KAAK+f,IAAIgI,EAAc,GAE/B,EAEAD,gBAAiB,SAAUE,EAAUnN,GAC7B9W,OAAO8U,WAAa9U,OAAO8U,UAAUoJ,cACrCle,OAAO8U,UAAUoJ,aAAagG,mBACzB5N,MAAM6N,IACH,IAAIH,EAAgB,CAAC9sB,OAAO,EAAOC,OAAO,GACzCgtB,EAAQroB,MAAKsoB,GAA0B,eAAhBA,EAAOC,SAA4BL,EAAc9sB,OAAQ,GAChFitB,EAAQroB,MAAKsoB,GAA0B,eAAhBA,EAAOC,SAA4BL,EAAc7sB,OAAQ,GACjF8sB,GAAYA,EAASD,EAAc,IAEtCM,OAAOC,IACJzN,GAAWA,EAAQyN,EAAI,GAGvC,EAEAhF,gBAAiB,WACb,IAAK,GAAUtnB,cACX,OACJ,IAAIslB,EAAiBthB,KAAKwC,IAAI,yBAC1BokB,EAAsB5mB,KAAKwC,IAAI,uBACnC,GAAMuJ,QAAQC,OAAOhM,KAAK2J,UAAU,gCAAiC,CAAC,GAAU/M,cAAe,GAAGoD,KAAK2J,UAAU,mDAAoD,CAAC2X,2CAAwDsF,UAA4B5mB,KAAK2J,UAAU,+DACrQ,CAAC4C,UAAW,CAACjK,KAAMtC,KAAK2J,UAAU,yCAA0C6C,cAAe,CAAClK,KAAMtC,KAAK2J,UAAU,4CACnH4e,MAAMrgB,IACAA,GACAnE,OAAO0e,SAAS+F,QAAO,EAC3B,GAER,EAEApG,SAAUjB,SAAS0B,iBAAiB7Y,OAAO,CACvCqX,SAAU,CACNoH,wBAAyB,EACzBC,eAAe,EACfC,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAsB,GACtBC,yBAAyB,EACzBC,uBAAuB,EACvBC,eAAe,EACfC,aAAa,EACbC,WAAY,CAACrlB,KAAM,WACnBslB,WAAY,CAACC,MAAO,OAAQC,MAAM,EAAOC,aAAc,IACvDC,WAAY,CAACF,KAAM,EAAGG,WAAY,EAAG3jB,MAAO,WAC5C4jB,WAAY,UACZC,yBAA0B,UAC1BC,uBAAwB,UACxBC,gBAAgB,EAChBC,WAAY,UACZC,qBAAsB,UACtBC,gBAAiB,UACjBC,cAAe,OACfC,kBAAmB,OACnBC,oBAAqB,aACrBC,mBAAoB,YACpBC,sBAAuB,SACvBC,QAAS,QACTC,aAAc,SACdxG,SAAU,UACVyG,cAAc,EACdC,mBAAoB,IACpBC,yBAA0B,EAC1BC,mBAAoB,MAI5B3T,MAAO,WACH/W,KAAKkjB,aAAaqF,MAAMrgB,IACpBlI,KAAKkjB,kBAAe9H,EACpBlT,GAAUlI,KAAKuL,QAAQ,QAAQ,GAEvC,EAEAof,UAAW,SAAUC,GACjB5qB,KAAK+jB,iBAAiB/jB,KAAKwC,IAAI,qBAAqB6X,MAAMyJ,IACtD9jB,KAAKkkB,oBAAsBJ,EAASK,YAC7BnkB,KAAK+jB,sBAAsB1J,MAAMyJ,IACpC9jB,KAAKokB,UAAUN,EAASD,KAAMC,EAASK,aAC3C,GAAEna,OAAO,GAAW,GAAE6gB,KAAKD,EAAQ,CAC/B,iBACA,oBACA,YACA,0BACA,oBACA,qBACA,wBACA,4BACA,6BACA,kBACA,kBACA,YACA,gBACA,uBACA,sBACA,cACA,oBACA,cACA,eACA,wBACA,eACA,oBACA,qBACA,+BACA,6BAGJ,IAAIE,EAAY,GAAU,aAAa,GAAU34B,WAyDjD,GAxDA,GAAUA,UAAY24B,GAAa,GAAU/4B,gBAC7C,GAAU4E,gBAAgB4e,SAASqV,EAAOjuB,cAAgB,GAAUA,WAAaiuB,EAAOjuB,YACnD,WAApCqD,KAAKmiB,UAAU3f,IAAI,eAA+BxC,KAAKmiB,UAAUpC,IAAI,aAAc,GAAUpjB,YAC9FqD,KAAKuL,QAAQ,qBAC4B,YAArCvL,KAAKmiB,UAAU3f,IAAI,eAA4D,MAA7BooB,EAAOG,mBACzD/qB,KAAKmiB,UAAUpC,IAAI,aAAc6K,EAAOG,oBACE,YAArC/qB,KAAKmiB,UAAU3f,IAAI,eACxBxC,KAAKmiB,UAAUpC,IAAI,cAAc,GACc,YAA/C/f,KAAKmiB,UAAU3f,IAAI,yBAAgF,MAAvCooB,EAAOI,6BACnEhrB,KAAKmiB,UAAUpC,IAAI,uBAAwB6K,EAAOI,8BACE,YAA/ChrB,KAAKmiB,UAAU3f,IAAI,yBACxBxC,KAAKmiB,UAAUpC,IAAI,wBAAwB,GACD,YAA1C/f,KAAKmiB,UAAU3f,IAAI,oBAAsE,MAAlCooB,EAAOK,wBAC9DjrB,KAAKmiB,UAAUpC,IAAI,kBAAmB6K,EAAOK,yBACE,YAA1CjrB,KAAKmiB,UAAU3f,IAAI,oBACxBxC,KAAKmiB,UAAUpC,IAAI,mBAAmB,GAE1Chc,OAAO+I,OAAS9M,KAChB,GAAEgK,OAAOjG,OAAQ,IACb6mB,EAAO71B,0BACP,GAAUA,wBAA0B61B,EAAO71B,yBAC3C61B,EAAOt5B,oBACP,GAAUA,kBAAoBs5B,EAAOt5B,mBACrCs5B,EAAO51B,uBACP,GAAUA,qBAAuB41B,EAAO51B,sBACxC41B,EAAO31B,gBACP,GAAUA,cAAgB21B,EAAO31B,eACjC21B,EAAO11B,kBACP,GAAUA,gBAAkB01B,EAAO11B,iBACnC01B,EAAOz1B,qBACP,GAAUA,mBAAqBy1B,EAAOz1B,oBACtCy1B,EAAO72B,gCACP,GAAUA,8BAAgC62B,EAAO72B,+BACjD62B,EAAO52B,wBACP,GAAUA,sBAAwB42B,EAAO52B,uBACX,MAA9B42B,EAAOx1B,sBACP,GAAUA,oBAAsBw1B,EAAOx1B,qBACF,MAArCw1B,EAAOv1B,6BACP,GAAUA,2BAA6Bu1B,EAAOv1B,4BAChB,MAA9Bu1B,EAAOt1B,sBACP,GAAUA,oBAAsBs1B,EAAOt1B,qBACvCs1B,EAAO9tB,2BACP,GAAUA,yBAA2B8tB,EAAO9tB,0BAE5C8tB,EAAOhuB,cAAgBguB,EAAO/tB,kBAC9B,GAAUA,kBAAoB+tB,EAAOhuB,aAC/BguB,EAAOhuB,aAAeguB,EAAO/tB,oBACnC,GAAUD,YAAcguB,EAAO/tB,mBAE/B+tB,EAAOr1B,oBACH,GAAE21B,QAAQN,EAAOr1B,mBACjB,GAAEyU,OAAO,GAAW,CAACzU,kBAAmBq1B,EAAOr1B,oBAC1C,GAAE8O,SAASumB,EAAOr1B,oBAAsB4gB,OAAOC,KAAKwU,EAAOr1B,mBAAmB0M,QACnF,GAAE+H,OAAO,GAAW,CAACzU,kBAAmB,CAACq1B,EAAOr1B,sBAGpD,GAAM8lB,SAASO,MAAO,CACtB,IAGIgK,EAHAuF,EAAUnrB,KAAK2J,UAAU,0CAA2C,CAAC,GAAU/M,cAC/EwuB,EAAcprB,KAAK2J,UAAU,+CAC7B0hB,EAAiBrrB,KAAK2J,UAAU,qCAAsC,CAAC,GAAU/M,cAWrF,OARIgpB,EADA,GAAMvK,SAASI,MACT0P,EACC,GAAM9P,SAASC,UAChB+P,EAAiBD,EAEjBC,EAEV,GAAMtf,QAAQgC,MAAM6X,QACpB5lB,KAAKkjB,aAAa7a,SAAQ,EAE9B,CACA,IAAK,GAAU/U,eAGX,OAFA,GAAMyY,QAAQgC,MAAM/N,KAAK2J,UAAU,8CACnC3J,KAAKkjB,aAAa7a,SAAQ,GAG9B,GAAIwY,GAAGI,gBAGH,OAFA,GAAMlV,QAAQgC,MAAM/N,KAAK2J,UAAU,0CACnC3J,KAAKkjB,aAAa7a,SAAQ,GAI9B,IAAIijB,EAAOtrB,KACNmhB,SAASoK,iBAAoBvrB,KAAK8iB,MAAM0I,6BACzC,GAAMzf,QAAQ+B,QAAQ9N,KAAK2J,UAAU,oCACjC,CAAC,CAAC5K,KAAMiB,KAAK2J,UAAU,UAAWrH,KAAMtC,KAAK2J,UAAU,0CACzD4e,MAAK,SAAUhpB,GACbA,GAAOA,EAAIksB,QAAUH,EAAK1I,OAAOG,KAAK,+BAA+B,EACzE,IAGJ/iB,KAAK0rB,uBAAuBnD,MAAK,SAAUoD,GACvCL,EAAK1I,OAAOG,KAAK,gBAAiB4I,GAClCL,EAAK1I,OAAOG,KAAK,oBAAgB3H,GACjCkQ,EAAKpI,aAAa7a,SAAQ,EAC9B,GAAE,GAEV,EAEAwZ,eAAgB,WACZ,IAAI+J,EAAe7nB,OAAO0e,SAAS9gB,KAAKzC,MAAM,QAC1C2sB,EAAsB9nB,OAAO0e,SAAS9gB,KAAKzC,MAAM,KAErD,GADAc,KAAK8rB,WAAa,CAAC,EACfF,EAAa3pB,OAAS,EAAG,CACzB,IAAIS,EAAKqpB,EAAOliB,EAAS+hB,EAAa,GAAG1sB,MAAM,KAC/C,IAAKwD,EAAM,EAAGA,EAAMmH,EAAO5H,OAAQS,IAC/BqpB,EAAQliB,EAAOnH,GAAKxD,MAAM,KACL,IAAjB6sB,EAAM9pB,OACNjC,KAAK8rB,WAAWC,EAAM,IAAM,KAE5B/rB,KAAK8rB,WAAWC,EAAM,IAAMA,EAAM,EAG9C,CACIF,EAAoB5pB,OAAS,IAC7BjC,KAAK8rB,WAAmB,OAAIF,EAAa,IAE7C7nB,OAAOioB,QAAQC,UAAU,KAAM,KAAMloB,OAAO0e,SAASE,SACzD,EAEAL,eAAgB,WACZ,IAAIvjB,EAAO,GAAU3N,aAAe,IAAM,GAAUC,gBAIpD,OAHI,GAAU66B,sBACVntB,EAAOA,EAAO,IAAM,GAAUmtB,qBAE3BntB,CACX,EAEA+iB,eAAgB,WACZ,IAAI4F,EAAoB,GAAUt2B,aAAe,IAAM,GAAUC,gBACjE,IAAK,IAAIglB,KAAOtS,OAAO4jB,aACftR,EAAIuR,WAAW,YACVvR,EAAIuR,WAAWF,IACpB3jB,OAAO4jB,aAAaE,WAAWxR,EAG3C,EAEAqV,qBAAsB,WAClB,IAAIxjB,EAAS,IAAI,GAAEb,SACfikB,EAAOtrB,KAUX,OATK+D,OAAOooB,aAEkC,YAAnCpoB,OAAOooB,aAAaC,WAC3BlkB,EAAOG,SAAQ,IAEVijB,EAAKxI,MAAMuJ,+BACZf,EAAKgB,0BAA4B,IAAIhB,EAAKiB,0BAC9CrkB,EAAOG,SAAQ,IANfH,EAAOG,QAAQ,MAQZH,EAAOO,SAClB,EAEA+jB,uBAAwB,WACpB,IAAIC,GAAkB,EACtBzsB,KAAKonB,SAAStnB,MAAM4sB,IACZA,EAAQlqB,IAAI,cAAgBkqB,EAAQC,eAAkBD,EAAQE,SAAWF,EAAQE,QAAQpqB,IAAI,kBAC7FiqB,GAAkB,EAEtB,IAEJzsB,KAAK6sB,oCAAoCJ,EAC7C,EAEA7I,yBAA0B,SAAUkJ,GAChC9sB,KAAKonB,SAAStnB,MAAM4sB,IACZA,EAAQE,SAAWF,EAAQK,YAAcL,EAAQlqB,IAAI,aAAekqB,EAAQE,QAAQpqB,IAAI,kBAAoBkqB,EAAQE,QAAQpqB,IAAI,cAChIkqB,EAAQM,UACZ,GAER,EAEAC,WAAY,WACR,OAAO,GAAEC,OAAO7b,WAAW,SAAU8b,EAAUC,GAC3C,OAAOD,CACX,GAAGntB,KACP,K,4BC7hBJ,IAAI4hB,GAAM,OACN,GAAYA,GAAIzwB,UAChB,GAAYywB,GAAI/iB,UAAUwuB,KAC1B,GAAQzL,GAAI3O,MACZ,GAAO2O,GAAI1O,KACX,GAAI0O,GAAIjkB,EACR,GAAIikB,GAAIhkB,EAEZ,YAAkB,SAAU2V,GACxBvT,KAAKf,KAAOsU,EAAIrU,MAAM,KACtBc,KAAKstB,QAAU,SAAUtb,GACrB,IAAI9J,EAAS8J,EACb,IAAK,IAAItP,EAAM,EAAGA,EAAM1C,KAAKf,KAAKgD,OAAQS,IACtC,KAAMwF,EAAS,GAAEA,OAAOA,EAAQlI,KAAKf,KAAKyD,KACtC,OAAO,KAGf,OAAOwF,CACX,CACJ,EAEA,aAAmBiZ,SAASoM,KAAKvjB,OAAO,CACpCwjB,SAAU,WACN,MAAO,EACX,EAEA7L,WAAY,SAAU3iB,GAClBA,IAAYA,EAAU,CAAC,GACvBgB,KAAKytB,OAASzuB,EAAQyuB,OACtBztB,KAAK0tB,MAAQ1uB,EAAQ0uB,MACrB1tB,KAAK2tB,SAAW,CAAC,EACjB3tB,KAAKD,IAAII,SAASnB,EAAQ4uB,WACrB5uB,EAAQ8P,IACT9O,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,GAAExjB,OAAO,CAAC6jB,KAAM7tB,MAAO,MAElD,GAAEoL,YAAYpL,KAAK8tB,eACpB9tB,KAAK+tB,aAAe/tB,KAAKrC,EAAEqC,KAAK8tB,aAC5B9tB,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,kBAI7CjuB,KAAKN,KAAO,IAAIyhB,SAASC,MAAM,CAAC8M,SAAS,IACzCluB,KAAKN,KAAK2jB,GAAG,iBAAkBrjB,KAAKmuB,oBAAqBnuB,MACzD,MAAU,cAAc,SAAUhB,GAC9BgB,KAAKouB,WAAapuB,KAAKouB,YACtBpvB,GAAWA,EAAQqvB,cAAgBruB,KAAKsuB,eAAkBtuB,KAAKsuB,eACpE,GAAGtuB,MACHA,KAAKuuB,aAAevuB,KAAKuuB,YAAYvvB,GACrCgB,KAAKwuB,cAAgBxuB,KAAKwuB,aAAaxvB,EAC3C,EAEAyvB,UAAW,WACP,OAAOzuB,KAAKN,KAAK8C,IAAI,UACzB,EAEA2rB,oBAAqB,WAAa,EAElCO,KAAM,WACF1uB,KAAK2uB,OAAOC,MAAM5uB,KAAMqR,WACxBrR,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAKuL,QAAQ,aAAcvL,MAC3BA,KAAK6uB,iBACT,EAEAC,KAAM,WACF9uB,KAAKuL,QAAQ,cAAevL,MAC5BA,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAK+uB,OAAOH,MAAM5uB,KAAMqR,UAC5B,EAEAsd,OAAQ,WACJ3uB,KAAKgvB,OAAOJ,MAAM5uB,KAAMqR,WACxB,GAAEvR,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5BA,EAAKmB,OAAOJ,MAAMf,EAAMxc,UAC5B,GACJ,EAEA0d,OAAQ,WACJ,GAAEjvB,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5BA,EAAKkB,OAAOH,MAAMf,EAAMxc,UAC5B,GACJ,EAEAvG,OAAQ,WACJ9K,KAAKD,IAAI+K,QACb,EAEAmkB,MAAO,SAAUlwB,GACb,OAAOiB,KAAK2tB,SAAS5uB,EACzB,EAEAmwB,SAAU,SAAUnwB,EAAMowB,EAAanwB,GACnC,IAAI6uB,EAWJ,OAVIsB,aAAuBhO,SAASoM,MAChCM,EAAOsB,EACPtB,EAAKJ,OAASztB,MAEd6tB,EAAO,IAAIsB,EAAY,GAAEnlB,OAAO,CAC5ByjB,OAAQztB,KACR0tB,MAAO3uB,GACRC,IAEPgB,KAAK2tB,SAAS5uB,GAAQ8uB,EACfA,CACX,EAEAuB,YAAa,SAAUrwB,EAAMC,GACzBA,IAAYA,EAAU,CAAC,GACvB,IAAI6uB,EAAO7tB,KAAK2tB,SAAS5uB,GACrB8uB,WACO7tB,KAAK2tB,SAAS5uB,GACrBC,EAAQqwB,KAAOxB,EAAK/iB,SAAY+iB,EAAKtiB,QAAQ,WAAasiB,EAAK3c,SAEvE,EAEAoe,eAAgB,WACZ,GAAExvB,KAAK,GAAEsW,KAAKpW,KAAK2tB,WAAY4B,IAC3BvvB,KAAKovB,YAAYG,EAAQ,GAEjC,EAEAC,aAAc,SAAUC,GACpBzvB,KAAKD,IAAIuF,IAAImqB,EACjB,EAEAC,gBAAiB,WACb1vB,KAAKD,IAAI4vB,WAAW,QACxB,EAEAC,oBAAqB,WACjB,GAAI5vB,KAAK+tB,cAAgB/tB,KAAKyuB,YAAa,MAEb,IADTzuB,KAAKN,KAAK8C,IAAI,eAE3BxC,KAAKN,KAAKqgB,IAAI,aAAc/f,KAAK6vB,eAEzC,CACJ,EAEAhB,gBAAiB,WAEb,GAAI7uB,KAAK+tB,cAAgB/tB,KAAKyuB,YAAa,CACvC,IAAIqB,EAAa9vB,KAAKN,KAAK8C,IAAI,mBACL,IAAfstB,EACP9vB,KAAK+tB,aAAaC,iBAAiB,WAEnChuB,KAAKN,KAAKqgB,IAAI,kBAAc3E,GAC5Bpb,KAAK+vB,SAASD,GAEtB,CAEA,OAAO9vB,IACX,EAEA+vB,SAAU,SAAUjvB,GAChBd,KAAK+tB,aAAa,GAAGiC,UAAYlvB,EACjCd,KAAK+tB,aAAaC,iBAAiB,SACvC,EAEAiC,YAAa,WACTjwB,KAAK+vB,SAAS,EAClB,EAEAG,eAAgB,WACZ,IAAI9W,EAAepZ,KAAK+tB,aAAa,GAAG3U,aACpC+W,EAAenwB,KAAK+tB,aAAa,GAAGoC,aACxCnwB,KAAK+vB,SAAS3W,EAAe+W,EACjC,EAEAC,cAAe,SAAUC,GACrB,IAAIL,EAAY,GAAE9C,OAAOmD,EAAOC,WAAW,SAAUC,EAAKzhB,GACtD,OAAOyhB,EAAMzhB,EAAGqhB,aAAe,CACnC,GAAG,GACHnwB,KAAK+vB,SAASC,EAClB,EAEAH,aAAc,WACV,OAAO7vB,KAAK+tB,aAAa,GAAGiC,SAChC,EAEAQ,gBAAiB,WACb,IAAIR,EAAYhwB,KAAK+tB,aAAa,GAAGiC,UAGrC,OAFmBhwB,KAAK+tB,aAAa,GAAG3U,cAEjB4W,EADJhwB,KAAK+tB,aAAa,GAAGoC,aAE5C,EAEAM,mBAAoB,WAChB,GAAIzwB,KAAK0wB,kBACL,OAAO,EAKX,OAHgB1wB,KAAK+tB,aAAa,GAAGiC,WAClBhwB,KAAK+tB,aAAa,GAAG3U,aACrBpZ,KAAK+tB,aAAa,GAAGoC,aAE5C,EAEAO,gBAAiB,WACb,OAA+B,IAAxB1wB,KAAK6vB,cAChB,EAEAc,mBAAoB,WAChB,IAAIX,EAAYhwB,KAAK+tB,aAAa,GAAGiC,UAGrC,OAFmBhwB,KAAK+tB,aAAa,GAAG3U,eAEhB4W,EADLhwB,KAAK+tB,aAAa,GAAGoC,YAE5C,IAGJ,YAAkB,oBAAwB,CACtCxB,OAAQ,SAAU3vB,EAAS4xB,GACvB,OAAK,iBAAqB,yBAA2C,kBAAf5wB,KAAK0tB,OACvD,iBAAqB,wBAAwBqC,SAAS,iBAAqB,wBAAwBrwB,KAAK8C,IAAI,oBAC5G,iBAAqB,uBAAwB,QAGjD,GAAE1C,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5BA,EAAKiB,MACT,IACA9uB,KAAKD,IAAI4tB,WAAW7iB,SACpB8lB,EAAO5wB,KAAK6wB,UAAUD,EAAM5xB,IAAY4xB,EACxC,GAAE9wB,KAAKE,KAAK2tB,UAAU,CAACE,EAAM9uB,KACrB,GAAE+xB,IAAIF,EAAM7xB,KACC,UAATA,GACAiB,KAAKD,IAAI8M,OAAOghB,EAAK9tB,KACzBC,KAAKD,IAAIgN,YAAY,SAAmB,UAAThO,GAC/B8uB,EAAKa,KAAK1vB,EAAS4xB,EAAK7xB,IAC5B,IAEGiB,KAAKgvB,OAAOhwB,GACvB,EAEA+vB,OAAQ,SAAU/vB,GACd,GAAEc,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5BA,EAAKiB,KAAK9vB,EACd,GACJ,EAEA6xB,UAAW,WAAa,IAG5B,aAAmB,oBAAwB,CACvCE,UAAW,YAEX/B,OAAQ,SAAUhwB,EAASC,GACvB,IAAI+xB,EAAW/xB,EAAKquB,QAAQtuB,GAU5B,OATAgB,KAAKD,IAAI4tB,WAAW7iB,SAChB9K,KAAK6tB,OAASmD,GACdhxB,KAAK+uB,OAAO/vB,GAEhBgB,KAAK6tB,KAAOmD,EACRhxB,KAAK6tB,OACL7tB,KAAKD,IAAI8M,OAAO7M,KAAK6tB,KAAK9tB,KAC1BC,KAAK6tB,KAAKa,KAAK1vB,IAEZgB,IACX,EAEA+uB,OAAQ,SAAU/vB,GACVgB,KAAK6tB,MACL7tB,KAAK6tB,KAAKiB,KAAK9vB,GAEnBgB,KAAK6tB,KAAO,IAChB,IAGJ,cAAoB,oBAAwB,CACxCoD,OAAQ,CACJ,wBAAyB,gBACzB,yBAA0B,uBAC1B,2BAA4B,cAC5B,mBAAoB,eAGxBC,cAAe,SAAUrmB,GACrBA,EAAGsmB,kBACHnxB,KAAKoxB,IAAMpxB,KAAKrC,EAAE,2BAA2B0zB,KAAI,WAC7C,OAAO,GAAErxB,MAAMN,KAAK,KACxB,IAAG4xB,UACH,IAAIC,EAAavxB,KAAKwxB,kBACtB,GAAI3mB,EAAGW,UAAY,GAAU1Y,eACzB,OAAOkN,KAAKyxB,iBAEhB,GAAI5mB,EAAGW,UAAY,GAAU5Y,aACzB,OAAOoN,KAAK0xB,qBAEhB,GAAI7mB,EAAGW,UAAY,GAAUlZ,WAAai/B,EAAWtvB,OAEjD,OADA4I,EAAGa,iBACI1L,KAAK2xB,eAAeJ,GAE/B,GAAI1mB,EAAGW,UAAY,GAAU/Y,aAAe,mBAAuB,iBAAkB,CAEjF,GADAoY,EAAGa,iBACC,GAAEb,EAAG4C,QAAQF,MACb,OAAOvN,KAAK4xB,cAEZ5xB,KAAKkL,OACb,CACAlL,KAAK6xB,cACT,EAEAL,gBAAiB,WACb,OAAOxxB,KAAKrC,EAAE,uBAAuBqC,KAAK8xB,aAAa,KAC3D,EAEAC,WAAY,SAAUnoB,EAAIooB,GACtB,IAAKpoB,EACD,OACJ5J,KAAKiyB,uBACL,IAAIV,EAAavxB,KAAKrC,EAAE,uBAAuBiM,EAAG,MAC9C2nB,EAAWtvB,OACXjC,KAAK8xB,aAAeloB,GAEpB5J,KAAK+tB,aAAa,GAAGiC,UAAY,EACjCuB,EAAavxB,KAAKrC,EAAE,sBAAsBu0B,QAC1ClyB,KAAK8xB,aAAeP,EAAW7xB,KAAK,OAE1B,SAAVsyB,IAAqBT,EAAW,GAAGlY,aAAekY,EAAW,GAAGY,WAAanyB,KAAK+tB,aAAa,GAAG1U,aAAerZ,KAAK+tB,aAAa,GAAGiC,WAAauB,EAAW,GAAGlY,aAAekY,EAAW,GAAGY,UAAYnyB,KAAK+tB,aAAa,GAAGiC,aAC/NhwB,KAAK+tB,aAAa,GAAGiC,UAAYuB,EAAW,GAAGY,WACrC,OAAVH,IAAmBT,EAAW,GAAGY,WAAanyB,KAAK+tB,aAAa,GAAGiC,WAAauB,EAAW,GAAGY,UAAYnyB,KAAK+tB,aAAa,GAAGiC,UAAYhwB,KAAK+tB,aAAa,GAAG1U,gBAChKrZ,KAAK+tB,aAAa,GAAGiC,UAAYuB,EAAW,GAAGY,WACnDZ,EAAWpxB,SAAS,WACxB,EAEAsxB,eAAgB,WACZzxB,KAAK+xB,WAAW/xB,KAAKoxB,IAAIpxB,KAAKoxB,IAAIhtB,QAAQpE,KAAK8xB,cAAc,GAAI,OACrE,EAEAJ,mBAAoB,WAChB1xB,KAAK+xB,WAAW/xB,KAAKoxB,IAAIpxB,KAAKoxB,IAAIhtB,QAAQpE,KAAK8xB,cAAc,GAAI,KACrE,EAEAD,aAAc,WACV,GAAK7xB,KAAKoyB,uBAiBNpyB,KAAKqyB,OAAQ,MAjBiB,CAC9B,IAAIA,EAAQryB,KAAKrC,EAAE,iBAAiB4P,MACpCvN,KAAKrC,EAAE,gBAAgBoP,YAAY,SAAUslB,GAC7CryB,KAAKiyB,uBACDI,EACAryB,KAAKsyB,OAAOD,EAAMrc,gBAElBhW,KAAKrC,EAAE,cAAcuC,YAAY,UACjCF,KAAKuyB,gBAETvyB,KAAK6uB,kBACL7uB,KAAKqyB,OAAQ,EACbryB,KAAKoyB,uBAAyBhoB,YAAW,KACrCpK,KAAKoyB,uBAAyB,KAC9BpyB,KAAKqyB,OAASryB,KAAK6xB,cAAc,GAClC,IACP,CAGJ,EAEAD,YAAa,SAAU/mB,GACnBA,GAAMA,EAAGa,iBACT1L,KAAKrC,EAAE,iBAAiB4P,IAAI,IAC5BvN,KAAK6xB,cACT,EAEAI,qBAAsB,SAAUpnB,GAC5B7K,KAAK8xB,aAAe,KACpB9xB,KAAKrC,EAAE,uBAAuBuC,YAAY,WAC9C,EAEAsyB,UAAW,WACPxyB,KAAKrC,EAAE,cAAcuC,YAAY,SACrC,EAEAuyB,uBAAwB,WAAa,EAErCvnB,MAAO,WAAa,EAEpBonB,OAAQ,WAAa,EAErBX,eAAgB,WAAa,EAE7BY,aAAc,WAAa,EAE3BG,YAAa,WAAa,IAG5B,mBAAyB,qBAAyB,CAC9CzB,OAAQ,CACJ,wBAAyB,gBACzB,yBAA0B,uBAC1B,2BAA4B,cAC5B,mBAAoB,cACpB,6BAA8B,4BAGlC0B,yBAA0B,SAAU9nB,GAChC7K,KAAK4yB,iBAAkB,EACvB5yB,KAAK6xB,cACT,EAEAX,cAAe,SAAUrmB,GAErB,GADAA,EAAGsmB,kBACC,GAAEtmB,EAAG4C,QAAQF,MAEb,YADAvN,KAAKyyB,uBAAuB5nB,GAGhC7K,KAAKoxB,IAAMpxB,KAAKrC,EAAE,2BAA2B0zB,KAAI,WAC7C,OAAO,GAAErxB,MAAMN,KAAK,KACxB,IAAG4xB,UACH,IAAIC,EAAavxB,KAAKwxB,kBACtB,GAAI3mB,EAAGW,UAAY,GAAU1Y,eACzB,OAAOkN,KAAKyxB,iBAEhB,GAAI5mB,EAAGW,UAAY,GAAU5Y,aACzB,OAAOoN,KAAK0xB,qBAEhB,GAAI7mB,EAAGW,UAAY,GAAUlZ,WAAai/B,EAAWtvB,OAEjD,OADA4I,EAAGa,iBACI1L,KAAK2xB,eAAeJ,GAE/B,GAAI1mB,EAAGW,UAAY,GAAU/Y,aAAe,mBAAuB,iBAAkB,CAEjF,GADAoY,EAAGa,iBACC,GAAEb,EAAG4C,QAAQF,MACb,OAAOvN,KAAK4xB,cAEZ5xB,KAAKkL,OACb,CACAlL,KAAK6xB,cACT,EAEAgB,UAAW,SAAU7zB,GACjB,GAAI,0BAAgC,iCAAuCgB,KAAK8yB,UAAY9yB,KAAK+yB,oBAAsB/yB,KAAKgzB,kBAAoBhzB,KAAK2wB,qBAAsB,CACvK3wB,KAAK+yB,mBAAoB,EACzB/zB,EAAUA,GAAW,CAAC,EACtBgB,KAAK8yB,QAAU,KACf9zB,EAAQi0B,SAAWjzB,KAAK8yB,QACxB,IAAI1L,EAAW,sBACfA,EAAS/U,SAASqa,IACd,IAAIwG,EAAgB,+BAAkChc,GAAYA,EAAQwV,QAAQlqB,IAAI,SAAWkqB,EAAQlqB,IAAI,SACxG0wB,IAAiBxG,EAAQyG,uBAI9Bn0B,EAAQ0tB,QAAUA,EAClB1tB,EAAQo0B,OAASF,EAAc1wB,IAAI,cACnCxC,KAAKqzB,WAAWrzB,KAAKszB,WAAYt0B,GAAUu0B,IACvC,GAAEzzB,KAAKyzB,GAAWrc,IACd,IAIIsc,EAJAC,EAAsB/G,EAAQgH,MAAMC,mBAAmBzc,EACvD,GAAElN,OAAO,CAAC4pB,aAAa,GAAO50B,IAE9B60B,EAAU,iCAAqCJ,GAE9CA,IAGDD,EAAqB,IAAI,mBAAuB,CAACM,MAAOL,IAC5C,IAAZI,EACAL,EAAmBzzB,IAAIsJ,SAASrJ,KAAKrC,EAAE,uCAEvC61B,EAAmBzzB,IAAIg0B,aAAa/zB,KAAKrC,EAAE,qCAAqCq2B,IAAIH,IACxF,IAEJ7zB,KAAKrC,EAAE,uBAAuBoP,YAAY,UAAW/M,KAAKrC,EAAE,kBAAkBgwB,WAAW1rB,QACzFjC,KAAK6uB,kBACL7uB,KAAK+yB,mBAAoB,CAAK,IAChC,IAEL3L,EAASzQ,QAAO+V,GAAWA,EAAQyG,uBAAsBlxB,SAAWmlB,EAASnlB,SAAYjC,KAAKgzB,kBAAmB,EACtH,CACJ,EAEAiB,SAAU,WAAa,EAEvBxB,uBAAwB,SAAU5nB,GAC9BA,EAAGsmB,kBACHnxB,KAAKoxB,IAAMpxB,KAAKrC,EAAE,gDAAgD0zB,KAAI,WAClE,OAAO,GAAErxB,MAAMN,KAAK,KACxB,IAAG4xB,UACH,IAAIC,EAAavxB,KAAKk0B,2BACtB,GAAIrpB,EAAGW,UAAY,GAAU1Y,eACzB,OAAOkN,KAAKm0B,0BAEhB,GAAItpB,EAAGW,UAAY,GAAU5Y,aACzB,OAAOoN,KAAKo0B,8BAEhB,GAAIvpB,EAAGW,UAAY,GAAUlZ,WAAai/B,EAAWtvB,OAEjD,OADA4I,EAAGa,iBACI1L,KAAK2xB,eAAeJ,GAK/B,GAHS1mB,EAAGW,UAAY,GAAUlZ,YAC9B0N,KAAK4yB,iBAAkB,GAEvB/nB,EAAGW,UAAY,GAAU/Y,aAAe,mBAAuB,iBAAkB,CAEjF,GADAoY,EAAGa,iBACC,GAAEb,EAAG4C,QAAQF,MACb,OAAOvN,KAAK4xB,cAEZ5xB,KAAKkL,OACb,CACAlL,KAAK6xB,cACT,EAEAqC,yBAA0B,WACtB,OAAOl0B,KAAKrC,EAAE,4CAA4CqC,KAAK8xB,aAAa,KAChF,EAEAuC,oBAAqB,SAAUzqB,EAAIooB,GAC/B,IAAKpoB,EAGD,YAFI5J,KAAK2wB,sBACL3wB,KAAK6yB,aAGb7yB,KAAKiyB,uBACL,IAAIV,EAAavxB,KAAKrC,EAAE,4CAA4CiM,EAAG,MACnE2nB,EAAWtvB,OACXjC,KAAK8xB,aAAeloB,GAEpB5J,KAAK+tB,aAAa,GAAGiC,UAAY,EACjCuB,EAAavxB,KAAKrC,EAAE,2CAA2Cu0B,QAC/DlyB,KAAK8xB,aAAeP,EAAW7xB,KAAK,OAE1B,SAAVsyB,IAAqBT,EAAW,GAAGlY,aAAekY,EAAW,GAAGY,UAAYZ,EAAW9D,SAASA,SAAS,GAAG0E,WAAanyB,KAAK+tB,aAAa,GAAG1U,aAAerZ,KAAK+tB,aAAa,GAAGiC,WACnLuB,EAAW,GAAGlY,aAAekY,EAAW,GAAGY,UAAYZ,EAAW9D,SAASA,SAAS,GAAG0E,UAAYnyB,KAAK+tB,aAAa,GAAGiC,aACvHhwB,KAAK+tB,aAAa,GAAGiC,UAAYuB,EAAW,GAAGY,UAAYZ,EAAW9D,SAASA,SAAS,GAAG0E,WACjF,OAAVH,IAAmBT,EAAW,GAAGY,UAAYZ,EAAW9D,SAASA,SAAS,GAAG0E,WAAanyB,KAAK+tB,aAAa,GAAGiC,WAChHuB,EAAW,GAAGY,UAAYZ,EAAW9D,SAASA,SAAS,GAAG0E,UAAYnyB,KAAK+tB,aAAa,GAAGiC,UAAYhwB,KAAK+tB,aAAa,GAAG1U,gBAC3HrZ,KAAK+tB,aAAa,GAAGiC,UAAYuB,EAAW,GAAGY,UAAYZ,EAAW9D,SAASA,SAAS,GAAG0E,WAC/FZ,EAAWpxB,SAAS,WACxB,EAEAg0B,wBAAyB,WACrBn0B,KAAKq0B,oBAAoBr0B,KAAKoxB,IAAIpxB,KAAKoxB,IAAIhtB,QAAQpE,KAAK8xB,cAAc,GAAI,OAC9E,EAEAsC,4BAA6B,WACzBp0B,KAAKq0B,oBAAoBr0B,KAAKoxB,IAAIpxB,KAAKoxB,IAAIhtB,QAAQpE,KAAK8xB,cAAc,GAAI,KAC9E,EAEAQ,OAAQ,SAAUD,GACdryB,KAAKrC,EAAEqC,KAAKs0B,gBAAgBn0B,SAAS,UACrCo0B,aAAav0B,KAAKw0B,eAClBx0B,KAAKw0B,cAAgB,KACrBx0B,KAAKszB,WAAajB,EAClB,IAAIoC,GAAuB,oBAAoBpC,GAC/C,GAAQtM,IAAI0O,GACZz0B,KAAKrC,EAAE,kBAAkBgC,KAAK,IAC9BK,KAAKrC,EAAE,eAAegC,KAAK,IAC3B,+BAAmC0nB,IAC/B,IAAIqN,EAAarN,EAAIqM,MAAMiB,eAC3BD,EAAW3U,IAAI,UAAU,GACzB2U,EAAWE,UAAUC,mBAAmB,IAE5C,IAAIC,EAAc,GAAEzd,MAAM,UAC1Byd,EAAYC,WAAa,YACzBD,EAAYE,KAAK,aAAa3iB,SAASne,IACnC,IAAIgkB,EAAMhkB,EAAKsO,IAAI,OAAOwT,cACtBjX,EAAO7K,EAAK+gC,QAAW/gC,EAAK+gC,QAAQzyB,IAAI,gBAAkBtO,EAAK+gC,QAAQzyB,IAAI,QAAWtO,EAAKsO,IAAI,QAEnG,GADAzD,IAASA,EAAOA,EAAKiX,gBACjB9hB,EAAKsO,IAAI,cAAgBtO,EAAKsO,IAAI,YAC9BzD,EAAKqF,QAAQiuB,IAAU,GAAKna,EAAI9T,QAAQiuB,IAAU,GAC/CtzB,EAAKqF,QAAQqwB,IAAyB,GAAKvc,EAAI9T,QAAQqwB,IAAyB,GAC/EvgC,EAAKsO,IAAI,UAAY6vB,EAAM9c,SAAS,UAAW,CACnD,IAAI2f,EAAcn2B,EAAKqF,QAAQiuB,IAAU,GAAKtzB,EAAKqF,QAAQqwB,IAAyB,EAAI,UAAY,SAChGU,EAAY,oBAAwBjhC,EAAKsO,IAAI,OACjD2yB,IAAcA,EAAYA,EAAUp1B,IAAIsX,QAAQlX,SAAS+0B,IACrDC,IACAn1B,KAAKrC,EAAE,oBAAoBuC,YAAY,UACnB,YAAhBg1B,EACAl1B,KAAKrC,EAAE,eAAey3B,QAAQD,GACzBn1B,KAAKrC,EAAE,uBAAuBsE,OACnCkzB,EAAUpB,aAAa/zB,KAAKrC,EAAE,uBAAuBu0B,SAErDlyB,KAAKrC,EAAE,eAAekP,OAAOsoB,GACjCA,EAAU1pB,OAAM,KACZzL,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxC,uBAA2BhM,EAAK0gC,UAAW,CAACS,OAAQ,mBAAuB,UAC3EF,EAAUh1B,SAAS,SAAS,IAGxC,CACJ,IAEJ,kBAAsBusB,IAClBA,EAAQ4I,SAASx1B,MAAMm1B,IACnB,IAAI/c,EAAM+c,EAAQzyB,IAAI,OAAOwT,cACzBjX,EAAOk2B,EAAQzyB,IAAI,gBAAkByyB,EAAQzyB,IAAI,QACjDtO,EAAOw4B,EAAQgH,MAAMlxB,IAAIyyB,EAAQM,SACjCC,EAAUthC,GAAQA,EAAK0V,GAE3B,GADA7K,IAASA,EAAOA,EAAKiX,iBAChBwf,GAAWA,IAAYx1B,KAAKrC,EAAE,uBAAyB63B,EAAU,MAAMvzB,UACpElD,EAAKqF,QAAQiuB,IAAU,GAAKna,EAAI9T,QAAQiuB,IAAU,GAC/CtzB,EAAKqF,QAAQqwB,IAAyB,GAAKvc,EAAI9T,QAAQqwB,IAAyB,GAAG,CACtF,IAAIS,EAAcn2B,EAAKqF,QAAQiuB,IAAU,GAAKtzB,EAAKqF,QAAQqwB,IAAyB,EAAI,UAAY,SAChGgB,EAAY,mBAAuB,kCAAkC/I,EAAQlqB,IAAI,iCAAiC0V,OAASga,QAAQ7a,QAAQ3X,KAAK,cAAegtB,EAAQlqB,IAAI,QAC/KizB,EAAUj2B,KAAK,CAAC,aAAcktB,EAAQlK,SAAShgB,IAAI,SAAU,eAAgBkqB,EAAQlqB,IAAI,SAASrC,SAAS+0B,GAAaE,QAAQ,GAAE,sDAC9G,YAAhBF,EACAl1B,KAAKrC,EAAE,kBAAkBy3B,QAAQK,GAC5Bz1B,KAAKrC,EAAE,0BAA0BsE,OACtCwzB,EAAU1B,aAAa/zB,KAAKrC,EAAE,0BAA0Bu0B,SAExDlyB,KAAKrC,EAAE,kBAAkBkP,OAAO4oB,GACpCA,EAAUhqB,OAAM,KACZzL,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxC,IAAIhM,EAAOw4B,EAAQgH,MAAMgC,QAAQT,GACjC/gC,GAAQ,uBAA2BA,EAAK0gC,UAAW,CAACe,cAAc,EAAON,OAAQ,mBAAuB,UACxGI,EAAUt1B,SAAS,SAAS,GAEpC,IACN,IAENH,KAAKrC,EAAE,oBAAoBoP,YAAY,UAAW/M,KAAKrC,EAAE,eAAegwB,WAAW1rB,QACnFjC,KAAKrC,EAAE,qBAAqBoP,YAAY,SAAUslB,GAClDryB,KAAKrC,EAAE,uBAAuBoP,YAAY,UAAW/M,KAAKrC,EAAE,kBAAkBgwB,WAAW1rB,QACzFjC,KAAKrC,EAAE,uBAAuBwC,SAAS,UAAUN,KAAK,kBAAkBF,KAAK,IACzE0yB,EAAMpwB,QAAU,GAAKjC,KAAK4yB,iBAC1B5yB,KAAK4yB,iBAAkB,EACvB5yB,KAAK8yB,QAAU,KACf9yB,KAAK41B,eAAevD,EAAO,CAACY,SAAUjzB,KAAK8yB,WAEtCT,EAAMpwB,QAAU,IAAMjC,KAAK4yB,iBAChC5yB,KAAKrC,EAAE,wBAAwB2T,OAAO+gB,EAE9C,EAEAuD,eAAgB,SAAUvD,EAAOrzB,GAC7BgB,KAAK+yB,mBAAoB,EACzB/yB,KAAKgzB,kBAAmB,EACxBhzB,KAAKrC,EAAE,uBAAuB2T,OAAO+gB,GACrCryB,KAAKrC,EAAE,wBAAwB4T,OAAO8gB,GACtCryB,KAAKrC,EAAE,sCAAsCgC,KAAKiiB,GAAI/iB,UAAUy2B,SAASO,eACzE72B,EAAUA,GAAW,CAAC,GACb82B,MAAQ92B,EAAQ82B,IAAM,iCAC9B92B,EAAQo0B,SAAWp0B,EAAQo0B,OAAS,IACrC,yBAA+B,IAAI,oBACnC,IAAIhM,EAAW,sBACfA,EAAS/U,SAASqa,IACdA,EAAQyG,sBAAuB,EAC/Bn0B,EAAQ0tB,QAAUA,EAClB1sB,KAAKqzB,WAAWhB,EAAOrzB,GAAUu0B,IAC7BvzB,KAAKrC,EAAE,sCAAsCgC,KAAK,IAC7CK,KAAKszB,aAEV,GAAExzB,KAAKyzB,GAAWrc,IACd,IAAKlX,KAAKszB,WACN,OACJ,IAGyEE,EAHrEC,EAAsB/G,EAAQgH,MAAMC,mBAAmBzc,EACvD,GAAElN,OAAO,CAAC4pB,aAAa,GAAO50B,IAE9B60B,EAAU,iCAAqCJ,GAC1CA,IAGDD,EAAqB,IAAI,mBAAuB,CAACM,MAAOL,IAChD,IAAZI,EACAL,EAAmBzzB,IAAIsJ,SAASrJ,KAAKrC,EAAE,uCAEvC61B,EAAmBzzB,IAAIg0B,aAAa/zB,KAAKrC,EAAE,qCAAqCq2B,IAAIH,IACxF,IAEJ7zB,KAAKrC,EAAE,uBAAuBoP,YAAY,UAAW/M,KAAKrC,EAAE,kBAAkBgwB,WAAW1rB,QACzFjC,KAAK6uB,kBACL7uB,KAAK+yB,mBAAoB,EAAK,GAChC,IAEL3L,EAASzQ,QAAO+V,GAAWA,EAAQyG,uBAAsBlxB,SAAWmlB,EAASnlB,SAAYjC,KAAKgzB,kBAAmB,EACtH,EAEAK,WAAY,SAAUhB,EAAOrzB,EAASgpB,EAAUnN,GAC5C,IAAI0Y,EAAW,GACX7G,EAAU1tB,EAAQ0tB,QAClBoG,EAAU,KACViD,EAAKC,IAAI,CAACnyB,KAAM,QACXsP,EAAE,QAAS,CAAC8iB,MAAOv3B,QAAQw3B,GAAGC,IAAKrD,QAASA,IAC5C3f,EAAE,IAAK,CAAC8iB,MAAOv3B,QAAQw3B,GAAGE,SAAUvyB,KAAM,WAC1CsP,EAAE,QAAS,CAAC,IAAO,YAAatP,KAAM,WACtCsP,EAAE,SAASgS,EAAEzmB,QAAQw3B,GAAGC,KAAKE,KAAKA,KAClCljB,EAAE,QAAS,CAAC,IAAO,aACnBA,EAAE,SAASgS,EAAEkN,GAAOgE,KAAKA,KAAKA,KAAKC,MAAM,IAAI53B,QAAQ63B,IAAIv3B,GAASw3B,SACvEC,EAAU/J,EAAQK,WAAW2J,YAAYxf,IAC1B,GAAEA,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GAAW9zB,EAAQi0B,WAAajzB,KAAK8yB,SAC7ES,EAASnyB,KAAK8V,IAEX,IACR0K,GAAIljB,QAAQw3B,GAAGC,KACtBzJ,EAAQiK,WAAWZ,GACf,SAAUx2B,GACNmtB,EAAQK,WAAW6J,cAAcH,GACjC,IAAII,EAAO,GAAEt3B,GAAKM,KAAK,cAAcnB,QAAQw3B,GAAGC,SAChD,GAAIU,EAAK50B,QAAU40B,EAAKr3B,KAAK,aAAeszB,EAAS,CACH,SAA1B+D,EAAKr3B,KAAK,cACbktB,EAAQyG,sBAAuB,EACpD,CACAnL,GAAYA,EAASuL,EACzB,IACA,WACI7G,EAAQK,WAAW6J,cAAcH,GACjC5b,GAAWA,GACf,GAER,EAEA+W,YAAa,SAAU/mB,GACnBA,GAAMA,EAAGa,iBACT1L,KAAKrC,EAAE,iBAAiB4P,IAAI,IAC5BvN,KAAK6xB,eACL7xB,KAAKuyB,cACT,EAEAA,aAAc,WACV,qBAAwB,SAAU7F,GAC9BA,EAAQyG,sBAAuB,CACnC,IACAnzB,KAAKszB,WAAa,KAClBtzB,KAAK8yB,QAAU,KACf9yB,KAAKgzB,kBAAmB,EACxBhzB,KAAK+yB,mBAAoB,EACzB/yB,KAAKrC,EAAEqC,KAAKs0B,gBAAgBp0B,YAAY,UACxCF,KAAKrC,EAAE,oBAAoBwC,SAAS,UACpCH,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxCF,KAAKrC,EAAE,uBAAuBwC,SAAS,UACvCH,KAAKrC,EAAE,uBAAuBwC,SAAS,SAC3C,IAGJ,eAAqBghB,SAASoM,KAAKvjB,OAAO,CACxC8sB,WAAY,OACZtJ,SAAU,GAAUuJ,aAEpB9F,OAAQ,CACJ,oBAAqB,YACrB,oBAAqB,YACrB,uBAAwB,UACxB,qBAAsB,QACtB,wBAAyB,eAG7BtP,WAAY,WACR3hB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,CACxBwJ,WAAYh3B,KAAKg3B,WACjBF,WAAY92B,KAAK82B,WACjBG,YAAaj3B,KAAKi3B,eAEtBj3B,KAAKk3B,OAASl3B,KAAKrC,EAAE,eACrBqC,KAAKm3B,KAAOn3B,KAAKrC,EAAE,eACnBqC,KAAK8Z,OAAS9Z,KAAKrC,EAAE,gBACrBqC,KAAKo3B,cACLp3B,KAAKN,KAAO,IAAIyhB,SAASC,MAAM,CAACiW,YAAY,IAC5Cr3B,KAAKN,KAAK2jB,GAAG,oBAAqBrjB,KAAKs3B,mBAAoBt3B,MAC3DA,KAAKu3B,iBACT,EAEAA,gBAAiB,WACbv3B,KAAK8zB,MAAMzQ,GAAG,UAAUrjB,KAAKw3B,YAAax3B,KAAKo3B,YAAap3B,KAChE,EAEAy3B,UAAW,WACPz3B,KAAKN,KAAKqgB,IAAI,cAAc,GAC5B/f,KAAKo3B,aACT,EAEAE,mBAAoB,WAChB,IAAID,EAAar3B,KAAKN,KAAK8C,IAAI,cAC/BxC,KAAKk3B,OAAO3lB,OAAO8lB,GACnBr3B,KAAKm3B,KAAK5lB,OAAO8lB,GACjBr3B,KAAK8Z,OAAOxI,OAAO+lB,GAAYtoB,OACnC,EAEA2oB,QAAS,SAAU7sB,GACfA,EAAGsmB,kBACH,IAAIpmB,EAAQ/K,KAAK23B,WACb9sB,EAAGW,UAAY,GAAUlZ,UACzB0N,KAAK43B,cACE/sB,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,mBACtEuN,KAAK8Z,OAAO5Z,YAAY,WAAWqN,IAAIxC,GACvC/K,KAAKN,KAAKqgB,IAAI,cAAc,GAEpC,EAEA8X,MAAO,SAAUhtB,GACb,IAAIE,EAAQ/K,KAAK23B,WACjB33B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,EAC7D,EAEA4sB,SAAU,WACN,OAAO33B,KAAK8zB,MAAMtxB,IAAIxC,KAAKw3B,YAC/B,EAEAM,SAAU,SAAU/sB,GAChB/K,KAAK8zB,MAAM/Q,KAAK/iB,KAAKw3B,YAAazsB,EACtC,EAEA6sB,YAAa,WACT,IAAI7sB,EAAQ/K,KAAK23B,WACbI,EAAY/3B,KAAK8Z,OAAO5Z,YAAY,WAAWqN,MACnDwqB,IAAchtB,GAAS/K,KAAK83B,SAASC,GACrC/3B,KAAKN,KAAKqgB,IAAI,cAAc,EAChC,EAEAqX,YAAa,WACT,IAAIrsB,EAAQ/K,KAAK23B,WACjB33B,KAAKk3B,OAAO50B,KAAKyI,GACjB/K,KAAK8Z,OAAOvM,IAAIxC,EACpB,IAGJ,QAAc,mBAAuB,CACjCgmB,UAAW,mBAEXxC,YAAa,WACTvuB,KAAK0tB,MAAQ,OACb1tB,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAKq1B,OAAS,IAAIlU,SAASC,MAC3BphB,KAAKg4B,WAAa,IAAI7W,SAASC,MAC/BphB,KAAKq1B,OAAOhS,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,MACtCA,KAAKg4B,WAAW3U,GAAG,SAAUrjB,KAAKk4B,mBAAoBl4B,MACtD,GAAE,GAAU1O,mBAAmBub,OAAO7M,KAAKD,KAC3CC,KAAKm4B,mBACLn4B,KAAKo4B,kBACLp4B,KAAKq4B,oBACL,GAAE,WAAWC,YAAYt4B,KAAKD,KAC9B,MAAU,oBAAqBC,KAAKo4B,gBAAiBp4B,MACrD,MAAU,sBAAuBA,KAAKq4B,kBAAmBr4B,KAC7D,EAEAu4B,UAAW,SAAUx5B,EAAMqY,GACvBpX,KAAKg4B,WAAWjY,IAAIhhB,EAAMqY,EAC9B,EAEAghB,gBAAiB,WACbp4B,KAAKD,IAAIP,KAAK,kBAAmB,wBACjCQ,KAAKD,IAAIy4B,SAAS,WAAWh5B,KAAK,kBAAmB,wBACrD,GAAEuE,OAAO5I,UAAU0E,KAAK,oBAAoBL,KAAK,kBAAmB,uBACxE,EAEA64B,kBAAmB,WACf,IAAII,EAAQ,yBACZ,GAAE,GAAUnnC,mBAAmByb,YAAY,qBAA+B,UAAT0rB,GACjE,GAAE,GAAUnnC,mBAAmByb,YAAY,kBAA6B,YAAV0rB,GAC9D,GAAE,GAAUnnC,mBAAmByb,YAAY,kBAA6B,YAAV0rB,GAC9D,GAAE,GAAUnnC,mBAAmByb,YAAY,mBAA8B,aAAV0rB,GAC/D,GAAE,GAAUnnC,mBAAmByb,YAAY,kBAA6B,YAAV0rB,GAC9D,GAAE,GAAUnnC,mBAAmByb,YAAY,eAA0B,SAAV0rB,GAC3D,GAAE,GAAUnnC,mBAAmByb,YAAY,mBAA8B,aAAV0rB,EACnE,EAEAN,iBAAkB,WACd,IAAIO,EAAsB,wBAA8B,CAAC,EACrDA,EAAoB19B,MACa,sBAA7B09B,EAAoB70B,KACpB7D,KAAKD,IAAIuF,IAAI,CACT,oBAAqB,SACrB,kBAAmB,QACnB,mBAAoB,QAAQ,GAAMob,OAAO/X,oBAAoB+vB,EAAoB19B,aAEjD,UAA7B09B,EAAoB70B,MAC3B7D,KAAKD,IAAIuF,IAAI,CACT,oBAAqB,YACrB,kBAAmB,QACnB,mBAAoB,QAAQ,GAAMob,OAAO/X,oBAAoB+vB,EAAoB19B,aAIzFgF,KAAKD,IAAIuF,IAAI,CACT,oBAAqB,SACrB,kBAAmB,QACnB,mBAAoB,QAAQ,GAAU5T,qBACtC,aAAc,SAGtBsO,KAAK24B,gBAAgB,kCACzB,EAEAA,gBAAiB,SAAU5tB,IACvBA,EAAQhJ,OAAOgJ,IAMX/K,KAAKD,IAAIuF,IAAI,CACb,aAAc,GAAGyF,8CAAkDA,8CALnE/K,KAAKD,IAAIuF,IAAI,CACT,aAAc,SAM1B,EAEAszB,WAAY,SAAU7tB,GAClBA,EAAQhJ,OAAOgJ,GACf,wBAA4B,CACxB,kBAAmB,QAAQA,OAC3B,0BAA2B,QAAQA,QAE3C,EAEA8tB,UAAW,SAAU95B,EAAMqY,EAAOpY,GAC9BA,EAAUA,GAAW,CAAC,EACtB,GAAE+E,QAAQ+0B,OAAO,yBACjB,8BAAoC,2BAA+B,yBACnE,GAAE,GAAUxnC,mBAAmByb,YAAY,eAAyB,UAAThO,GAC3D,GAAE,GAAUzN,mBAAmByb,YAAY,kBAA4B,UAAThO,GAC9D,IAAIg6B,EAAY,CAACC,MAAO,GAAEC,YACtBl6B,IAASiB,KAAKk5B,SAASn6B,KACvBg6B,EAAUh6B,KAAOA,GAEhBqY,GAASA,EAAM+hB,OAAyB,qBAAhB/hB,EAAM+hB,OAA2C,aAATp6B,GAA+B,qBAARA,GAA+BC,EAAQo6B,kBAC/HL,EAAUM,cAAgB,KAE1BN,EAAUM,cAAgB,mBAAuB,mBAE/CjiB,GAAS,mBAAuB,UAC9BA,IAAUA,EAAM+hB,OAAyB,OAAhB/hB,EAAM+hB,OAAkB,mBAAuB,YAC5EJ,EAAUI,MAAQ,mBAAuB,UAC7Cn5B,KAAKq1B,OAAOtV,IAAI,GAAE/V,OAAO+uB,EAAW3hB,GAAQpY,EAChD,EAEAk6B,SAAU,SAAUn6B,GAChB,OAAOiB,KAAKq1B,OAAO7yB,IAAI,UAAYzD,CACvC,EAEAm5B,mBAAoB,WAChB,IAAIn5B,EAAOiB,KAAKq1B,OAAO7yB,IAAI,QACvB,GAAEsuB,IAAI9wB,KAAKg4B,WAAWsB,QAASv6B,IAC/BiB,KAAKi4B,QAEb,EAEAA,OAAQ,WACJ,IAAIj5B,EAAUgB,KAAKq1B,OAAO/d,WACtBsZ,EAAO5wB,KAAKg4B,WAAWx1B,IAAIxD,EAAQD,WACnB,IAAT6xB,IACP5wB,KAAK2uB,OAAO3vB,EAAS4xB,GACrB5wB,KAAK8zB,MAAMvoB,QAAQ,gBAAiBvL,KAAKq1B,OAAO7yB,IAAI,SACpDxC,KAAK8zB,MAAMvoB,QAAQ,gBAAiB,CAACguB,eAAgBv6B,EAAQD,OAErE,IAGJ,eAAqB,oBAAwB,CACzCgyB,UAAW,mBACXjD,YAAa,YACbG,YAAa,CAAC7E,MAAO,aACrBoE,SAAU,GAAUgM,QAEpBvI,OAAQ,CACJ,mBAAgC,eAChC,eAAgC,YAChC,qBAAgC,iBAChC,kBAAgC,eAChC,gBAAgC,aAChC,uBAAgC,cAChC,kBAAgC,eAChC,kBAAgC,eAChC,6BAAgC,qBAChC,6BAAgC,qBAChC,sCAAuC,6BACvC,yCAA0C,gCAC1C,eAAgC,aAGpC1C,YAAa,WACTvuB,KAAKrC,EAAE,kBAAkB0lB,GAAG,gBAAgB,SAAUxY,EAAI4uB,GACtD,GAAEz5B,MAAM+M,YAAY,SAAU0sB,GAAO55B,KAAK,QACjCkN,YAAY,YAAa0sB,GACzB1sB,YAAY,YAAa0sB,GAC9BA,GACAz5B,KAAK05B,aAAa,aAAe15B,KAAK25B,aAAa,UACnD35B,KAAK05B,aAAa,QAAS,MAE3B15B,KAAK05B,aAAa,QAAS15B,KAAK25B,aAAa,eAC7C35B,KAAK45B,gBAAgB,cAE7B,IAEA,MAAU,gBAAiB55B,KAAK65B,gBAAiB75B,MACjDA,KAAKN,KAAK2jB,GAAG,yBAA0BrjB,KAAK85B,2BAA4B95B,MACxEA,KAAKN,KAAK2jB,GAAG,2BAA4BrjB,KAAK+5B,6BAA8B/5B,MAC5EA,KAAKN,KAAK2jB,GAAG,0BAA2BrjB,KAAKg6B,yBAA0Bh6B,MACvEA,KAAKN,KAAK2jB,GAAG,qBAAsBrjB,KAAKi6B,wBAAyBj6B,MACjEA,KAAKN,KAAKqgB,IAAI,CAACma,YAAa,IAC5Bl6B,KAAKN,KAAKqgB,IAAI,CAACoa,kBAAmB,IAClCn6B,KAAKN,KAAKqgB,IAAI,CAACqa,gBAAiB,IAChCp6B,KAAKN,KAAKqgB,IAAI,CAACsa,iBAAkB,GACrC,EAEArL,OAAQ,WACJhvB,KAAKrC,EAAE,kBAAkB28B,SAAS,CAC9BC,WAAY,GACZC,YAAa,GACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAEf36B,KAAKrC,EAAE,wBAAwB4T,QAAQ,GAAUjc,sBAAwB,GAAUL,cAAcgN,OACrG,EAEA24B,YAAa,SAAU/0B,GACnB7F,KAAKrC,EAAE,iBAAiB2H,IAAI,QAASO,GACrC7F,KAAKrC,EAAE,sBAAsB2H,IAAI,OAAQO,EAC7C,EAEAg0B,gBAAiB,SAAU96B,GACT,qBAATA,GAA2C,cAATA,IAClCiB,KAAKrC,EAAE,2BAA2BqP,SAAS,WACxChN,KAAKrC,EAAE,6BAA6BqP,SAAS,WAC7ChN,KAAKrC,EAAE,uBAAuBqP,SAAS,WACvChN,KAAKrC,EAAE,8BAA8BqP,SAAS,WAC9ChN,KAAKrC,EAAE,+BAA+BqP,SAAS,aAGvDhN,KAAKrC,EAAE,iBAAiBuC,YAAY,iBAChC,GAAE26B,SAAS,CAAC,YAAa,WAAY,WACzB,WAAY,SAAU,SAAU97B,IAC5CiB,KAAKrC,EAAE,iBAAiBoB,GAAMoB,SAAS,UAE/C,EAEA26B,aAAc,SAAUjwB,GACpB,IAAI9K,EAAM,GAAE8K,EAAG4C,QAAQstB,QAAQ,iBAAkBC,EAAYj7B,EAAIiN,SAAS,YAAcjN,EAAIiN,SAAS,UACrGhN,KAAKrC,EAAE,iBAAiBuC,YAAY,iBAC/ByW,OAAO,cAAcxW,SAAS,UAAU4M,YAAY,SAAUiuB,GACnE,kBAAsB,aACtB,WAAe,iBACnB,EAEAC,UAAW,SAAUpwB,GACjB,IAAI9K,EAAM,GAAE8K,EAAG4C,QAAQstB,QAAQ,iBAAkBC,EAAYj7B,EAAIiN,SAAS,YAAcjN,EAAIiN,SAAS,UACrGhN,KAAKrC,EAAE,iBAAiBuC,YAAY,iBAC/ByW,OAAO,UAAUxW,SAAS,UAAU4M,YAAY,SAAUiuB,GAC/D,kBAAsB,aACtB,WAAe,aACnB,EAEAE,eAAgB,SAAUrwB,GACtB,IAAI9K,EAAM,GAAE8K,EAAG4C,QAAQstB,QAAQ,iBAAkBC,EAAYj7B,EAAIiN,SAAS,YAAcjN,EAAIiN,SAAS,UACrGhN,KAAKrC,EAAE,iBAAiBuC,YAAY,iBAC/ByW,OAAO,gBAAgBxW,SAAS,UAAU4M,YAAY,SAAUiuB,GACrE,kBAAsB,aACtB,WAAe,mBACnB,EAEAG,YAAa,WACTn7B,KAAKrC,EAAE,iBAAiBuC,YAAY,iBAC/ByW,OAAO,kBAAkBxW,SAAS,UACvC,kBAAsB,aACtB,WAAe,qBACnB,EAEAi7B,mBAAoB,SAAU1O,GAC1B1sB,KAAKrC,EAAE,iBAAiBuC,YAAY,iBAC/ByW,OAAO,2BAA6B+V,EAAQlqB,IAAI,OAAS,MAAMrC,SAAS,UAC7E,kBAAsB,YAAa,CAC/Bk7B,oBAAoB,IAExB,WAAe,qBAAsB,CAAC3O,GAC1C,EAEA4O,WAAY,WACR,kBAAsB,SAC1B,EAEAC,aAAc,WACV,kBAAsB,WAAY,CAAClC,cAAe,MACtD,EAEAmC,aAAc,WACV,kBAAsB,WAC1B,EAEAC,aAAc,WACV,kBAAsB,WAC1B,EAEAC,mBAAoB,WAChB,WAAe,cAAe,CAACvC,MAAO,MAC1C,EAEAwC,mBAAoB,WAChB,WAAe,cAAe,CAACxC,MAAO,MAC1C,EAEAyC,8BAA+B,WAC3B,WAAe,iBAAkB,CAACC,WAAW,EAAM1C,MAAO,MAC9D,EAEA2C,2BAA4B,WACxB,WAAe,iBAAkB,CAACC,QAAQ,EAAM5C,MAAO,MAC3D,EAEA6C,UAAW,WACF,gBACD,cAAoB,uBAA2B,QAAS,aAAkB,CAAClI,MAAO,MACtF,kBAAsB,QAC1B,EAEAmI,qBAAsB,WAClB,IAAIC,EAAY,EAAGC,EAAgB,EAAGC,EAAkB,EAAG7kB,EAAW,EAetE,OAdA,kBAAsBmV,IAClBA,EAAQgH,MAAM5zB,MAAM5L,IACZA,EAAK+gC,UAAY/gC,EAAKmoC,YACtBF,GAAiBjoC,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,gBAC3CtO,EAAK+gC,QAAQzyB,IAAI,cACjB45B,GAAmBloC,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,gBAEjD05B,GAAahoC,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,gBACnD,IAEJ,IAAI85B,EAAyB5P,EAAQ4I,SAAS3e,QAAOzV,GAASA,EAAKsB,IAAI,gBAAkBtB,EAAKsB,IAAI,YAAgBtB,EAAKsB,IAAI,4BAA0D,QAA5BtB,EAAKsB,IAAI,kBAA4BP,OAC9Lk6B,GAAiBG,EACjB/kB,GAAYmV,EAAQ6P,gBAAgBt6B,MAAM,IAEvC,CAAEu6B,KAAMN,EAAWO,SAAUN,EAAeO,WAAYN,EAAiB7kB,SAAUA,EAC9F,EAEAolB,yBAA0B,WACtB,IAAIC,EAAkB58B,KAAKi8B,uBAC3Bj8B,KAAKN,KAAKqgB,IAAI,kBAAmB6c,EAAgBH,UACjDz8B,KAAKN,KAAKqgB,IAAI,cAAe6c,EAAgBJ,MAC7Cx8B,KAAKN,KAAKqgB,IAAI,oBAAqB6c,EAAgBF,YACnD18B,KAAKN,KAAKqgB,IAAI,mBAAoB6c,EAAgBrlB,SACtD,EAEA0iB,wBAAyB,WACrB,IAAI9mB,EAAInT,KAAKN,KAAK8C,IAAI,eACtBxC,KAAKrC,EAAE,kBAAkBoP,YAAY,SAAUoG,GAAG7Q,MACtD,EAEAy3B,6BAA8B,WAC1B,IAAI5mB,EAAInT,KAAKN,KAAK8C,IAAI,qBACtBxC,KAAKrC,EAAE,wBAAwBoP,YAAY,SAAUoG,GAAG7Q,MAC5D,EAEA03B,yBAA0B,WACtB,IAAI7mB,EAAInT,KAAKN,KAAK8C,IAAI,oBACtBxC,KAAKrC,EAAE,uBAAuBoP,YAAY,SAAUoG,GAAG7Q,MAC3D,EAEAw3B,2BAA4B,WACxB,IAAI3mB,EAAInT,KAAKN,KAAK8C,IAAI,mBACtBxC,KAAKrC,EAAE,sBAAsBoP,YAAY,SAAUoG,GAAG7Q,KAAK6Q,EAC/D,IAGJ,qBAA2B,oBAAwB,CAC/C4d,UAAW,uCACXvD,SAAU,GAAUqP,uBACpBC,YAAa,GAAU7lC,aAAaqB,uBAEpC24B,OAAQ,CACJ,MAAS,gBACT,oBAAqB,SACrB,0BAA2B,cAC3B,wBAAyB,mBACzB,mBAAoB,YACpB,oBAAqB,eACrB,sBAAuB,WACvB,oBAAqB,SACrB,yBAA0B,iBAG9B1C,YAAa,SAAUvvB,GACnBgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAK+8B,UAAW/8B,MACzCA,KAAKi1B,QAAUj1B,KAAK8zB,MAAMmB,QAC1Bj1B,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKg9B,oBAAqBh9B,MACxDA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKm4B,iBAAkBn4B,MACtDA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKi9B,cAAej9B,MACtDA,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKi9B,cAAej9B,MACvDA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKi9B,cAAej9B,MACzDA,KAAK8zB,MAAMzQ,GAAG,kBAAmBrjB,KAAKk9B,sBAAuBl9B,MAC7DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKk9B,sBAAuBl9B,MAC1DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKi9B,cAAej9B,KACtD,EAEAgvB,OAAQ,SAAUhwB,GACdA,EAAUA,GAAW,CAAC,EACtBgB,KAAKm9B,aACLn9B,KAAKg9B,oBAAoBh+B,EAAQunB,QACV,OAAnBvnB,EAAQunB,OACRvmB,KAAKo9B,iBAAiB,aAAiB,0CAGvCp9B,KAAK8zB,MAAM/T,IAAI,SAAU,WAE7B/f,KAAKq9B,mBACLr9B,KAAKi9B,gBACLj9B,KAAKD,IAAI4L,UAAU,CACf2xB,aAAa,EACbC,MAAO,KACHv9B,KAAKw9B,eACLx9B,KAAKy9B,KAAO,EACZz9B,KAAK09B,KAAO,EACZ19B,KAAK29B,KAAO,EACZ39B,KAAK49B,KAAO,EACZ59B,KAAKrC,EAAE,sBAAsBkgC,WAAW/rB,KACpCA,EAAIA,GAAK/N,OAAOid,OACdtV,iBAEF1L,KAAK29B,KAAO7rB,EAAEgsB,QACd99B,KAAK49B,KAAO9rB,EAAEisB,QACd,IAAIC,GAAU,EACd7iC,SAAS8iC,UAAansB,IAClB3W,SAAS8iC,UAAY,KACrB9iC,SAAS+iC,YAAc,KAClBF,GACDh+B,KAAKsP,UAAU,EAGvBnU,SAAS+iC,YAAepsB,KACpBA,EAAIA,GAAK/N,OAAOid,OACdtV,iBAEF1L,KAAKy9B,KAAOz9B,KAAK29B,KAAO7rB,EAAEgsB,QAC1B99B,KAAK09B,KAAO19B,KAAK49B,KAAO9rB,EAAEisB,QAC1B/9B,KAAK29B,KAAO7rB,EAAEgsB,QACd99B,KAAK49B,KAAO9rB,EAAEisB,QAEd/9B,KAAKD,IAAIuF,IAAI,MAAQtF,KAAKD,IAAIe,SAASq9B,IAAMn+B,KAAK09B,KAAQ,MAC1D19B,KAAKD,IAAIuF,IAAI,OAAStF,KAAKD,IAAIe,SAASs9B,KAAOp+B,KAAKy9B,KAAQ,MAC5Dz9B,KAAKD,IAAIuF,IAAI,YAAa,QAC1BtF,KAAKD,IAAIuF,IAAI,QAAS,SACtB04B,GAAU,CAAI,CACjB,GACH,EAEN7yB,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAI3C,EAEAse,cAAe,WACX,IAAInjC,EAAQ8E,KAAKD,IAAIF,KAAK,wBAAwB,GAC9Cy+B,EAAct+B,KAAKD,IAAIF,KAAK,uBAAuB,GACnDqM,EAAUlM,KAAKD,IAAIF,KAAK,kBAAkB,GACzC3E,IAEDA,EAAMqjC,mBACNrjC,EAAMqjC,oBACND,EAAYC,oBACZryB,EAAQqyB,qBAEHrjC,EAAMsjC,yBACXtjC,EAAMsjC,0BACNF,EAAYE,0BACZtyB,EAAQsyB,2BAEHtjC,EAAMujC,sBACXvjC,EAAMujC,uBACNH,EAAYG,uBACZvyB,EAAQuyB,wBAEHvjC,EAAMwjC,sBACXxjC,EAAMwjC,sBACNJ,EAAYI,sBACZxyB,EAAQwyB,uBAEhB,EAEAC,iBAAkB,WACd,GAAIxjC,SAASyjC,eAAgB,CACJzjC,SAAS0jC,mBACZ1jC,SAASyjC,iBAAiBvkB,MAAK,KAC7Clf,SAAS0jC,mBAAqB7+B,KAAK2+B,kBAAkB,GAE7D,MAAO,GAAIxjC,SAAS2jC,oBAAqB,CAChB3jC,SAAS4jC,sBACZ5jC,SAAS2jC,sBAC3B3jC,SAAS4jC,sBAAwB/+B,KAAK2+B,kBAC1C,MAAO,GAAIxjC,SAAS6jC,qBAAsB,CACjB7jC,SAAS8jC,gCACZ9jC,SAAS6jC,uBAC3B7jC,SAAS8jC,gCAAkCj/B,KAAK2+B,kBACpD,MAAO,GAAIxjC,SAAS+jC,iBAAkB,CACb/jC,SAASgkC,qBACZhkC,SAAS+jC,mBAC3B/jC,SAASgkC,qBAAuBn/B,KAAK2+B,kBACzC,CACJ,EAEArQ,cAAe,WACXtuB,KAAKD,IAAIiN,SAAS,cAAgBhN,KAAKD,IAAIuF,IAAI,QAAS6X,SAAS,sBAA0B,iBAAmB,EAAI,KACtH,EAEA8f,cAAe,WACXj9B,KAAKrC,EAAE,qBAAqBoP,YAAY,UAAW/M,KAAK8zB,MAAMtxB,IAAI,UAClExC,KAAKrC,EAAE,qBAAqBoP,YAAY,SAAU/M,KAAK8zB,MAAMtxB,IAAI,iBACjExC,KAAKrC,EAAE,oBAAoBoP,YAAY,UAAW/M,KAAK8zB,MAAMtxB,IAAI,aACjExC,KAAKrC,EAAE,cAAcoP,YAAY,mBAAoB/M,KAAK8zB,MAAMtxB,IAAI,eAC/DuK,YAAY,iBAAkB/M,KAAK8zB,MAAMtxB,IAAI,eAClDxC,KAAKrC,EAAE,eAAeoP,YAAY,yBAA0B/M,KAAK8zB,MAAMtxB,IAAI,cACtEuK,YAAY,kBAAmB/M,KAAK8zB,MAAMtxB,IAAI,cACnDxC,KAAKrC,EAAE,mBAAmBoP,YAAY,wBAAyB/M,KAAK8zB,MAAMtxB,IAAI,UACzEuK,YAAY,sBAAuB/M,KAAK8zB,MAAMtxB,IAAI,SAC3D,EAEAg7B,aAAc,WACV,IAAIxiC,EAAQgF,KAAKi1B,QAAQ9vB,aACzBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEA3E,iBAAkB,WACd,IAAI5R,EAASvmB,KAAK8zB,MAAMtxB,IAAI,UAC5BxC,KAAKD,IAAIP,KAAK,aAAc+mB,EAChC,EAEAyW,oBAAqB,SAAUzW,GAC3BvmB,KAAKrC,EAAE,iBAAiBoP,YAAY,WAAwB,OAAXwZ,EACrD,EAEA6W,iBAAkB,SAAU7W,GACxBvmB,KAAKrC,EAAE,mBAAmB2E,KAAKikB,GAAU,GAC7C,EAEA4W,WAAY,WACRn9B,KAAKrC,EAAE,SAAS2E,KAAKtC,KAAKi1B,QAAQzyB,IAAI,QAC1C,EAEA66B,iBAAkB,WACdr9B,KAAKrC,EAAE,oCAAoC2E,KAAKtC,KAAKi1B,QAAQzyB,IAAI,OACrE,EAEA0I,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEAo/B,YAAa,WACTp/B,KAAK8zB,MAAM/T,IAAI,gBAAiB/f,KAAK8zB,MAAMtxB,IAAI,gBACnD,EAEA68B,aAAc,WACV,QAAIlkC,SAAS0jC,sBAEJ1jC,SAASmkC,2BAETnkC,SAAS4jC,qBAGtB,EAEAQ,OAAQ,WACJv/B,KAAK8zB,MAAMyL,SACXv/B,KAAKg9B,oBAAoB,GAAUlnC,mBACnCkK,KAAK8zB,MAAM0L,aACf,EAEAC,cAAe,SAAU50B,GACjB,GAAEA,EAAG4C,QAAQstB,QAAQ,sBAAsB94B,QAE3C,GAAE4I,EAAG4C,QAAQstB,QAAQ,eAAe94B,QAAUjC,KAAKD,IAAIiN,SAAS,cAAgBhN,KAAKD,IAAIiN,SAAS,oBAClGhN,KAAKsP,UACb,EAEAA,SAAU,SAAUzE,GAEhB,GADAA,GAAMA,EAAGsmB,kBACLnxB,KAAKq/B,eAEL,YADAr/B,KAAK2+B,mBAGM3+B,KAAKD,IAAIg7B,QAAQ,WAAWvC,SAAS,IAAMx4B,KAAKD,IAAIL,KAAK,cAC/DggC,SACT1/B,KAAKD,IAAI4/B,YAAY,aACjB3/B,KAAKD,IAAIiN,SAAS,cAClBhN,KAAKD,IAAIgN,YAAY,kBAAoB/M,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK8zB,MAAMtxB,IAAI,aACnFxC,KAAKD,IAAIgN,YAAY,kBAAmB/M,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK8zB,MAAMtxB,IAAI,eAGlFxC,KAAKD,IAAIuF,IAAI,QAAS,IACtBtF,KAAKD,IAAIuF,IAAI,OAAQ,IACrBtF,KAAKD,IAAIuF,IAAI,QAAS,IACtBtF,KAAKD,IAAIuF,IAAI,SAAU,IACvBtF,KAAKD,IAAIG,YAAY,oBAEzBF,KAAKsuB,eACT,EAEA4O,sBAAuB,WACnBl9B,KAAKi9B,gBACDj9B,KAAKD,IAAIiN,SAAS,eAClBhN,KAAKD,IAAIgN,YAAY,kBAAoB/M,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK8zB,MAAMtxB,IAAI,aACnFxC,KAAKD,IAAIgN,YAAY,kBAAmB/M,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK8zB,MAAMtxB,IAAI,aAE1F,EAEAo9B,iBAAkB,WACd5/B,KAAK8zB,MAAM/T,IAAI,SAAU/f,KAAK8zB,MAAMtxB,IAAI,SAC5C,EAEAu6B,UAAW,WACP/8B,KAAKo9B,iBAAiB,aAA6C,eAA5Bp9B,KAAK8zB,MAAMtxB,IAAI,UAA6B,4CAA0E,QAA5BxC,KAAK8zB,MAAMtxB,IAAI,UAAsB,qCAAuC,+CAC7M4H,YAAW,KACPpK,KAAKkL,QACLlL,KAAKD,IAAI+K,QAAQ,GAClB,IACP,EAEA+0B,UAAW,WACP7/B,KAAK8zB,MAAM/T,IAAI,cAAe/f,KAAK8zB,MAAMtxB,IAAI,cACjD,EAEAs9B,aAAc,SAAUj1B,GACN,GAAEA,EAAG4C,QACXV,YAAY/M,KAAK8zB,MAAM/T,IAAI,aAAc/f,KAAK8zB,MAAMtxB,IAAI,cACpE,EAEAu9B,OAAQ,WACJ//B,KAAK8zB,MAAM7P,SACXjkB,KAAKkL,OACT,IAGJ,uBAA6B,oBAAwB,CACjD6lB,UAAW,yDACXvD,SAAU,GAAUwS,kBAEpB/O,OAAQ,CACJ,mBAAoB,aACpB,4BAA6B,aAC7B,2BAA4B,YAC5B,uBAAwB,YACxB,uBAAwB,WACxB,2BAA4B,eAC5B,0BAA2B,cAC3B,yBAA0B,aAC1B,yBAA0B,cAG9B1C,YAAa,SAAUvvB,GACnBgB,KAAKN,KAAKqgB,IAAI,mBAAoB,GAClC/f,KAAKN,KAAK2jB,GAAG,0BAA2BrjB,KAAKigC,mBAAoBjgC,MACjE,MAAU,sBAAuBA,KAAKkgC,mBAAoBlgC,KAC9D,EAEAgvB,OAAQ,SAAUhwB,GACdA,EAAUA,GAAW,CAAC,EACtBgB,KAAKD,IAAI4L,UAAU,CACf2xB,aAAa,EACbC,MAAO,KACEv9B,KAAKmgC,SACNngC,KAAKmgC,OAAS,IAAIpiC,KAAK,qBAAsB,CACzCqiC,SAAU,CACN,aAAc,OAAQ,WAAY,WAAY,OAAQ,SAAU,WAAY,WAAY,cAE5FC,QAAS,CAACD,SAAU,EAAGE,UAAW,EAAGC,eAAgB,EAAGC,eAAgB,EAAGC,IAAK,EAAGC,SAAU,KAEjG1gC,KAAKmgC,OAAO9c,GAAG,QAAQrC,IACC,wBAA2B2f,GAASA,GAAS3gC,KAAKmgC,SACxD9tB,SAAQ,SAASsuB,GACvBA,EAAMC,aACFD,EAAMC,YAAYC,eAClBF,EAAMC,YAAYC,cAAcC,UAE5C,IACA,WAAe,sBAAsB,IAEzC9gC,KAAKmgC,OAAO9c,GAAG,SAASrC,IACpB,WAAe,sBAAsB,IAEzChhB,KAAKmgC,OAAO9c,GAAG,cAAcrC,IACzB,WAAe,2BAA2B,IAE9ChhB,KAAKmgC,OAAO9c,GAAG,gBAAgBrC,IAC3B,WAAe,sBAAsB,IAEzChhB,KAAKmgC,OAAO9c,GAAG,eAAerC,IACA,IAAtBA,EAAM+f,OAAOrgC,OACbV,KAAKrC,EAAE,gCAAgCuC,YAAY,UACnDF,KAAKrC,EAAE,gCAAgC2H,IAAI,CACvCR,MAAO,GACPC,OAAQ,MAGhB,WAAe,sBAAsB,KAG7C/E,KAAKD,IAAIg7B,QAAQ,WAAWvC,SAAS,IAAMx4B,KAAKD,IAAIL,KAAK,cAAcm+B,WAAU,KAAO79B,KAAKghC,eAAc,IAC3GhhC,KAAKihC,aAAajiC,GAClBgB,KAAKigC,qBACLjgC,KAAKkgC,qBACLlgC,KAAKy9B,KAAO,EACZz9B,KAAK09B,KAAO,EACZ19B,KAAK29B,KAAO,EACZ39B,KAAK49B,KAAO,EACZ59B,KAAKrC,EAAE,iCAAiCkgC,WAAW/rB,IAE/C,GADAA,EAAIA,GAAK/N,OAAOid,MACZ,GAAElP,EAAErE,QAAQstB,QAAQ,4BAA4B94B,QAAU,GAAE6P,EAAErE,QAAQstB,QAAQ,mBAAmB94B,QAAU,GAAE6P,EAAErE,QAAQstB,QAAQ,cAAc94B,QAAU,GAAE6P,EAAErE,QAAQstB,QAAQ,qCAAqC94B,OAChN,OACJ6P,EAAEpG,iBAEF1L,KAAK29B,KAAO7rB,EAAEgsB,QACd99B,KAAK49B,KAAO9rB,EAAEisB,QACd,IAAIC,GAAU,EACd7iC,SAAS8iC,UAAansB,IAClB3W,SAAS8iC,UAAY,KACrB9iC,SAAS+iC,YAAc,KAClBF,GAAY,GAAElsB,EAAErE,QAAQstB,QAAQ,4BAA4B94B,QAC7DjC,KAAKrC,EAAE,wBAAwB8N,OAAO,EAG9CtQ,SAAS+iC,YAAepsB,IACpBA,EAAIA,GAAK/N,OAAOid,MAChBgd,GAAU,EACVlsB,EAAEpG,iBACE1L,KAAKD,IAAIiN,SAAS,oBAGtBhN,KAAKy9B,KAAOz9B,KAAK29B,KAAO7rB,EAAEgsB,QAC1B99B,KAAK09B,KAAO19B,KAAK49B,KAAO9rB,EAAEisB,QAC1B/9B,KAAK29B,KAAO7rB,EAAEgsB,QACd99B,KAAK49B,KAAO9rB,EAAEisB,QAEd/9B,KAAKD,IAAIuF,IAAI,MAAQtF,KAAKD,IAAIe,SAASq9B,IAAMn+B,KAAK09B,KAAQ,MAC1D19B,KAAKD,IAAIuF,IAAI,OAAStF,KAAKD,IAAIe,SAASs9B,KAAOp+B,KAAKy9B,KAAQ,MAC5Dz9B,KAAKD,IAAIuF,IAAI,YAAa,QAC1BtF,KAAKD,IAAIuF,IAAI,QAAS,SAAQ,CACjC,GACH,GAId,EAEA27B,aAAc,SAAUjiC,GACpBA,EAAUA,GAAW,CAAC,EACtB,IAAIkiC,EAAM,IAAI,GAAE75B,SAChB65B,EAAI3Y,MAAK,KAC2B,YAA5BvpB,EAAQmhC,OAAOgB,WACfnhC,KAAKrC,EAAE,gCAAgCwC,SAAS,UAChDH,KAAKrC,EAAE,gCAAgC2H,IAAI,CACvCR,MAAO,IACPC,OAAQ,OAGhB/E,KAAK0sB,QAAU1tB,EAAQmhC,OAAOhL,UAAUzI,QACxC1sB,KAAKohC,oBACLphC,KAAKmgC,OAAOhL,UAAYn2B,EAAQmhC,OAAOhL,UACvCn1B,KAAKmgC,OAAOkB,YAAcriC,EAAQmhC,OAClCngC,KAAKmgC,OAAOmB,kBAAoBtiC,EAAQmhC,OAAOmB,kBAC/C,IAAIC,EAAgB,CAChBn6B,IAAKpI,EAAQmhC,OAAOqB,UACpBL,SAAUniC,EAAQmhC,OAAOgB,UAE7BniC,EAAQmhC,OAAOt8B,OAAS09B,EAAc19B,KAAO7E,EAAQmhC,OAAOt8B,MAC5D7D,KAAKmgC,OAAOsB,OAAS,CACjB59B,KAAM,QACN69B,QAAS,CACLH,IAGR,uBAA6BvhC,KAAKmgC,OAClCngC,KAAKmgC,OAAOwB,KAAK,SAAS3gB,IACtB,IAAI4gB,EAA0B,GAAE,0IAChCA,EAAwB/0B,OAAO+U,GAAI/iB,UAAUuB,IAAI,mBACjDwhC,EAAwB7N,aAAa/zB,KAAKrC,EAAE,kDAC5C,IAAIkkC,EAAyB,GAAE,wIAC/BA,EAAuBh1B,OAAO+U,GAAI/iB,UAAUuB,IAAI,kBAChDyhC,EAAuB9N,aAAa/zB,KAAKrC,EAAE,kDAC3C,IAAImkC,EAA6B,GAAE,uIACnCA,EAA2Bj1B,OAAO+U,GAAI/iB,UAAUuB,IAAI,+BACpD0hC,EAA2BxJ,YAAYt4B,KAAKrC,EAAE,gDACtB,GAAE,uFACRo2B,aAAa/zB,KAAKrC,EAAE,4CAClB,GAAE,+EACR26B,YAAYt4B,KAAKrC,EAAE,4CACjCqC,KAAKmgC,OAAO4B,OACZ,WAAe,sBAAsB,GACvC,IAGF/iC,EAAQmhC,QAAUnhC,EAAQmhC,OAAO9pB,KAAOrX,EAAQmhC,OAAOhL,UAAUrB,OAAS90B,EAAQmhC,OAAOqB,UACzFxiC,EAAQmhC,OAAOhL,UAAUrB,MAAMP,SAASyO,YAAYhjC,EAAQmhC,OAAOqB,UAAWxiC,EAAQmhC,OAAO9pB,KAAKgE,MAAMnS,IACpGlJ,EAAQmhC,OAAOqB,UAAYt5B,EAC3Bg5B,EAAI74B,SAAS,IAGjB64B,EAAI74B,SACZ,EAEA45B,WAAY,WACRjiC,KAAKD,IAAIg7B,QAAQ,WAAWvC,SAAS,IAAMx4B,KAAKD,IAAIL,KAAK,cAAcoL,SACvE9K,KAAKD,IAAI+K,SACT,uBAA6B,KAC7B,qBAA2B,KAC3B,WAAe,sBACnB,EAEAk2B,cAAe,WACX,GAAI,wBAA8B,mCAC9B,OACJ,IAAIkB,EAAmBliC,KAAKN,KAAK8C,IAAI,oBACrC0/B,GAAsC,EACrCA,EAAmB,IAAOA,EAAmB,GAC9CliC,KAAKN,KAAKqgB,IAAI,mBAAoBmiB,EACtC,EAEAC,UAAW,WACH,wBAA8B,oCAElCniC,KAAKN,KAAKqgB,IAAI,mBAAoB,EACtC,EAEAqiB,WAAY,WACJ,wBAA8B,oCAElCpiC,KAAKN,KAAKqgB,IAAI,mBAAoB,EACtC,EAEAsiB,UAAW,WACH,wBAA8B,oCAElCriC,KAAKN,KAAKqgB,IAAI,mBAAoB,EACtC,EAEAkgB,mBAAoB,WAChB,IAAIiC,EAAmBliC,KAAKN,KAAK8C,IAAI,oBACtBxC,KAAKD,IAAIg7B,QAAQ,WAAWvC,SAAS,IAAMx4B,KAAKD,IAAIL,KAAK,cAC/DqN,YAAY,SAA8B,GAApBm1B,GAC/BliC,KAAKD,IAAIgN,YAAY,iBAAuC,IAArBm1B,GACvCliC,KAAKD,IAAIgN,YAAY,SAA+B,IAArBm1B,EACnC,EAEAI,SAAU,WACN,IAAIC,EAAe,4DAAgE,wBAGnF,IAFsB,IAAlBA,GAAuB,qCACvBA,EAAe,4DAAgE,qCAC9E,wBAAgCA,GAAgB,GAAKA,EAAe,2DAAiE,EAE1I,GAAI,oDAAwDA,EAAe,GAAG3B,YAAY,CACtF,IAAI4B,EAAY,oDAAwDD,EAAe,GACvF,GAAKC,EAAU5B,YAAYC,cAKvB2B,EAAU5B,YAAYC,cAAckB,WALC,CACrC,IAAIU,EAAQ,GAAED,EAAU5B,aAAa/gC,KAAK,uBAAuBL,KAAK,QACtE,GAAEgjC,EAAU5B,aAAa/gC,KAAK,aAAaK,YAAY,eACvDsiC,EAAU5B,YAAYC,cAAgB,4DAAgE,GAAE2B,EAAU5B,aAAa/gC,KAAK,mBAAmB,GAAI4iC,EAAO,uCACtK,CAGJ,MACS,qBAID,kCAAsC,CAACtC,OAAQ,oDAAwDoC,EAAe,MAHtH,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAACpC,OAAQ,oDAAwDoC,EAAe,KAI1H,EAEAG,aAAc,WACV,IAAIH,EAAe,4DAAgE,wBAGnF,IAFsB,IAAlBA,GAAuB,qCACvBA,EAAe,4DAAgE,qCAC9E,wBAAgCA,GAAgB,4DAAkEA,EAAe,EAEtI,GAAI,oDAAwDA,EAAe,GAAG3B,YAAY,CACtF,IAAI+B,EAAY,oDAAwDJ,EAAe,GACvF,GAAKI,EAAU/B,YAAYC,cAKvB8B,EAAU/B,YAAYC,cAAckB,WALC,CACrC,IAAIU,EAAQ,GAAEE,EAAU/B,aAAa/gC,KAAK,uBAAuBL,KAAK,QACtE,GAAEmjC,EAAU/B,aAAa/gC,KAAK,aAAaK,YAAY,eACvDyiC,EAAU/B,YAAYC,cAAgB,4DAAgE,GAAE8B,EAAU/B,aAAa/gC,KAAK,mBAAmB,GAAI4iC,EAAO,uCACtK,CAGJ,MACS,qBAID,kCAAsC,CAACtC,OAAQ,oDAAwDoC,EAAe,MAHtH,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAACpC,OAAQ,oDAAwDoC,EAAe,KAI1H,EAEArC,mBAAoB,WAChB,GAAI,uBAA4B,CAC5B,IAAIqC,EAAe,4DAAgE,oCACnFviC,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAcw1B,GAAgB,GAAKA,EAAe,2DAAiE,IACxJviC,KAAKrC,EAAE,sBAAsBoP,YAAY,aAAcw1B,GAAgB,4DAAkEA,EAAe,IACxJviC,KAAKrC,EAAE,kBAAkBoP,YAAY,SAAU,gCAC/C/M,KAAKrC,EAAE,mBAAmBoP,YAAY,UAAW,gCACjD/M,KAAKrC,EAAE,kBAAkBoP,YAAY,UAAW,8BAChD/M,KAAKrC,EAAE,oBAAoBoP,YAAY,SAAU,6BACrD,CACJ,EAEA61B,YAAa,WACT,KAAM5iC,KAAKmgC,QAAUngC,KAAKmgC,OAAOhL,WAAan1B,KAAKmgC,OAAOmB,mBACtD,OACJthC,KAAKoiC,aACL,IAAIluC,EAAO8L,KAAKmgC,OAAOhL,UAAUrB,MACjC,uBAA2B5/B,EAAK0gC,UAAW,CAACyG,oBAAoB,EAAM1F,cAAc,IACpF,kBAAsB,mBAAuB,QAAS,CAACwD,MAAO,kBAAmBrF,MAAO5/B,IACpF,iCAAuC,mBAAuB,kBAAwD,oBAApC,mBAAuB,WACrG,gCACAA,EAAK+gC,QAAQ4N,iBAAiB,YAAa,CAACC,aAAa,IAEzD5uC,EAAK+gC,QAAQ4N,iBAAiB,YAAa,CAACC,aAAa,KAEjE5uC,EAAK6uC,kBAAkB/iC,KAAKmgC,OAAOmB,kBAAmB,CAACpqB,SAAS,GACpE,EAEA8rB,WAAY,WACR,GAAK,uBAEL,GAAI,mCACA,GAAK,iDAKD,iEALsD,CACtD,IAAIP,EAAQ,GAAE,oCAAwC5iC,KAAK,uBAAuBL,KAAK,QACvF,GAAE,oCAAwCK,KAAK,aAAaK,YAAY,eACxE,iDAAuDF,KAAKijC,QAAQC,mBAAmB,GAAE,oCAAwCrjC,KAAK,mBAAmB,GAAI4iC,EACjK,MAIA,mCACR,EAEAU,WAAY,WACH,yBAEL,8BAAoC,6BACxC,EAEA/B,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,UACtDxC,KAAK0sB,QAAQlK,SAASmf,KAAK,eAAgB3hC,KAAKohC,kBAAmBphC,KACvE,IAGJ,gBAAsB,oBAAwB,CAC1C+wB,UAAW,iBACXvD,SAAU,GAAUhL,SACpBsL,YAAa,iBAEbmD,OAAQ,CACJ,oEAAqE,cACrE,yBAA0B,qBAC1B,qCAAsC,mBACtC,6CAA8C,0BAC9C,2CAA4C,wBAC5C,uDAAwD,2BACxD,qDAAsD,yBACtD,sCAAuC,mBACvC,kCAAmC,eACnC,4CAA6C,yBAC7C,uCAAwC,oBACxC,sDAAuD,kBACvD,oDAAqD,gBACrD,mDAAoD,eACpD,uDAAwD,mBACxD,wDAAyD,oBACzD,0DAA2D,iBAC3D,qBAAsB,mBACtB,eAAgB,aAChB,+BAAgC,4BAChC,uBAAwB,qBACxB,sBAAuB,aACvB,4BAA6B,mBAC7B,6BAA8B,kBAC9B,iCAAkC,sBAClC,wDAAyD,gBACzD,wDAAyD,oBACzD,iCAAkC,mBAClC,8BAA+B,qBAC/B,iCAAkC,wBAClC,kDAAmD,aACnD,4DAA6D,iBAC7D,0CAA2C,qBAG/C1C,YAAa,WACTvuB,KAAKrC,EAAE,8BAA8B2E,KAAK,OAAW,mBACrD,MAAU,oBAAqBtC,KAAKo4B,gBAAiBp4B,KACzD,EAEAgvB,OAAQ,WACJ,IAAIxM,EAAWxiB,KAAK8zB,MAAMxc,WACtBuM,EAAOrB,EAASsB,SACpB9jB,KAAKrC,EAAE,uCAAuC4M,KAAK,CAC/C64B,QAAS5gB,EAASkG,eAAiB,cAAkB,mBAEzD1oB,KAAKrC,EAAE,+CACF4M,KAAK,CAAC64B,QAAS5gB,EAASmG,wBAC7B3oB,KAAKrC,EAAE,gDAAgD4M,KAAK,YAAaiY,EAASmG,uBAClF3oB,KAAKrC,EAAE,6CACF4M,KAAK,CAAC64B,QAAS5gB,EAASoG,sBAC7B5oB,KAAKrC,EAAE,8CAA8C4M,KAAK,YAAaiY,EAASoG,qBAChF5oB,KAAKrC,EAAE,yDACF4M,KAAK,CAAC64B,QAAS5gB,EAASsG,0BAC7B9oB,KAAKrC,EAAE,uDACF4M,KAAK,CAAC64B,QAAS5gB,EAASuG,wBAC7B/oB,KAAKrC,EAAE,wCACF4M,KAAK,CAAC64B,QAAS5gB,EAASoH,iBAC7B5pB,KAAKrC,EAAE,oCACF4M,KAAK,CAAC64B,QAAS5gB,EAASqH,aAC7B7pB,KAAKrC,EAAE,8CACF4M,KAAK,CAAC64B,QAAS5gB,EAASsH,uBAC7B9pB,KAAKrC,EAAE,yCACF4M,KAAK,CAAC64B,QAAS5gB,EAASuH,kBAC7B,IAAIsZ,EAAsB7gB,EAASwG,cAAgBxG,EAASkH,yBAA2B,GACvF1pB,KAAKrC,EAAE,uDAAuD0lC,OACrD94B,KAAK,WAAW,GACzB,IAAI+4B,EAAoB9gB,EAASyG,YAAczG,EAASmH,uBAAyB,GACjF3pB,KAAKrC,EAAE,qDAAqD2lC,OACnD/4B,KAAK,WAAW,GACzBvK,KAAKrC,EAAE,oDAAoD6kB,EAASwH,mBAC3Dzf,KAAK,WAAW,GACzBvK,KAAKrC,EAAE,wDAAwD6kB,EAASyH,uBAC/D1f,KAAK,WAAW,GACzBvK,KAAKrC,EAAE,yDAAyD6kB,EAAS2H,wBAChE5f,KAAK,WAAW,GACzBvK,KAAKrC,EAAE,kDAAkD6kB,EAAS6H,YACzD9f,KAAK,WAAW,GACzBvK,KAAKrC,EAAE,4DAA4D6kB,EAAS8H,iBACnE/f,KAAK,WAAW,GACxBsZ,GAAQ,OAAW,sBAAyBA,EAAO,WACpD7jB,KAAKrC,EAAE,2DAA2DkmB,OAC7DtZ,KAAK,WAAW,GACrB,IAAIse,EAAwBpT,MAAM+M,EAASqG,sBAA8D,IAAN,IAAhCrG,EAASqG,qBAc5E,OAbA7oB,KAAKrC,EAAE,yBAAyB4P,IAAIsb,GACpC7oB,KAAKrC,EAAE,6BAA6B2E,KAAKtC,KAAKrC,EAAE,qCAAqC6B,KAAK,gBAC1FQ,KAAKujC,oBACLvjC,KAAKwjC,0BACLxjC,KAAK46B,cACL56B,KAAKo4B,kBACLp4B,KAAKyjC,yBACLzjC,KAAKrC,EAAE,qDAAqD28B,SAAS,CACjEC,WAAY,IACZC,YAAa,IACbkJ,aAAa,EACbhJ,OAAO,IAEJ16B,IACX,EAEAo4B,gBAAiB,WACbp4B,KAAKrC,EAAE,+BAA+B6B,KAAK,aAAcQ,KAAK8zB,MAAMtxB,IAAI,eACxExC,KAAKrC,EAAE,2CAA2C2E,KAAK,aAAiB,sBAAsBtC,KAAK8zB,MAAMtxB,IAAI,cAAcX,QAAQ,KAAM,QAAQA,QAAQ,KAAM,KACnK,EAEA2hC,wBAAyB,WACrBxjC,KAAKrC,EAAE,wDAAwDqC,KAAK8zB,MAAMtxB,IAAI,cAAcqB,SACvF0G,KAAK,WAAW,GACjBvK,KAAK8zB,MAAMtxB,IAAI,cAAcxH,OAC7BgF,KAAKrC,EAAE,uBAAuB2H,IAAI,mBAAoB,OAAO,GAAMob,OAAO/X,oBAAoB3I,KAAK8zB,MAAMtxB,IAAI,cAAcxH,WAE/HgF,KAAKrC,EAAE,4BAA4BoP,YAAY,UAAW/M,KAAK8zB,MAAMtxB,IAAI,cAAcxH,OACvF,IAAIuuB,EAAavpB,KAAK8zB,MAAMtxB,IAAI,cAC5BmhC,GAAoC,IAApBpa,EAAWF,KAC3Bua,GAAgD,IAA1Bra,EAAWC,WACrCxpB,KAAKrC,EAAE,gBAAgB,GAAGylC,QAAUO,EACpC3jC,KAAKrC,EAAE,2BAA2BoP,YAAY,SAAU42B,GACxD3jC,KAAKrC,EAAE,SAAS,GAAGoN,MAAQ44B,EAAgBpa,EAAWF,KAAO,GAAU7sB,WAEvEwD,KAAKrC,EAAE,sBAAsB,GAAGylC,QAAUQ,EAC1C5jC,KAAKrC,EAAE,iCAAiCoP,YAAY,SAAU62B,GAC9D5jC,KAAKrC,EAAE,eAAe,GAAGoN,MAAQ64B,EAAsBra,EAAWC,WAAa,GAAU/sB,iBACzFuD,KAAK6uB,iBACT,EAEA+L,YAAa,WACT,IAAI/0B,EAAQ7F,KAAK8zB,MAAMtxB,IAAI,cAAcqD,OAAS,UAClD7F,KAAKrC,EAAE,wBAAwB2H,IAAI,mBAAoBO,GACvD7F,KAAKrC,EAAE,uBAAuB2E,KAAKuD,GACnC,IAAIg+B,EAAiB,8CAAiD1wB,GAAKA,EAAE2wB,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBnQ,EAAMmQ,kBAC/H,GAAI6tB,EAAgB,CAChB,IAAII,EAAOJ,EAAeC,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBnQ,EAAMmQ,gBAC5EhW,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,sBAAsBuhC,EAAeh+B,MAAMhE,QAAQ,KAAM,QAAQA,QAAQ,KAAM,KAAO,IAAIoiC,EAAKC,SACxJ,MACIlkC,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,oDAEzD,4BAAgCuD,EACpC,EAEA49B,uBAAwB,WACpB,IAAIU,EAAsBnkC,KAAK8zB,MAAMtxB,IAAI,cACrC4hC,GAA6D,IAArCD,EAAoB7a,aAChDtpB,KAAKrC,EAAE,2BAA2B,GAAGylC,QAAUe,EAAoB9a,KACnErpB,KAAKrC,EAAE,wBAAwB,GAAGylC,QAAUgB,EAC5CpkC,KAAKrC,EAAE,mCAAmCoP,YAAY,SAAUq3B,GAChEpkC,KAAKrC,EAAE,iBAAiB,GAAGoN,MAAQq5B,EAAwBD,EAAoB7a,aAAe,GAAU5sB,mBACxGsD,KAAKrC,EAAE,IAAIqC,KAAKqkC,OAAOF,EAAoB/a,oBAAoB,GAAGga,SAAU,CAChF,EAEAkB,YAAa,SAAUz5B,GACnB,IAAI05B,EAAO,GAAE15B,EAAG4C,QAAQstB,QAAQ,iBAC5ByJ,EAAQxkC,KAAKrC,EAAE,wBAA0B4mC,EAAK7kC,KAAK,eAEvD,GADAM,KAAKrC,EAAE,oBAAoB4T,OAAkC,iBAA3BgzB,EAAK7kC,KAAK,eACxC6kC,EAAKv3B,SAAS,eAGd,OAFAu3B,EAAK9W,SAAS+K,WAAWt4B,YAAY,eACrCF,KAAK+vB,SAAS,GAGlB/vB,KAAKrC,EAAE,wBAAwBwC,SAAS,UACxCqkC,EAAMtkC,YAAY,UAClBF,KAAKrC,EAAE,6BAA6B2E,KAAKkiC,EAAMhlC,KAAK,gBACpD+kC,EAAKpkC,SAAS,UAAUq4B,WAAWt4B,YAAY,UAC/CF,KAAKowB,cAAcoU,EACvB,EAEAC,iBAAkB,SAAU55B,GACxB,IAAIE,EAAQ/K,KAAK8zB,MAAMtxB,IAAI,iBACvBkiC,EAAU,GAAE75B,EAAG4C,QACnB5C,EAAGa,iBACW,OAAVX,EACA,GAAMwP,uBAAuB,aAAiB,oDAAqD,OAEnGxP,EAAQA,GAAS,cAAkB,iBAC9B,cAAkB,kBASnBA,GAASA,EACT/K,KAAK8zB,MAAM/Q,KAAK,gBAAiBhY,GACjC25B,EAAQ3J,QAAQ,0BAA0Bl7B,KAAK,SAAS0K,KAAK,UAAWQ,IAVxEhH,OAAOooB,aAAawY,mBAAmBvY,IACnC,eAAmB,CAAC,cAAiC,YAAfA,EAA2B,8BAAgC,IACjG,8BAAoC,qCACpCrhB,EAAwB,YAAfqhB,EACTpsB,KAAK8zB,MAAM/Q,KAAK,gBAAiBhY,GAAgB/K,KAAK8zB,MAAMtxB,IAAI,kBAChEkiC,EAAQ3J,QAAQ,0BAA0Bl7B,KAAK,SAAS0K,KAAK,UAAWQ,EAAM,IAQ9F,EAEA65B,wBAAyB,SAAU/5B,GAC/B,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,yBAC5BxC,KAAK8zB,MAAM/Q,KAAK,wBAAyBhY,GACzCF,EAAGa,iBACH1L,KAAKrC,EAAE,gDAAgD4M,KAAK,YAAaQ,GACzE,GAAEF,EAAG4C,QAAQstB,QAAQ,kCAAkCl7B,KAAK,SAAS0K,KAAK,UAAWQ,EACzF,EAEA85B,sBAAuB,SAAUh6B,GAC7B,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,uBAC5BxC,KAAK8zB,MAAM/Q,KAAK,sBAAuBhY,GACvCF,EAAGa,iBACH1L,KAAKrC,EAAE,8CAA8C4M,KAAK,YAAaQ,GACvE,GAAEF,EAAG4C,QAAQstB,QAAQ,gCAAgCl7B,KAAK,SAAS0K,KAAK,UAAWQ,EACvF,EAEA+5B,yBAA0B,SAAUj6B,GAChC,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,2BAC5BxC,KAAK8zB,MAAM/Q,KAAK,0BAA2BhY,GAC3CF,EAAGa,iBACH,GAAEb,EAAG4C,QAAQstB,QAAQ,4BAA4Bl7B,KAAK,SAAS0K,KAAK,UAAWQ,EACnF,EAEAg6B,uBAAwB,SAAUl6B,GAC9B,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,yBAC5BxC,KAAK8zB,MAAM/Q,KAAK,wBAAyBhY,GACzCF,EAAGa,iBACH,GAAEb,EAAG4C,QAAQstB,QAAQ,4BAA4Bl7B,KAAK,SAAS0K,KAAK,UAAWQ,EACnF,EAEAi6B,iBAAkB,SAAUn6B,GACxB,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,kBAC5BxC,KAAK8zB,MAAM/Q,KAAK,iBAAkBhY,GAClCF,EAAGa,iBACH,GAAEb,EAAG4C,QAAQstB,QAAQ,2BAA2Bl7B,KAAK,SAAS0K,KAAK,UAAWQ,EAClF,EAEAk6B,aAAc,SAAUp6B,GACpB,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,cAC5BxC,KAAK8zB,MAAM/Q,KAAK,aAAchY,GAC9BF,EAAGa,iBACH,GAAEb,EAAG4C,QAAQstB,QAAQ,uBAAuBl7B,KAAK,SAAS0K,KAAK,UAAWQ,EAC9E,EAEAm6B,uBAAwB,SAAUr6B,GAC9B,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,wBAC5BxC,KAAK8zB,MAAM/Q,KAAK,uBAAwBhY,GACxCF,EAAGa,iBACH,GAAEb,EAAG4C,QAAQstB,QAAQ,iCAAiCl7B,KAAK,SAAS0K,KAAK,UAAWQ,EACxF,EAEAo6B,kBAAmB,SAAUt6B,GACzB,IAAIE,GAAS/K,KAAK8zB,MAAMtxB,IAAI,mBAC5BxC,KAAK8zB,MAAM/Q,KAAK,kBAAmBhY,GACnCF,EAAGa,iBACH,GAAEb,EAAG4C,QAAQstB,QAAQ,4BAA4Bl7B,KAAK,SAAS0K,KAAK,UAAWQ,EACnF,EAEAq6B,gBAAiB,SAAUv6B,GACvB,IAAIE,EAAQF,EAAG4C,OAAO1C,MAClBA,GACA/K,KAAKqlC,eAAiBrlC,KAAKqlC,cAAcC,QACzCtlC,KAAKqlC,cAAgB,aAAiBt6B,GAAO,EAAO/K,KAAK8zB,MAAMtxB,IAAI,yBACnExC,KAAK8zB,MAAM/Q,KAAK,CAACiG,eAAe,EAAMU,yBAA0B3e,KAEhE/K,KAAK8zB,MAAM/Q,KAAK,iBAAiB,EAEzC,EAEAwiB,cAAe,SAAU16B,GACrB,IAAIE,EAAQF,EAAG4C,OAAO1C,MAClBA,GACA/K,KAAKqlC,eAAiBrlC,KAAKqlC,cAAcC,QACzCtlC,KAAKqlC,cAAgB,aAAiBt6B,GAAO,EAAO/K,KAAK8zB,MAAMtxB,IAAI,yBACnExC,KAAK8zB,MAAM/Q,KAAK,CAACkG,aAAa,EAAMU,uBAAwB5e,KAE5D/K,KAAK8zB,MAAM/Q,KAAK,eAAe,EAEvC,EAEAyiB,aAAc,SAAU36B,GACpB,IAAIE,EAAQF,EAAG4C,OAAO1C,MACtB/K,KAAKqlC,eAAiBrlC,KAAKqlC,cAAcC,QACzCtlC,KAAKqlC,cAAgB,aAAiBt6B,GAAO,GAC7C/K,KAAK8zB,MAAM/Q,KAAK,CAACiH,cAAejf,GACpC,EAEA06B,iBAAkB,SAAU56B,GACxB,IAAIE,EAAQF,EAAG4C,OAAO1C,MACtB/K,KAAKqlC,eAAiBrlC,KAAKqlC,cAAcC,QACzCtlC,KAAKqlC,cAAgB,aAAiBt6B,GAAO,GAC7C/K,KAAK8zB,MAAM/Q,KAAK,CAACkH,kBAAmBlf,GACxC,EAEA26B,kBAAmB,SAAU76B,GACzB,IAAIE,EAAQF,EAAG4C,OAAO1C,MACtB/K,KAAKqlC,eAAiBrlC,KAAKqlC,cAAcC,QACzCtlC,KAAKqlC,cAAgB,aAAiBt6B,GAAO,GAC7C/K,KAAK8zB,MAAM/Q,KAAK,CAACoH,mBAAoBpf,GACzC,EAEA46B,cAAe,SAAU96B,GACrB,IAAIE,EAAQF,EAAG4C,OAAO1C,MACtB,GAAa,WAATA,EACA/K,KAAK8zB,MAAM/Q,KAAK,aAAc,CAAClf,KAAM,YACrC,2BACA7D,KAAKwjC,+BACF,GAAa,qBAATz4B,GAAyC,SAATA,EAAkB,EACnC,IAAI,sBACVikB,OAAO,CAACnrB,KAAMkH,EAAO+oB,MAAO9zB,KAAK8zB,OACrD,CACJ,EAEA8R,kBAAmB,SAAU/6B,GACzB,IAAIE,EAAQF,EAAG4C,OAAO1C,MAClBo5B,EAAsBnkC,KAAK8zB,MAAMtxB,IAAI,cACzCxC,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOm6B,EAAqB,CAAC/a,MAAOre,KACpE,2BAA+BA,EACnC,EAEA86B,iBAAkB,WACd,IAAI96B,EAAQ/K,KAAKrC,EAAE,2BAA2B,GAAGylC,QAC7Ce,EAAsBnkC,KAAK8zB,MAAMtxB,IAAI,cACzCxC,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOm6B,EAAqB,CAAC9a,KAAMte,KACnE,0BAA8BA,EAClC,EAEA+6B,sBAAuB,WACnB,IAAIjiC,EAAO7D,KAAK8zB,MAAMtxB,IAAI,cAAcqB,KACxC,GAAY,qBAARA,GAAuC,SAARA,EAAiB,EAC1B,IAAI,sBACVmrB,OAAO,CAACnrB,KAAMA,EAAMiwB,MAAO9zB,KAAK8zB,OACpD,CACJ,EAEAiS,gBAAiB,WACR/lC,KAAKgmC,cACNhmC,KAAKgmC,YAAc,IAAI,eAAmB,CAAClS,MAAO9zB,KAAK8zB,SAC3D9zB,KAAKgmC,YAAYhX,QACrB,EAEAiX,oBAAqB,WACZjmC,KAAKkmC,kBACNlmC,KAAKkmC,gBAAkB,IAAI,mBAAuB,CAACpS,MAAO9zB,KAAK8zB,SACnE9zB,KAAKkmC,gBAAgBlX,QACzB,EAEAmX,WAAY,WACR,IAAIp7B,EAAQ/K,KAAKrC,EAAE,SAAS,GAAGoN,MAC3Bwe,EAAavpB,KAAK8zB,MAAMtxB,IAAI,cAChC,mBAAuBuI,GACvB/K,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOuf,EAAY,CAACF,KAAMte,IAC9D,EAEAq7B,mBAAoB,WAChB,IAAIC,EAAcrmC,KAAKrC,EAAE,wBAAwB,GAAGylC,QAChDe,EAAsBnkC,KAAK8zB,MAAMtxB,IAAI,cACrCuI,IAAQs7B,GAAc,GAAU3pC,mBACpCsD,KAAKrC,EAAE,mCAAmCoP,YAAY,SAAUs5B,GAChErmC,KAAKrC,EAAE,iBAAiB,GAAGoN,MAAQ,GAAUrO,mBAC7CsD,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOm6B,EAAqB,CAAC7a,aAAcve,KAC3E,kCAAsCA,EAC1C,EAEAu7B,0BAA2B,WACvB,IAAIC,EAASvmC,KAAKrC,EAAE,yBAAyB,GAAGoN,MAAQ,IACpDy7B,EAAQxmC,KAAKrC,EAAE,wDAAwD4P,OAASvN,KAAKrC,EAAE,sDAAsD4P,MACjJvN,KAAK8zB,MAAM/Q,KAAK,uBAAwBwjB,GACpCC,IACAxmC,KAAKqlC,eAAiBrlC,KAAKqlC,cAAcC,QACzCtlC,KAAKqlC,cAAgB,aAAiBmB,GAAO,EAAOD,GAE5D,EAEAE,mBAAoB,WAChB,IAAI17B,EAAQ/K,KAAKrC,EAAE,iBAAiB,GAAGoN,MACnCo5B,EAAsBnkC,KAAK8zB,MAAMtxB,IAAI,cACzCxC,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOm6B,EAAqB,CAAC7a,aAAcve,KAC3E,kCAAsCA,EAC1C,EAEA27B,iBAAkB,WACd,IAAI37B,EAAQ/K,KAAKrC,EAAE,eAAe,GAAGoN,MACjCwe,EAAavpB,KAAK8zB,MAAMtxB,IAAI,cAChC,wBAA4BuI,GAC5B/K,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOuf,EAAY,CAACC,WAAYze,IACpE,EAEA47B,iBAAkB,WACd,IAAIN,EAAcrmC,KAAKrC,EAAE,8BAA8BsE,OACnDsnB,EAAavpB,KAAK8zB,MAAMtxB,IAAI,cAC5BuI,IAAQs7B,GAAc,GAAU5pC,iBACpCuD,KAAKrC,EAAE,iCAAiCoP,YAAY,SAAUs5B,GAC9DrmC,KAAKrC,EAAE,eAAe,GAAGoN,MAAQ,GAAUtO,iBAC3CuD,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOuf,EAAY,CAACC,WAAYze,KAChE,wBAA4BA,EAChC,EAEA67B,WAAY,WACR,IAAIP,EAAcrmC,KAAKrC,EAAE,wBAAwBsE,OAC7CsnB,EAAavpB,KAAK8zB,MAAMtxB,IAAI,cAC5BuI,IAAQs7B,GAAc,GAAU7pC,WACpCwD,KAAKrC,EAAE,2BAA2BoP,YAAY,SAAUs5B,GACxDrmC,KAAKrC,EAAE,SAAS,GAAGoN,MAAQ,GAAUvO,WACrCwD,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOuf,EAAY,CAACF,KAAMte,KAC1D,mBAAuBA,EAC3B,EAEA87B,WAAY,SAAUh8B,GAClB7K,KAAK8zB,MAAM/Q,KAAK,UAAWlY,EAAG4C,OAAO1C,MACzC,EAEA+7B,eAAgB,SAAUj8B,GACtB7K,KAAK8zB,MAAM/Q,KAAK,eAAgBlY,EAAG4C,OAAO1C,OAC1C,WAAe,sBACnB,EAEAg8B,kBAAmB,SAAUl8B,GACzB,GAAMkB,QAAQiC,IAAI,aAAiB,eAAgB,aAAiB,wCAAyC,CAAC,GAAUpR,cAAe,KAAM,CAAEuR,eAAgB,aAAiB,iBAAiBoa,MAAMhpB,IACnMA,GAAO,WAAe,OAAO,GAErC,EAEAulB,eAAgB,SAAUja,GACtB,IAAIE,EAAQF,EAAG4C,OAAO1C,MACtB,GAAMgB,QAAQiC,IAAI,aAAiB,4CAA6C,aAAiB,6CAA8C,KAAM,CAAEG,eAAgB,aAAiB,qDAAqDoa,MAAMrgB,IAC3OA,GACAlI,KAAK8zB,MAAM/Q,KAAK,WAAYhY,GAC5BhH,OAAO0e,SAAS+F,QAAO,IAEvBxoB,KAAKrC,EAAE,2DAA2DqC,KAAK8zB,MAAMtxB,IAAI,iBAC5E+H,KAAK,WAAW,EACzB,GAER,EAEAoxB,mBAAoB,WAChB,WAAe,cAAe,CAACxC,MAAO,MAC1C,EAEAoK,kBAAmB,WACf,IAAI1f,EAAO9f,OAAO8U,UAAUiL,SACxBkjB,EAAW7wB,OAAOC,KAAKwK,6BAA6B/gB,MAAKwW,IAAQwN,EAAKzf,QAAQiS,MAAS,GAAU5a,0BAA0BooB,IAAS1N,OAAOC,KAAKwK,6BAA6B/gB,MAAKwW,IAAQ,GAAU5a,0BAA0BooB,GAAMzf,QAAQiS,KAEhP,IADS,WAARwN,IAAsBA,EAAKzf,QAAQ,SAAW4iC,EAAW,MACrD,GAAE57B,YAAY47B,GAAW,CAC1B,IAAIC,EAAeC,EACH,KAAZF,GACAC,EAAgB,aAAiB,kEAAmE,CAAC,GAAUpqC,kBAAmB,GAAUA,oBAC5IqqC,EAAgB,aAAiB,2EAC7B,CAAC,4BAA4B,aAAiB,qEAAqE,aAAiB,8EACrH,GAAZF,GACPC,EAAgB,aAAiB,yEAA0E,CAAC,GAAUpqC,kBAAmB,GAAUA,oBACnJqqC,EAAgB,aAAiB,yEACzB,CAAC,4BAA4B,aAAiB,qEAAqE,aAAiB,+EAE5ID,EAAgB,aAAiB,oEAAqE,CAAC,GAAUpqC,kBAAmB,GAAUA,oBAC9IqqC,EAAgB,aAAiB,8EAC7B,CAAC,4BAA4B,aAAiB,qEAAqE,aAAiB,2EAA4E,GAAUlwC,8BAElOgJ,KAAKrC,EAAE,gBAAgBgC,KAAK,GAAGsnC,YAAwBC,IAC3D,CACJ,IAGJ,mBAAyB,oBAAwB,CAC7CnW,UAAW,qCACXvD,SAAU,GAAU2Z,aACpBrZ,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,qBAAsB,YAG1B1C,YAAa,SAAUvvB,GACnBgB,KAAK8zB,MAAQ90B,EAAQ80B,KACzB,EAEA9E,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kBAAkB2H,IAAI,aAAchJ,KAAK8qC,IAAK,GAAErjC,QAAQgB,SAAW,IAAM,MAAMipB,iBAAiB,CAAC5E,MAAO,aAAa,EAEhIje,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEAqnC,SAAU,SAAUx8B,GAChB,IAAIhF,EAAQ,GAAEgF,EAAG4C,QAAQstB,QAAQ,gBAAgBv7B,KAAK,cACtDQ,KAAK8zB,MAAM/Q,KAAK,aAAcld,GAC9B,WAAe,qBACf7F,KAAKkL,OACT,EAEAA,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,IAIJ,eAAqB,oBAAwB,CACzCgR,UAAW,gCACXuW,eAAgB,CACZ,CACIzhC,MAAO,MACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,OACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,SACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,cACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,SACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,OACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,aACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,OACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,OACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,QACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,cACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,OACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,SACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,QACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,SACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,cACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,QACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,OACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,aAIjB,CACIn+B,MAAO,YACPi+B,WAAY,CACR,CACII,OAAQ,GACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,WAET,CACIE,OAAQ,IACRF,IAAK,cAMrBlW,YAAa,8BACbmD,OAAQ,CACJ,4BAA6B,cAC7B,4BAA6B,mBAC7B,qCAAsC,qBACtC,kCAAmC,aACnC,iBAAkB,YAGtB1C,YAAYvvB,GACRgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKD,IAAIJ,KAAK,GAAU4nC,aAAa,CAACD,eAAgBtnC,KAAKsnC,iBAC/D,EAEAtY,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACH,IAAIzjB,EAAS9Z,KAAKrC,EAAE,6BAChB6pC,EAAaxnC,KAAKrC,EAAE,uBACpBoN,EAAQ/K,KAAK8zB,MAAMtxB,IAAI,cAAcqD,OAAS,UAC9Cg+B,EAAiB7jC,KAAKsnC,eAAeznC,MAAKsT,GAAKA,EAAE2wB,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBjL,EAAMiL,kBACvG,GAAI6tB,EAAgB,CAChB,IAAII,EAAOJ,EAAeC,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBjL,EAAMiL,gBAC5EhW,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,sBAAsBuhC,EAAeh+B,MAAMhE,QAAQ,KAAM,QAAQA,QAAQ,KAAM,KAAO,IAAIoiC,EAAKC,SACxJ,MACIlkC,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,oDAErDyI,IACA/K,KAAKrC,EAAE,wBAAwBuC,YAAY,UAC3C4Z,EAAO3Z,SAAS,UAChBqnC,EAAWtnC,YAAY,UAAUoC,KAAKyI,GACtCA,GAAS/K,KAAKrC,EAAE,wBAAwB2H,IAAI,mBAAoByF,GACpE,EAEJI,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAGlC,EAEAynC,iBAAkB,WACd,IAAI3tB,EAAS9Z,KAAKrC,EAAE,6BAChB6pC,EAAaxnC,KAAKrC,EAAE,uBACxBmc,EAAO5Z,YAAY,UACnB4Z,EAAO,GAAG/O,MAAQy8B,EAAWllC,OAC7BklC,EAAWrnC,SAAS,SACxB,EAEAunC,WAAY,SAAU78B,GACdA,EAAGW,SAAW,GAAUlZ,YACxBuY,EAAGa,iBACH1L,KAAK2nC,sBAET,IACI58B,EADS/K,KAAKrC,EAAE,6BACD,GAAGoN,MAAMvG,OAC5BxE,KAAKrC,EAAE,wBAAwB2H,IAAI,mBAAoByF,GACvD,IAAI84B,EAAiB7jC,KAAKsnC,eAAeznC,MAAKsT,GAAKA,EAAE2wB,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBjL,EAAMiL,kBACvG,GAAI6tB,EAAgB,CAChB,IAAII,EAAOJ,EAAeC,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBjL,EAAMiL,gBAC5EhW,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,sBAAsBuhC,EAAeh+B,MAAMhE,QAAQ,KAAM,QAAQA,QAAQ,KAAM,KAAO,IAAIoiC,EAAKC,SACxJ,MACIlkC,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,mDAE7D,EAEAqlC,mBAAoB,WAChB,IAAI7tB,EAAS9Z,KAAKrC,EAAE,6BAChB6pC,EAAaxnC,KAAKrC,EAAE,uBACpBoN,EAAQ+O,EAAO,GAAG/O,MAAMvG,OACxBq/B,EAAiB7jC,KAAKsnC,eAAeznC,MAAKsT,GAAKA,EAAE2wB,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBjL,EAAMiL,kBACvG,GAAI6tB,EAAgB,CAChB,IAAII,EAAOJ,EAAeC,WAAWjkC,MAAKkkC,GAAKA,EAAEC,IAAIhuB,eAAiBjL,EAAMiL,gBAC5EhW,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,sBAAsBuhC,EAAeh+B,MAAMhE,QAAQ,KAAM,QAAQA,QAAQ,KAAM,KAAO,IAAIoiC,EAAKC,SACxJ,MACIlkC,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,oDAEzDwX,EAAO3Z,SAAS,UAChBqnC,EAAWtnC,YAAY,UAAUoC,KAAKyI,GACtC/K,KAAKrC,EAAE,wBAAwB2H,IAAI,mBAAoByF,EAC3D,EAEA68B,YAAa,SAAU/8B,GACnB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACfu2B,EAAMU,EAAQllC,KAAK,YACnBqoC,EAAanD,EAAQ3J,QAAQ,0BAA0Bv7B,KAAK,mBAAmBqC,QAAQ,KAAM,KAC7FqiC,EAASQ,EAAQllC,KAAK,eAC1BQ,KAAKrC,EAAE,wBAAwBuC,YAAY,UAC3CF,KAAKrC,EAAE,wBAAwB2H,IAAI,mBAAoB0+B,GACvDhkC,KAAKrC,EAAE,wBAAwB2E,KAAK,aAAiB,sBAAsBulC,KAAchmC,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAAO,IAAIqiC,KACrIlkC,KAAKrC,EAAE,uBAAuB2E,KAAK0hC,GACnC,IAAIlqB,EAAS9Z,KAAKrC,EAAE,6BAChB6pC,EAAaxnC,KAAKrC,EAAE,uBACxBmc,EAAO3Z,SAAS,UAChBqnC,EAAWtnC,YAAY,SAC3B,EAEAmnC,SAAU,WACNrnC,KAAKkL,QACL,IAAIqe,EAAavpB,KAAK8zB,MAAMtxB,IAAI,cAChCxC,KAAK8zB,MAAM/Q,KAAK,aAAc,GAAE/Y,OAAOuf,EAAY,CAAC1jB,MAAO7F,KAAKrC,EAAE,uBAAuB2E,SAE7F,EAEA4I,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,GACzB,8BAAkC,GAG9C,IAIJ,qBAA2B,oBAAwB,CAC/CgR,UAAW,wDACXvD,SAAU,GAAUsa,oBACpBha,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,kBAAmB,mBACnB,kCAAmC,iBACnC,4BAA6B,qBAC7B,kBAAmB,iBACnB,iBAAkB,gBAClB,oBAAqB,SAGzB1C,YAAa,WACTvuB,KAAKrC,EAAE,aAAa,GAAGoqC,QAAU/nC,KAAKgoC,QAAQ1/B,KAAKtI,MACnDA,KAAK+tB,aAAa1K,GAAG,cAAerjB,KAAK6yB,UAAUvqB,KAAKtI,MAC5D,EAEAgvB,OAAQ,SAAUhwB,GACdgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAK6D,KAAO7E,EAAQ6E,KACpB7D,KAAKioC,gBACLjoC,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,yCAAyCwC,SAAS,UACxC,qBAAbH,KAAK6D,KACL7D,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,gDAEnDtC,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,8CACvDtC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kBAAkB2H,IAAI,aAAchJ,KAAK8qC,IAAK,GAAErjC,QAAQgB,SAAW,IAAM,MAAMipB,iBAAiB,CAAC5E,MAAO,aAAa,EAEhIje,SAAUnL,KAAKkL,MAAM5C,KAAKtI,QAE9B,IAAIkoC,EAAYloC,KAAKrC,EAAE,gBACvBuqC,EAAU,GAAGC,YAAc,SAAUt9B,GACjCA,EAAGa,iBACHw8B,EAAU/nC,SAAS,YACvB,EACA+nC,EAAU,GAAGE,WAAa,SAAUv9B,GAChCA,EAAGa,gBACP,EACAw8B,EAAU,GAAGG,YAAc,SAAUx9B,GAC7B,GAAEA,EAAGy9B,eAAevN,QAAQ,gBAAgB94B,SAEhD4I,EAAGa,iBACHw8B,EAAUhoC,YAAY,aAC1B,EACAgoC,EAAU,GAAGK,OAAU19B,IACnBA,EAAGa,iBACHb,EAAGsmB,kBACH+W,EAAUhoC,YAAY,aACtB,IAAyC+G,EAArCuhC,EAAQ39B,EAAG49B,aAAaD,OAAS,GACrC,IAAK,IAAIhlC,EAAI,EAAGA,EAAIglC,EAAMvmC,OAAQuB,IAC9B,GAAI,GAAMmR,YAAY6zB,EAAMhlC,GAAGK,MAAO,CAClCoD,EAAOuhC,EAAMhlC,GACb,KACJ,CAEJyD,GAAQjH,KAAK0oC,QAAQzhC,EAAK,CAElC,EAEA4rB,UAAW,WACyD,YAA5D7yB,KAAKrC,EAAE,6BAA6B6B,KAAK,gBAAgCQ,KAAKwwB,kBAAoB,GAClGxwB,KAAK2oC,gBAEb,EAEAC,iBAAkB,SAAU5gB,GACxB,GAAiB,qBAAbhoB,KAAK6D,MAA+B7D,KAAK8zB,MAAM+U,kBAAiC,UAAb7oC,KAAK6D,MAAoB7D,KAAK8zB,MAAMgV,YAEvG,YADA9gB,GAAYA,KAGhB,IAAI+gB,EAAU,CACVllC,KAAM,MACNb,YAAa,kBACbgmC,SAAU,MACVC,QAAUvpC,IACW,qBAAbM,KAAK6D,KACL7D,KAAKkpC,sBAAsBxpC,GAE3BM,KAAKmpC,oBAAoBzpC,GAE7BsoB,GAAYA,GAAU,GAGb,qBAAbhoB,KAAK6D,KACLklC,EAAQvzC,IAAM,4BAEduzC,EAAQvzC,IAAM,0BAElB,GAAE4zC,KAAKL,EACX,EAEAG,sBAAuB,SAAUxpC,GAC7B,IAAIghB,EAAS,GACb,GAAEhhB,GAAMG,KAAK,SAASC,MAAK,CAAC4C,EAAK2mC,KAC7B3oB,EAAOtf,KAAK,CAACkoC,UAAW,GAAED,GAAK/mC,QAAQ,IAE3CtC,KAAK8zB,MAAM+U,iBAAmBnoB,CAClC,EAEAyoB,oBAAqB,SAAUzpC,GAC3B,IAAIghB,EAAS,GACb,GAAEhhB,GAAMG,KAAK,SAASC,MAAK,CAAC4C,EAAK2mC,KAC7B,IAAIE,EAAO,GAAEF,GACTC,EAAYC,EAAK5b,SAAS,aAAarrB,OACvCknC,EAASD,EAAK5b,SAAS,oBAAoBrrB,OAC/Coe,EAAOtf,KAAK,CAACkoC,YAAWE,UAAQ,IAEpCxpC,KAAK8zB,MAAMgV,YAAcpoB,CAC7B,EAEAsnB,QAAS,SAAUn9B,GACf,IAAIrV,EAAMqV,EAAG4+B,cAAcC,QAAQ,QAAQllC,OAC3CxE,KAAKrC,EAAE,sBAAsB,GAAG2J,OAAS,KACrCtH,KAAKrC,EAAE,sBAAsBuC,YAAY,UACzCF,KAAK2pC,oBAAoB,EAE7B3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM5R,EACzDwK,KAAK2pC,oBACT,EAEAC,iBAAkB,SAAU/+B,GACxB,IAAIg/B,EAAch/B,EAAG4C,OAAOksB,aAAa,oBACzC35B,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,+BAA+BksC,OAAiB1pC,SAAS,UAChEH,KAAK8pC,aAAaD,EACtB,EAEAC,aAAc,SAAU/qC,GACpBiB,KAAKrC,EAAE,gBAAgBwC,SAAS,UAChCH,KAAKrC,EAAE,6BAA6BoB,OAAUmB,YAAY,UAC1DF,KAAKiwB,cACLjwB,KAAK2pC,oBACT,EAEAA,mBAAoB,WAChB,IAAII,EAAiB/pC,KAAKrC,EAAE,6BACxBqsC,GAAa,EACyB,WAAtCD,EAAevqC,KAAK,eACpBuqC,EAAelqC,KAAK,cAAcoC,SAAW+nC,GAAa,GAE1DD,EAAelqC,KAAK,oBAAoBoC,SAAW+nC,GAAa,GAEpEhqC,KAAKrC,EAAE,0BAA0BoP,YAAY,aAAci9B,EAC/D,EAEA/B,cAAe,WACXjoC,KAAK4oC,kBAAiB,KAClB5oC,KAAK2oC,eAAe,GAAG,GAE/B,EAEAA,eAAgB,SAAUhuB,IACrBA,IAAUA,EAAQ,IACnB,IAAIsvB,EAAgBjqC,KAAKrC,EAAE,eAAesE,OAC1C,KAAiB,qBAAbjC,KAAK6D,MAA+BomC,GAAiBjqC,KAAK8zB,MAAM+U,iBAAiB5mC,QAAuB,UAAbjC,KAAK6D,MAAoBomC,GAAiBjqC,KAAK8zB,MAAMgV,YAAY7mC,QAEhK,IAAK,IAAIuB,EAAIymC,EAAezmC,EAAKymC,EAAgBtvB,EAAQnX,IAAK,CAC1D,IAAI6lC,EAAM,GAAE,6BACRa,EAA2B,qBAAblqC,KAAK6D,KAA8B7D,KAAK8zB,MAAM+U,iBAAiBrlC,GAAKxD,KAAK8zB,MAAMgV,YAAYtlC,GAC7G,IAAK0mC,EACD,MACJb,EAAI/jC,IAAI,mBAAoB,QAAQ4kC,EAAYZ,eAChDD,EAAI7pC,KAAK,WAAyB,qBAAbQ,KAAK6D,KAA8BqmC,EAAYZ,UAAYY,EAAYV,QAC5FxpC,KAAKrC,EAAE,iBAAiBkP,OAAOw8B,EACnC,CACJ,EAEAc,eAAgB,SAAUt/B,GACtB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACfi3B,EAAQ13B,SAAS,UACjB03B,EAAQxkC,YAAY,WAEpBF,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxCwkC,EAAQvkC,SAAS,WAErBH,KAAK2pC,oBACT,EAEAS,mBAAoB,SAAUv/B,GAC1B,IAAwB5D,EAApBwG,EAAS5C,EAAG4C,OAChB,IAAK,IAAIjK,EAAI,EAAGA,EAAIiK,EAAO+6B,MAAMvmC,OAAQuB,IACrC,GAAI,GAAMmR,YAAYlH,EAAO+6B,MAAMhlC,GAAGK,MAAO,CACzCoD,EAAOwG,EAAO+6B,MAAMhlC,GACpB,KACJ,CAEJyD,GAAQjH,KAAK0oC,QAAQzhC,GACrB,GAAEwG,GAAQF,IAAI,GAClB,EAEAm7B,QAAS,SAAUzhC,GACf,IAAIe,EAAS,IAAIC,WACjBD,EAAOV,OAAUwK,IACb,IAAIu4B,EAAa,IAAIljC,MACjBC,EAAM0K,EAAErE,OAAOvF,OACnBmiC,EAAWjjC,IAAMA,EACjBpH,KAAKrC,EAAE,0CAA0CmN,SACjD9K,KAAKrC,EAAE,sCAAsCy3B,QAAQiV,GACrDrqC,KAAK2pC,oBAAoB,EAE7B3hC,EAAOO,cAActB,EACzB,EAEAqjC,eAAgB,SAAUz/B,GACtB,GAAIA,EAAG4C,OAAO1C,MAAMvG,QAAUxE,KAAKrC,EAAE,sBAAsB,GAAGyJ,IAE9D,GAAIyD,EAAG4C,OAAO1C,MAAMvG,QAAUqG,EAAGW,UAAY,GAAUhZ,UAAYqY,EAAGW,UAAY,GAAUjZ,WAAasY,EAAGW,UAAY,GAAU5Y,cAAgBiY,EAAGW,UAAY,GAAU1Y,gBAAkB+X,EAAGW,UAAY,GAAU3Y,iBAAmBgY,EAAGW,UAAY,GAAU7Y,eAAgB,CAC9Q,IAAI6C,EAAMqV,EAAG4C,OAAO1C,MAAMvG,OAC1BxE,KAAKrC,EAAE,sBAAsB,GAAG2J,OAAS,KACrCtH,KAAKrC,EAAE,sBAAsBuC,YAAY,UACzCF,KAAK2pC,oBAAoB,EAE7B3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM5R,EACzDwK,KAAK2pC,oBACT,MACI3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM,GACzDpH,KAAK2pC,oBAEb,EAEAY,cAAe,WACX,GAAIvqC,KAAKrC,EAAE,YAAYqP,SAAS,cAC5B,OACJ,IAAIhS,EAAOkmC,EAAM,IAAI,GAAE75B,SAAY0iC,EAAiB/pC,KAAKrC,EAAE,6BAW3D,GAVAujC,EAAI3Y,MAAM8gB,IACFA,EACArpC,KAAK8zB,MAAM/Q,KAAK,aAAc,CAAClf,KAAM7D,KAAK6D,KAAM7I,MAAOquC,IAGvDrpC,KAAK8zB,MAAM/Q,KAAK,aAAc,CAAClf,KAAM,YAEzC,2BACA7D,KAAKkL,OAAO,IAE0B,WAAtC6+B,EAAevqC,KAAK,eACpBxE,EAAQ+uC,EAAelqC,KAAK,cAAcL,KAAK,YAC/C0hC,EAAI74B,QAAQrN,QAGZ,GADAA,EAAQ+uC,EAAelqC,KAAK,oBAAoB,GAAGuH,IACT,eAAtC2iC,EAAevqC,KAAK,eAAiC,CACrD,IAAIupC,EAAU,CACVllC,KAAM,MACNrO,IAAKwF,EACLwvC,QAAS,CAAC,8BAA+B,KACzCxB,SAAU,OACVC,QAAS,SAAUvpC,GACf1E,EAAQ0E,EACRwhC,EAAI74B,QAAQrN,EAChB,EACA+S,MAAO,KACHmzB,EAAI74B,QAAQrN,EAAM,GAG1B,GAAEouC,KAAKL,EACX,MACI7H,EAAI74B,QAAQrN,EAExB,EAEAkQ,MAAO,WACH,2CACAlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,IAGJ,aAAmB,oBAAwB,CACvCgR,UAAW,6BACXvD,SAAU,GAAUid,MACpB3c,YAAa,iBAEbS,YAAa,WACTvuB,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,kBAC7D,EAEAwsB,OAAQ,WACR,IAGJ,eAAqB7N,SAASC,MAAMpX,OAAO,CACvC2X,WAAY,WACR5d,OAAO5I,SAASuvC,YAAc1qC,KAAK2qC,YAAYriC,KAAKtI,MACpD+D,OAAO5I,SAAS+iC,YAAcl+B,KAAK4qC,YAAYtiC,KAAKtI,MACpD+D,OAAO5I,SAAS8iC,UAAYj+B,KAAK6qC,UAAUviC,KAAKtI,KACpD,EAEA2qC,YAAa,SAAU9/B,GACnB,GAAgB,GAAZA,EAAGigC,MACH,OAEJ,IAAIC,EAAkBlgC,EAAG4C,OAAOstB,QAAQ,gBACpCiQ,EAAOD,GAAmBA,EAAgBhQ,QAAQ,cACtD,IAAKiQ,EACD,OAAOhrC,KAAKirC,YAEhBjrC,KAAK+f,IAAI,CACLirB,KAAMA,EACND,gBAAiBA,EACjBG,MAAOrgC,EAAGsgC,MACVC,MAAOvgC,EAAGwgC,OAElB,EAEAT,YAAa,SAAU//B,GACnB,IAAK7K,KAAKwC,IAAI,QACV,OAEJ,IAAI8oC,EAAStrC,KAAKwC,IAAI,UACtB,IAAK8oC,EAAQ,CACT,GAAQhvC,KAAKivC,IAAI1gC,EAAGsgC,MAAQnrC,KAAKwC,IAAI,UAAY,GACzClG,KAAKivC,IAAI1gC,EAAGwgC,MAAQrrC,KAAKwC,IAAI,UAAY,EAC7C,OAGJ,GADA8oC,EAAStrC,KAAKwrC,aAAa3gC,IACtBygC,EACD,OAAOtrC,KAAKirC,YAEhBjrC,KAAK+f,IAAI,SAAUurB,GACnB,IAAIG,EAASzrC,KAAK0rC,UAAUJ,GAC5BtrC,KAAK+f,IAAI,CACL4rB,OAAQ3rC,KAAKwC,IAAI,SAAWipC,EAAOrN,KACnCwN,OAAQ5rC,KAAKwC,IAAI,SAAWipC,EAAOtN,MAEvCn+B,KAAK6rC,UAAUhhC,EACnB,CACAygC,EAAOQ,MAAM1N,KAAOvzB,EAAGsgC,MAAQnrC,KAAKwC,IAAI,UAAY,KACpD8oC,EAAOQ,MAAM3N,IAAMtzB,EAAGwgC,MAAQrrC,KAAKwC,IAAI,UAAY,KACnD,IAAIupC,EAAY/rC,KAAKgsC,aAAanhC,GAClC7K,KAAKisC,eAAeF,EAExB,EAEAlB,UAAW,SAAUhgC,GACjB,IAAIxI,EAAWlH,SAAS+wC,cAAc,cAClC7pC,EACA,GAAEA,GAAUnC,YAAY,cAG5BF,KAAKwC,IAAI,WAAaxC,KAAKmsC,WAAWthC,GACtC7K,KAAKirC,YACT,EAEAA,UAAW,WACPjrC,KAAK+f,IAAI,CAACirB,KAAM,KAAMD,gBAAiB,KAAMO,OAAQ,MACzD,EAEAI,UAAW,SAAUV,GACjB,IAAIoB,EAAMpB,EAAKqB,wBACf,MAAO,CACHlO,IAAKiO,EAAIjO,IAAMp6B,OAAOuoC,YACtBlO,KAAMgO,EAAIhO,KAAOr6B,OAAOwoC,YAEhC,EAEAf,aAAc,WACV,IAAIF,EAAStrC,KAAKwC,IAAI,QAClBgqC,EAAU,GAAElB,GACZP,EAAkB/qC,KAAKwC,IAAI,mBAC3BiqC,EAAM,CACNhf,OAAQ6d,EAAOoB,WACfC,YAAarB,EAAOqB,YACpBC,SAAUtB,EAAOsB,UAAY,GAC7BxO,KAAMkN,EAAOlN,MAAQ,GACrBD,IAAKmN,EAAOnN,KAAO,GACnB0O,OAAQvB,EAAOuB,QAAU,GACzBC,cAAexB,EAAOQ,MAAMiB,QAAU,GACtCC,uBAAwBjC,EAAgBe,MAAMiB,QAAU,IAkB5D,OAfAP,EAAQrsC,SAAS,YACjBmrC,EAAOQ,MAAMiB,OAAS,mBACtBhC,EAAgBe,MAAMiB,OAAS,mBAE/BzB,EAAO2B,SAAW,WACdR,EAAIhf,OAAOsG,aAAauX,EAAQmB,EAAIE,aACpCH,EAAQtsC,YAAY,YACpBorC,EAAOQ,MAAMc,SAAWH,EAAIG,SAC5BtB,EAAOQ,MAAM1N,KAAOqO,EAAIrO,KACxBkN,EAAOQ,MAAM3N,IAAMsO,EAAItO,IACvBmN,EAAOQ,MAAMe,OAASJ,EAAII,OAC1BvB,EAAOQ,MAAMiB,OAASN,EAAIK,cAC1B/B,EAAgBe,MAAMiB,OAASN,EAAIO,sBACvC,EAEO1B,CACX,EAEAO,UAAW,SAAUhhC,GACjB,IAAIygC,EAAStrC,KAAKwC,IAAI,UACtBuB,OAAO5I,SAAS+T,KAAKhC,YAAYo+B,GACjCA,EAAOQ,MAAMe,OAAS,KACtBvB,EAAOQ,MAAMc,SAAW,UAC5B,EAEAT,WAAY,SAAUthC,GAClB,IAAImgC,EAAOhrC,KAAKwC,IAAI,QAChB8oC,EAAStrC,KAAKwC,IAAI,UAClBupC,EAAY/rC,KAAKgsC,aAAanhC,GAClCygC,EAAO2B,WACPjtC,KAAKisC,eAAe,MAChBjB,GAAQe,IACR,GAAEf,GAAMz/B,QAAQ,UAAWwgC,GAC3B,GAAEA,GAAWxgC,QAAQ,YAAay/B,GAE1C,EAEAgB,aAAc,SAAUnhC,GACpB,IAAIygC,EAAStrC,KAAKwC,IAAI,UACtB8oC,EAAO4B,QAAS,EAChB,IAAIlC,EAAOjnC,OAAO5I,SAASgyC,iBAAiBtiC,EAAGizB,QAASjzB,EAAGkzB,SAE3D,OADAuN,EAAO4B,QAAS,EACXlC,EAGEA,EAAKjQ,QAAQ,cAFT,IAGf,EAEAkR,eAAgB,SAAUF,GACtB,IAAIqB,EAAgBptC,KAAKwC,IAAI,aAC7BxC,KAAK+f,IAAI,YAAagsB,GACtBqB,GAAiB,GAAEA,GAAeltC,YAAY,WAC9C6rC,GAAa,GAAEA,GAAW5rC,SAAS,UACvC,IAGJ,GAAE6J,OAAO,GAAQ,CACbqjC,eAAgB,CACZpjC,KAAM,CACFqjC,YAAa,GACbC,aAAc,IACdC,QAAS,IAEbtiC,MAAO,CAACqiC,aAAc,MAG1Btf,YAAa,CACTwf,mBAAoB,GACpBC,iBAAiB,EACjBC,WAAY,IAGhBC,qBAAsB,SAAUnhB,GACxBzsB,KAAK6tC,sBAAuCzyB,IAApBqR,IAE5BqhB,cAAc9tC,KAAK6tC,iBACnB7tC,KAAK6tC,gBAAkBpqB,aAAY,KAC/B,IAA4CjuB,EAAxCu4C,EAAQ,GAAE,6BAEVv4C,EADAu4C,EAAMvuC,KAAK,QAAQ4E,QAAQpE,KAAK8iB,MAAMkrB,UAAY,GAAKD,EAAMvuC,KAAK,QAAQ4E,QAAQ,GAAU7S,kBAAoB,GAAKw8C,EAAMvuC,KAAK,QAAQ4E,QAAQpE,KAAK8iB,MAAMmrB,eAAiB,GAAKF,EAAMvuC,KAAK,QAAQ4E,QAAQ,GAAU5S,uBAAyB,EACzOwO,KAAK8iB,MAAMorB,iBAAmB,GAAUz8C,gBAExCg7B,EAAkBzsB,KAAK8iB,MAAMmrB,cAAgB,GAAUz8C,qBAAuBwO,KAAK8iB,MAAMkrB,SAAW,GAAUz8C,gBACxHw8C,EAAMvuC,KAAK,OAAQhK,EAAI,GACxB,KACP,EAEA24C,oBAAqB,SAAU1hB,GAC3B,GAAIzsB,KAAK6tC,sBAAuCzyB,IAApBqR,EAA+B,CACvDqhB,cAAc9tC,KAAK6tC,iBACnB7tC,KAAK6tC,gBAAkB,KACvB,IAAIr4C,EAAMi3B,EAAkBzsB,KAAK8iB,MAAMmrB,cAAgB,GAAUz8C,qBAAuBwO,KAAK8iB,MAAMkrB,SAAW,GAAUz8C,gBACxH,GAAE,6BAA6BiO,KAAK,OAAQhK,EAChD,CACJ,EAEAskC,2BAA4B,WACpB95B,KAAKwC,IAAI,oBACTxC,KAAK4tC,uBACL7pC,OAAO5I,SAASyG,MAAQ,aAAiB,4CAA6C,CAAC5B,KAAKwC,IAAI,uBAEhGxC,KAAKmuC,sBACLpqC,OAAO5I,SAASyG,MAAQ,GAAUhF,YAE1C,EAEAiwB,oCAAqC,SAAUJ,GACvCzsB,KAAKwC,IAAI,oBACTxC,KAAK4tC,qBAAqBnhB,GAC1B1oB,OAAO5I,SAASyG,MAAQ,aAAiB,4CAA6C,CAAC5B,KAAKwC,IAAI,uBAEhGxC,KAAKmuC,oBAAoB1hB,GACzB1oB,OAAO5I,SAASyG,MAAQ,GAAUhF,YAE1C,EAEAq/B,qBAAsB,WAClB,IAAIC,EAAY,EAShB,OARA,kBAAsBxP,IAClBA,EAAQgH,MAAM5zB,MAAM5L,IACZA,EAAK+gC,UAAY/gC,EAAKmoC,YACtBH,GAAahoC,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,gBAAe,IAElE,IAAI85B,EAAyB5P,EAAQ4I,SAAS3e,QAAOzV,GAASA,EAAKsB,IAAI,gBAAkBtB,EAAKsB,IAAI,YAAgBtB,EAAKsB,IAAI,4BAA0D,QAA5BtB,EAAKsB,IAAI,kBAA4BP,OAC9Li6B,GAAaI,CAAsB,IAEhCJ,CACX,EAEAS,yBAA0B,WACtB38B,KAAK+f,IAAI,kBAAmB/f,KAAKi8B,uBACrC,EAEAmS,oBAAqB,WACjBpuC,KAAK+f,IAAI,kBAAmB,EAChC,EAEAsuB,oBAAqB,WACbruC,KAAKwC,IAAI,YACTxC,KAAKouC,qBAEb,EAEAxzB,WAAY,SAAUplB,GAClB,GAAMolB,WAAWplB,GAAK,KAClB,GAAMuW,QAAQgC,MAAM,aAAiB,qDAAqD,GAElG,EAEAugC,kBAAmB,SAAUzkC,GACzB,IAAI0kC,EAAe,IAAIxqC,OAAOooB,aAAatiB,EAAOjI,MAAO,CACrDsN,KAAMrF,EAAOvH,KACbxI,KAAM+P,EAAO/P,OAGjB,OADAsQ,WAAWmkC,EAAarjC,MAAM5C,KAAKimC,GAAe,KAC3CA,CACX,EAEAC,UAAW,SAAUzvC,EAAM0vC,EAAMlI,KACtBA,GAAqB,IAAXA,GAAkB9wB,MAAM8wB,MACrCA,EAAS,GACbkI,EAAOA,IAAQ,EACf,IAAIC,EAAW,GAAUl2C,OAAOuG,GAChC,GAAI2vC,EAAU,CACV,IAAIzzC,EAAQ,IAAI8I,OAAO4qC,MAAMD,GAI7B,OAHAzzC,EAAMwzC,KAAOA,EACbxzC,EAAMsrC,OAASA,EACftrC,EAAM8mC,OACC9mC,CACX,CAEJ,EAEA2zC,UAAW,SAAU3zC,GACbA,IACAA,EAAMqqC,QACNrqC,EAAMiW,SAEd,EAEA29B,kBAAmB,WACf,IAAIvjB,EAAOtrB,KAEX,GAAE+D,QAAQsf,GAAG,cAAc,SAAUxY,GACjCygB,EAAKvL,IAAI,UAAuB,UAAZlV,EAAGhH,KAC3B,IAEA,GAAEE,QAAQsf,GAAG,UAAU,SAAUxY,GAC7BygB,EAAKvL,IAAI,CACLjb,MAAOf,OAAO+qC,WACd/pC,OAAQhB,OAAOgrC,cAEnBzjB,EAAK/f,QAAQ,gBAAiB,CAAC8iB,cAAc,GACjD,IAEAtqB,OAAO5I,SAAS+T,KAAKk5B,WAAcv9B,IAC/BA,EAAGa,gBAAgB,EAGvB3H,OAAO5I,SAAS+T,KAAKq5B,OAAU19B,IAC3BA,EAAGa,gBAAgB,CAE3B,IAGJ,QAAY,SAAS,WACjB1L,KAAK+f,IAAI,kBAAmB,GAC5B/f,KAAKqjB,GAAG,yBAA0BrjB,KAAK85B,2BAA4B95B,MACnEA,KAAKqjB,GAAG,iBAAkBrjB,KAAKquC,oBAAqBruC,MACpDA,KAAK+f,IAAI,CACLivB,QAASjrC,OAAO5I,SAAS8zC,WACzBnqC,MAAOf,OAAO+qC,WACd/pC,OAAQhB,OAAOgrC,cAEnB/uC,KAAK6uC,oBACLK,YAAYC,cAAgBnvC,KAAKqtC,eAEjCrtC,KAAKovC,aAAe,IAAIpvC,KAAKqvC,YAE7BrvC,KAAKkP,KAAO,IAAIlP,KAAKsvC,KAAK,CAACxb,MAAO9zB,OAElCA,KAAKuvC,WAAavvC,KAAKkP,KAAKggB,SAAS,QAASlvB,KAAKwvC,SAAU,CACzD5hB,UAAW,kBAAmB9e,GAAI,GAAE3T,UAAU0E,KAAK,oBAAoB,KAE3EG,KAAKyvC,aAAezvC,KAAKkP,KAAKggB,SAAS,UAAWlvB,KAAK0vC,aACvD1vC,KAAKwiB,SAAS+G,WAAW1jB,OAAS7F,KAAKyvC,aAAa7U,YAAY56B,KAAKwiB,SAAS+G,WAAW1jB,OAEzF7F,KAAK2vC,aAAe3vC,KAAKkP,KAAKggB,SAAS,eAAgBlvB,KAAKwvC,SAAU,CAClE5hB,UAAW,iBAEf5tB,KAAK4vC,WAAa5vC,KAAKkP,KAAKggB,SAAS,OAAQlvB,KAAKwvC,SAAU,CACxD5hB,UAAW,cACf5tB,KAAKkP,KAAK0pB,WAAW54B,KAAKwiB,SAAS+G,WAAWF,MAC9CrpB,KAAK6vC,WAAa7vC,KAAK4vC,WAAW1gB,SAC9B,OAAQlvB,KAAKwvC,SAAU,CAAC5hB,UAAW,+BACvC5tB,KAAK8vC,YAAc9vC,KAAK4vC,WAAW1gB,SAC/B,QAASlvB,KAAKwvC,SAAU,CAAC5hB,UAAW,gCACxC5tB,KAAK+vC,oBAAsB/vC,KAAK4vC,WAAW1gB,SACvC,gBAAiBlvB,KAAKwvC,SAAU,CAAC5hB,UAAW,wCAChD5tB,KAAKgwC,WAAahwC,KAAK4vC,WAAW1gB,SAC9B,OAAQlvB,KAAKwvC,SAAU,CAAC5hB,UAAW,+BACvC5tB,KAAKiwC,kBAAoBjwC,KAAK4vC,WAAW1gB,SAAS,eAAgBlvB,KAAKwvC,SAAU,CAAC5hB,UAAW,2BAC7F5tB,KAAKkwC,cAAgBlwC,KAAKgwC,WAAW9gB,SACjC,WAAYlvB,KAAKmwC,aAAc,CAACrc,MAAO9zB,KAAKmiB,WACpD,GAAG,IAEH,YCzuHA,IAAI,GAAM,OACN,GAAY,GAAIhxB,UAChB,GAAY,GAAI0N,UAAUuxC,YAC1B,GAAQ,GAAIn9B,MACZ,GAAI,GAAItV,EACR,GAAI,GAAIC,EAGZ,mBAAyBujB,SAASC,MAAMpX,OAAO,CAC3CqmC,YAAa,MAEbhvB,SAAU,CACNvN,UAAW,EACXw8B,SAAS,EACTC,QAAQ,EACRC,SAAS,GAGbC,iBAAkB,WACdzwC,KAAK+iB,KAAK,YAAa,GAAM5Z,MACjC,EAEAunC,gBAAiB,SAAUluB,GACvBxiB,KAAK+iB,KAAK,GAAE/Y,OAAO,CAAC8J,UAAW,GAAM3K,OAAQqZ,GACjD,EAEAmuB,aAAc,WACV,MAAO,CACHz4B,IAAKlY,KAAKwC,IAAI,OACdsR,UAAW9T,KAAKwC,IAAI,aACpBggB,SAAU,GAAE/X,KAAKzK,KAAKsX,WAAY,CAC9B,MAAO,YAAa,QACpB,UAAW,SAAU,YAGjC,IAGJ,uBAA6B6J,SAASyvB,sBAAsB5mC,OAAO,CAC/D8pB,MAAO,mBAEP+c,mBAAoB,SAAUC,GAC1B,IAAItuB,EAAWxiB,KAAK+wC,OAAO,GAAE/mC,OAAO,CAChCkO,IAAK44B,EAAc54B,IACnBpE,UAAWg9B,EAAch9B,UACzBw8B,SAAS,EACTC,QAAQ,GACTO,EAActuB,WAEjB,OADAxiB,KAAKuL,QAAQ,eAAgBiX,GACtBA,CACX,IAGJ,0BAAgCrB,SAAS0B,iBAAiB7Y,OAAO,CAC7DqX,SAAU,CACNvN,UAAW,KAInB,cAAoBqN,SAAS0B,iBAAiB7Y,OAAO,CACjDqX,SAAU,CACN2vB,MAAO,KACPC,UAAU,GAGd1iB,YAAa,SAAU2iB,EAAQlyC,GAsC3B,GArCAgB,KAAK0S,KAAO1T,EAAQmyC,cACpBnxC,KAAK+iB,KAAK,CAACquB,WAAW,EAAOC,aAAc,WAC3CrxC,KAAKqjB,GAAG,oBAAoB,WACpBrjB,KAAKwC,IAAI,aACTxC,KAAKsxC,gBAELtxC,KAAKuxC,iBAEb,GAAGvxC,MACHA,KAAKqjB,GAAG,gBAAgB,WACM,OAAtBrjB,KAAKwC,IAAI,UACTxC,KAAK+iB,KAAK,CAACkuB,UAAU,EACVI,aAAcrxC,KAAK0S,KAAKzQ,OAAS,SAAW,UAE/D,GAAGjC,MACHA,KAAK0S,KAAK2Q,GAAG,kBAAkB,SAAUniB,GACjClB,KAAKwC,IAAI,cAAgBtB,EAAKsB,IAAI,YAClCxC,KAAK+iB,KAAK,YAAY,EAE9B,GAAG/iB,MACH,MAAU,gBAAgB,SAAUkX,GAC5BlX,KAAKwC,IAAI,cACL0U,EAAQxhB,WAAasK,KAAKwC,IAAI,aAC9B0U,EAAQs6B,aAAexxC,KAAKwC,IAAI,UACb,qBAAnB0U,EAAQu6B,SACZzxC,KAAK0xC,4BACL1xC,KAAK2xC,8BAEL3xC,KAAKwC,IAAI,cACT0U,EAAQxhB,WAAasK,KAAKwC,IAAI,aAC9B0U,EAAQs6B,aAAexxC,KAAKwC,IAAI,UACb,oBAAnB0U,EAAQu6B,QACRzxC,KAAK4xC,cAEb,GAAG5xC,MAEHA,KAAKu9B,MAAQ,IAAI,GAAEl2B,SACf,0BAA+B,CAC/B,IAAIwqC,EAAc,iCACX,0BACP,IACI,IAAInyC,EAAOgnB,KAAKC,MAAMxjB,KAAK0uC,IAG3B,OAFA7xC,KAAK+iB,KAAK,QAAS,WACnB/iB,KAAK8xC,aAAapyC,EAET,CAAX,MAAOoS,GAAI,CACjB,CACI,sBACA9R,KAAK+iB,KAAK,QAAS,4BACZ,qBAEP/iB,KAAKwC,IAAI,SACTxC,KAAK+xC,iBAEL/xC,KAAKu9B,MAAMl1B,SAEnB,EAEA2pC,aAAc,SAAUC,EAAQz8C,EAAKkK,EAAMsoB,EAAUnN,GACjD,IAAIkuB,EAAU,CACVllC,KAAMouC,EACNz8C,IAAK,GAAUoG,gBAAkBpG,EACjCg1C,QAAS,CAAC,cAAiB,SAAWxqC,KAAKwC,IAAI,UAC/C0vC,QAASlyC,KACTgD,YAAa,mBACbgmC,SAAU,OACVC,QAAS,CAACvpC,EAAMyyC,EAAYC,KACxBpqB,GAAYA,EAAStoB,EAAK,EAE9BqO,MAAO,CAACqkC,EAAOD,EAAYE,KACvBryC,KAAKsyC,WAAWF,EAAOv3B,EAAQ,GAGnCnb,IACAqpC,EAAQrpC,KAAOgnB,KAAK6rB,UAAU7yC,IAElC,GAAE0pC,KAAKL,EACX,EAEAyJ,WAAY,SAAU9yC,GAClB,OAAO,GAAEsK,OAAO,CACZy3B,OAAQ,GAAG,GAAU7kC,eAAe,OAAW,qBAChD8C,EACP,EAEAkyC,aAAc,WACgB,OAAtB5xC,KAAKwC,IAAI,SACTxC,KAAKgyC,aAAa,MAAO,qBAAsB,MAC1CtyC,IAC+B,eAAxBA,EAAK+yC,gBACLzyC,KAAK0yC,WAAWhzC,GAChBM,KAAKgyC,aAAa,MAAO,qCAAsC,KAC3DhyC,KAAK2yC,WAAWrqC,KAAKtI,MACrBA,KAAK4yC,iBAAiBtqC,KAAKtI,SAG/B,GAAM+L,QAAQgC,MAAM,aAAiB,sDACrC/N,KAAK+iB,KAAK,CAACiuB,MAAO,KAAMI,WAAW,IACnCpxC,KAAKuL,QAAQ,kBAAmB,MACpC,GAEJvL,KAAK4yC,iBAAiBtqC,KAAKtI,OAG/BA,KAAKuL,QAAQ,kBAAmB,KAExC,EAEAsnC,gBAAiB,SAAU36B,GACnBlY,KAAKwC,IAAI,aACTxC,KAAKgyC,aAAa,SAAU,qCAAsC,CAAC95B,IAAKA,GACpElY,KAAK2yC,WAAWrqC,KAAKtI,MACrBA,KAAK4yC,iBAAiBtqC,KAAKtI,OAG/BA,KAAKuL,QAAQ,kBAAmB,KAExC,EAEAmmC,0BAA2B,WACvB,GAAI1xC,KAAKwC,IAAI,aAAc,CACvB,IAAI9C,EAAO,GAAE2xB,IAAIrxB,KAAK0S,KAAKogC,MAAM,CAACxC,SAAS,KAAQ,SAAU9tB,GACzD,OAAOA,EAASmuB,cACpB,IACIjxC,EAAKuC,OACLjC,KAAKgyC,aAAa,QAAS,qCACvB,CAACe,cAAerzC,GAChBM,KAAK2yC,WAAWrqC,KAAKtI,MACrBA,KAAK4yC,iBAAiBtqC,KAAKtI,OAG/BA,KAAK4xC,cAEb,MACI5xC,KAAKuL,QAAQ,kBAAmB,KAExC,EAEAomC,2BAA4B,WACxB,GAAI3xC,KAAKwC,IAAI,cAAgBxC,KAAKwC,IAAI,YAAa,CAC/C,IAAIsR,EAAY9T,KAAK0S,KAAKsgC,gBAAgBxwC,IAAI,aAC1C9C,EAAOM,KAAK0S,KAAK2e,KAAI,SAAU7O,GAC/B,MAAO,CAACtK,IAAKsK,EAAShgB,IAAI,OAAQywC,MAAOzwB,EAAShgB,IAAI,SAC1D,IACAxC,KAAKgyC,aAAa,QAAS,qCACvB,CAACkB,WAAY,CAAC1wB,SAAU9iB,EAAMoU,UAAWA,IACzC9T,KAAK2yC,WAAWrqC,KAAKtI,MACrBA,KAAK4yC,iBAAiBtqC,KAAKtI,MAEnC,MACIA,KAAKuL,QAAQ,kBAAmB,KAExC,EAEA4nC,kBAAmB,SAAUzzC,GACzB,IAAI0zC,EAAe1zC,EAAK8wC,QACpBW,EAAgBzxC,EAAKqzC,cACrBC,EAAkBtzC,EAAKwzC,WAAWp/B,UAClCu/B,EAAa3zC,EAAKwzC,WAAW1wB,SAC7B9P,EAAO1S,KAAK0S,KACZu+B,EAAWjxC,KAAKwC,IAAI,YAyBxB,GAxBA,GAAE1C,KAAKszC,GAAelyC,IAClB,IAAIshB,EAAW9P,EAAKlQ,IAAItB,EAAKgX,KACzBsK,GAAYA,EAAShgB,IAAI,YACrBggB,EAAShgB,IAAI,cAAgBtB,EAAK4S,WACtC0O,EAASjX,QAAQ,kBAAkB,EACvC,IAEJ,GAAEzL,KAAKqxC,GAAe,SAAUL,GAC5B,IAAItuB,EAAW9P,EAAKlQ,IAAIsuC,EAAc54B,KAClCsK,IACIA,EAAShgB,IAAI,WACbggB,EAASO,KAAK,GAAE/Y,OAAO,CACnB8J,UAAWg9B,EAAch9B,UACzB08B,SAAS,EACTD,QAAQ,GACTO,EAActuB,WAEjBA,EAASO,KAAK,SAAU+tB,EAAch9B,WAAa0O,EAAShgB,IAAI,gBAGnEggB,GAAYyuB,IACbzuB,EAAW9P,EAAKm+B,mBAAmBC,GAE3C,IACIG,EAAU,CACV,IAAIqC,EAAY,CAAC,EAAGC,EAAY,EAChC,GAAEzzC,KAAKuzC,GAAY,SAAUG,GACzBF,EAAUE,EAAWt7B,KAAOs7B,EAAWP,MACnCO,EAAWP,MAAQM,IACnBA,EAAYC,EAAWP,MAE/B,IACAvgC,EAAKsgC,gBAAgBjwB,KAAK,YAAaiwB,GACvCtgC,EAAK5S,MAAM0iB,IACP,IAAItK,EAAMsK,EAAShgB,IAAI,OACnBywC,EAAQK,EAAUp7B,GACjB+6B,IACDM,GAAa,EACbN,EAAQM,GAEZ/wB,EAASO,KAAK,QAASkwB,EAAM,GAErC,CACAjzC,KAAKuL,QAAQ,kBAAmB7L,GAChCM,KAAK+iB,KAAK,YAAa,GAAM5Z,MACjC,EAEAmpC,WAAY,SAAUF,EAAOv3B,GACzB,IAAI0L,EAAS6rB,EAAM7rB,OACfktB,EAAWrB,EAAMsB,aACN,MAAXntB,IACAvmB,KAAK+iB,KAAK,CAACquB,WAAW,EAAOJ,MAAO,OACZ,kBAApByC,EAAS1S,SACe,cAApB0S,EAASE,SAEkB,YAApBF,EAASE,OAChB,GAAE7zC,KAAKE,KAAK0S,KAAKogC,MAAM,CAACxC,SAAS,KAAQ,SAAU9tB,GAC/CA,EAASjX,QAAQ,kBAAkB,EACvC,IAC2B,YAApBkoC,EAASE,QAChB,GAAM5nC,QAAQC,OAAO,aAAiB,+CAAgD,aAAiB,6CACnG,CAACO,UAAW,CAACjK,KAAM,aAAiB,QAASkK,cAAe,CAAClK,KAAM,aAAiB,4CACtFimB,MAAMrgB,IACJA,GAAUlI,KAAKuL,QAAQ,UAAU,OAKjDsP,GAAWA,EAAQ44B,EAAUltB,EACjC,EAEAqtB,OAAQ,SAAUC,EAAa7rB,EAAUnN,GACrC,IAAIkuB,EAAU,CACVllC,KAAM,OACNrO,IAAK,GAAUoG,gBAAkB,mBACjCoH,YAAa,mBACbgmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAUvyC,KAAKwyC,cAC1BvJ,QAASjhB,EACTja,MAAO,CAACqkC,EAAOD,EAAYE,KACvBryC,KAAKsyC,WAAWF,EAAOv3B,EAAQ,GAGvC,GAAIg5B,EAAY7C,MACZjI,EAAQyB,QAAU,CAAC,cAAiB,SAAWqJ,EAAY7C,WACxD,CACH,IAAIt7C,EAAWm+C,EAAYn+C,SACvBo+C,EAAWD,EAAYC,SAC3B/K,EAAQyB,QAAU,CAAC,cAAiB,SAAW,GAAMl3B,KAAK5d,EAAS,IAAIo+C,GAC3E,CACA,GAAE1K,KAAKL,EACX,EAEAgL,MAAO,SAAUr+C,EAAUo+C,GACvB9zC,KAAK4zC,OAAO,CAACl+C,SAAUA,EAAUo+C,SAAUA,GAAW9zC,KAAKg0C,QAAQ1rC,KAAKtI,MAChEA,KAAKi0C,cAAc3rC,KAAKtI,MACpC,EAEA+xC,eAAgB,WACZ/xC,KAAK4zC,OAAO,CAAC5C,MAAOhxC,KAAKwC,IAAI,UAAWxC,KAAKk0C,eAAe5rC,KAAKtI,MACzDA,KAAKm0C,qBAAqB7rC,KAAKtI,MAC3C,EAEA8xC,aAAc,SAAU+B,GACpB,GAAEzK,KAAK,CACHvlC,KAAM,OACNrO,IAAK,GAAUoG,gBAAkB,yBACjCoH,YAAa,mBACbgmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAUvyC,KAAKwyC,WAAWqB,IACrC5K,QAASjpC,KAAKo0C,cAAc9rC,KAAKtI,MACjC+N,MAAO,CAACqkC,EAAOD,EAAYE,KACvBryC,KAAKsyC,WAAWF,EAAOpyC,KAAKq0C,oBAAoB/rC,KAAKtI,MAAM,GAGvE,EAEAs0C,aAAc,WACV,IAAItD,EAAQhxC,KAAKwC,IAAI,SACP,OAAVwuC,GACAhxC,KAAKgyC,aAAa,SAAU,4BAA6B,CAAChB,MAAOA,IAErEhxC,KAAK+iB,KAAK,CAACquB,WAAW,EAAOJ,MAAO,OACpChxC,KAAKu0C,QAAQC,OACjB,EAEAN,eAAgB,SAAUx0C,EAAMyyC,EAAYpJ,GACxC/oC,KAAK+iB,KAAK,CAACiuB,MAAOtxC,EAAKsxC,MAAOI,WAAW,EAAMC,aAAc,WAC7DrxC,KAAK4xC,eACL5xC,KAAKu9B,MAAMl1B,SACf,EAEA8rC,qBAAsB,SAAUV,EAAUltB,GACtCvmB,KAAK+iB,KAAK,aAAa,GACvB/iB,KAAKu9B,MAAMl1B,SACf,EAEA2rC,QAAS,SAAUt0C,EAAMyyC,EAAYpJ,GACjC/oC,KAAK+iB,KAAK,CAACiuB,MAAOtxC,EAAKsxC,MAAOI,WAAW,IACzCpxC,KAAK4xC,cACT,EAEAqC,cAAe,SAAUR,EAAUltB,GAC/BvmB,KAAK+iB,KAAK,aAAa,GACvB/iB,KAAKuL,QAAQ,eAAgBkoC,EACjC,EAEAW,cAAe,SAAU10C,EAAMyyC,EAAYpJ,GACvC/oC,KAAK+iB,KAAK,CAACiuB,MAAOtxC,EAAKsxC,MAAOI,WAAW,IACzC,kBAAsB,YACtBpxC,KAAKu9B,MAAMl1B,SACf,EAEAgsC,oBAAqB,SAAUZ,EAAUltB,GACrCvmB,KAAK+iB,KAAK,aAAa,GACvB,kBAAsB,YACtB,GAAMhX,QAAQgC,MAAM,aAAiB,6CACrC/N,KAAKu9B,MAAMl1B,SACf,EAEAqqC,WAAY,SAAUhzC,GAClB,IAAIX,EAAM01C,EAEN11C,EADAW,EAAKqG,YAAcrG,EAAKsG,UACjBtG,EAAKqG,WAAa,IAAMrG,EAAKsG,UAE7BtG,EAAKhK,SAEZgK,EAAKg1C,eACLD,EAAmB/0C,EAAKg1C,aAAax8B,KAEzClY,KAAK+iB,KAAK,CAACrtB,SAAUgK,EAAKi1C,QAAS51C,KAAMA,EAAM61C,kBAAmBl1C,EAAKm1C,WAAYC,cAAep1C,EAAKq1C,gBAAiBL,aAAcD,GAC1I,EAEA9B,WAAY,SAAUjzC,GAClB,IAAI2xC,EAAerxC,KAAKwC,IAAI,gBAC5BxC,KAAK+iB,KAAK,oBAAgB3H,GACL,WAAjBi2B,GACK,wBACD,sBAA4B,IAAI,oBAAwB,CAACvd,MAAO9zB,QACpEA,KAAKuL,QAAQ,mBAAoB7L,IAEjCM,KAAKmzC,kBAAkBzzC,EAE/B,EAEAkzC,iBAAkB,SAAUa,EAAUltB,GAClCvmB,KAAKuL,QAAQ,kBAAmB,KACpC,EAEAypC,OAAQ,WACJ,GAAMjpC,QAAQiC,IAAI,aAAiB,eAAgB,aAAiB,kBAClD,CAAC,CAACjP,KAAM,kBAAmBqkC,SAAS,EAClC9gC,KAAM,aAAiB,2DAA4D,CAAE6L,eAAgB,aAAiB,iBAAiBoa,MAAMhpB,IACzJA,IACI,6BAAmC,GACnC,GAAEO,KAAK,uBAA4B4sB,IAC/BA,EAAQ3M,IAAI,iBAAiB,GAC7B2M,EAAQ3J,KAAK,iBAAiB,EAAM,IAE5C/iB,KAAKs0C,eACD/0C,EAAI01C,iBACJ,GAAEn1C,KAAKE,KAAK0S,KAAKogC,MAAM,CAACxC,SAAS,KAAS9tB,IACtCA,EAASjX,QAAQ,kBAAkB,EAAK,IAGpD,GAER,EAEAwL,MAAO,WACE/W,KAAKwC,IAAI,cACVxC,KAAKuxC,kBAETvxC,KAAK4xC,cACT,EAEAN,cAAe,WACXtxC,KAAKgyC,aAAa,OAAQ,qBAAsB,CAACkD,aAAc,uBACnE,EAEA3D,gBAAiB,WACb,GAAEnI,KAAK,CACHvlC,KAAM,SACNrO,IAAK,GAAUoG,gBAAkB,qBACjCoH,YAAa,mBACbgmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAC2C,aAAc,yBAE5C,IAGJ,sBAA4B,oBAAwB,CAChD3mB,YAAa,WAIT,OAHAvuB,KAAKm1C,gBAAkBn1C,KAAKrC,EAAE,wBAC9BqC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,wBAC9BqC,KAAKN,KAAK2jB,GAAG,wBAAyBrjB,KAAKq1C,4BAA6Br1C,MACjEA,IACX,EAEAs1C,SAAU,WACNt1C,KAAKu1C,aAAa,CAAC,GACnBrG,YAAYsG,mBACZx1C,KAAKm1C,gBAAgB5nC,IAAI,IAAIwB,QAC7B/O,KAAKo1C,gBAAgB7nC,IAAI,IACzBvN,KAAKi9B,eACT,EAEApF,MAAO,SAAUhtB,GACbA,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAKy1C,QAC/C,EAEAA,OAAQ,WACJ,GAAIz1C,KAAKN,KAAK8C,IAAI,kBAEd,YADAxC,KAAK+/B,SAGT//B,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAKu1C,aAAa,CAAC,GACnB,IAAI7/C,EAAWsK,KAAKm1C,gBAAgB5nC,MAChCumC,EAAW9zC,KAAKo1C,gBAAgB7nC,MACpC,OAAK7X,GAGLA,EAAWA,EAAS8O,OACfsvC,GAGLA,EAAWA,EAAStvC,OACpBxE,KAAKu1C,aAAa,CAACzB,SAAU,aAAiB,sDAC9C9zC,KAAK8zB,MAAMigB,MAAMr+C,EAAUo+C,IAJhB9zC,KAAK01C,cAAc,CAAC5B,SAAU,aAAiB,qDAJ/C9zC,KAAK01C,cAAc,CAAChgD,SAAU,aAAiB,6CAS9D,EAEAqqC,OAAQ,WACJ//B,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAKs1C,UACT,EAEAC,aAAc,SAAUv2C,GACpBgB,KAAKm1C,gBAAgBpoC,YAAY,UAAW/N,EAAQtJ,UAC/C8iC,SAAS,eAAel2B,KAAKtD,EAAQtJ,UAAY,IACtDsK,KAAKo1C,gBAAgBroC,YAAY,UAAW/N,EAAQ80C,UAC/Ctb,SAAS,eAAel2B,KAAKtD,EAAQ80C,UAAY,GAC1D,EAEA4B,cAAe,SAAU12C,GACrBgB,KAAKu1C,aAAav2C,GAClBgB,KAAKN,KAAKqgB,IAAI,kBAAkB,EACpC,EAEAkd,cAAe,WACX,IAAI0Y,EAAiB31C,KAAKN,KAAK8C,IAAI,kBACnCxC,KAAKrC,EAAE,eAAeoP,YAAY,WAAY4oC,EAClD,EAEAN,4BAA6B,WACzBr1C,KAAKi9B,gBACDj9B,KAAKN,KAAK8C,IAAI,mBACdxC,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAK41C,kBAAmB51C,MAC1DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKi0C,cAAej0C,QAElDA,KAAK8zB,MAAMz5B,IAAI,mBAAoB2F,KAAK41C,kBAAmB51C,MAC3DA,KAAK8zB,MAAMz5B,IAAI,eAAgB2F,KAAKi0C,cAAej0C,MAE3D,EAEA41C,kBAAmB,WACX51C,KAAK8zB,MAAMtxB,IAAI,cACfxC,KAAK61C,iBAEb,EAEA5B,cAAe,SAAUR,GACrBzzC,KAAK01C,cAAc,CAAC5B,SAAWL,GAAYA,EAAS1S,QAAW,aAAiB,wDACpF,EAEA+U,WAAY,SAAUjrC,GAClB,IAAIkrC,EAAShyC,OAAO0e,SAAS9gB,KACzBw/B,EAAW,GAAEt2B,EAAG4C,QAAQstB,QAAQ,eAAer7B,KAAK,YACxC,SAAZyhC,GACAnhC,KAAK4L,aACL,2BAIA7H,OAAO0e,SAAS9gB,KAAO,GAAUhG,mBAAqB,iBAAmBwlC,EAAW,YAAc4U,EAAS,oBACnH,IAGF,2BAAiC,6BAAiC,CAC9DhlB,UAAW,uCACXvD,SAAU,GAAUwoB,sBAEpB/kB,OAAQ,CACJ,oBAAqB,QACrB,oBAAqB,SACrB,6BAA8B,SAGlCjC,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACf6hC,QAAS,GACTjQ,MAAOv9B,KAAKs1C,SAAShtC,KAAKtI,MAC1BmL,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEA61C,gBAAiB,WACb71C,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAKkL,OACT,EAEAoqC,SAAU,WACNpG,YAAYsG,mBACZx1C,KAAKm1C,gBAAgB5nC,IAAI,IAAIwB,QAC7B/O,KAAKo1C,gBAAgB7nC,IAAI,GAC7B,EAEArC,MAAO,SAAU+qC,GACbj2C,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGN,oBAA0B,6BAAiC,CACvD+wB,UAAW,cACXvD,SAAU,GAAU0oB,aAEpBjlB,OAAQ,CACJ,oBAAqB,kBACrB,oBAAqB,SACrB,oBAAqB,aACrB,oBAAqB,qBACrB,6BAA8B,SAGlCjC,OAAQ,WACJhvB,KAAKs1C,UACT,EAEAO,gBAAiB,WACb71C,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC,kBAAsB,YAC1B,EAEAo2B,gBAAiB,WACb,kBAAsB,QAAS,CAAC,aAAgB,QACpD,EAEAC,mBAAoB,WAChB,kBAAsB,QAAS,CAAC,aAAgB,QACpD,IAGJ,qBAA2B,6BAAiC,CACxDrlB,UAAW,uCACXvD,SAAU,GAAU6oB,mBAEpBplB,OAAQ,CACJ,yCAA0C,gBAC1C,iBAAkB,qBAClB,6BAA8B,QAC9B,oBAAqB,aACrB,oBAAqB,cAGzBjC,OAAQ,SAAUhwB,GACd,IAAK,6BAED,YADA,GAAM+M,QAAQgC,MAAM,aAAiB,gDAGzC/O,IAAYA,EAAU,CAAC,GACvB,IAAIooB,EAAW,sBACXlP,EAAMlZ,EAAQkZ,KAAO,GA0BzB,OAzBAlY,KAAKrC,EAAE,0BAA0B4P,IAAI2K,GAAK1Y,KAAK,aAAc0Y,GACxDhY,YAAY,WACjBF,KAAKrC,EAAE,eAAe2T,OAA2B,IAApB8V,EAASnlB,QACtCjC,KAAKrC,EAAE,iBAAiB4T,OAA2B,IAApB6V,EAASnlB,QACxCjC,KAAKrC,EAAE,oCAAoCqd,QAC3C,GAAElb,KAAKsnB,GAAWsF,IACd1sB,KAAKrC,EAAE,oCAAoCkP,OACvC7M,KAAKs2C,kBAAkB5pB,GAAS,IAExC1sB,KAAKu2C,YAAYnvB,EAAS,IAC1BpnB,KAAKrC,EAAE,eAAe2E,KAAK,IAC3BtC,KAAKD,IAAI4L,UAAU,CACf6hC,QAAS,GACTjQ,MAAO,KACHv9B,KAAKs1C,SAAShtC,KAAKtI,MACnBA,KAAKrC,EAAE,mCAAmC28B,SAAS,CAC/CC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QACb,EAENxvB,SAAUnL,KAAK4L,WAAWtD,KAAKtI,QAE5BA,IACX,EAEAu2C,YAAa,SAAU7pB,GACnB1sB,KAAKrC,EAAE,sDACFqT,YAAYhR,KAAKs2C,kBAAkB5pB,GAC5C,EAEA4pB,kBAAmB,SAAU5pB,GACzB,IAAI9e,EAAQ,GAAE,GAAI/O,UAAUy2B,SAASkhB,yBAAyB,CAACt+B,IAAKwU,EAAQlqB,IAAI,UAEhF,OADAoL,EAAM/N,KAAK,kBAAkBoF,UAAUynB,EAAQvnB,aAAcnF,KAAK88B,aAC3DlvB,CACX,EAEA6oC,cAAe,SAAU5rC,GACrB,IAAI+C,EAAQ,GAAE/C,EAAG4C,QAAQstB,QAAQ,sBAC7BrO,EAAU,gBAAoB9e,EAAMlO,KAAK,QAC7CM,KAAKu2C,YAAY7pB,GACjB1sB,KAAK02C,mBAAmBhqB,EAC5B,EAEAgqB,mBAAoB,SAAUhqB,GAC1BA,EAAQ3M,IAAI,iBAAiB,GAC7B2M,EAAQiqB,oBACR32C,KAAK4L,YACT,EAEAiqC,gBAAiB,WACb71C,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAK4L,YACT,EAEAmjB,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAc,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,oBAA0B,oBAAwB,CAC9C+wB,UAAW,gDACXvD,SAAU,GAAUopB,cACpB9oB,YAAa,iBACbgP,YAAa,GAAU7lC,aAAaI,yBAEpC45B,OAAQ,CACJ,kBAAmB,eACnB,oBAAqB,QACrB,mBAAoB,gBACpB,mBAAoB,gBACpB,mBAAoB,iBAGxB1C,YAAa,WACTvuB,KAAKwiB,SAAW,KAChBxiB,KAAK62C,YAAc,KACnB72C,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKgvB,OAAQhvB,KACnD,EAEAgvB,OAAQ,SAAUtvB,EAAMV,GACpBgB,KAAKwiB,SAAW9iB,EAChBM,KAAKixC,SAAWjxC,KAAK8zB,MAAMtxB,IAAI,YAC/BxC,KAAKonB,SAAW,GAChBpnB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAOv9B,KAAKs1C,SAAShtC,KAAKtI,MAC1BmL,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEAs1C,SAAU,WACNt1C,KAAKrC,EAAE,kBAAkBqd,QACzB,IAAItI,EAAO1S,KAAK8zB,MAAMphB,KAClBokC,EAAe,CAAC,EAChBC,EAAc,CAAC,EACfC,EAAe,CAAC,EAChB1D,EAAY,CAAC,EACjB,GAAExzC,KAAKE,KAAKwiB,SAASuwB,eAAe,SAAUjC,GAC1CkG,EAAalG,EAAc54B,KAAO44B,CACtC,IACA9wC,KAAKg3C,aAAeA,EACpB,GAAEl3C,KAAKE,KAAKwiB,SAAS0wB,WAAW1wB,UAAU,SAAUgxB,GAChDF,EAAUE,EAAWt7B,KAAOs7B,EAAWP,KAC3C,IACA,GAAEnzC,KAAKE,KAAKwiB,SAASguB,SAAS,SAAUyG,GACpCF,EAAYE,EAAa/+B,KAAO++B,EAAanjC,SACjD,IAGA,GAAEhU,KAAKk3C,GAAc,CAAChlC,EAAKkG,KAElBxF,EAAKlQ,IAAI0V,KACV4+B,EAAa5+B,GAAO,GAAElO,OAAO,CACzBkO,IAAKA,EACLo4B,QAAStwC,KAAKixC,SACdiG,SAAU,eACXllC,GACP,IAEJU,EAAK5S,MAAM0iB,IACP,IAEI00B,EAFAh/B,EAAMsK,EAAShgB,IAAI,OACnBwP,EAAMglC,EAAa9+B,GAEnB,GAAE4Y,IAAIimB,EAAa7+B,IAEnBg/B,EAAWH,EAAY7+B,IAAQsK,EAAShgB,IAAI,aAAe,SAAW,YACtEs0C,EAAa5+B,GAAO,GAAElO,OAAO,CACzBktC,SAAUA,EACVC,YAAa,CAAC,SAAU,cACzB,GAAE1sC,KAAK+X,EAASlL,WAAY,CAAC,WAChCkL,EAASO,KAAK,UAAU,IACjB/Q,GAGHklC,EADAllC,EAAI8B,UAAY0O,EAAShgB,IAAI,aAClB,cACJwP,EAAI8B,UAAY0O,EAAShgB,IAAI,aACzB,YAEA,KAEfs0C,EAAa5+B,GAAO,GAAElO,OAAO,CACzBkO,IAAKA,EACLo4B,QAAS9tB,EAAShgB,IAAI,WACtB00C,SAAUA,EACVC,YAA0B,OAAbD,GAAoB,CAAC,cAAe,cAClDllC,EAAIwQ,UACPA,EAASO,KAAK,SAAuB,OAAbm0B,KAGxBJ,EAAa5+B,GAAO,GAAElO,OAAO,CACzBktC,SAAU,aACX,GAAEzsC,KAAK+X,EAASlL,WAAY,CAAC,WAChCkL,EAASO,KAAK,UAAU,GAC5B,IAIJ,IAAIwwB,EAAY,GAAEzd,IAAIwd,IAAc,EACpC,GAAExzC,KAAKwzC,GAAW,CAACL,EAAO/6B,KACtB4+B,EAAa5+B,GAAK+6B,MAAQA,CAAK,IAEnCvgC,EAAK5S,MAAM0iB,IACP,IAAItK,EAAMsK,EAAShgB,IAAI,OAClBs0C,EAAa5+B,GAAK+6B,QACnB6D,EAAa5+B,GAAK+6B,QAAWM,EACjC,IAGJvzC,KAAK82C,aAAeA,EACpB92C,KAAKonB,SAAW,GAAEiK,IAAIylB,GAAc,SAAU/rC,EAAOsL,GAAO,OAAOtL,CAAO,IAE1E/K,KAAKonB,SAAS4N,MAAK,SAAUoiB,EAAMC,GAC/B,OAAOD,EAAKnE,MAAQoE,EAAKpE,KAC7B,IACA,GAAEnzC,KAAKE,KAAKonB,SAAUpnB,KAAKs3C,eAAehvC,KAAKtI,OAC/CA,KAAKu3C,mBACT,EAEAD,eAAgB,SAAU90B,GACtB,IAAItK,EAAMsK,EAAStK,IACfs/B,EAAc,GAAE,GAAUC,2BAA2B,CACrDv/B,IAAKA,EACL2V,KAAM7tB,QAEVA,KAAKrC,EAAE,kBAAkBkP,OAAO2qC,EACpC,EAEAE,kBAAmB,SAAUC,GACzB,IAMIT,EANAU,EAAgB,GAAED,GAClBz/B,EAAM0/B,EAAcl4C,KAAK,OACzBm4C,EAAe73C,KAAK82C,aAAa5+B,GACrClY,KAAKixC,WAAa4G,EAAavH,SAAU,GACzCsH,EAAc7qC,YAAY,OAAQ8qC,EAAavH,SAC/CsH,EAAc/3C,KAAK,aAAa0K,KAAK,UAAWstC,EAAavH,SAGzD4G,EADAW,EAAavH,QACFuH,EAAaX,SACjBl3C,KAAK8zB,MAAMphB,KAAKlQ,IAAI0V,GAChB,YAEA,aAEf,IAAI4/B,EAAW,GAAUn+C,cAAcu9C,GAAUp9C,KAC7Ci+C,EAAaH,EAAc/3C,KAAK,cACpCk4C,EAAW73C,YAAY63C,EAAWv4C,KAAK,kBAClCA,KAAK,gBAAiBs4C,GAAU33C,SAAS23C,GAC9CF,EAAc/3C,KAAK,aAAayC,KAAK,aAAiB,GAAU3I,cAAcu9C,GAAUr9C,KAC5F,EAEA09C,kBAAmB,WACJv3C,KAAK8zB,MAAMphB,KAAtB,IACIu+B,EAAWjxC,KAAKixC,SACDjxC,KAAK82C,aACxB92C,KAAKrC,EAAE,aAAa4M,KAAK,UAAW0mC,EAAW,UAAY,IAC3DjxC,KAAKrC,EAAE,aAAa4M,KAAK,WAAY0mC,EAAW,WAAa,IAC7DjxC,KAAKrC,EAAE,iBAAiBmC,MAAK,CAAC4C,EAAKoM,KAC/B9O,KAAK03C,kBAAkB5oC,EAAG,GAElC,EAEAkpC,cAAe,SAAUntC,GACrB,IACIomC,EADU,GAAEpmC,EAAG4C,QACIlD,KAAK,WAC5BvK,KAAKixC,SAAWA,EAChBjxC,KAAKrC,EAAE,aAAa4M,KAAK,WAAY0mC,EAAW,WAAa,IACzDA,IACA,GAAEnxC,KAAKE,KAAKonB,UAAWywB,IACnBA,EAAavH,SAAU,CAAI,IAE/BtwC,KAAKrC,EAAE,iBAAiBmC,MAAK,CAAC4C,EAAKoM,KAC/B9O,KAAK03C,kBAAkB5oC,EAAG,IAGtC,EAEAmpC,cAAe,SAAUptC,GACrB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACf1C,EAAQ25B,EAAQn6B,KAAK,WACrBqtC,EAAgBlT,EAAQ3J,QAAQ,iBAChC7iB,EAAM0/B,EAAcl4C,KAAK,OAC7BM,KAAK82C,aAAa5+B,GAAKo4B,QAAUvlC,EACjC/K,KAAK03C,kBAAkBE,EAC3B,EAEAM,cAAe,SAAUrtC,GACrB,IAAI+sC,EAAgB,GAAE/sC,EAAG4C,QAAQstB,QAAQ,iBACrC7iB,EAAM0/B,EAAcl4C,KAAK,OACzBm4C,EAAe73C,KAAK82C,aAAa5+B,GACrC,IAAK2/B,EAAavH,UAAYuH,EAAaV,YACvC,OAEJ,IAAIA,EAAcU,EAAaV,YAC3Bz0C,EAAMy0C,EAAY/yC,QAAQyzC,EAAaX,UAAY,EACnDx0C,IAAQy0C,EAAYl1C,SACpBS,EAAM,GAEVm1C,EAAaX,SAAWC,EAAYz0C,GACpC1C,KAAK03C,kBAAkBE,EAC3B,EAEAO,aAAc,WACV,IAAIzlC,EAAO1S,KAAK8zB,MAAMphB,KAClBu+B,EAAWjxC,KAAKixC,SACpBjxC,KAAK8zB,MAAM/Q,KAAK,WAAY/iB,KAAKixC,UACjC,GAAEnxC,KAAKE,KAAKonB,UAAU,SAAUywB,GAC5B,IAAI3/B,EAAM2/B,EAAa3/B,IACnBsK,EAAW9P,EAAKlQ,IAAI0V,GACxB,GAAIsK,EAAU,CACVA,EAASO,KAAK,UAAW80B,EAAavH,SAClCW,GACAzuB,EAASO,KAAK,QAAS80B,EAAa5E,OAExC,IAAIiE,EAAWW,EAAaX,SACX,cAAbA,EACA10B,EAASiuB,mBACW,gBAAbyG,GAA2C,WAAbA,GACrC10B,EAASO,KAAK,YAAa,EAEnC,EACKP,GAAYq1B,EAAavH,UAC1B9tB,EAAW9P,EAAKm+B,mBACZ,GAAEpmC,KAAKotC,EAAc,CAAC,WAAY,iBAE9C,IACA73C,KAAK8zB,MAAM4d,4BACX1xC,KAAKo4C,SAAU,EACfp4C,KAAKkL,OACT,EAEA6jB,OAAQ,WACJ/uB,KAAKD,IAAI+K,SACL,iBAAqB,UACrB,kBAAsB,YAE9B,EAEAI,MAAO,WACElL,KAAKo4C,SACNp4C,KAAK8zB,MAAMvoB,QAAQ,kBAAmB,MAE1CvL,KAAKo4C,QAAU,KACfp4C,KAAKwiB,SAAW,KAChBxiB,KAAKg3C,aAAe,KACpBh3C,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,kBAAwB,oBAAwB,CAC5C+wB,UAAW,yBACXvD,SAAU,GAAU6qB,eACpBvb,YAAa,GAAU7lC,aAAaG,eAEpC65B,OAAQ,CACJ,2BAA4B,cAC5B,mBAAoB,QACpB,oBAAqB,SACrB,0BAA2B,cAC3B,2BAA4B,cAC5B,8BAA+B,iBAC/B,oBAAqB,eACrB,kBAAmB,aACnB,0BAA2B,eAG/B1C,YAAa,WACTvuB,KAAKD,IAAIsJ,SAASrJ,KAAKytB,OAAO9vB,EAAE,wCAChCqC,KAAKukC,KAAOvkC,KAAKytB,OAAO9vB,EAAE,uBAC1BqC,KAAKs4C,2BACLt4C,KAAKu4C,cAAgB,GAAM73B,OAAOhY,gBAAgB1I,KAAK8zB,MAAMtxB,IAAI,aACjExC,KAAK8zB,MAAMzQ,GAAG,kBAAmBrjB,KAAKm9B,WAAYn9B,MAClDA,KAAK8zB,MAAMzQ,GAAG,cAAerjB,KAAKw9B,aAAcx9B,MAChDA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKs4C,yBAA0Bt4C,MACjEA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKw4C,mBAAoBx4C,MAC3DA,KAAK8zB,MAAMzQ,GAAG,2BAA4BrjB,KAAKy4C,qBAAsBz4C,MACrEA,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAKy4C,qBAAsBz4C,MACjEA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAK+zC,MAAO/zC,MACrCA,KAAKN,KAAK2jB,GAAG,cAAerjB,KAAK04C,iBAAkB14C,MACnDA,KAAKN,KAAK2jB,GAAG,kBAAmBrjB,KAAK24C,eAAgB34C,MACrDA,KAAKN,KAAKqgB,IAAI,YAAY,EAC9B,EAEAiP,OAAQ,WACJhvB,KAAKN,KAAKqgB,IAAI,QAAQ,GACtB/f,KAAKrC,EAAE,gBAAgBgC,KAAK,IAC5BK,KAAKw4C,qBACLx4C,KAAKy4C,uBACLz4C,KAAKrC,EAAE,aAAa28B,SAAS,CACzBC,WAAY,IACZC,YAAa,IACbE,OAAO,GAEf,EAEAke,eAAgB,WACZ54C,KAAKN,KAAKqgB,IAAI,YAAa/f,KAAKN,KAAK8C,IAAI,YAC7C,EAEAm2C,eAAgB,WACZ,IAAIE,EAAW74C,KAAKN,KAAK8C,IAAI,YAC7BxC,KAAKrC,EAAE,UAAUoP,YAAY,mBAAoB8rC,GACjD74C,KAAKrC,EAAE,UAAUoP,YAAY,qBAAsB8rC,GACnD74C,KAAKrC,EAAE,uBAAuB2T,OAAOunC,EACzC,EAEAJ,qBAAsB,WAClB,IAAIK,EAAgB94C,KAAK8zB,MAAMtxB,IAAI,qBAC/BsyC,EAAgB90C,KAAK8zB,MAAMtxB,IAAI,iBACnCxC,KAAKrC,EAAE,iBAAiBuT,SACxBlR,KAAKrC,EAAE,mBAAmBmC,MAAK,SAAU4C,EAAKxB,GAC1C,IAAI63C,EAAe,GAAE73C,GACrB63C,EAAa54C,SAAS,cACtB44C,EAAal5C,KAAK,gBAAgByC,KAAK,aAAiB,6BACxDy2C,EAAal5C,KAAK,aAAayC,KAAK,aAAiB,mBAAmBpC,YAAY,aACxF,IACA,GAAEJ,KAAKg5C,GAAgBE,IACnB,IAAIC,EAAWD,EAAMpvC,GACjBsvC,EAAgBF,EAAMA,MACtBG,EAAcH,EAAMI,SACF,GAAE,GAAUC,kBAAkB,CAACJ,SAAUA,EAAUD,MAAOE,EAAeE,SAAUD,EAAatzC,MAAO7F,KAAKu4C,iBAClHxkB,aAAa/zB,KAAKrC,EAAE,qBAAqB,IAE7D,GAAEmC,KAAKg1C,GAAgBwE,IACnB,IAAIC,EAAkBD,EAAOnY,SACzBqY,EAAcF,EAAOvzC,WAAa,IAAMuzC,EAAOtzC,UACnDhG,KAAKrC,EAAE,IAAK47C,EAAkB,WAAWr5C,YAAY,cACrDF,KAAKrC,EAAE,IAAM47C,EAAkB,qBAAqBj3C,KAAK,aAAiB,sBAAsBnC,SAAS,cACzGH,KAAKrC,EAAE,IAAK47C,EAAkB,wBAAwB55C,KAAK,GAAE,8BAA8B65C,gDAA0D,aAAiB,uBAAwB,CAACD,aAA2B,GAElO,EAEAE,WAAY,SAAU5uC,GAClB,GAAK7K,KAAK8zB,MAAMtxB,IAAI,WAAa,GAAEqI,EAAG4C,QAAQT,SAAS,cAAgB,CAGlD,UAFC,GAAEnC,EAAG4C,QAAQstB,QAAQ,4BACZv7B,KAAK,MAE5B,GAAMuM,QAAQyC,gBAAgB,aAAiB,4CAA6C,KAAM,CAACnB,wBAAyB,aAAiB,uDAAwD,CAAEc,eAAgB,aAAiB,oBAAoBoa,MAAMmxB,IAC1PA,GACA15C,KAAK8zB,MAAMke,aAAa,OAAQ,gCAAiC,CAACgH,MAAOU,IACpEC,IACG,IAAI9E,EAAa70C,KAAK8zB,MAAMtxB,IAAI,qBAChCqyC,EAAWzzC,KAAKu4C,GAChB35C,KAAK8zB,MAAM/T,IAAI,oBAAqB80B,GACpC70C,KAAKy4C,sBAAsB,IAE/B,CAACrG,EAAOD,EAAYE,KAChBryC,KAAKrC,EAAE,gBAAgB2E,KAAK8vC,EAAM4G,MAAM,GAAG,GAEvD,IAIJh5C,KAAK45C,aAEb,CACJ,EAEAC,YAAa,SAAUhvC,GACnB,IAEIquC,EAFU,GAAEruC,EAAG4C,QACOstB,QAAQ,4BACFr7B,KAAK,SACrC,GAAMqM,QAAQyC,gBAAgB,aAAiB,uBAAwB,KAAM,CAACnB,wBAAyB,aAAiB,0DAA2D,CAAEc,eAAgB,aAAiB,kBAAmBQ,mBAAoB,aAAiB,sBAAuBD,UAAWwqC,IAAgB3wB,MAAM7nB,IAC9TA,IACIA,IAASw4C,EACTl5C,KAAK8zB,MAAMke,aAAa,OAAQ,gCAAiC,CAACgH,MAAOt4C,IAGzEV,KAAK8zB,MAAMke,aAAa,OAAQ,gCAAiC,CAACtxC,KAAMA,IACnEi5C,IACG,IAAI9E,EAAa8E,EAAU9E,WAC3B70C,KAAK8zB,MAAM/T,IAAI,oBAAqB80B,GACpC70C,KAAKy4C,sBAAsB,IAC5B,CAACrG,EAAOD,EAAYE,KACnBryC,KAAKrC,EAAE,eAAe2E,KAAK8vC,EAAM1xC,KAAK,GAAG,IAGzD,GAER,EAEAo5C,aAAc,SAAUjvC,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACnB,IAAKi3B,EAAQ13B,SAAS,oBAAqB,CACvC,IAAI+sC,EAAerV,EAAQ3J,QAAQ,4BAC/BoG,EAAW4Y,EAAav6C,KAAK,MAEjC,GADeu6C,EAAar6C,KAAK,SACnB,CACUq6C,EAAar6C,KAAK,SACtC,GAAMqM,QAAQiC,IAAI,aAAiB,+CAAgD,aAAiB,sBAAuB,KAAM,CAACG,eAAgB,aAAiB,uBAAuBoa,MAAMrgB,IACxLA,GACAlI,KAAK8zB,MAAMke,aAAa,SAAU,gCAAkC+H,EAAar6C,KAAK,MAAQ,IAAK,MAC9Fi6C,IACG,IAAI9E,EAAa70C,KAAK8zB,MAAMtxB,IAAI,qBAC5Bw3C,EAAqBnF,EAAWzwC,QAAQywC,EAAWh1C,MAAKm5C,GAASA,EAAMpvC,KAAOmwC,EAAar6C,KAAK,SACpGm1C,EAAWoF,OAAOD,EAAoB,GACtCh6C,KAAK8zB,MAAM/T,IAAI,oBAAqB80B,GACpC70C,KAAKy4C,sBAAsB,IAC5B,CAACrG,EAAOD,EAAYE,KACnBryC,KAAK8zB,MAAM8d,cAAc,GAErC,GAER,KACsB,UAAbzQ,GACL,GAAMp1B,QAAQiC,IAAI,aAAiB,gDAAiD,aAAiB,sBAAuB,CAACmzB,IAAY,KAAM,CAAChzB,eAAgB,aAAiB,uBAAuBoa,MAAMrgB,IACtMA,GACAlI,KAAK8zB,MAAMke,aAAa,OAAQ,mCAAoC,CAAC7Q,SAAUA,IAC3E,KACI,IAAI+Y,EAAcl6C,KAAK8zB,MAAMtxB,IAAI,iBAC7B23C,EAAuBD,EAAY91C,QAAQ81C,EAAYr6C,MAAKy5C,GAAUA,EAAOnY,WAAaA,KAC9F+Y,EAAYD,OAAOE,EAAsB,GACzCn6C,KAAK8zB,MAAM/T,IAAI,gBAAiBm6B,GAChCl6C,KAAKy4C,sBAAsB,IAC5B,CAACrG,EAAOD,EAAYE,KACnBryC,KAAK8zB,MAAM8d,cAAc,GAErC,GAGZ,CACJ,EAEAzU,WAAY,WACRn9B,KAAKrC,EAAE,4BAA4B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,aACvDxC,KAAKu4C,cAAgB,GAAM73B,OAAOhY,gBAAgB1I,KAAK8zB,MAAMtxB,IAAI,YACrE,EAEAg7B,aAAc,WACV,IAAIz+B,EAAOiB,KAAK8zB,MAAMtxB,IAAI,QACtBxH,EAAQgF,KAAK8zB,MAAMtxB,IAAI,UAAY,GAAMke,OAAO9a,iBAAiB7G,GACrEiB,KAAKrC,EAAE,kBAAkBsH,UAAU,GAAMyb,OAAOxc,eAAelJ,GAAQgF,KAAK88B,YAChF,EAEAwb,yBAA0B,WACtB,IAAIlH,EAAYpxC,KAAK8zB,MAAMtxB,IAAI,aAC/BxC,KAAKukC,KAAKx3B,YAAY,SAAUqkC,GACtBrkC,YAAY,WAAYqkC,GAClCpxC,KAAKrC,EAAE,sCAAsC2T,OAAO8/B,GACpDpxC,KAAKrC,EAAE,sBAAsB2T,OAAO8/B,GACpCpxC,KAAKrC,EAAE,cAAc2T,OAAO8/B,GACxBA,IACApxC,KAAKm9B,aACLn9B,KAAKw9B,eACLx9B,KAAK04C,mBACL14C,KAAKw4C,sBAETx4C,KAAKrC,EAAE,cAAc4T,OAAO6/B,GAC5BpxC,KAAKrC,EAAE,aAAa2T,OAAO8/B,EAC/B,EAEAsH,iBAAkB,WACd,IAAI0B,EAAOp6C,KAAKN,KAAK8C,IAAI,QACzBxC,KAAKrC,EAAE,qBAAqB4T,OAAO6oC,GACnCp6C,KAAKrC,EAAE,gCAAgC2T,OAAO8oC,EAClD,EAEA5B,mBAAoB,WAChB,IAAI6B,EAAYr6C,KAAK8zB,MAAMtxB,IAAI,aAC/B,GAAI63C,EAAW,CACX,IAAIC,EAAa,GAAMnxC,MAAQkxC,EAC/Br6C,KAAKrC,EAAE,mBAAmB2E,KAAK,aAAiB,kCAAmC,CAAC,GAAIzE,OAAO,GAAIA,OAAOsL,MAAQ,IAAKmxC,GAAYC,YACvI,MACIv6C,KAAKrC,EAAE,mBAAmB2E,KAAK,aAAiB,yCAExD,EAEAk4C,YAAa,WACJx6C,KAAKN,KAAK8C,IAAI,UACfxC,KAAKN,KAAKqgB,IAAI,QAAQ,GACtB/f,KAAK8zB,MAAM6N,KAAK,mBAAmB,WAC/B3hC,KAAKN,KAAKqgB,IAAI,QAAQ,EAC1B,GAAG/f,MACHA,KAAK8zB,MAAM/Q,KAAK,eAAgB,UAChC/iB,KAAK8zB,MAAM8d,eAEnB,EAEAmC,MAAO,WACH,GAAI,yBAA+B,6BAAmC,EAClE,mCACC,CACD,IAAIrnB,EAAU,yBACVA,IACAA,EAAQ3M,IAAI,iBAAiB,GAC7B2M,EAAQiqB,oBAEhB,CACJ,EAEA3B,OAAQ,WACJh1C,KAAK8zB,MAAMkhB,QACf,EAEAyF,sBAAuB,WACnB,GAAM1uC,QAAQgC,MAAM,aAAiB,6BACzC,EAEA2sC,YAAa,WACT,IAAI7F,EAAa70C,KAAK8zB,MAAMtxB,IAAI,qBAChC,GAAIqyC,EAAY,CACZ,IAAI8F,EAAiB9F,EAAWh1C,MAAK65C,IAA0B,IAAlBA,EAAKN,YACP,GAAvCvE,EAAWzwC,QAAQu2C,GACnB,GAAEvR,KAAK,CACHvlC,KAAM,OACNrO,IAAK,GAAUoG,gBAAkB,oCACjCoH,YAAa,mBACbgmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAACyG,MAAO2B,EAAe3B,QAC5C/P,QAAS,KACL,GAAMl9B,QAAQ6C,OAAO,aAAiB,qBAAsB,aAAiB,yBAA0B,CAAC+rC,EAAe3B,QAAQ,EAEnIjrC,MAAO/N,KAAKy6C,sBAAsBnyC,KAAKtI,QAI3CA,KAAKy6C,uBACb,MAEIz6C,KAAKy6C,uBACb,EAEAb,YAAa,WACT,GAAMh/B,WAAW,GAAUjf,mBAAqB,WAAaqE,KAAK8zB,MAAMtxB,IAAI,SAChF,IAIJ,QAAY,SAAS,WACbxC,KAAK46C,sBAAwB,IAAI56C,KAAK66C,oBAAoB,KAAM,CAC5Dx4B,aAAcriB,KAAKsiB,iBAAmB,sBAE1CtiB,KAAK46C,sBAAsBr4B,QAC3BviB,KAAK46C,sBAAsB5H,gBAAkB,IAAIhzC,KAAK86C,uBAClD,CAAClxC,GAAI,4BACL,CAACyY,aAAcriB,KAAKsiB,iBAAkBC,MAAO,UAEjD,GAAUtlB,wBACV+C,KAAK+6C,YAAc,IAAI/6C,KAAKg7C,WAAW,CAACpxC,GAAI,eACxC,CACIyY,aAAcriB,KAAKsiB,iBAAkBC,MAAO,SAC5C4uB,cAAenxC,KAAK46C,yBAI5B56C,KAAKi7C,mBAAqB,uBACtB,eAAgBj7C,KAAKk7C,iBAAkB,CAACpnB,MAAO9zB,KAAK+6C,cAExD,GAAU99C,wBACV+C,KAAKkwC,cAAchhB,SAAS,cAAelvB,KAAKm7C,eAC5C,CAACrnB,MAAO9zB,KAAK+6C,cAEjB/6C,KAAKo7C,qBAAuB,IAAIp7C,KAAKq7C,kBAAkB,CAACvnB,MAAO9zB,KAAK+6C,cACpE/6C,KAAKs7C,gBAAkB,IAAI,2BAA+B,CACtD7tB,OAAQztB,KAAKo7C,qBACbtnB,MAAO9zB,KAAK+6C,cAGxB,GAAG,IAEH,Y,gBCtvCA,IAAI,GAAM,OACN,GAAI,GAAIn9C,EACR,GAAO,GAAIsV,KACX,GAAM,GAAI8iB,IACV,GAAQ,GAAI/iB,MACZ,GAAU,GAAIvU,QACd,GAAY,GAAIvN,UAEpB,GAAQ40B,IAAM,SAAU+E,EAAWlF,IACjB,GAAUzzB,YAAc,GAAUD,iBAC3C,GAAUC,WAAa,GAAUH,gBAC9B84B,GAAa,GAAQywB,SAASC,MACjC,GAAUrpD,WAAa,GAAUJ,iBAC9B+4B,GAAa,GAAQywB,SAASE,SAElC,GAAQ98B,KAAK,iBACb,GAAQA,KAAKiH,IAEbA,GAAOA,EAAIrQ,SAAS,qBAAuBuV,IAAc,GAAQywB,SAASE,OAC1E,GAAM1vC,QAAQgC,MAAM6X,EAC5B,EAEA,GAAQ81B,oBAAoB,WAAY,CACpCC,YAAa,KAGbl3B,KAAM,SAASm3B,GACX57C,KAAK27C,YAAcC,EAGnB,IAAIp4C,EAAI,EACR2S,OAAOC,KAAK,GAAQylC,QAAQxpC,SAAQ,SAAUgE,GAC1C7S,EAAIlH,KAAKw5B,IAAItyB,EAAG,GAAQq4C,OAAOxlC,GACnC,IAMA,GAAQylC,aAAa,WAAY,sBACjC,GAAQD,OAAOE,SAAkBv4C,EAAI,EACrC,GAAQq4C,OAAOG,SAAkBx4C,EAAI,EACrC,GAAQq4C,OAAOI,WAAkBz4C,EAAI,EACrC,GAAQq4C,OAAOK,SAAkB14C,EAAI,EACrC,GAAQq4C,OAAOM,cAAkB34C,EAAI,EAEjCo4C,EAAKQ,QACFR,EAAKQ,MAAMC,YACVT,EAAKQ,MAAMC,WAAW,GAAQnmB,GAAG8lB,UAClCJ,EAAKQ,MAAME,SACVV,EAAKQ,MAAME,QAAQ,GAAQpmB,GAAG8lB,SAAU,CAACO,MAAM,MAIvD,IAAIjxB,EAAOtrB,KAAMw8C,EAAQZ,EAAKY,MAAMl0C,KAAKszC,GACzCA,EAAKY,MAAQ,WACTA,IACAlxB,EAAKmxB,aAAe,GACpBnxB,EAAK7R,OAAS,CAAC,EACf6R,EAAKoxB,YAAa,CACtB,EAGA,IAAIC,EAAaf,EAAKgB,YAAYt0C,KAAKszC,GACvCA,EAAKgB,YAAc,SAAUC,EAAK70B,EAAU80B,GACxC,GAAKxxB,EAAKyxB,aAeFzxB,EAAK0xB,YAaD1xB,EAAK2xB,wBAAwBJ,EAAK70B,EAAU80B,KAE5CxxB,EAAK4xB,oBAAqB,SACnB5xB,EAAKyxB,eAdhBzxB,EAAK6xB,iBAAmB,CACpBN,IAAKA,EACLC,IAAKA,GAELxxB,EAAK8xB,aAAaP,EAAK70B,EAAU80B,KAEjCxxB,EAAK4xB,oBAAqB,SACnB5xB,EAAKyxB,oBAvBpB,GAAIzxB,EAAK4xB,mBAAoB,CAEzB,IAAIG,EAAWzB,EAAKyB,SACpBzB,EAAKyB,SAAW,GAAQC,WAAWh8C,UAAU+7C,SAC7C,IAAIE,EAAW3B,EAAK2B,SACpB3B,EAAK2B,SAAW,GAAQD,WAAWh8C,UAAUi8C,SAC7CZ,EAAWE,EAAK70B,EAAU80B,GAC1BlB,EAAKyB,SAAWA,EAChBzB,EAAK2B,SAAWA,SACTjyB,EAAK4xB,kBAChB,MACIP,EAAWE,EAAK70B,EAAU80B,EAwBtC,EAGA,IAAIU,EAAW5B,EAAK6B,aAAan1C,KAAKszC,GACtCA,EAAK6B,aAAe,SAASC,GACzB,QAAuB,IAAZA,EAAyB,CAChC,IAAI9B,EAAO57C,KAAK27C,YAEhB,IAAK37C,KAAKyZ,OAAO/jB,WAAasK,KAAK29C,SAAW39C,KAAKyZ,OAAOq6B,SAEtD,YADA,GAAQn1B,KAAK,yBAIjB,IAAIzG,EAAMlY,KAAKyZ,OAAO/jB,SAAW,IAAMsK,KAAK29C,OAE5C/B,EAAK1jC,IAAMA,EACX0jC,EAAKgC,QAAU,GAAQC,kBAAkBjC,EAAK1jC,KAC9C0jC,EAAKkC,QAAU,GAAQC,eAAenC,EAAK1jC,KAC3C0jC,EAAKoC,KAAOh+C,KAAKyZ,OAAOq6B,SAExB,IAAI+I,EAAM78C,KAAKm9C,iBAAiBN,IAC5B70B,EAAW4zB,EAAKqC,iBAChBnB,EAAM98C,KAAKm9C,iBAAiBL,IAChClB,EAAKgB,YAAYC,EAAK70B,EAAU80B,EACpC,MACIU,EAASE,EAEjB,EAAEp1C,KAAKtI,KAEX,EA6BAk+C,QAAS,SAASP,EAAQ31B,EAAUm2B,EAAMC,EAAMC,GAC5C,IAAIzC,EAAO57C,KAAK27C,YAChB37C,KAAK29C,OAAS,GAAQW,iBAAiBX,GACvC39C,KAAKy8C,aAAe,GACpBz8C,KAAKyZ,OAAS,CAAC,EACfzZ,KAAK08C,YAAa,EAElB18C,KAAK+8C,cAAe,EAEpBnB,EAAKsC,QAAQl+C,KAAK29C,OAAQ,GAAI31B,EAAUm2B,EAAMC,EAAMC,EACxD,EAGAE,mBAAoB,SAASZ,EAAQ31B,EAAUm2B,EAAMC,EAAMC,GACvD,IAAIzC,EAAO57C,KAAK27C,YAChB37C,KAAK29C,OAAS,GAAQW,iBAAiBX,GACvC39C,KAAKy8C,aAAe,GACpBz8C,KAAKyZ,OAAS,CAAC,EACfzZ,KAAK08C,YAAa,EAElB18C,KAAK+8C,cAAe,EACpB/8C,KAAKg9C,aAAc,EAEnBpB,EAAKsC,QAAQl+C,KAAK29C,OAAQ,GAAI31B,EAAUm2B,EAAMC,EAAMC,EACxD,EAEAG,wBAAyB,SAAStmC,EAAK47B,EAAU9rB,EAAUm2B,EAAMC,EAAMC,GACnE,IAAIzC,EAAO57C,KAAK27C,YAChB37C,KAAK29C,OAAS,GAAQW,iBAAiBpmC,GACvClY,KAAKy8C,aAAe,GACpBz8C,KAAKyZ,OAAS,CAAC,EACfmiC,EAAK6C,uBAAuB,CAAC,GAAQC,cACjC,GAAQC,aACR,GAAQC,QACR,GAAQC,UACR,GAAQC,WAEZlD,EAAKsC,QAAQhmC,EAAK47B,EAAU9rB,EAAUm2B,EAAMC,EAAMC,EACtD,EAYAjB,aAAc,SAAUP,EAAKkC,EAAWjC,GACpC,IAAIlB,EAAO57C,KAAK27C,YAEhB,GAAQh9B,KAAK,2BACbi9B,EAAKxK,WAAY,EAEjB,IAAI4N,EAAWpD,EAAKqD,OAAOC,WAAWrC,GACtC,GAAKmC,EAAL,CAkBA,GAhBIpD,EAAKyB,WAAa,GAAQC,WAAWh8C,UAAU+7C,WAC3C2B,EAASvsC,WAAampC,EAAKqD,OAAOE,OAASH,EAAS5sC,WAAWnQ,OAC/D25C,EAAKyB,SAAS2B,EAAS5sC,WAAW,IAElCwpC,EAAKyB,SAAS2B,IAGlBpD,EAAK2B,WAAa,GAAQD,WAAWh8C,UAAUi8C,WAC3CT,EACAlB,EAAK2B,SAAST,GAEdlB,EAAK2B,SAAS,GAAQ6B,UAAUJ,KAIxBpD,EAAKqD,OAAOrC,YAAYoC,KACtB,GAAQnD,OAAOwD,SAC7B,OAAO,EAIX,IAAIC,EAAWN,EAASO,qBAAqB,YACzCC,EAAaR,EAASO,qBAAqB,aAC/C,OAAwB,IAApBD,EAASr9C,QAAsC,IAAtBu9C,EAAWv9C,QACpC25C,EAAKqD,OAAOQ,kBAAkBV,IACvB,GAGa,IAApBO,EAASr9C,QACT25C,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAU,OAC5C,IAIXH,EAAK+D,eAAe3/C,KAAK4/C,iBAAiBt3C,KAAKtI,MAC3C,KAAM,KAAM,KAAM,MACtB47C,EAAK/0B,KAAK,GAAI,CAAChjB,KAAM,MAAO+F,GAAI,KAAQ2M,GAAIvW,KAAK29C,SAAUxqC,EAAE,QACzD,CAAC8iB,MAAO,GAAQC,GAAG8lB,WAAWprB,SAE3B,EAzCkB,CA0C7B,EACAqsB,wBAAyB,SAAUJ,EAAKkC,EAAWjC,GAC/C,IAAIlB,EAAO57C,KAAK27C,YAEhB,GAAQh9B,KAAK,2BACbi9B,EAAKxK,WAAY,EAEjB,IAAI4N,EAAWpD,EAAKqD,OAAOC,WAAWrC,GACtC,GAAKmC,EAAL,CAkBA,GAhBIpD,EAAKyB,WAAa,GAAQC,WAAWh8C,UAAU+7C,WAC3C2B,EAASvsC,WAAampC,EAAKqD,OAAOE,OAASH,EAAS5sC,WAAWnQ,OAC/D25C,EAAKyB,SAAS2B,EAAS5sC,WAAW,IAElCwpC,EAAKyB,SAAS2B,IAGlBpD,EAAK2B,WAAa,GAAQD,WAAWh8C,UAAUi8C,WAC3CT,EACAlB,EAAK2B,SAAST,GAEdlB,EAAK2B,SAAS,GAAQ6B,UAAUJ,KAIxBpD,EAAKqD,OAAOrC,YAAYoC,KACtB,GAAQnD,OAAOwD,SAC7B,OAAO,EAIX,IAAIC,EAAWN,EAASO,qBAAqB,YACzCC,EAAaR,EAASO,qBAAqB,aAC/C,OAAwB,IAApBD,EAASr9C,QAAsC,IAAtBu9C,EAAWv9C,QACpC25C,EAAKqD,OAAOQ,kBAAkBV,IACvB,GAGa,IAApBO,EAASr9C,QACT25C,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAU,OAC5C,IAEXH,EAAK8D,qBAAqB,GAAQ7D,OAAOG,SAAU,OAE5C,EApCkB,CAqC7B,EAWA4D,iBAAkB,SAAUC,GACxB,IAAIr8C,EAAG6uB,EAAO3Y,EAAOkiC,EAAO57C,KAAK27C,YAGjC,GAAqB,KAFrBtpB,EAAQwtB,EAAON,qBAAqB,UAE1Bt9C,OAEN,OADA25C,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAU,YAC5C,EAIX,IAFA1pB,EAAQA,EAAM,GAET7uB,EAAI,EAAGA,EAAI6uB,EAAMjgB,WAAWnQ,OAAQuB,IAED,kBADpCkW,EAAQ2Y,EAAMjgB,WAAW5O,IACfgP,QAAQwD,cAKyB,MAAhC0D,EAAMlH,QAAQwD,gBAIzB4lC,EAAK0D,SAAS7lC,OAAOC,EAAMlH,QAAQwD,eAAiB,GAAQ8pC,QAAQpmC,IANhEkiC,EAAK0D,SAAS7C,aAAe,GAAQqD,QAAQpmC,GASrD,OADAkiC,EAAK8D,qBAAqB,GAAQ7D,OAAOG,SAAU,OAC5C,CACX,EAUAvG,OAAQ,WACJ,IAAI5xB,EAAO,qBACD,YAATA,IAAwBA,EAAO,OAAW,qBAC3C,IAAIrgB,EAAGzE,EAAMszB,EAAO5Y,EAAQmiC,EAAO57C,KAAK27C,YAKxC,IAJAtpB,EAAQ,GAAI,CAACxuB,KAAM,MAAO,WAAYggB,EAAMja,GAAI,OAASuJ,EAAE,QAAS,CAAC8iB,MAAM,GAAQC,GAAG8lB,WAGtFviC,EAAStD,OAAOC,KAAKpW,KAAKyZ,QACrBjW,EAAI,EAAGA,EAAIiW,EAAOxX,OAAQuB,IAC3BzE,EAAO0a,EAAOjW,GACd6uB,EAAMlf,EAAEpU,GAAMomB,EAAEnlB,KAAKyZ,OAAO1a,IAAOs3B,KAIvCulB,EAAK+D,eAAe3/C,KAAK+/C,WAAWz3C,KAAKtI,MACrC,KAAM,KAAM,KAAM,MACtB47C,EAAK/0B,KAAKwL,EACd,EAWA0tB,WAAY,SAAUF,GAClB,IAAIr8C,EAAG6uB,EAAO3Y,EAAO3L,EAAQ,KAAM6tC,EAAO57C,KAAK27C,YAG/C,IADAtpB,EAAQwtB,EAAON,qBAAqB,UAC1Bt9C,OAAS,EAGf,IAFAowB,EAAQA,EAAM,GAET7uB,EAAI,EAAGA,EAAI6uB,EAAMjgB,WAAWnQ,OAAQuB,IAED,kBADpCkW,EAAQ2Y,EAAMjgB,WAAW5O,IACfgP,QAAQwD,cAMlBhW,KAAKyZ,OAAOC,EAAMlH,QAAQwD,eAAiB,GAAQ8pC,QAAQpmC,GAHvD1Z,KAAKy8C,aAAe,GAAQqD,QAAQpmC,GAOhD,GAAoC,UAAhCmmC,EAAOlmB,aAAa,QAAqB,CACzC5rB,EAAQ8xC,EAAON,qBAAqB,SACpC,IAAIS,EAAaH,EAAON,qBAAqB,QAG7C,GAFIS,EAAW/9C,OAAS,IACpB+9C,EAAaA,EAAW,GAAG5vC,WACV,IAAjBrC,EAAM9L,OAEN,OADA25C,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAU,YAC5C,EAGX,GAAQp9B,KAAK,wBAIC,cADd5Q,EAAQA,EAAM,GAAG0C,WAAW+B,QAAQwD,eAEhC4lC,EAAK8D,qBAAqB,GAAQ7D,OAAOK,SAAUnuC,EAAOiyC,GACzC,mBAAVjyC,EACP6tC,EAAK8D,qBAAqB,GAAQ7D,OAAOM,cAAepuC,EAAOiyC,GAE/DpE,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAUhuC,EAAOiyC,EAElE,MACI,GAAQrhC,KAAK,4BAEbi9B,EAAK8D,qBAAqB,GAAQ7D,OAAOI,WAAY,MAGzD,OAAO,CACX,IAwBJ,GAAQgE,SAAW,WAAY,EAC/B,GAAQA,SAAS3+C,UAAY,IAAI,GAAQ4+C,cAAc,QAAQ,EAAM,KAErE,GAAQD,SAAS3+C,UAAUwT,KAAO,SAAUiY,GACxC,OAAO,CACX,EAEA,GAAQkzB,SAAS3+C,UAAU6+C,YAAc,SAAUpzB,GAG/C,OA9BW,SAAUxZ,GACrB,IAAI/P,EAAG2P,EACHitC,EAAM,GACNC,EAAM9sC,EAAItR,OACd,IAAKuB,EAAI,EAAGA,EAAI68C,EAAK78C,IACjB2P,EAAII,EAAI9P,WAAWD,GACd2P,GAAK,GAAYA,GAAK,IACvBitC,GAAO7sC,EAAI+sC,OAAO98C,GACX2P,EAAI,MACXitC,GAAOhtD,OAAOC,aAAa,IAAS8f,GAAK,GAAM,IAC/CitC,GAAOhtD,OAAOC,aAAa,IAAS8f,GAAM,EAAK,IAC/CitC,GAAOhtD,OAAOC,aAAa,IAAS8f,GAAM,EAAK,MAE/CitC,GAAOhtD,OAAOC,aAAa,IAAS8f,GAAM,EAAK,IAC/CitC,GAAOhtD,OAAOC,aAAa,IAAS8f,GAAM,EAAK,KAGvD,OAAOitC,CACX,CAYWG,CAFQntD,OAAOC,aAAa,GAAK05B,EAAW+wB,QAC/C1qD,OAAOC,aAAa,GAAK05B,EAAWyzB,UAE5C,EAEA,GAAQC,kBAAoB,SAAUntD,EAAgB0L,GAClDA,EAAUA,GAAW,CAAC,EACtBgB,KAAK+sB,WAAa,IAAI,GAAQuwB,WAAWhqD,EAAgB0L,EAC7D,EAEA,GAAQyhD,kBAAkBn/C,UAAY,CAClC48C,QAAS,SAAUwC,EAAWxoC,EAAK47B,EAAU9rB,GAGzC,GAFAhoB,KAAK+sB,WAAWyyB,WAAa,CAAC,EAC9Bx/C,KAAK0gD,UAAYA,GAAa,WACP,aAAnB1gD,KAAK0gD,UACL1gD,KAAK+sB,WAAW0xB,uBAAuB,CAAC,GAAQC,cAC5C,GAAQC,aACR,GAAQC,QACR,GAAQC,UACR,GAAQC,eACT,IAAuB,YAAnB9+C,KAAK0gD,UAQZ,OAPA1gD,KAAK+sB,WAAW4zB,sBAAsB,GAAQV,iBACvCjgD,KAAK+sB,WAAW6zB,WAAW,yBAClC,GAAMljC,aAAa,GAAM7B,wBAAwBi4B,GAAW9zC,KAAK+sB,WAAW1Q,SAAShC,MAAM2jC,IACvFh+C,KAAK+sB,WAAWyzB,UAAYxC,CAAI,IACjC3jC,MAAK,KACJra,KAAK+sB,WAAWmxB,QAAQhmC,EAAK47B,EAAU9rB,EAAQ,IAInDhoB,KAAK+sB,WAAW0xB,uBAAuB,CAAC,GAAQoC,qBACzC7gD,KAAK+sB,WAAW6zB,WAAW,mBACtC,CACA5gD,KAAK+sB,WAAWmxB,QAAQhmC,EAAK47B,EAAU9rB,EAC3C,EAEA84B,UAAW,SAAU94B,GACjB,GAAuB,YAAnBhoB,KAAK0gD,UAYL,OAXK1gD,KAAK+sB,WAAWyyB,WAAiB,OAClCx/C,KAAK+sB,WAAW4zB,sBAAsB,GAAQV,iBACvCjgD,KAAK+sB,WAAW6zB,WAAW,qBAElC5gD,KAAK+sB,WAAWL,SAAW1sB,KAAK+sB,WAAWL,QAAQlqB,IAAI,kBACvDxC,KAAK+sB,WAAW1Q,QAAUrc,KAAK+sB,WAAWL,QAAQlqB,IAAI,sBAC1D,GAAMkb,aAAa,GAAM7B,wBAAwB7b,KAAK+sB,WAAWixB,MAAOh+C,KAAK+sB,WAAW1Q,SAAShC,MAAM2jC,IACnGh+C,KAAK+sB,WAAWyzB,UAAYxC,CAAI,IACjC3jC,MAAK,KACJra,KAAK+sB,WAAWmxB,QAAQl+C,KAAK+sB,WAAW7U,IAAKlY,KAAK+sB,WAAWixB,KAAMh2B,EAAQ,IAInFhoB,KAAK+sB,WAAWmxB,QAAQl+C,KAAK+sB,WAAW7U,IAAKlY,KAAK+sB,WAAWixB,KAAMh2B,EACvE,GAGJ,GAAEhe,OAAO,GAAQszC,WAAWh8C,UAAW,CAEnCy/C,iBAAkB,SAAUvB,GACxBA,EAAax/C,KAAKghD,yBAAyBxB,GAAc,IACzD,IAAIh8C,EAAI,EAAGy9C,GAAkB,EAC7B,IAAKz9C,EAAI,EAAGA,EAAIg8C,EAAWv9C,SAAUuB,EACjC,GAAKg8C,EAAWh8C,GAAGlC,UAAUwT,KAAK9U,MAAlC,CAGAA,KAAKkhD,sBAAwBlhD,KAAK2/C,eAC9B3/C,KAAKmhD,iBAAiB74C,KAAKtI,MAAO,KAClC,UAAW,KAAM,MACrBA,KAAKohD,sBAAwBphD,KAAK2/C,eAC9B3/C,KAAKqhD,iBAAiB/4C,KAAKtI,MAAO,KAClC,UAAW,KAAM,MACrBA,KAAKshD,wBAA0BthD,KAAK2/C,eAChC3/C,KAAKuhD,mBAAmBj5C,KAAKtI,MAAO,KACpC,YAAa,KAAM,MAEvBA,KAAKwhD,gBAAkB,IAAIhC,EAAWh8C,GACtCxD,KAAKwhD,gBAAgBC,QAAQzhD,MAE7B,IAAI0hD,EAAwBC,OAAO,OAAQ,CACvC1rB,MAAO,GAAQC,GAAG0rB,KAClBC,UAAW7hD,KAAKwhD,gBAAgBziD,OAEpC,GAAIiB,KAAKwhD,gBAAgBM,cAAe,CACpC,IAAIrO,EAAWzzC,KAAKwhD,gBAAgBrB,YAAYngD,KAAM,MACtD0hD,EAAsBv8B,EAAE3R,KAAKigC,GACjC,CACAzzC,KAAK6mB,KAAK66B,EAAsB9wB,QAChCqwB,GAAkB,EACdjhD,KAAK0sB,SAAW1sB,KAAKqc,SAAWrc,KAAK0sB,QAAQlqB,IAAI,YAA4C,SAA9BxC,KAAKwhD,gBAAgBziD,OACpFiB,KAAKqc,UACLrc,KAAK0sB,QAAQ3J,KAAK,CACdg/B,aAAc/hD,KAAKqc,WAG3B,KA9BA,CAgCJ,OAAO4kC,CACX,EAEAe,eAAgB,SAAUhX,GAEtB,IAAIxnC,EAAGyrB,EACP,IAFAjvB,KAAKiiD,SAAWjX,EAEXxnC,EAAI,EAAGA,EAAIwnC,EAAK54B,WAAWnQ,OAAQuB,IACpCyrB,EAAQ+b,EAAK54B,WAAW5O,GACD,SAAnByrB,EAAMxc,WACNzS,KAAKkiD,SAAU,GAGI,YAAnBjzB,EAAMxc,WACNzS,KAAKmiD,YAAa,GAGE,YAAnBlzB,EAAMxc,UAA2Bwc,EAAMmzB,eAAiB,GAAQlsB,GAAGmsB,cAAgBriD,KAAKhB,QAAQ,aACjGgB,KAAKsiD,cAAe,GAGA,oBAAnBrzB,EAAMxc,UAAoCwc,EAAMmzB,eAAiB,GAAQlsB,GAAGqsB,kBAC7EviD,KAAK0sB,QAAQ81B,gBAAgBzR,OAAO,CAChC,IAAO9hB,EAAMmzB,aACbxvC,KAAM5S,KAAK29C,SAEf39C,KAAKyiD,oBAAqB,GAGN,QAAnBxzB,EAAMxc,UAAwBwc,EAAMmzB,eAAiB,GAAQlsB,GAAGwsB,0BACjE1iD,KAAK0sB,QAAQ81B,gBAAgBzR,OAAO,CAChC,IAAO9hB,EAAMmzB,aACbxvC,KAAM5S,KAAK29C,SAKvB,OAAK39C,KAAKkiD,SAIFliD,KAAKsiD,gBAAkBtiD,KAAK2iD,SAA0C,IAA9BxlC,SAASnd,KAAK2iD,QAAQC,QAAe,GAAI/kD,OAAOsL,OACxFnJ,KAAK6iD,WAAW5Z,IACZ,IAAI+H,EAAQrzC,EAAEsrC,GAASppC,KAAK,UAAUyC,OAClCwgD,EAAanlD,EAAEsrC,GAASppC,KAAK,UAAUyC,OACvCygD,EAAYplD,EAAEsrC,GAASppC,KAAK,UAAUL,KAAK,MAC/CQ,KAAK2iD,QAAU,CAAC3R,MAAOA,EAAO4R,OAAQE,EAAYC,UAAWA,GAC7D/iD,KAAKqc,QAAU,EACfrc,KAAKg+C,KAAOhN,EACZhxC,KAAKgjD,kBACDhjD,KAAK0sB,SACL1sB,KAAK0sB,QAAQ3J,KAAK,CACdg/B,aAAc/hD,KAAKqc,QACnBy3B,SAAU,MAElB,IACD,KACC9zC,KAAKgjD,iBAAiB,IAI1BhjD,KAAKgjD,mBAGN,IA1BHhjD,KAAK0/C,qBAAqB,GAAQ7D,OAAOoH,SAAU,OAC5C,EA0Bf,EAEAD,kBACIhjD,KAAK2/C,eAAe3/C,KAAKkjD,cAAc56C,KAAKtI,MAAO,KAAM,KACrD,KAAM,gBAEV,IAAImjD,EAAW,GAAQC,mBAAmBpjD,KAAKkY,KAC3CirC,EACAnjD,KAAK6mB,KAAK,GAAI,CAAChjB,KAAM,MAAO+F,GAAI,iBAC3BuJ,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGmtB,OAC7BlwC,EAAE,WAAY,CAAC,GAAGgS,EAAEg+B,GAAUvyB,QAEnC5wB,KAAK6mB,KAAK,GAAI,CAAChjB,KAAM,MAAO+F,GAAI,iBAC3BuJ,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGmtB,OAC7BzyB,OAEb,EAEAiyB,UAAW,SAAU76B,EAAUnN,GAC3B,IAAsByoC,EAAlBC,EAAU,KACVxtB,EAAK,GAAI,CACTlyB,KAAM,MACN0S,GAAIvW,KAAK29C,OACT/zC,GAAI25C,IACLpwC,EAAE,WAAY,CAAE8iB,MAAO,GAAQC,GAAGmsB,eACrCriD,KAAK0sB,UAAY42B,EAAYtjD,KAAK0sB,QAAQlqB,IAAI,qBAC1C8gD,GAAaA,EAAUtS,OAASsS,EAAUP,WAC1ChtB,EAAG5iB,EAAE,SAAU,CAAE8iB,MAAO,GAAQC,GAAGmsB,aAAcz4C,GAAI05C,EAAUP,YAC1D5vC,EAAE,UAAUgS,EAAE,OAAW,gBAAgBkR,KACzCljB,EAAE,UAAUgS,EAAEm+B,EAAUtS,OAAO3a,KAC/BljB,EAAE,QAAQgS,EAAE,OAAO,GAAMxM,YAAY,GAAI1F,MAAMkN,gBACpDngB,KAAK0sB,QAAQ3J,KAAK,mBAAoB,OAEtCgT,EAAG5iB,EAAE,SAAU,CAAE8iB,MAAO,GAAQC,GAAGmsB,eAC9BlvC,EAAE,UAAUgS,EAAE,OAAW,gBAAgBkR,KACzCljB,EAAE,QAAQgS,EAAE,OAAO,GAAMxM,YAAY,GAAI1F,MAAMkN,gBAoBxDngB,KAAK2/C,eAlBS,SAAUE,GACpB,IAAI2D,EAAS3D,EAAOlmB,aAAa,QACjC,GAAc,UAAV6pB,EACIx7B,GACAA,EAAS63B,OAEV,IAAc,SAAV2D,EAKP,KAAM,CACFzkD,KAAM,eACNmY,QAAS,sBAAwBssC,GANjC3oC,GACAA,EAAQglC,EAOhB,CACJ,EAE4Bv3C,KAAKtI,MAAO,GAAQk2B,GAAGmsB,aAAc,KAAM,SAAWkB,GAElFvjD,KAAK6mB,KAAKkP,EAAGnF,OACjB,IAGJ,GAAE5mB,OAAO,GAAQy5C,UAAUniD,UAAW,CAElCoiD,QAAS,WACL,IAAIhkD,EAAOM,KAAK2jD,MAAMC,MACtB,GAAIlkD,EAAKuC,OAAS,IAAMjC,KAAK2jD,MAAME,OAAQ,CACvC,IAAK,IAAIrgD,EAAI,EAAGA,EAAI9D,EAAKuC,OAAQuB,IAC7B,GAAgB,OAAZ9D,EAAK8D,GAAa,CAClB,IAAIq8C,EAAQiE,EASZ,GAPIjE,EADY,YAAZngD,EAAK8D,GACIxD,KAAK+jD,eAAenzB,OAEpBlxB,EAAK8D,GAElBsgD,EAAY,GAAQ1E,UAAUS,GAC9B7/C,KAAK2jD,MAAMK,UAAUnE,GACrB7/C,KAAK2jD,MAAMM,UAAUH,IACjB9jD,KAAKkkD,QAAqC,IAA3BlkD,KAAKkkD,OAAO59B,WAO3B,OAJA,GAAQP,IAAI,wBACZ,GAAQA,IAAI/lB,KAAK2jD,MAAMC,MAAMvgD,MAAMG,IACnCxD,KAAK2jD,MAAMj3B,QAAQy3B,iBAAiB/iD,KAAKpB,KAAK2jD,MAAMC,MAAMvgD,MAAMG,SAChExD,KAAK2jD,MAAMC,MAAQ,IALnB5jD,KAAKkkD,OAAOr9B,KAAKi9B,EAQzB,CAEJ9jD,KAAK2jD,MAAMC,MAAQ,EACvB,CACJ,IAGJ,GAAQQ,YAAc,SAAU9hD,GAC5B,IAAI+hD,EAAU,CACV,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,SAAU,KAMV5iB,EAAS,MAAQ,GAAErrB,KAAKiuC,GAASjlD,KAAK,KAAO,IAC7CklD,EAAatxC,OAAOyuB,GACpB8iB,EAAgBvxC,OAAOyuB,EAAQ,KAEnC,OADAn/B,EAAe,MAARA,EAAe,GAAK,GAAKA,EACzBgiD,EAAWxvC,KAAKxS,GAAQA,EAAKT,QAAQ0iD,GAR9B,SAAS5xC,GACnB,OAAO0xC,EAAQ1xC,EACnB,IAMsErQ,CAC1E,EAEA,GAAQw5C,aAAa,YAAa,wBAClC,GAAQA,aAAa,UAAW,sBAChC,GAAQA,aAAa,UAAW,sBAChC,GAAQA,aAAa,OAAQ,qBAC7B,GAAQA,aAAa,QAAS,kBAC9B,GAAQA,aAAa,MAAO,kBAC5B,GAAQA,aAAa,WAAY,qBACjC,GAAQA,aAAa,SAAU,qBAC/B,GAAQA,aAAa,uBAAwB,mCAC7C,GAAQA,aAAa,aAAc,6BACnC,GAAQA,aAAa,aAAc,8BACnC,GAAQA,aAAa,wBAAyB,wCAC9C,GAAQA,aAAa,UAAW,sCAChC,GAAQA,aAAa,aAAc,yCACnC,GAAQA,aAAa,sBAAuB,mDAC5C,GAAQA,aAAa,YAAa,wCAClC,GAAQA,aAAa,cAAe,2CACpC,GAAQA,aAAa,eAAgB,uCACrC,GAAQA,aAAa,kBAAmB,+CACxC,GAAQA,aAAa,+BAAgC,oDACrD,GAAQA,aAAa,0BAA2B,wCAChD,GAAQA,aAAa,4BAA6B,oBAClD,GAAQA,aAAa,wBAAyB,oBAC9C,GAAQA,aAAa,8BAA+B,kBACpD,GAAQA,aAAa,WAAY,wCACjC,GAAQA,aAAa,UAAW,uCAChC,GAAQA,aAAa,MAAO,kBAC5B,GAAQA,aAAa,MAAO,kCAC5B,GAAQA,aAAa,WAAY,iBACjC,GAAQA,aAAa,eAAgB,2BACrC,GAAQA,aAAa,eAAgB,uBACrC,GAAQA,aAAa,cAAe,wBACpC,GAAQA,aAAa,WAAY,qBACjC,GAAQA,aAAa,SAAU,oBAC/B,GAAQA,aAAa,kBAAmB,qBACxC,GAAQA,aAAa,QAAS,0BAC9B,GAAQA,aAAa,OAAQ,kBAC7B,GAAQA,aAAa,aAAc,sCACnC,GAAQA,aAAa,oBAAqB,6CAC1C,GAAQA,aAAa,yBAA0B,4CAC/C,GAAQA,aAAa,UAAW,uCAChC,GAAQA,aAAa,QAAS,qCAC9B,GAAQA,aAAa,SAAU,qCAC/B,GAAQA,aAAa,qBAAsB,wBAC3C,GAAQA,aAAa,yBAA0B,4BAC/C,GAAQA,aAAa,mCAAoC,qBACzD,GAAQA,aAAa,UAAW,uCAChC,GAAQA,aAAa,YAAa,0CAClC,GAAQA,aAAa,SAAU,qCAC/B,GAAQA,aAAa,SAAU,sCAC/B,GAAQA,aAAa,gBAAiB,8CACtC,GAAQA,aAAa,QAAS,qCAC9B,GAAQA,aAAa,2BAA4B,kCACjD,GAAQA,aAAa,MAAO,mCAC5B,GAAQA,aAAa,WAAY,uBACjC,GAAQA,aAAa,eAAgB,oCAErC,YChxBA,IAAI,GAAM,OAEN,IADY,GAAI3qD,UACJ,GAAI0N,UAAU2lD,OAC1B,GAAI,GAAI7mD,EACR,GAAI,GAAIC,EACR,GAAS,GAAIC,OACb,GAAU,GAAIa,QACd,GAAM,GAAIs3B,IACV,GAAS,GAAI2rB,OACb,GAAQ,GAAI1uC,MAEZwxC,GAAc,SAAUC,GACxB,IAAIF,EAAQ,CACRG,SAAUD,EAAO7kD,KAAK,YAAYyC,OAAOkC,OACzCogD,SAAUF,EAAO7kD,KAAK,MAAMyC,OAAOkC,OACnCuB,WAAY2+C,EAAO7kD,KAAK,WAAWyC,OAAOkC,OAC1CqgD,YAAaH,EAAO7kD,KAAK,YAAYyC,OAAOkC,OAC5CwB,UAAW0+C,EAAO7kD,KAAK,YAAYyC,OAAOkC,OAC1CsgD,SAAUJ,EAAO7kD,KAAK,QAAQyC,OAAOkC,OACrCugD,UAAWL,EAAO7kD,KAAK,SAASyC,OAAOkC,OACvCwgD,KAAMN,EAAO7kD,KAAK,QAAQyC,OAAOkC,OACjChP,IAAKkvD,EAAO7kD,KAAK,OAAOyC,OAAOkC,OAC/BygD,YAAaP,EAAO7kD,KAAK,QAAQyC,OAAOkC,OACxC0gD,UAAWR,EAAO7kD,KAAK,YAAYyC,OAAOkC,OAC1C2gD,IAAK,CAAC,EACNC,MAAO,CAAC,EACRC,MAAO,CAAC,EACRC,QAAS,CAAC,EACVtM,MAAO,CAAC,IAGR0L,EAAO7kD,KAAK,aAAaoC,QAAUyiD,EAAO7kD,KAAK,gBAAgBoC,QAAUyiD,EAAO7kD,KAAK,WAAWoC,UAChGuiD,EAAMe,WAAa,CACfrtC,IAAKssC,EAAMU,UACXD,YAAaT,EAAMS,YACnBlmD,KAAMylD,EAAMG,SACZa,UAAWd,EAAO7kD,KAAK,aAAayC,OAAOkC,OAC3CihD,WAAYf,EAAO7kD,KAAK,WAAWyC,OAAOkC,OAC1CsvB,MAAO4wB,EAAO7kD,KAAK,gBAAgByC,OAAOkC,OAC1CkhD,WAAYhB,EAAO7kD,KAAK,YAAYyC,OAAOkC,OAC3CmhD,YAAajB,EAAO7kD,KAAK,aAAayC,OAAOkC,SAIrD,IAAIohD,EAAOlB,EAAO7kD,KAAK,OACnB+lD,EAAK3jD,SACLuiD,EAAMW,IAAIpmD,KAAO6mD,EAAK/lD,KAAK,WAAWyC,OAAOkC,OAC7CggD,EAAMW,IAAIU,KAAOD,EAAK/lD,KAAK,WAAWyC,OAAOkC,QAGjD,IAAIshD,EAASpB,EAAO7kD,KAAK,SA0DzB,OAzDIimD,EAAO7jD,SACPuiD,EAAMY,MAAMpqD,MAAQ8qD,EAAOjmD,KAAK,UAAUyC,OAAOkC,OACjDggD,EAAMY,MAAMvhD,KAAOiiD,EAAOjmD,KAAK,QAAQyC,OAAOkC,QAGlDkgD,EAAO7kD,KAAK,OAAOC,MAAK,WACpB,IAAImR,EAAQ,GAAEjR,MACV+lD,EAAS90C,EAAMpR,KAAK,UAAUyC,OAAOkC,OACpCuhD,IAGD90C,EAAMpR,KAAK,QAAQoC,OACnBuiD,EAAMa,MAAMW,KAAOD,EACZ90C,EAAMpR,KAAK,QAAQoC,OAC1BuiD,EAAMa,MAAMY,KAAOF,EACZ90C,EAAMpR,KAAK,UAAUoC,OAC5BuiD,EAAMa,MAAMa,OAASH,EAErBvB,EAAMa,MAAMhmD,QAAU0mD,EAE9B,IAEArB,EAAO7kD,KAAK,SAASC,MAAK,WACtB,IAAImR,EAAQ,GAAEjR,MACVg5C,EAAQ/nC,EAAMpR,KAAK,UAAUyC,OAAOkC,OACnCw0C,IAGD/nC,EAAMpR,KAAK,QAAQoC,OACnBuiD,EAAMxL,MAAMgN,KAAOhN,EACZ/nC,EAAMpR,KAAK,QAAQoC,OAC1BuiD,EAAMxL,MAAMiN,KAAOjN,EAEnBwL,EAAMxL,MAAM35C,QAAU25C,EAE9B,IAEA0L,EAAO7kD,KAAK,OAAOC,MAAK,WACpB,IAAImR,EAAQ,GAAEjR,MACVslD,EAAU,CACVa,MAAOl1C,EAAMpR,KAAK,SAASyC,OAAOkC,OAClC4hD,OAAQn1C,EAAMpR,KAAK,UAAUyC,OAAOkC,OACpC6hD,OAAQp1C,EAAMpR,KAAK,UAAUyC,OAAOkC,OACpC8hD,SAAUr1C,EAAMpR,KAAK,YAAYyC,OAAOkC,OACxC+hD,OAAQt1C,EAAMpR,KAAK,UAAUyC,OAAOkC,OACpCgiD,MAAOv1C,EAAMpR,KAAK,SAASyC,OAAOkC,OAClCiiD,QAASx1C,EAAMpR,KAAK,QAAQyC,OAAOkC,QAEnCyM,EAAMpR,KAAK,QAAQoC,OACnBuiD,EAAMc,QAAQU,KAAOV,EACdr0C,EAAMpR,KAAK,QAAQoC,OAC1BuiD,EAAMc,QAAQW,KAAOX,EAErBd,EAAMc,QAAQjmD,QAAUimD,CAEhC,IAEOd,CACX,EA2DA,GAAQ9I,oBAAoB,QAAS,CACjCC,YAAa,KAEbl3B,KAAM,SAASm3B,GAEX,OADA57C,KAAK27C,YAAcC,EACZ,GAAQE,aAAa,QAAS,aACzC,EAEAt5C,IAAK,SAAS0V,EAAK8P,EAAUnN,GACzB,IAAIkb,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAI2B,IAAM/E,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGwwB,QACnE1mD,KAAK27C,YAAYgL,OAAO5wB,GAAI,SAAUx2B,GAClC,IAAKyoB,EAAY,OACjB,IAAIw8B,EAAQC,GAAY,GAAEllD,GAAKM,KAAK,eAAe,GAAQq2B,GAAGwwB,MAAM,MAEpE,OADAlC,EAAMU,YAAcV,EAAMU,UAAYhtC,GAC/B8P,EAASw8B,EACpB,GAAG3pC,EACP,EAEAkF,IAAK,SAAS7H,EAAKssC,EAAOx8B,EAAUnN,GAChC2pC,EAAMU,YAAcV,EAAMU,UAAYhtC,GACtC,IAAI6d,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAI2B,IAAMoe,MA7E3B,SAAUkuB,GACxB,IAAIE,EAAS,GAAO,QAAS,CAACzuB,MAAO,GAAQC,GAAGwwB,QAqDhD,OApDAlC,EAAMG,UAAYD,EAAOvxC,EAAE,YAAYgS,EAAEq/B,EAAMG,UAAUtuB,KACzDmuB,EAAMI,UAAYF,EAAOvxC,EAAE,MAAMgS,EAAEq/B,EAAMI,UAAUvuB,MAC/CmuB,EAAMz+C,YAAcy+C,EAAMx+C,WAAaw+C,EAAMK,eAC7CH,EAAOvxC,EAAE,KACTqxC,EAAMz+C,YAAc2+C,EAAOvxC,EAAE,SAASgS,EAAEq/B,EAAMz+C,YAAYswB,KAC1DmuB,EAAMx+C,WAAa0+C,EAAOvxC,EAAE,UAAUgS,EAAEq/B,EAAMx+C,WAAWqwB,KACzDmuB,EAAMK,aAAeH,EAAOvxC,EAAE,UAAUgS,EAAEq/B,EAAMK,aAAaxuB,KAC7DquB,EAAOruB,MAEXmuB,EAAMM,UAAYJ,EAAOvxC,EAAE,QAAQgS,EAAEq/B,EAAMM,UAAUzuB,KACrDmuB,EAAMO,WAAaL,EAAOvxC,EAAE,SAASgS,EAAEq/B,EAAMO,WAAW1uB,KACxDmuB,EAAMQ,MAAQN,EAAOvxC,EAAE,QAAQgS,EAAEq/B,EAAMQ,MAAM3uB,MACzCmuB,EAAMW,IAAIpmD,MAAQylD,EAAMW,IAAIU,QAC5BnB,EAAOvxC,EAAE,OACTqxC,EAAMW,IAAIpmD,MAAQ2lD,EAAOvxC,EAAE,WAAWgS,EAAEq/B,EAAMW,IAAIpmD,MAAMs3B,KACxDmuB,EAAMW,IAAIU,MAAQnB,EAAOvxC,EAAE,WAAWgS,EAAEq/B,EAAMW,IAAIU,MAAMxvB,KACxDquB,EAAOruB,MAEXmuB,EAAMhvD,KAAOkvD,EAAOvxC,EAAE,OAAOgS,EAAEq/B,EAAMhvD,KAAK6gC,KACtCmuB,EAAMY,MAAMpqD,QACZ0pD,EAAOvxC,EAAE,SAASA,EAAE,UAAUgS,EAAEq/B,EAAMY,MAAMpqD,OAAOq7B,KACnDquB,EAAOvxC,EAAE,QAAQgS,EAAEq/B,EAAMY,MAAMvhD,MAAQ,cAAcwyB,KACrDquB,EAAOruB,MAEXmuB,EAAMS,aAAeP,EAAOvxC,EAAE,QAAQgS,EAAEq/B,EAAMS,aAAa5uB,KAC3DmuB,EAAMU,WAAaR,EAAOvxC,EAAE,YAAYgS,EAAEq/B,EAAMU,WAAW7uB,KAE3D,GAAEv2B,KAAK0kD,EAAMa,OAAO,SAAUA,EAAOxhD,GACjC6gD,EAAOvxC,EAAE,OAAOA,EAAE,UAAUgS,EAAEkgC,GAAOhvB,KAC5B,YAATxyB,GAAsB6gD,EAAOvxC,EAAEtP,EAAKiD,eAAeuvB,KACnDquB,EAAOruB,IACX,IAEA,GAAEv2B,KAAK0kD,EAAMxL,OAAO,SAAUA,EAAOn1C,GACjC6gD,EAAOvxC,EAAE,SAASA,EAAE,UAAUgS,EAAE6zB,GAAO3iB,KAC9B,YAATxyB,GAAsB6gD,EAAOvxC,EAAEtP,EAAKiD,eAAeuvB,KACnDquB,EAAOruB,IACX,IAEA,GAAEv2B,KAAK0kD,EAAMc,SAAS,SAAUA,EAASzhD,GACrC6gD,EAAOvxC,EAAE,OACA,YAATtP,GAAsB6gD,EAAOvxC,EAAEtP,EAAKiD,eAAeuvB,KACnDivB,EAAQa,OAASzB,EAAOvxC,EAAE,SAASgS,EAAEmgC,EAAQa,OAAO9vB,KACpDivB,EAAQc,QAAU1B,EAAOvxC,EAAE,UAAUgS,EAAEmgC,EAAQc,QAAQ/vB,KACvDivB,EAAQe,QAAU3B,EAAOvxC,EAAE,UAAUgS,EAAEmgC,EAAQe,QAAQhwB,KACvDivB,EAAQgB,UAAY5B,EAAOvxC,EAAE,YAAYgS,EAAEmgC,EAAQgB,UAAUjwB,KAC7DivB,EAAQiB,QAAU7B,EAAOvxC,EAAE,UAAUgS,EAAEmgC,EAAQiB,QAAQlwB,KACvDivB,EAAQkB,OAAS9B,EAAOvxC,EAAE,SAASgS,EAAEmgC,EAAQkB,OAAOnwB,KACpDivB,EAAQmB,SAAW/B,EAAOvxC,EAAE,QAAQgS,EAAEmgC,EAAQmB,SAASpwB,KACvDquB,EAAOruB,IACX,IAEOquB,EAAO9zB,MAClB,CAsBmDg2B,CAAYpC,IACvDxkD,KAAK27C,YAAYgL,OAAO5wB,EAAI/N,EAAUnN,EAC1C,IAGJ,GAAM2pC,MAAQ,CACVqC,SAAU,SAAU3uC,GAChB,IAAIssC,EAAQC,GAAY,GAAE,WAE1B,OADAD,EAAMU,UAAYhtC,EACXssC,CACX,GAGJ,aAAmB,oBAAwB,CACvCh3B,SAAU,GAAUg3B,MAEpBj2B,YAAa,WACTvuB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAKi4B,OAAQj4B,MACnDA,KAAKN,KAAK2jB,GAAG,iBAAkBrjB,KAAK8mD,oBAAqB9mD,KAC7D,EAEAgvB,OAAQ,WACJhvB,KAAKrC,EAAE,6BAA6B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,cAAgB,qBAAuB,aAAiB,yBAChHxC,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAK8zB,MAAMizB,UAAS,KAChB/mD,KAAKi4B,QAAQ,GAErB,EAEAA,OAAQ,WACJ,IAAI+uB,EAAOxC,EAAQxkD,KAAK8zB,MAAMtxB,IAAI,SAElCwkD,EAAQhnD,KAAKrC,EAAE,kBACfqpD,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMU,WAAWrlD,KAAK,UAAUyC,KAAKkiD,EAAMU,WAC3E8B,EAAM11C,OAAOkzC,EAAMU,WAEnB8B,EAAQhnD,KAAKrC,EAAE,uBACfqpD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMI,UAAU/kD,KAAK,UAAUyC,KAAKkiD,EAAMI,UACzEoC,EAAMnnD,KAAK,eAAeyR,OAAOkzC,EAAMz+C,YAAYlG,KAAK,UAAUyC,KAAKkiD,EAAMz+C,YAC7EihD,EAAMnnD,KAAK,gBAAgByR,OAAOkzC,EAAMK,aAAahlD,KAAK,UAAUyC,KAAKkiD,EAAMK,aAC/EmC,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMx+C,WAAWnG,KAAK,UAAUyC,KAAKkiD,EAAMx+C,WAC3EghD,EAAM11C,OAAOkzC,EAAMI,UAAYJ,EAAMz+C,YAAcy+C,EAAMK,aAAeL,EAAMx+C,WAE9EghD,EAAQhnD,KAAKrC,EAAE,uBACfqpD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMG,UAAU9kD,KAAK,UAAUyC,KAAKkiD,EAAMG,UACzEqC,EAAM11C,OAAOkzC,EAAMG,UAEnBqC,EAAQhnD,KAAKrC,EAAE,uBACfqpD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMM,UAAUjlD,KAAK,UAAUyC,KAAKkiD,EAAMM,UACzEkC,EAAM11C,OAAOkzC,EAAMM,UAEnBkC,EAAQhnD,KAAKrC,EAAE,kBACfqpD,EAAMnnD,KAAK,SAASyR,OAAOkzC,EAAMQ,MAAMnlD,KAAK,UAAUyC,KAAKkiD,EAAMQ,MACjEgC,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMO,WAAWllD,KAAK,UAAUyC,KAAKkiD,EAAMO,WAC3EiC,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMW,IAAIpmD,MAAMc,KAAK,UAAUyC,KAAKkiD,EAAMW,IAAIpmD,MAC7EioD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMW,IAAIU,MAAMhmD,KAAK,UAAUyC,KAAKkiD,EAAMW,IAAIU,MAC7EmB,EAAM11C,OAAOkzC,EAAMQ,MAAQR,EAAMO,WAAaP,EAAMW,IAAIpmD,MAAQylD,EAAMW,IAAIU,MAE1EmB,EAAQhnD,KAAKrC,EAAE,mBACfqpD,EAAMnnD,KAAK,QAAQyR,OAAOkzC,EAAMhvD,KAAKqK,KAAK,UAAUyC,KAAKkiD,EAAMhvD,KAAKuc,eACpEi1C,EAAM11C,OAAOkzC,EAAMhvD,KAEnBwxD,EAAQhnD,KAAKrC,EAAE,0BACfqpD,EAAMnnD,KAAK,gBAAgByR,OAAOkzC,EAAMS,aAAaplD,KAAK,UAAUyC,KAAKkiD,EAAMS,aAC/E+B,EAAM11C,OAAOkzC,EAAMS,aAEnB,IAAIgC,EAAajnD,KAAKrC,EAAE,sBACpB2nD,EAAU,GAAEjuC,MAAMmtC,EAAMc,SACxB4B,GAAkB,EACtBD,EAAWpnD,KAAK,SAASM,SAAS,UAClC,GAAEL,KAAKwlD,GAAS,SAAU6B,EAAMtjD,GAC5BmjD,EAAQC,EAAWpnD,KAAK,YAAYgE,GACpCmjD,EAAMnnD,KAAK,UAAUyR,OAAO61C,EAAKhB,OAAO7jD,KAAK6kD,EAAKhB,OAClDa,EAAMnnD,KAAK,WAAWyR,OAAO61C,EAAKf,QAAQ9jD,KAAK6kD,EAAKf,QACpDY,EAAMnnD,KAAK,WAAWyR,OAAO61C,EAAKd,QAAQ/jD,KAAK6kD,EAAKd,QACpDW,EAAMnnD,KAAK,aAAayR,OAAO61C,EAAKb,UAAUhkD,KAAK6kD,EAAKb,UACxDU,EAAMnnD,KAAK,WAAWyR,OAAO61C,EAAKZ,QAAQjkD,KAAK6kD,EAAKZ,QACpDS,EAAMnnD,KAAK,UAAUyR,OAAO61C,EAAKX,OAAOlkD,KAAK6kD,EAAKX,OAClDQ,EAAMnnD,KAAK,YAAYyR,OAAO61C,EAAKV,SAASnkD,KAAK6kD,EAAKV,SACtD,IAAI/3B,EAAQy4B,EAAKhB,OAASgB,EAAKf,QAAUe,EAAKd,QAAUc,EAAKb,UAChDa,EAAKZ,QAAUY,EAAKX,OAASW,EAAKV,QAC/C/3B,IAASw4B,GAAkB,GAC3BF,EAAM11C,OAAOod,EACjB,IACAu4B,EAAW31C,OAAO41C,GAElBF,EAAQhnD,KAAKrC,EAAE,oBACf,IAAI0nD,EAAQb,EAAMa,MACdA,IACA2B,EAAMnnD,KAAK,eAAeyR,OAAO+zC,EAAMW,MAAMnmD,KAAK,UAAUyC,KAAK+iD,EAAMW,MACvEgB,EAAMnnD,KAAK,eAAeyR,OAAO+zC,EAAMY,MAAMpmD,KAAK,UAAUyC,KAAK+iD,EAAMY,MACvEe,EAAMnnD,KAAK,iBAAiByR,OAAO+zC,EAAMa,QAAQrmD,KAAK,UAAUyC,KAAK+iD,EAAMa,QAC3Ec,EAAMnnD,KAAK,kBAAkByR,OAAO+zC,EAAMhmD,SAASQ,KAAK,UAAUyC,KAAK+iD,EAAMhmD,UAEjF2nD,EAAM11C,OAAO+zC,IAAUA,EAAMW,MAAQX,EAAMY,MAAQZ,EAAMa,QAAUb,EAAMhmD,UAEzE2nD,EAAQhnD,KAAKrC,EAAE,oBACf,IAAIq7C,EAAQwL,EAAMxL,MACdA,IACAgO,EAAMnnD,KAAK,eAAeyR,OAAO0nC,EAAMgN,MAAMnmD,KAAK,UAAUyC,KAAK02C,EAAMgN,MACvEgB,EAAMnnD,KAAK,eAAeyR,OAAO0nC,EAAMiN,MAAMpmD,KAAK,UAAUyC,KAAK02C,EAAMiN,MACvEe,EAAMnnD,KAAK,kBAAkByR,OAAO0nC,EAAM35C,SAASQ,KAAK,UAAUyC,KAAK02C,EAAM35C,UAEjF2nD,EAAM11C,OAAO0nC,IAAUA,EAAMgN,MAAQhN,EAAMiN,MAAQjN,EAAM35C,UAEzDW,KAAKytB,OAAOoB,iBAChB,EAEAu4B,YAAa,SAAUv8C,GACnB,IACIw8C,EADe,GAAEx8C,EAAG4C,QAAQstB,QAAQ,cACPl7B,KAAK,UAAWynD,EAAc,GAC/DD,EAAcvnD,MAAK,CAAC4C,EAAKxB,KACrB,IACIqmD,EADQ,GAAErmD,GACSoB,OACvBilD,GAA8B,IAAfD,IAAuBA,GAAe,MACrDC,IAAeD,GAAeC,GAC9BD,GAAe,GAAMttC,oBAAoBstC,EAAa,aAAiB,8BAA+B,aAAiB,kCAAkC,GAEjK,EAEAR,oBAAqB,WACjB9mD,KAAKrC,EAAE,8BAA8B4T,OAAOvR,KAAKN,KAAK8C,IAAI,YAC1DxC,KAAKrC,EAAE,yCAAyC2T,OAAOtR,KAAKN,KAAK8C,IAAI,WACzE,EAEAglD,QAAS,WACAxnD,KAAKN,KAAK8C,IAAI,aACfxC,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAK8zB,MAAMizB,UAAS,KAChB/mD,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,IAG3C,IAGJ,kBAAwB,oBAAwB,CAC5CyN,SAAU,GAAUi6B,YAEpBj5B,aAAc,SAAU3jB,GACpB7K,KAAK+tB,aAAe/tB,KAAKrC,EAAE,uBACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAGzCjuB,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAK8zB,MAAM/T,IAAI,gBAAgB,EACnC,EAEAiP,OAAQ,WACJhvB,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAKi4B,SACLj4B,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,iBAC7CxC,KAAKytB,OAAOM,aAAa9rB,SACrBjC,KAAK8zB,MAAMtxB,IAAI,gBAGfxC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAH5CjuB,KAAKytB,OAAOM,aAAaC,iBAAiB,YAMlDhuB,KAAK8zB,MAAMqJ,aACXn9B,KAAK8zB,MAAM0J,eACXx9B,KAAK8zB,MAAMizB,UAAS,KAChB/mD,KAAKi4B,QAAQ,GAErB,EAEAA,OAAQ,WACJ,IAAI+uB,EAAOxC,EAAQxkD,KAAK8zB,MAAMtxB,IAAI,SAElCwkD,EAAQhnD,KAAKrC,EAAE,kBACfqpD,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMU,WAAWrlD,KAAK,UAAUyC,KAAKkiD,EAAMU,WAC3E8B,EAAM11C,OAAOkzC,EAAMU,WAEnB8B,EAAQhnD,KAAKrC,EAAE,mCACfqpD,EAAMnnD,KAAK,eAAeyR,OAAOkzC,EAAMz+C,YAAYlG,KAAK,UAAUyC,KAAKkiD,EAAMz+C,YAC7EihD,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMx+C,WAAWnG,KAAK,UAAUyC,KAAKkiD,EAAMx+C,WAC3EghD,EAAM11C,OAAOkzC,EAAMz+C,YAAcy+C,EAAMx+C,WAEvCghD,EAAQhnD,KAAKrC,EAAE,wCACfqpD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMI,UAAU/kD,KAAK,UAAUyC,KAAKkiD,EAAMI,UACzEoC,EAAMnnD,KAAK,eAAeyR,OAAOkzC,EAAMz+C,YAAYlG,KAAK,UAAUyC,KAAKkiD,EAAMz+C,YAC7EihD,EAAMnnD,KAAK,gBAAgByR,OAAOkzC,EAAMK,aAAahlD,KAAK,UAAUyC,KAAKkiD,EAAMK,aAC/EmC,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMx+C,WAAWnG,KAAK,UAAUyC,KAAKkiD,EAAMx+C,WAC3EghD,EAAM11C,OAAOkzC,EAAMI,UAAYJ,EAAMz+C,YAAcy+C,EAAMK,aAAeL,EAAMx+C,WAE9EghD,EAAQhnD,KAAKrC,EAAE,uBACfqpD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMG,UAAU9kD,KAAK,UAAUyC,KAAKkiD,EAAMG,UACzEqC,EAAM11C,OAAOkzC,EAAMG,UAEnBqC,EAAQhnD,KAAKrC,EAAE,uBACfqpD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMM,UAAUjlD,KAAK,UAAUyC,KAAKkiD,EAAMM,UACzEkC,EAAM11C,OAAOkzC,EAAMM,UAEnBkC,EAAQhnD,KAAKrC,EAAE,kBACfqpD,EAAMnnD,KAAK,SAASyR,OAAOkzC,EAAMQ,MAAMnlD,KAAK,UAAUyC,KAAKkiD,EAAMQ,MACjEgC,EAAMnnD,KAAK,cAAcyR,OAAOkzC,EAAMO,WAAWllD,KAAK,UAAUyC,KAAKkiD,EAAMO,WAC3EiC,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMW,IAAIpmD,MAAMc,KAAK,UAAUyC,KAAKkiD,EAAMW,IAAIpmD,MAC7EioD,EAAMnnD,KAAK,aAAayR,OAAOkzC,EAAMW,IAAIU,MAAMhmD,KAAK,UAAUyC,KAAKkiD,EAAMW,IAAIU,MAC7EmB,EAAM11C,OAAOkzC,EAAMQ,MAAQR,EAAMO,WAAaP,EAAMW,IAAIpmD,MAAQylD,EAAMW,IAAIU,MAE1EmB,EAAQhnD,KAAKrC,EAAE,mBACfqpD,EAAMnnD,KAAK,QAAQyR,OAAOkzC,EAAMhvD,KAAKqK,KAAK,UAAUyC,KAAKkiD,EAAMhvD,KAAKuc,eACpEi1C,EAAM11C,OAAOkzC,EAAMhvD,KAEnBwxD,EAAQhnD,KAAKrC,EAAE,0BACfqpD,EAAMnnD,KAAK,gBAAgByR,OAAOkzC,EAAMS,aAAaplD,KAAK,UAAUyC,KAAKkiD,EAAMS,aAC/E+B,EAAM11C,OAAOkzC,EAAMS,aAEnB,IAAIgC,EAAajnD,KAAKrC,EAAE,sBACpB2nD,EAAU,GAAEjuC,MAAMmtC,EAAMc,SACxB4B,GAAkB,EACtBD,EAAWpnD,KAAK,SAASM,SAAS,UAClC,GAAEL,KAAKwlD,GAAS,SAAU6B,EAAMtjD,GAC5BmjD,EAAQC,EAAWpnD,KAAK,YAAYgE,GACpCmjD,EAAMnnD,KAAK,UAAUyR,OAAO61C,EAAKhB,OAAO7jD,KAAK6kD,EAAKhB,OAClDa,EAAMnnD,KAAK,WAAWyR,OAAO61C,EAAKf,QAAQ9jD,KAAK6kD,EAAKf,QACpDY,EAAMnnD,KAAK,WAAWyR,OAAO61C,EAAKd,QAAQ/jD,KAAK6kD,EAAKd,QACpDW,EAAMnnD,KAAK,aAAayR,OAAO61C,EAAKb,UAAUhkD,KAAK6kD,EAAKb,UACxDU,EAAMnnD,KAAK,WAAWyR,OAAO61C,EAAKZ,QAAQjkD,KAAK6kD,EAAKZ,QACpDS,EAAMnnD,KAAK,UAAUyR,OAAO61C,EAAKX,OAAOlkD,KAAK6kD,EAAKX,OAClDQ,EAAMnnD,KAAK,YAAYyR,OAAO61C,EAAKV,SAASnkD,KAAK6kD,EAAKV,SACtD,IAAI/3B,EAAQy4B,EAAKhB,OAASgB,EAAKf,QAAUe,EAAKd,QAAUc,EAAKb,UACzDa,EAAKZ,QAAUY,EAAKX,OAASW,EAAKV,QACtC/3B,IAASw4B,GAAkB,GAC3BF,EAAM11C,OAAOod,EACjB,IACAu4B,EAAW31C,OAAO41C,GAElBF,EAAQhnD,KAAKrC,EAAE,oBACf,IAAI0nD,EAAQb,EAAMa,MACdA,IACA2B,EAAMnnD,KAAK,eAAeyR,OAAO+zC,EAAMW,MAAMnmD,KAAK,UAAUyC,KAAK+iD,EAAMW,MACvEgB,EAAMnnD,KAAK,eAAeyR,OAAO+zC,EAAMY,MAAMpmD,KAAK,UAAUyC,KAAK+iD,EAAMY,MACvEe,EAAMnnD,KAAK,iBAAiByR,OAAO+zC,EAAMa,QAAQrmD,KAAK,UAAUyC,KAAK+iD,EAAMa,QAC3Ec,EAAMnnD,KAAK,kBAAkByR,OAAO+zC,EAAMhmD,SAASQ,KAAK,UAAUyC,KAAK+iD,EAAMhmD,UAEjF2nD,EAAM11C,OAAO+zC,IAAUA,EAAMW,MAAQX,EAAMY,MAAQZ,EAAMa,QAAUb,EAAMhmD,UAEzE2nD,EAAQhnD,KAAKrC,EAAE,oBACf,IAAIq7C,EAAQwL,EAAMxL,MACdA,IACAgO,EAAMnnD,KAAK,eAAeyR,OAAO0nC,EAAMgN,MAAMnmD,KAAK,UAAUyC,KAAK02C,EAAMgN,MACvEgB,EAAMnnD,KAAK,eAAeyR,OAAO0nC,EAAMiN,MAAMpmD,KAAK,UAAUyC,KAAK02C,EAAMiN,MACvEe,EAAMnnD,KAAK,kBAAkByR,OAAO0nC,EAAM35C,SAASQ,KAAK,UAAUyC,KAAK02C,EAAM35C,UAEjF2nD,EAAM11C,OAAO0nC,IAAUA,EAAMgN,MAAQhN,EAAMiN,MAAQjN,EAAM35C,UAEzDW,KAAKytB,OAAOoB,iBAChB,EAEAoF,SAAU,WACHj0B,KAAK+tB,aAAa,GAAGiC,WAAa,KACjChwB,KAAKrC,EAAE,uBAAuBwC,SAAS,gBACvCH,KAAKrC,EAAE,uBAAuB6B,KAAK,QAAS,uHAExCQ,KAAK+tB,aAAa,GAAGiC,WAAa,IACtChwB,KAAKrC,EAAE,uBAAuBuC,YAAY,gBAC1CF,KAAKrC,EAAE,uBAAuB6B,KAAK,QAAS,yDAG5CQ,KAAKrC,EAAE,uBAAuBuC,YAAY,gBAC1CF,KAAKrC,EAAE,uBAAuB6B,KAAK,QAAS,qDAGpD,EAEA4nD,YAAa,SAAUv8C,GACnB,IACIw8C,EADe,GAAEx8C,EAAG4C,QACS5N,KAAK,UAAWynD,EAAc,GAC/DD,EAAcvnD,MAAK,CAAC4C,EAAKxB,KACrB,IACIqmD,EADQ,GAAErmD,GACSoB,OACvBilD,GAA8B,IAAfD,IAAuBA,GAAe,MACrDC,IAAeD,GAAeC,GAC9BD,GAAe,GAAMttC,oBAAoBstC,EAAa,aAAiB,8BAA+B,aAAiB,kCAAkC,GAEjK,IAIJ,iBAAuB,oBAAwB,CAC3Cv2B,UAAW,0BACXvD,SAAU,GAAUk6B,WACpB55B,YAAa,iBAEbmD,OAAQ,CACJ,cAAe,QACf,iBAAkB,QAClB,0BAA2B,oBAC3B,2BAA4B,oBAC5B,yBAA0B,oBAC1B,wBAAyB,OACzB,wBAAyB,UAG7B1C,YAAa,WACT,IAAIjD,EAAOtrB,KACEA,KAAKrC,EAAE,eAAegqD,UAAU,CACzCC,cAAc,EACdC,YAAa,IACbC,QAAQ,EAER1gB,IAAK,IAAIl+B,KAAK,GAAOC,MAAQ,SAC7B2sB,IAAK,IAAI5sB,KAAK,GAAOC,MAAQ,OAC7B4K,OAAQ,aACRg0C,sBAAsB,EACtBC,MAAO,GACPC,QAAS,WACL,GAAE9sD,SAAS+sD,eAAe7+B,OAC1BiC,EAAK3tB,EAAE,mBAAmBuC,YAAY,UACtCorB,EAAK3tB,EAAE,mBAAmBuC,YAAY,SAC1C,EACAiR,MAAO,CACHg3C,gBAAiB,2CACjBC,aAAc,wCACdC,QAAS,2CACTC,QAAS,2CACTC,SAAU,yCACVp/C,IAAK,oCACLq/C,YAAa,6BACbC,YAAa,sCAGdplC,GAAG,aAAa,SAAqBqlC,GACxCA,EAAIh9C,gBACR,IACA1L,KAAKN,KAAK2jB,GAAG,gBAAiBrjB,KAAK2oD,iBAAkB3oD,KACzD,EAEAgvB,OAAQ,WACJhvB,KAAKN,KAAKqgB,IAAI,UAAU,GACxB/f,KAAK4oD,UACL1Z,YAAYsG,mBACZx1C,KAAK6oD,oBACL7oD,KAAK6uB,kBACL7uB,KAAKrC,EAAE,mBAAmBwC,SAAS,UACnCH,KAAKrC,EAAE,mBAAmBwC,SAAS,SACvC,EAEA0oD,kBAAmB,WACf,IAAIC,IAAyB9oD,KAAKrC,EAAE,qBAAqB4P,MAAQ,IAAMvN,KAAKrC,EAAE,sBAAsB4P,OAAO/I,OAAS,IAAMxE,KAAKrC,EAAE,oBAAoB4P,OAAO/I,QAAUxE,KAAK8zB,MAAMtxB,IAAI,OACrLxC,KAAKrC,EAAE,mBAAmB6B,KAAK,cAAespD,EAClD,EAEAF,QAAS,WACL,IAAIpE,EAAQxkD,KAAK8zB,MAAMtxB,IAAI,SAE3BxC,KAAKrC,EAAE,mBAAmB4P,IAAIi3C,EAAMG,UACpC3kD,KAAKrC,EAAE,mBAAmB4P,IAAIi3C,EAAMI,UACpC5kD,KAAKrC,EAAE,qBAAqB4P,IAAIi3C,EAAMz+C,YACtC/F,KAAKrC,EAAE,oBAAoB4P,IAAIi3C,EAAMx+C,WACrChG,KAAKrC,EAAE,sBAAsB4P,IAAIi3C,EAAMK,aAEvC7kD,KAAKrC,EAAE,mBAAmB4P,IAAIi3C,EAAMM,UAEpC9kD,KAAKrC,EAAE,eAAe4P,IAAIi3C,EAAMQ,MAChChlD,KAAKrC,EAAE,oBAAoB4P,IAAIi3C,EAAMO,WACrC/kD,KAAKrC,EAAE,mBAAmB4P,IAAIi3C,EAAMW,IAAIpmD,MACxCiB,KAAKrC,EAAE,mBAAmB4P,IAAIi3C,EAAMW,IAAIU,MAExC7lD,KAAKrC,EAAE,cAAc4P,IAAIi3C,EAAMhvD,KAE/BwK,KAAKrC,EAAE,yBAAyB4P,IAAIi3C,EAAMS,aAE1CjlD,KAAKrC,EAAE,qBAAqB4P,IAAIi3C,EAAMa,MAAMW,MAC5ChmD,KAAKrC,EAAE,qBAAqB4P,IAAIi3C,EAAMa,MAAMY,MAC5CjmD,KAAKrC,EAAE,uBAAuB4P,IAAIi3C,EAAMa,MAAMa,QAE9ClmD,KAAKrC,EAAE,qBAAqB4P,IAAIi3C,EAAMxL,MAAMgN,MAC5ChmD,KAAKrC,EAAE,qBAAqB4P,IAAIi3C,EAAMxL,MAAMiN,MAE5C,IAAIkB,EAAO3C,EAAMc,QAAQU,MAAQ,CAAC,EAC9BgB,EAAQhnD,KAAKrC,EAAE,sBACnBqpD,EAAMnnD,KAAK,gBAAgB0N,IAAI45C,EAAKhB,OACpCa,EAAMnnD,KAAK,iBAAiB0N,IAAI45C,EAAKf,QACrCY,EAAMnnD,KAAK,iBAAiB0N,IAAI45C,EAAKd,QACrCW,EAAMnnD,KAAK,mBAAmB0N,IAAI45C,EAAKb,UACvCU,EAAMnnD,KAAK,iBAAiB0N,IAAI45C,EAAKZ,QACrCS,EAAMnnD,KAAK,gBAAgB0N,IAAI45C,EAAKX,OACpCQ,EAAMnnD,KAAK,kBAAkB0N,IAAI45C,EAAKV,SAEtCU,EAAO3C,EAAMc,QAAQW,MAAQ,CAAC,EAC9Be,EAAQhnD,KAAKrC,EAAE,sBACfqpD,EAAMnnD,KAAK,gBAAgB0N,IAAI45C,EAAKhB,OACpCa,EAAMnnD,KAAK,iBAAiB0N,IAAI45C,EAAKf,QACrCY,EAAMnnD,KAAK,iBAAiB0N,IAAI45C,EAAKd,QACrCW,EAAMnnD,KAAK,mBAAmB0N,IAAI45C,EAAKb,UACvCU,EAAMnnD,KAAK,iBAAiB0N,IAAI45C,EAAKZ,QACrCS,EAAMnnD,KAAK,gBAAgB0N,IAAI45C,EAAKX,OACpCQ,EAAMnnD,KAAK,kBAAkB0N,IAAI45C,EAAKV,QAC1C,EAEA/c,QAAS,WACL,IAAI8a,EAAQ,GAAMA,MAAMqC,SAAS7mD,KAAK8zB,MAAMtxB,IAAI,QAEhDgiD,EAAMG,SAAW3kD,KAAKrC,EAAE,mBAAmB4P,MAC3Ci3C,EAAMI,SAAW5kD,KAAKrC,EAAE,mBAAmB4P,MAC3Ci3C,EAAMz+C,WAAa/F,KAAKrC,EAAE,qBAAqB4P,MAC/Ci3C,EAAMx+C,UAAYhG,KAAKrC,EAAE,oBAAoB4P,MAC7Ci3C,EAAMK,YAAc7kD,KAAKrC,EAAE,sBAAsB4P,MAEjDi3C,EAAMM,SAAW9kD,KAAKrC,EAAE,mBAAmB4P,MAE3Ci3C,EAAMQ,KAAOhlD,KAAKrC,EAAE,eAAe4P,MACnCi3C,EAAMO,UAAY/kD,KAAKrC,EAAE,oBAAoB4P,MAC7Ci3C,EAAMW,IAAIpmD,KAAOiB,KAAKrC,EAAE,mBAAmB4P,MAC3Ci3C,EAAMW,IAAIU,KAAO7lD,KAAKrC,EAAE,mBAAmB4P,MAE3Ci3C,EAAMhvD,IAAMwK,KAAKrC,EAAE,cAAc4P,MAEjCi3C,EAAMS,YAAcjlD,KAAKrC,EAAE,yBAAyB4P,MAEpDi3C,EAAMa,MAAMW,KAAOhmD,KAAKrC,EAAE,qBAAqB4P,MAC/Ci3C,EAAMa,MAAMY,KAAOjmD,KAAKrC,EAAE,qBAAqB4P,MAC/Ci3C,EAAMa,MAAMa,OAASlmD,KAAKrC,EAAE,uBAAuB4P,MAEnDi3C,EAAMxL,MAAMgN,KAAOhmD,KAAKrC,EAAE,qBAAqB4P,MAC/Ci3C,EAAMxL,MAAMiN,KAAOjmD,KAAKrC,EAAE,qBAAqB4P,MAE/Ci3C,EAAMc,QAAQU,KAAO,CAAC,EACtB,IAAImB,EAAO3C,EAAMc,QAAQU,KACrBgB,EAAQhnD,KAAKrC,EAAE,sBAmBnB,OAlBAwpD,EAAKhB,MAAQa,EAAMnnD,KAAK,gBAAgB0N,MACxC45C,EAAKf,OAASY,EAAMnnD,KAAK,iBAAiB0N,MAC1C45C,EAAKd,OAASW,EAAMnnD,KAAK,iBAAiB0N,MAC1C45C,EAAKb,SAAWU,EAAMnnD,KAAK,mBAAmB0N,MAC9C45C,EAAKZ,OAASS,EAAMnnD,KAAK,iBAAiB0N,MAC1C45C,EAAKX,MAAQQ,EAAMnnD,KAAK,gBAAgB0N,MACxC45C,EAAKV,QAAUO,EAAMnnD,KAAK,kBAAkB0N,MAE5Ci3C,EAAMc,QAAQW,KAAO,CAAC,EACtBkB,EAAO3C,EAAMc,QAAQW,KACrBe,EAAQhnD,KAAKrC,EAAE,sBACfwpD,EAAKhB,MAAQa,EAAMnnD,KAAK,gBAAgB0N,MACxC45C,EAAKf,OAASY,EAAMnnD,KAAK,iBAAiB0N,MAC1C45C,EAAKd,OAASW,EAAMnnD,KAAK,iBAAiB0N,MAC1C45C,EAAKb,SAAWU,EAAMnnD,KAAK,mBAAmB0N,MAC9C45C,EAAKZ,OAASS,EAAMnnD,KAAK,iBAAiB0N,MAC1C45C,EAAKX,MAAQQ,EAAMnnD,KAAK,gBAAgB0N,MACxC45C,EAAKV,QAAUO,EAAMnnD,KAAK,kBAAkB0N,MACrCi3C,CACX,EAEAmE,iBAAkB,WACd3oD,KAAKrC,EAAE,mBAAmB2E,KAAKtC,KAAKN,KAAK8C,IAAI,UAAY,aAAiB,UAAY,aAAiB,2BAC3G,EAEAugB,KAAM,WACE/iB,KAAKN,KAAK8C,IAAI,YAGlBxC,KAAKN,KAAKqgB,IAAI,UAAU,GACxB/f,KAAK8zB,MAAMi1B,SAAS/oD,KAAK0pC,WACrB,KACI1pC,KAAK8zB,MAAMizB,WACX/mD,KAAKN,KAAKqgB,IAAI,UAAU,GACxB/f,KAAKrC,EAAE,mBAAmBwC,SAAS,UACnCH,KAAKrC,EAAE,mBAAmBwC,SAAS,SAAS,IAEhD,WACI,GAAM4L,QAAQgC,MAAM,aAAiB,gCACrC/N,KAAKN,KAAKqgB,IAAI,UAAU,EAC5B,IAER,EAEA8X,MAAO,WACH73B,KAAKrC,EAAE,mBAAmBuC,YAAY,UACtCF,KAAKrC,EAAE,mBAAmBuC,YAAY,SAC1C,IAGJ,Y,gBCvpBA,IAAI,GAAM,OACN,GAAY,GAAI/O,UAChB,GAAY,GAAI0N,UAAUuoB,SAC1B,GAAQ,GAAInU,MACZ,GAAI,GAAItV,EACR,GAAM,GAAIq4B,IACVgzB,GAAQ,GAAIA,MACZ,GAAO,GAAI91C,KACX,GAAU,GAAIxU,QACd,GAAI,GAAId,EACR,GAAS,GAAIC,OACborD,GAAS,GAAMvoC,OACfzM,GAAmBH,GAAuB,GAAMG,gBAAgBH,GAAwC,SAA5B,sBAAmE,WAA5B,sBAA2E,SAAlC,OAAW,sBAAmC,wBAG9M,WAAiBqN,SAASC,MAAMpX,OAAO,CAC/BqmC,YAAa,MAEbhvB,SAAU,KACC,CACH6nC,SAAS,EACTxI,UAAW,WACXn6B,OAAQ,SACR4iC,eAAgB,GAChBC,SAAU,GACVC,eAAe,EACfC,kBAAmB,KAAO7nC,UAAU,EAAG,GACvC8nC,uBAAwB,KAIhC5nC,WAAY,SAAUuvB,EAAQlyC,GAG1B,GAFAgB,KAAKwpD,mBAAqB,KAC1BxqD,IAAYA,EAAU,CAAC,GACnBkyC,EAAOuY,SAAWzqD,EAAQ0qD,UAG1B,OAFA1pD,KAAK2pD,YAAa,OAClB3pD,KAAKqjB,GAAG,UAAWrjB,KAAK+8B,UAAW/8B,MAGvCA,KAAK4pD,mBAAqB,EAC1B5pD,KAAKwiB,SAAW,6BAAiC0uB,EAAOh5B,KACnDlY,KAAKwiB,WACNxiB,KAAKwiB,SAAW,gCAAoC,CAChDtK,IAAKg5B,EAAOh5B,IACZpE,UAAW,GAAM3K,MACjBkgD,cAAerpD,KAAKwC,IAAI,iBACxB8tC,QAAS,gBAAsB,mBAAuB,eAG9D,IAAI9tB,EAAW,GAAEnL,MAAMrX,KAAKwiB,SAASlL,YACrCkL,EAAS3c,QAAU2c,EAAS3c,MAAQ7F,KAAK6pD,WAAWnhD,mBACpD8Z,EAASywB,QAAUzwB,EAASywB,MAAQjzC,KAAK6pD,WAAWC,eAAiB,GACrE9pD,KAAKwiB,SAASO,KAAKP,GACnBxiB,KAAKwiB,SAASa,GAAG,iBAAkBrjB,KAAK+pD,cAAe/pD,MACvD,IAAIoX,EAAQ,GAAEC,MAAM65B,GACpB95B,EAAMrY,OAASqY,EAAMrY,KAAOqY,EAAMc,KAClCd,EAAMpc,QAAUoc,EAAMpc,MAAQiuD,GAAOrjD,iBAAiBwR,EAAMrY,OAC5DiB,KAAKmF,aAAe8jD,GAAO/kD,eAAekT,EAAMpc,OAChDoc,EAAMotC,MAAQ,GAAMA,MAAMqC,SAASzvC,EAAMc,KACzCd,EAAM4yC,WAAa,GACnBhqD,KAAK+iB,KAAK3L,GACVpX,KAAK0pD,UAAY1qD,EAAQ0qD,WAAa,KACtC1pD,KAAK4sB,QAAU,IAAIzL,SAASC,MAAM,CAC9BgwB,WAAW,EACX6Y,aAAa,EACbC,eAAe,EACfC,aAAc,EACdC,cAAe,aAAiB,0CAEpCpqD,KAAKqqD,eAAgB,EACrBrqD,KAAKsqD,cAAgB,GACrBtqD,KAAKuqD,sBAAwB,GAC7BvqD,KAAKwqD,YAAc,CAAC,EACpBxqD,KAAK4sB,QAAQvJ,GAAG,mBAAoBrjB,KAAKyqD,mBAAoBzqD,MAC7DA,KAAK1M,eAAiB49C,EAAOwZ,0BAA4B,GAAUp3D,eACnE0M,KAAK2qD,aAAe,IAAI,GAAQlK,kBAAkBzgD,KAAK1M,eAAgB,CAAC,WAAW,IACnF0M,KAAK+sB,WAAa/sB,KAAK2qD,aAAa59B,WACpC/sB,KAAKwC,IAAI,aAAexC,KAAK+sB,WAAW41B,QAAU3iD,KAAKwC,IAAI,YACvDxC,KAAK+sB,WAAW41B,SAAW3iD,KAAK+sB,WAAW41B,QAAQtmC,UAAYrc,KAAKwC,IAAI,iBACxExC,KAAK+iB,KAAK,CACNg/B,aAAc/hD,KAAK+sB,WAAW41B,QAAQtmC,UAE9Crc,KAAKwC,IAAI,kBAAoBxC,KAAK+sB,WAAW1Q,QAAUrc,KAAKwC,IAAI,iBAChExC,KAAKqjB,GAAG,UAAWrjB,KAAK+8B,UAAW/8B,MACnCA,KAAK4qD,qBAAuB,GAC5B5qD,KAAKmkD,iBAAmB,GACxBnkD,KAAK6qD,kBAAoB,GACzB7qD,KAAK8qD,aAAe,IAAI,GAAEzjD,SAC1BrH,KAAK6kB,UAAY,IAAI,oBAAwB,KAAM,CAAC6H,QAAS1sB,OAC7DA,KAAK+qD,cAAgB,IAAI,sBAA0B,CAACj3B,MAAO9zB,OAC3DA,KAAK0nD,WAAa,IAAI,iBAAqB,CAAC5zB,MAAO9zB,OACnDA,KAAKohC,oBACLphC,KAAKwiB,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACzDA,KAAKqjB,GAAG,oBAAqBrjB,KAAK+mD,SAAU/mD,MAC5C,GAAEF,KAAKE,KAAKgrD,eAAgBC,IACxBA,EAAO1xD,KAAKyG,KAAK,IAErBA,KAAK+sB,WAAWswB,SAAW,SAAU6N,GACjC,QAAY,yBACZ,QAAYA,EAChB,EACAlrD,KAAK+sB,WAAWi3B,UAAY,SAAUkH,GAClC,QAAY,0BACZ,QAAYA,EAChB,EACAlrD,KAAK2hC,KAAK,QAAS3hC,KAAK+W,MAAO/W,MAC3B,eACA,kBAAsB,mBAAmB,SAAUkI,GAC3CA,GAAUlI,KAAKwiB,SAAShgB,IAAI,UAC5BxC,KAAK+iB,KAAK,CAAC29B,UAAW,UAE1B1gD,KAAKuL,QAAQ,QACjB,GAAGvL,MAEH,MAAU,sBAAsB,KACxBA,KAAKwiB,SAAShgB,IAAI,UAClBxC,KAAK+iB,KAAK,CAAC29B,UAAW,UAC1B1gD,KAAKuL,QAAQ,QAAQ,GACtBvL,KACX,EAEA+W,MAAO,WACH/W,KAAKwC,IAAI,YAAcxC,KAAKmrD,YAAcnrD,KAAKk+C,SACnD,EAEA8M,cAAe,GAEfI,YAAa,WACT,IACI,OAAO,GAAMz3C,KAAK3T,KAAKwC,IAAI,YAG/B,CAFE,MAAOsP,GACL,MAAO,EACX,CACJ,EAEA6a,YAAa,WACT,OAAO3sB,KAAK4sB,SAAW5sB,KAAK4sB,QAAQpqB,IAAI,YAC5C,EAEA6oD,eAAgB,WACZ,OAAOrrD,KAAK4sB,SAAW5sB,KAAK4sB,QAAQpqB,IAAI,eAC5C,EAEA2oD,SAAU,WACN,MAA8B,YAAvBnrD,KAAKwC,IAAI,SACpB,EAEA8oD,QAAS,SAAUzL,EAAQ73B,GACvB,IAAIzoB,EAAMS,KAAK+sB,WAAWw+B,gBAAkBvrD,KAAK+sB,WAAWy+B,eAAiBxrD,KAAK4sB,QAAQpqB,IAAI,cAAgBxC,KAAK4sB,QAAQpqB,IAAI,kBAA2C,YAAvBxC,KAAKwC,IAAI,UAK5J,OAJIjD,GACAS,KAAK+sB,WAAWlG,KAAKg5B,GAEzB73B,GAAYA,IACLzoB,CACX,EAEAksD,eAAgB,SAAU5L,GACtB,IAAItgD,EAAMS,KAAK+sB,WAAWw+B,gBAAkBvrD,KAAK+sB,WAAWy+B,eAAiBxrD,KAAK4sB,QAAQpqB,IAAI,cAAuC,YAAvBxC,KAAKwC,IAAI,UAIvH,OAHIjD,GACAS,KAAK+sB,WAAWlG,KAAKg5B,GAElBtgD,CACX,EAEAmsD,YAAa,SAAU7L,EAAQ73B,GAC3B,OAAOhoB,KAAKsrD,QAAQzL,EAAQ73B,EAChC,EAEA2jC,mBAAoB,WAEhB,OADU3rD,KAAK4rD,kBAAoB5rD,KAAK4rD,gBAAgBJ,eAAiBxrD,KAAK4rD,gBAAgBL,eAAiBvrD,KAAK4rD,gBAAgBxa,WAAoC,YAAvBpxC,KAAKwC,IAAI,UAE/IxC,KAAK4rD,gBAEL5rD,KAAK+sB,UACpB,EAEA4J,WAAY,WACR,IAAIp3B,EAAMS,KAAK4rD,kBAAoB5rD,KAAK4rD,gBAAgBJ,eAAiBxrD,KAAK4rD,gBAAgBL,eAAiBvrD,KAAK4rD,gBAAgBxa,WAAoC,YAAvBpxC,KAAKwC,IAAI,UAC1J,OAAIjD,GACAS,KAAK4rD,gBAAgBjF,OAAO/3B,MAAM5uB,KAAK4rD,gBAAiBv6C,WACjD9R,GAEAS,KAAK2mD,OAAO/3B,MAAM5uB,KAAMqR,UACvC,EAEAw6C,SAAU,SAAUhM,EAAQ73B,EAAUnN,GAC9B,GAAEglC,EAAOiM,UAAU55B,QAAQ65B,GAAG,WAC9B/rD,KAAK0rD,YAAY7L,EAAQ73B,GAEzBhoB,KAAK22B,WAAWkpB,EAAQ73B,EAAUnN,EAE1C,EAEAmxC,UAAW,SAAUhxD,EAAOgtB,EAAUnN,GAClC,IAAK7f,EAED,YADAgF,KAAKisD,aAAajkC,EAAUnN,GAGhC,IAAIqmB,EAAM,IAAI,GAAE75B,SAoDhB,GAlDA65B,EAAI3Y,MAAK,CAAC7oB,EAAMwsD,KACZ,GAAIA,EAAa,CACb,IAAIC,EAAczsD,EAAK8H,MAAQxM,EAAMwM,MAAQpJ,KAAKpD,EAAM4N,QACpDwjD,EAAkB,GAAI,CAACvoD,KAAM,QACxBsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,UAAW,CAAC9C,KAAM,GAAQ6lB,GAAGo2B,yBAC/Bn5C,EAAE,OAAQ,CAACvJ,GAAIuiD,IACfh5C,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGo2B,yBACjCn5C,EAAE,OAAQ,CAAC/K,MAAO1I,EAAKkF,KAAMgF,GAAIuiD,EAAatoD,KAAMnE,EAAKmE,KAAMrO,IAAKkK,EAAKuH,OAClFvH,EAAK6sD,WAAWl6C,SAASi3B,IACrB8iB,EAAgBj5C,EAAE,YAAa,CAC3B8iB,MAAO,GAAQC,GAAGs2B,iCAClBh3D,IAAK8zC,EAAU9zC,IACfsP,MAAOwkC,EAAUxkC,MACjBC,OAAQukC,EAAUvkC,SACnBsxB,IAAG,IAEVr2B,KAAK22B,WAAWy1B,GAAiB,KACzBpkC,GAAYA,EAASmkC,EAAY,IAErC,SAAUM,GACN5xC,GAAWA,EAAQ4xC,EACvB,GACR,KACK,CACD,IAAIN,EAAcnxD,EAAMwM,MAAQpJ,KAAKpD,EAAM4N,QACvC8jD,EAAc,GAAI,CAAC7oD,KAAM,QACpBsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,UAAW,CAAC9C,KAAM,GAAQ6lB,GAAGy2B,qBAC/Bx5C,EAAE,OAAQ,CAACvJ,GAAIuiD,IACfh5C,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy2B,qBAAqBxnC,EAAEzlB,GACzD0sD,EAAkB,GAAI,CAACvoD,KAAM,QACxBsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,UAAW,CAAC9C,KAAM,GAAQ6lB,GAAGo2B,yBAC/Bn5C,EAAE,OAAQ,CAACvJ,GAAIuiD,IACfh5C,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGo2B,yBACjCn5C,EAAE,OAAQ,CAAC/K,MAAOpN,EAAM4J,KAAMgF,GAAIuiD,EAAatoD,KAAM7I,EAAM6I,OACpE7D,KAAK22B,WAAW+1B,GAAa,KACrB1sD,KAAK22B,WAAWy1B,GAAiB,KACzBpkC,GAAYA,EAASmkC,EAAY,IAErC,SAAUM,GACN5xC,GAAWA,EAAQ4xC,EACvB,GAAE,IAETA,IACG5xC,GAAWA,EAAQ4xC,EAAW,GAE1C,KAEAzxD,EAAM4xD,SACN1rB,EAAI74B,QAAQrN,GAAO,QAElB,GAAIgF,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,iBAAmBxH,EAAM6xD,YAAc7xD,EAAM4xD,SAAS,CACjG,IAAI3lD,EAAOjM,EAAM+D,KAAO/D,EAAQA,EAAMiM,KACtCjH,KAAK8sD,aAAa7lD,GAAO1H,IACjBA,EAAIgtD,WAAWtqD,QAAU1C,EAAI0H,MAC7B1H,EAAIsE,KAAOoD,EAAKpD,KAChBq9B,EAAI74B,QAAQ9I,GAAK,IAEjB2hC,EAAI74B,QAAQrN,EAAM4N,OAAM,IAC5BrJ,IACA2hC,EAAI74B,QAAQrN,EAAM4N,OAAM,GAEhC,MACIs4B,EAAI74B,QAAQrN,EAAM4N,OAC1B,EAEAqjD,aAAc,SAAUjkC,EAAUnN,GAC9B,IAAIuxC,EAAkB,GAAI,CAACvoD,KAAM,QAC5BsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,UAAW,CAAC9C,KAAM,GAAQ6lB,GAAGo2B,yBAC/Bn5C,EAAE,QACFA,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGo2B,yBACtCtsD,KAAK22B,WAAWy1B,GAAiB,KACzBpkC,GAAYA,GAAU,IAE1B,WACInN,GAAWA,GACf,GACR,EAEAkyC,UAAW,SAAUzhB,EAAQtjB,EAAUnN,GACnC,IAAImyC,EAAoB,GAAI,CAACnpD,KAAM,MAAO0S,GAAIvW,KAAKwC,IAAI,SAClD2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,QAAS,CAAC9C,KAAM,GAAQ6lB,GAAGy2B,qBAC7Bx5C,EAAE,OAAQ,CAACvJ,GAAI0hC,IACpBtrC,KAAK22B,WAAWq2B,GAAoBj3B,IAChC,IAAIk3B,EAAgB,GAAEl3B,GAAIl2B,KAAK,QAAQyC,OAClB,IAAjB2qD,EACApyC,GAAWA,EAAQ,aAAiB,mCAEpCmN,GAAYA,EAASilC,EAAc,GAE/C,EAEAtG,OAAQ,WACJ,IAAIpnD,EAAMS,KAAK+sB,WAAWw+B,gBAAkBvrD,KAAK+sB,WAAWy+B,eAAiBxrD,KAAK4sB,QAAQpqB,IAAI,cAAuC,YAAvBxC,KAAKwC,IAAI,UACvH,GAAIjD,EAAK,CACL,IAAIyrC,EAAO35B,UAAU,GACrB,GAA0B,mBAAf25B,EAAS,MAAwD,OAApCA,EAAKpa,OAAO+I,aAAa,QAAkB,CAC/E,IAAI9V,EAAO,qBACF,WAARA,IAAuBA,EAAO,OAAW,qBAC1CmnB,EAAKpa,OAAO8I,aAAa,WAAY7V,EACzC,CACA7jB,KAAK+sB,WAAW45B,OAAO/3B,MAAM5uB,KAAK+sB,WAAY1b,UAClD,MACUA,UAAU,IAAM,GAAEA,UAAU,GAAGy6C,UAAUjsD,KAAK,gBAAkB,GAAQq2B,GAAGC,IAAM,MAAMl0B,QACzFjC,KAAKmkD,iBAAiB/iD,KAAK,CAACy+C,OAAQxuC,UAAW67C,OAAO,IAG9D,OAAO3tD,CACX,EAEA4tD,cAAe,SAAUC,EAAWpuD,GAChCA,EAAUA,GAAW,CAAC,EACtB,IAAI6E,EAAOupD,EAAU5tD,KAAK,QACtBoC,EAAQwrD,EAAUz/B,SAAS,SAASrrB,OACpCm6C,EAAe2Q,EAAUz/B,SAAS,gBAAgBrrB,OAClDmX,EAAS,GACTF,EAAY,CAAC,EA4BjB,OA3BA6zC,EAAUz/B,SAAS,SAAS7tB,MAAK,CAAC4C,EAAKgX,KACnC,IAAI2zC,EAAS,GAAE3zC,GACXtC,EAAQ,CAAC,EACTk2C,EAAYD,EAAO7tD,KAAK,OACxBs3B,EAAau2B,EAAO7tD,KAAK,QACzB+tD,EAAcF,EAAO7tD,KAAK,SAC1BguD,EAAc,GAAIC,EAAgB,GACtCJ,EAAO1/B,SAAS,SAAS7tB,MAAK,CAAC0D,EAAGuH,KAC9ByiD,EAAYpsD,KAAK,GAAE2J,GAAOzI,OAAO,IAErC+qD,EAAO1/B,SAAS,UAAU7tB,MAAK,CAAC0D,EAAGgK,KAC/B,IAAIkgD,EAAU,GAAElgD,GACZD,EAAMmgD,EAAQ//B,SAAS,SAASrrB,OAChCqrD,EAAMD,EAAQluD,KAAK,SACvBiuD,EAAcrsD,KAAK,CAAC2J,MAAOwC,EAAKqM,MAAO+zC,GAAK,IAEhDL,IAAcl2C,EAAM2C,IAAMuzC,GAC1Bx2B,IAAe1f,EAAMvT,KAAOizB,GAC5By2B,IAAgBn2C,EAAMwC,MAAQ2zC,GAC9BC,EAAYvrD,SAAWmV,EAAMyC,OAAS2zC,GACtCC,EAAcxrD,SAAWmV,EAAMpY,QAAUyuD,GACzCh0C,EAAOrY,KAAKgW,EAAM,IAEtBvT,IAAS0V,EAAU1V,KAAOA,GAC1BjC,IAAU2X,EAAU3X,MAAQA,GAC5B66C,IAAiBljC,EAAUkjC,aAAeA,GAC1ChjC,EAAOxX,SAAWsX,EAAUE,OAASA,GAC9BF,CACX,EAEAq0C,oBAAqB,SAAUC,EAASt0C,GAcpC,OAbAs0C,EAAQ16C,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAGE,SAAUvyB,KAAM,WAClD0V,EAAU3X,OAASisD,EAAQ16C,EAAE,SAASgS,EAAE5L,EAAU3X,OAAOy0B,KACzD9c,EAAUkjC,cAAgBoR,EAAQ16C,EAAE,gBAAgBgS,EAAE5L,EAAUkjC,cAAcpmB,KAC9E9c,EAAUE,OAAOpH,SAASqH,IACtB,IAAIo0C,EAAc,GAAEz2C,MAAMqC,UACnBo0C,EAAYj0C,cACZi0C,EAAY9uD,QACnB6uD,EAAQ16C,EAAE,QAAS26C,GACnBp0C,EAAMG,QAAUH,EAAMG,OAAOxH,SAAStH,IAClC8iD,EAAQ16C,EAAE,SAASgS,EAAEpa,GAAOsrB,IAAI,IAEpCw3B,EAAQx3B,IAAI,IAETw3B,CACX,EAEAE,SAAU,SAAUlO,GAMhB,OALI7/C,KAAK+sB,WAAWw+B,eAAiBvrD,KAAK4sB,QAAQpqB,IAAI,aAClDxC,KAAK+sB,WAAWlG,KAAKg5B,GAErB7/C,KAAKmkD,iBAAiB/iD,KAAK,CAACy+C,OAAQA,IAEjC7/C,KAAK+sB,WAAWw+B,aAC3B,EAEAyC,oBAAqB,SAAUttD,EAAMsnB,GACjC,IAAI+gB,EAAU,CACVllC,KAAM,OACNrO,IAAK,GAAUoG,gBAAkB,uBACjCoH,YAAa,mBACbgmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAE7xC,KAAMA,EAAMwX,IAAKlY,KAAK+sB,WAAW7U,MACxD+wB,QAAS,SAAUvpC,EAAMyyC,EAAYC,GACjCpqB,GAAYA,EAAStoB,EAAKsxC,MAC9B,GAEJ,GAAE5H,KAAKL,EACX,EAEAklB,qBAAsB,WAClB,IAEIna,EAFA57B,EAAMlY,KAAKwC,IAAI,OACfk+C,EAAY1gD,KAAK2qD,aAAajK,UAYlC,GATI5M,EADc,UAAd4M,EACW1gD,KAAKwiB,SAAShgB,IAAI,SACR,YAAdk+C,EACH1gD,KAAKwC,IAAI,aAAkD,IAAnCT,OAAO/B,KAAKwC,IAAI,WAAWogD,QAAe,GAAOz5C,QAAUnJ,KAAKwC,IAAI,WAAWogD,QAC5F5iD,KAAKwC,IAAI,WAAWwuC,WAEpB51B,EAEJpb,KAAKorD,eAEftX,EAAU,CACX,IAAI18B,EAAQ,CAAC28B,OAAO,GAGpB,OAFA/0C,QAAQkvD,oBAAsB92C,EAAM82C,mBAAoB,QACxDluD,KAAK+qD,cAAcr8B,KAAKtX,EAE5B,CACA,GAAKpX,KAAKmuD,kBAcN,OADAnuD,KAAK4rD,gBAAgBwC,aACdpuD,KAAKiuD,uBAbZjuD,KAAKmuD,kBAAoB,IAAI,GAAQ1N,kBAAkBzgD,KAAK1M,gBAC5D0M,KAAK4rD,gBAAkB5rD,KAAKmuD,kBAAkBphC,WAC9C/sB,KAAK4rD,gBAAgBl/B,QAAU1sB,KAC/BA,KAAK4rD,gBAAgBvO,SAAW,SAAU6N,GACtC,QAAY,yBACZ,QAAYA,EAChB,EACAlrD,KAAK4rD,gBAAgB5H,UAAY,SAAUkH,GACvC,QAAY,0BACZ,QAAYA,EAChB,EAKc,YAAdxK,GAA2B1gD,KAAK4rD,kBAChC5rD,KAAK4rD,gBAAgBjJ,QAAU3iD,KAAKwC,IAAI,WACxCxC,KAAK4rD,gBAAgBvvC,QAAUrc,KAAKwC,IAAI,gBACxCxC,KAAK4rD,gBAAgBtJ,cAAe,GAExCtiD,KAAKmuD,kBAAkBjQ,QAAQwC,EAAWxoC,EAAK47B,EAAU9zC,KAAKquD,gBAAgB/lD,KAAKtI,MACvF,EAEAk+C,QAAS,SAAUl/C,GACfA,EAAUA,GAAW,CAAC,EACtB,IAEI80C,EAFA57B,EAAMlY,KAAKwC,IAAI,OACfk+C,EAAY1gD,KAAKwC,IAAI,aAkBzB,GAhBA0V,GAAO,eAAiB,OAAW,aACnClY,KAAK+sB,WAAW41B,QAAU3iD,KAAKwC,IAAI,WACnCxC,KAAK+sB,WAAW1Q,QAAUrc,KAAKwC,IAAI,gBACnCxC,KAAK+sB,WAAWL,QAAU1sB,KACtBA,KAAK+sB,WAAW41B,UAAY3iD,KAAK+sB,WAAW1Q,UAC5Crc,KAAK+sB,WAAW1Q,QAAU,GAE1By3B,EADc,UAAd4M,EACW1gD,KAAKwiB,SAAShgB,IAAI,SACR,YAAdk+C,EACH1gD,KAAKwC,IAAI,aAAkD,IAAnCT,OAAO/B,KAAKwC,IAAI,WAAWogD,QAAe,GAAOz5C,QAAUnJ,KAAKwC,IAAI,WAAWogD,QAC5F5iD,KAAKwC,IAAI,WAAWwuC,WAEpB51B,EAEJpb,KAAKorD,eAEftX,EAAU,CACX,IAAI18B,EAAQ,CAAC28B,OAAO,GAGpB,OAFA/0C,EAAQkvD,oBAAsB92C,EAAM82C,mBAAoB,QACxDluD,KAAK+qD,cAAcr8B,KAAKtX,EAE5B,CACApX,KAAK4sB,QAAQ7M,IAAI,CACbqxB,WAAW,EACX6Y,aAAa,EACbqE,cAAc,EACdpE,eAAe,EACfC,aAAc,EACdC,cAAe,aAAiB,gCAChCmE,aAAa,IAEjBvuD,KAAKwuD,gBACLxuD,KAAK2qD,aAAazM,QAAQwC,EAAWxoC,EAAK47B,EAAU9zC,KAAKyuD,mBAAmBnmD,KAAKtI,MACrF,EAEA8gD,UAAW,SAAUh0B,GACjB,IAAIq9B,EAAenqD,KAAK4sB,QAAQpqB,IAAI,gBAChCksD,EAAUvE,EAAe,EAAI,GAAUr2D,sBAAsBq2D,GAAgB,IACjFr9B,IAAY4hC,EAAU,MACtB1uD,KAAK4sB,QAAQ7M,IAAI,CACbqxB,WAAW,EACX6Y,aAAa,EACbC,eAAe,EACfoE,cAAc,EACdnE,eAAgBA,EAChBC,cAAgB,aAAiB,iDAAkD,CAACsE,EAAQ,MAC5FH,aAAa,IAEbvuD,KAAKwC,IAAI,aACTxC,KAAK+sB,WAAW41B,QAAU3iD,KAAKwC,IAAI,YACvCxC,KAAK+sB,WAAWL,QAAU1sB,KAC1BoK,YAAW,KACPpK,KAAK2uD,aAAa,aAAiB,iCACnC3uD,KAAKwuD,gBACLxuD,KAAK+sB,WAAWyvB,QAChBx8C,KAAK2qD,aAAa7J,UAAU9gD,KAAK4uD,qBAAqBtmD,KAAKtI,MAAM,GAClE0uD,EACP,EAEAD,mBAAoB,SAAUloC,EAAQnV,EAAW45B,GAC7C,GAAIhrC,KAAK4sB,QAAQpqB,IAAI,gBACjB,QAAY,0CAA0C,GAAUjP,cAAcgzB,SAQlF,GALAvmB,KAAK0pD,WAAa1pD,KAAK6uD,cAActoC,EAAQnV,GAC7CpR,KAAK4sB,QAAQ7M,IAAI,CAAC+uC,YAAavoC,EAAQwoC,eAAgB39C,IAClDmV,IAAW,GAAQs1B,OAAOJ,OAAyB,aAAdrqC,GAA8BpR,KAAK4sB,QAAQpqB,IAAI,WACrFxC,KAAKgvD,uBAELzoC,IAAW,GAAQs1B,OAAOoT,UAAW,CAWrC,GAVAjvD,KAAK4sB,QAAQ7M,IAAI,oBAAoB,GACjC/f,KAAK+sB,WAAW41B,UAChB3iD,KAAK+iB,KAAK,CACN29B,UAAW,UACXiC,QAAS3iD,KAAK+sB,WAAW41B,QACzBZ,aAAc/hD,KAAK+sB,WAAW1Q,UAElCrc,KAAK2qD,aAAajK,UAAY,WAG9B1gD,KAAKwC,IAAI,yBAAyB,CAClC,IAAIgiD,EAAQ,GAAMA,MAAMqC,SAAS7mD,KAAKwC,IAAI,QAC1CgiD,EAAMG,SAAW3kD,KAAKwC,IAAI,yBAC1BxC,KAAK+oD,SAASvE,GACV,KACIxkD,KAAK+mD,WACL/mD,KAAK+f,IAAI,wBAAyB,KAAI,IAE1C,WACI,GAAMhU,QAAQgC,MAAM,aAAiB,gCACrC/N,KAAK+f,IAAI,wBAAyB,KACtC,GAER,CACA/f,KAAKiuD,uBACLjuD,KAAK4sB,QAAQ7M,IAAI,CAACqxB,WAAW,EAAM6Y,aAAa,GACpD,MAAO,GAAI1jC,IAAW,GAAQs1B,OAAOoH,SACF,YAA1BjjD,KAAKwC,IAAI,cAA8BxC,KAAK+sB,WAAW41B,QACpD3iD,KAAK4sB,QAAQpqB,IAAI,iBAAmB,GAAoD,IAA/C,GAAEwoC,GAAMnrC,KAAK,uBAAuBoC,OAC7EjC,KAAK8gD,WAAU,GAEf9gD,KAAKkvD,iBAGTlvD,KAAKmvD,oBACN,GAAI5oC,IAAW,GAAQs1B,OAAOuT,aAAc,CAC/C,GAAIpvD,KAAK4sB,QAAQpqB,IAAI,oBACjB,OACJxC,KAAK+sB,WAAWsiC,QACZrvD,KAAKsvD,uBACLtvD,KAAKsvD,sBAAsBC,YAC/BvvD,KAAK4sB,QAAQ7M,IAAI,CACbqxB,WAAW,EACX8Y,eAAe,GAEvB,CACJ,EAEAsF,qBAAsB,WAClB,IAAIC,EAAqB,GAAI,CAAC5rD,KAAM,QAAQsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGw5B,kBAAkBv8C,EAAE,UAAW,CAAC8iB,MAAM,mBAChHj2B,KAAK22B,WAAW84B,GAAqB15B,IACS,QAArC,GAAEA,GAAIl2B,KAAK,UAAUL,KAAK,SAAsD,GAA/B,GAAEu2B,GAAIl2B,KAAK,UAAUyC,QACvEtC,KAAK22C,mBACT,GAER,EAEAA,kBAAmB,SAAU3uB,GACzBhoB,KAAK2vD,iBAAiBjwD,IAElB,GADAM,KAAKwqD,YAAc,CAAEoF,QAASlwD,EAAKkwD,QAASC,WAAYnwD,EAAKmwD,YACzD7vD,KAAKsqD,cAAcroD,OAAS,EAAG,CAC/B,IAAI6tD,EAAiB9vD,KAAKsqD,cAAczqD,MAAKkwD,GAAmBA,EAAe73C,MAAQlY,KAAKwqD,YAAYoF,SAAWG,EAAenmD,KAAO5J,KAAKwqD,YAAYqF,aAC1J,GAAIC,EAAgB,CAChB,IAAIE,EAAqBhwD,KAAKsqD,cAAclmD,QAAQ0rD,GACnDE,GAAsB,GAAMhwD,KAAKsqD,cAAcrQ,OAAO+V,EAAoB,GAC3EhwD,KAAKguD,oBAAoB8B,EAAepvD,MAAOhB,IAC3CM,KAAKqqD,eAAgB,EACrB,IAAI4F,EAAoB,GAAI,CAACpsD,KAAM,QAC9BsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGw5B,kBAC9Bv8C,EAAE,UAAW,CAAC8iB,MAAM,mBACpB9iB,EAAE,SAAU,CAACtP,KAAM,SAASshB,EAAE,GAC/B,iBACA,oBAAwB,QAASzlB,GACjC,iCAEJM,KAAK22B,WAAWs5B,GAChBjoC,GAAYA,GAAU,GAE9B,CACA,GAAIhoB,KAAKsqD,cAAcroD,OAAQ,CAC3B,IAAIiuD,EAAY,CACZC,SAAUnwD,KAAKsqD,cAAc,GAAGpyC,IAChChB,QAAS,aAAiB,mDAAoD,CAACnV,OAAO/B,KAAKsqD,cAAc,GAAG5pD,QAC5G0vD,aAAa,GAEjBpwD,KAAKqwD,oBAAoBH,EAC7B,CACJ,IAER,EAEAP,gBAAiB,SAAS3nC,GACtB,IAAI+gB,EAAU,CACVllC,KAAM,OACNrO,IAAK,GAAUoG,gBAAkB,+BACjCoH,YAAa,mBACbgmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAEr6B,IAAKlY,KAAK+sB,WAAW7U,IAAKrU,KAAM,OACvDolC,QAAS,SAAUvpC,EAAMyyC,EAAYC,GACjCpqB,GAAYA,EAAStoB,EACzB,GAEJM,KAAKqqD,eAAgB,EACrB,GAAEjhB,KAAKL,EACX,EAEA6lB,qBAAsB,SAAUroC,EAAQnV,EAAW45B,GAC/C,GAAKhrC,KAAK4sB,QAAQpqB,IAAI,iBAKtB,GADAxC,KAAK4sB,QAAQ7M,IAAI,CAAC+uC,YAAavoC,EAAQwoC,eAAgB39C,IACnDmV,IAAW,GAAQs1B,OAAOoT,UAC1BjvD,KAAK4sB,QAAQ7M,IAAI,oBAAoB,GACjC/f,KAAK+sB,WAAW41B,SAChB3iD,KAAK+iB,KAAK,CACN29B,UAAW,UACXiC,QAAS3iD,KAAK+sB,WAAW41B,QACzBZ,aAAc/hD,KAAK+sB,WAAW1Q,UAGtCrc,KAAKiuD,uBACLjuD,KAAK+sB,WAAWkxB,iBAAmBj+C,KAAKyuD,mBAAmBnmD,KAAKtI,MAChEA,KAAK4sB,QAAQ7M,IAAI,CAACqxB,WAAW,EAAM6Y,aAAa,EAC5CqE,cAAc,EAAOnE,aAAc,SACpC,GAAI5jC,IAAW,GAAQs1B,OAAOoH,SACF,YAA1BjjD,KAAKwC,IAAI,cAA8BxC,KAAK+sB,WAAW41B,QACpD,GAAE3X,GAAMnrC,KAAK,uBAAuBoC,OAAS,EAC7CjC,KAAKkvD,iBACAlvD,KAAK4sB,QAAQpqB,IAAI,gBAAkB,EACxCxC,KAAKmvD,eAELnvD,KAAK8gD,WAAU,GAGnB9gD,KAAKmvD,oBACN,GAAI5oC,IAAW,GAAQs1B,OAAOuT,aAAc,CAC/C,GAAIpvD,KAAK4sB,QAAQpqB,IAAI,oBACjB,OACJxC,KAAK+sB,WAAWsiC,QACZrvD,KAAKsvD,uBACLtvD,KAAKsvD,sBAAsBC,YAC/B,IAAIe,EAAc,oCACG,IAAjBA,GAAsBtwD,KAAK4sB,QAAQpqB,IAAI,gBAAkB8tD,EACzDtwD,KAAK8gD,YAEL9gD,KAAK2uD,aAAa,aAAiB,sCAE3C,OAxCI,QAAY,4CAA4C,GAAUp7D,cAAcgzB,GAyCxF,EAEAgqC,iBAAkB,SAAUhqC,EAAQnV,EAAW4uC,GAC3C,GAAIz5B,IAAW,GAAQs1B,OAAOG,SAC1Bh8C,KAAK+sB,WAAWuyB,SAAS7lC,OAAO/jB,SAAW,GAAQqoD,eAAe/9C,KAAKwC,IAAI,QAC3ExC,KAAK+sB,WAAWuyB,SAAS7lC,OAAOq6B,SAAW9zC,KAAKorD,cAC5C,eAAqB,qBACrBprD,KAAK+sB,WAAWuyB,SAAS7lC,OAAOpD,IAAM,oBAE1CrW,KAAK+sB,WAAWuyB,SAAS7J,cACtB,GAAIlvB,IAAW,GAAQs1B,OAAOI,WAAY,CAC7C,IAAI0I,EAAW3kD,KAAK0pD,UAAU8G,gBAAgBjjD,MAC9CvN,KAAK0pD,UAAUhqD,KAAKqgB,IAAI,OAAO,GAC5B4kC,GACC3kD,KAAK+f,IAAI,wBAAyB4kC,EAE1C,MAAWp+B,IAAW,GAAQs1B,OAAOK,UACjCl8C,KAAK0pD,UAAU+G,0BAA0B,CAACv4C,IAAK,aAAiB,mBAChElY,KAAK0pD,UAAUhqD,KAAKqgB,IAAI,OAAQ,IACzBwG,IAAW,GAAQs1B,OAAOM,eAC7B6D,EACAhgD,KAAK0pD,UAAU+G,0BAA0B,CAAC3c,SAAUkM,KAEpD5uC,EAAYA,EAAY,KAAOA,EAAY,GAC3CpR,KAAK0pD,UAAU+G,0BAA0B,CAAC3c,SAAU,aAAiB,uCAAyC1iC,KAElHpR,KAAK0pD,UAAUhqD,KAAKqgB,IAAI,OAAQ,IACzBwG,IAAW,GAAQs1B,OAAOE,WAC7BiE,EACAhgD,KAAK0pD,UAAU+G,0BAA0B,CAAC3c,SAAUkM,KAEpD5uC,EAAYA,EAAY,KAAOA,EAAY,GAC3CpR,KAAK0pD,UAAU+G,0BAA0B,CAAC3c,SAAU,aAAiB,mCAAqC1iC,KAE9GpR,KAAK0pD,UAAUhqD,KAAKqgB,IAAI,OAAQ,GAExC,EAEA2wC,uBAAwB,SAAUnqC,EAAQnV,GAClCpR,KAAK2wD,gBAAkB3wD,KAAK2wD,eAAehjC,UAAY3tB,KAAK2wD,eAAehjC,SAASijC,wBAChFrqC,IAAW,GAAQs1B,OAAOI,WAC1Bj8C,KAAK2wD,eAAehjC,SAASijC,sBAAsB/a,kBAC5CtvB,IAAW,GAAQs1B,OAAOK,UAC9B31B,IAAW,GAAQs1B,OAAOM,eAC1B51B,IAAW,GAAQs1B,OAAOE,UAC7B3qC,EAAYA,EAAY,KAAOA,EAAY,GAC3CpR,KAAK2wD,eAAehjC,SAASijC,sBAAsBlb,cAAc,CAAC5B,SAAU,aAAiB,yBAA2B1iC,KACjHmV,IAAW,GAAQs1B,OAAOoH,SACjCjjD,KAAK2wD,eAAehjC,SAASijC,sBAAsBlb,cAAc,CAACmb,aAAc,aAAiB,2BAC1FtqC,IAAW,GAAQs1B,OAAOoT,WACjCjvD,KAAK8wD,2BAA2BxR,SAAS7lC,OAAO/jB,SAAW,GAAQqoD,eAAe/9C,KAAKwC,IAAI,QAC3FxC,KAAK8wD,2BAA2BxR,SAAS7lC,OAAOq6B,SAAW9zC,KAAK2wD,eAAehjC,SAASijC,sBAAsBxb,gBAAgB7nC,MAAM/I,OACpIxE,KAAK8wD,2BAA2BxR,SAAS7J,UAClClvB,IAAW,GAAQs1B,OAAOuT,eACjCpvD,KAAK+wD,wCAAqC31C,EAC1Cpb,KAAK8wD,gCAA6B11C,GAG9C,EAEAyzC,cAAe,SAAUtoC,EAAQnV,GAC7B,GAAImV,IAAW,GAAQs1B,OAAOmV,WACtBhxD,KAAK0pD,UAAUuH,cACfjxD,KAAK0pD,UAAUwH,wBAEhB,GAAI3qC,IAAW,GAAQs1B,OAAOoT,UACjCjvD,KAAK+iB,KAAK,cAAU3H,GAChBpb,KAAK0pD,UAAUuH,eAAiBjxD,KAAK0pD,UAAUhqD,KAAK8C,IAAI,gBACxDxC,KAAK0pD,UAAUyH,mBAEfnxD,KAAK0pD,UAAU0H,eAGhB,GAAI,GAAEv2B,SAAS,GAAUhnC,kBAAmB0yB,GAAS,CACxD,IAAI8qC,GAAqB,EACrB9qC,IAAW,GAAQs1B,OAAOJ,OAEnBl1B,IAAW,GAAQs1B,OAAOwD,SADjC94B,EAAS,aAAiB,qBAGnBA,IAAW,GAAQs1B,OAAOoH,UACjC18B,EAAS,aAAiB,yBAC1B8qC,GAAqB,GACd9qC,IAAW,GAAQs1B,OAAOuT,aACjC7oC,EAAS,aAAiB,wCACnBA,IAAW,GAAQs1B,OAAOyV,cACjC/qC,EAAS,aAAiB,4CAE9BnV,EAAYA,EAAY,KAAOA,EAAY,GACvCpR,KAAK0pD,UAAUuH,aACfjxD,KAAK0pD,UAAU6H,iBAAiBF,EAAoB,CAACvd,SAAUvtB,EAASnV,IAExEpR,KAAK0pD,UAAUhU,cAAc,CAAC5B,SAAUvtB,EAASnV,IACrDpR,KAAKwC,IAAI,WAAaxC,KAAKwxD,SAC/B,CACJ,EAEArC,aAAc,WACLnvD,KAAK0pD,YACN,GAAM39C,QAAQgC,MAAM,aAAiB,gDAAiD,CAAC/N,KAAKwC,IAAI,UAChGxC,KAAK+qD,cAAcr8B,QAEvB1uB,KAAK4sB,QAAQ7M,IAAI,CACbwuC,aAAa,EACbnd,WAAW,EACX8Y,eAAe,EACfuH,cAAc,IAElBzxD,KAAK+iB,KAAK,CAAC2uC,iBAAkB1xD,KAAKwC,IAAI,WAAYk+C,UAAW,WAAY5M,SAAU,KAAM6O,QAAS,OAClG3iD,KAAK+sB,WAAWixB,KAAO,GACvBh+C,KAAKuL,QAAQ,aAAcvL,MAC3BA,KAAK2uD,aAAa,aAAiB,uDACvC,EAEAK,qBAAsB,WAClB,GAAMjjD,QAAQgC,MAAM,aAAiB,8CAA+C,CAAC/N,KAAKwC,IAAI,UAC9FxC,KAAK4sB,QAAQ7M,IAAI,CACbwuC,aAAa,EACbkD,cAAc,IAElBzxD,KAAKuL,QAAQ,aAAcvL,MAC3BA,KAAK2uD,aAAa,aAAiB,qDACvC,EAEAgD,cAAe,WACX,IAAIC,EAAc,GACd77B,EAAK,GAAI,CACLlyB,KAAM,MACN0S,GAAIvW,KAAK+sB,WAAW4wB,SACrBxqC,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGmsB,uBACxCriD,KAAK22B,WAAWZ,GAAK87B,IACjB,GAAEA,GAAQhyD,KAAK,UAAUC,MAAK,CAAC4C,EAAKsuC,KAChC,IAAI8gB,EAAS,GAAE9gB,GACX+gB,EAASD,EAAOjyD,KAAK,UAAUyC,OAC/B6lB,EAAS2pC,EAAOjyD,KAAK,QAAQyC,OAC7B2iD,EAAc6M,EAAOjyD,KAAK,eAAeyC,OACzCygD,EAAY+O,EAAOtyD,KAAK,MACxBojD,EAA8C,IAArC7gD,OAAO+vD,EAAOjyD,KAAK,UAAUyC,QACtC0vD,EAAoD,IAAxCjwD,OAAO+vD,EAAOjyD,KAAK,aAAayC,QAC5C2vD,EAAaH,EAAOjyD,KAAK,MAAMyC,OACnCsvD,EAAYxwD,KAAK,CAAC2wD,OAAQA,EAAQ5pC,OAAQA,EAAQ88B,YAAaA,EAAalC,UAAWA,EAAWiP,UAAWA,EAAWpP,OAAQA,EAAQsP,GAAID,GAAY,IAE5JjyD,KAAKmyD,cAAgBP,EACrB5xD,KAAK2wD,gBAAkB3wD,KAAK2wD,eAAeyB,eAAe,GAElE,EAEAlD,eAAgB,WACR,gBAAsB,mBAAuB,kBAAoBlvD,KAAKwC,IAAI,OAC1E,WAAe,kBAGdxC,KAAK0pD,WACN,GAAM39C,QAAQgC,MAAM,aAAiB,4CAA6C,CAAC/N,KAAKwC,IAAI,UAEhGxC,KAAK4sB,QAAQ7M,IAAI,CACbsyC,kBAAkB,EAClB9D,aAAa,EACbnd,WAAW,EACXqgB,cAAc,IAElBzxD,KAAK+iB,KAAK,CAAC29B,UAAW,WAAY5M,SAAU,KAAM6O,QAAS,OAC3D3iD,KAAK+sB,WAAWixB,KAAO,GACvBh+C,KAAKuL,QAAQ,aAAcvL,MAC3BA,KAAK2uD,aAAa,aAAiB,oDACnC3uD,KAAK+pD,gBACT,EAEAU,mBAAoB,WACZzqD,KAAK2sB,cACL3sB,KAAK4sB,QAAQpqB,IAAI,eAAiBxC,KAAKsyD,gBAAkBtyD,KAAKuyD,cAE9DvyD,KAAKwyD,gBAEb,EAEAD,YAAa,WACTvyD,KAAK2uD,aAAa,aAAiB,4BACnC3uD,KAAKkY,IAAMlY,KAAK+sB,WAAW7U,IAC3BlY,KAAKmjD,SAAW,GAAQC,mBAAmBpjD,KAAKkY,KAChDlY,KAAK29C,OAAS,GAAQW,iBAAiBt+C,KAAKkY,KAC5ClY,KAAKuL,QAAQ,WAAYvL,MACzBA,KAAK4sB,QAAQpqB,IAAI,iBAAmBxC,KAAK4sB,QAAQ7M,IAAI,gBAAgB,GACrE/f,KAAKyyD,iBACL,GAAE3yD,KAAKE,KAAK0yD,0BAA2BzH,IACnCA,EAAO1xD,KAAKyG,KAAK,GAEzB,EAEAquD,gBAAiB,SAAU9nC,GACnBA,IAAW,GAAQs1B,OAAOoT,WACtBjvD,KAAK4rD,gBAAgBjJ,UACrB3iD,KAAK+iB,KAAK,CACN4/B,QAAS3iD,KAAK4rD,gBAAgBjJ,QAC9BZ,aAAc/hD,KAAK4rD,gBAAgBvvC,UAEvCrc,KAAKmuD,kBAAkBzN,UAAY,UACnC1gD,KAAK4rD,gBAAgBtJ,cAAe,EAChCtiD,KAAK+sB,YAAc/sB,KAAK+sB,WAAWixB,OACnCh+C,KAAK4rD,gBAAgB5N,KAAOh+C,KAAK+sB,WAAWixB,OAEpD,GAAEl+C,KAAKE,KAAK2yD,+BAAgC1H,IACxCA,EAAO1xD,KAAKyG,KAAK,KAEdumB,IAAW,GAAQs1B,OAAOoH,UAAY18B,IAAW,GAAQs1B,OAAOuT,eACnEpvD,KAAK4yD,uBACL5yD,KAAK4yD,sBAAsBrD,YAC/BvvD,KAAKmuD,uBAAoB/yC,EACzBpb,KAAK4rD,qBAAkBxwC,EAE/B,EAEAk3C,cAAe,WACXtyD,KAAK2uD,aAAa,aAAiB,4BACnC3uD,KAAKyyD,iBACL,GAAE3yD,KAAKE,KAAK6yD,4BAA6B5H,IACrCA,EAAO1xD,KAAKyG,KAAK,GAEzB,EAEAyyD,eAAgB,WACZzyD,KAAK8qD,aAAaviC,MAAK,KACnBvoB,KAAK8yD,qBACL9yD,KAAK+yD,sBACL/yD,KAAK4sB,QAAQ7M,IAAI,CACbmqC,eAAe,GAClB,IAELlqD,KAAKgzD,0BACLhzD,KAAKizD,eACT,EAEAC,yBAA0B,SAAU3zC,EAAWyI,GAC3C,IAAImrC,EAAgB,CAACl9B,MAAO,GAAQC,GAAGk9B,QAASC,QAAU9zC,GAAavf,KAAKszD,MAAStzD,KAAKszD,MAAMC,oBAAsBvzD,KAAKwpD,oBAC3HjqC,IAAc4zC,EAActvD,KAAO,aACnC,IAAI2vD,EAAoB,GAAI,CAAC3vD,KAAM,QAC9BsP,EAAE,QAASggD,GAChBnzD,KAAK22B,WAAW68B,EAAmBxrC,EACvC,EAEA8qC,mBAAoB,WAChB,GAAQ/sC,IAAI,mBACZ,GAAQA,IAAI/lB,KAAKmkD,kBACjB,GAAErkD,KAAKE,KAAKmkD,kBAAmBjjD,IAC3B,GAAQ6kB,IAAI7kB,GACPA,EAAK2+C,kBAAkB,GAAQ4T,SAAYvyD,EAAKwyD,QACjD1zD,KAAK+sB,WAAWlG,KAAK3lB,EAAK2+C,QAC1B3+C,EAAK8mB,UAAY9mB,EAAK8mB,YACf9mB,GAAQA,EAAK2+C,QAAU3+C,EAAKgsD,OACnCltD,KAAK+sB,WAAW45B,OAAO/3B,MAAM5uB,KAAK+sB,WAAY7rB,EAAK2+C,OACvD,IAEJ7/C,KAAKmkD,iBAAmB,EAC5B,EAEA4O,oBAAqB,WACjB,GAAQhtC,IAAI,oBACZ,GAAQA,IAAI/lB,KAAK6qD,mBACjB7qD,KAAK6qD,kBAAkB71B,MAAK,CAACngB,EAAE8+C,IAAO9+C,EAAEf,UAAY6/C,EAAE7/C,UAAa,EAAM6/C,EAAE7/C,UAAYe,EAAEf,WAAc,EAAI,IAC3G,GAAEhU,KAAKE,KAAK6qD,mBAAoB3pD,IAC5B,GAAQ6kB,IAAI7kB,GACZ,IAA6C0yD,EAAzChuC,EAAM5lB,KAAKuzB,SAAS/wB,IAAItB,EAAK2yD,WACjCjuC,IAAQguC,EAAShuC,EAAIpjB,IAAI,QACrBojB,EAAIikC,YAAcjkC,EAAIikC,WAAW31D,MAAQ0xB,EAAIikC,WAAW31D,KAAKsO,IAAI,cACjE,GAAEoxD,GAAQ/mD,OAAO,cAAgB+Y,EAAIikC,WAAW31D,KAAKsO,IAAI,OAAS,YAAc,GAAQ0zB,GAAG49B,SAAW,OAEtG,GAAEF,GAAQ/mD,OAAO,iBAAmB,GAAQqpB,GAAG49B,SAAW,OAC9DF,GAAU5zD,KAAKyrD,eAAemI,EAAO,IAEzC5zD,KAAKuL,QAAQ,wBACjB,EAEAmnD,yBAA0B,GAC1BG,2BAA4B,GAC5BF,8BAA+B,GAE/BH,eAAgB,WAEZ,GADAxyD,KAAK+zD,uBAAyB/zD,KAAKg0D,sBAC/Bh0D,KAAK4sB,QAAQpqB,IAAI,UAEjB,YADAxC,KAAKwxD,UAGT,IAAIyC,EAAaj0D,KAAK4sB,QAAQpqB,IAAI,cAC9ByxD,GACAj0D,KAAK2uD,aAAa,aAAiB,+CACnC3uD,KAAK4sB,QAAQ7M,IAAI,aAAc,MACZ,YAAfk0C,GACAj0D,KAAKuL,QAAQ,aAAcvL,OAG3BA,KAAK4sB,QAAQpqB,IAAI,gBACjBxC,KAAK4sB,QAAQ7M,IAAI,gBAAgB,IAEjC/f,KAAK4rD,iBAAmB5rD,KAAK4rD,gBAAgBxa,WAAapxC,KAAK4rD,gBAAgBwC,aAC/EpuD,KAAK8gD,YAGjB,EAEA6N,aAAc,SAAUz3C,GACpBlX,KAAK4sB,QAAQ7M,IAAI,gBAAiB7I,EACtC,EAEA+7C,cAAe,WACX,IAAIl9B,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGg+B,UAC3Dl0D,KAAK22B,WAAWZ,EACpB,EAEAgxB,SAAU,SAAU/+B,GAChB,IAAI9P,EAAMlY,KAAKwC,IAAI,OACf2xD,EAAc,GAAEC,WAAWpsC,GAC3BhoB,KAAK+sB,YAAc/sB,KAAK+sB,WAAWqkB,WACnCpxC,KAAK2rD,qBAAqBnH,MAAMhiD,IAAI0V,GAC/BssC,IACG,IAAIptC,EAAQ,CACRotC,MAAOA,EACP6P,cAAe,GAAOlrD,OAE1BiO,EAAMrY,KAAOylD,EAAMG,WAAaH,EAAMz+C,WAAa,IAAMy+C,EAAMx+C,WAAWxB,QAAUggD,EAAMI,UAAY1sC,IACjGlY,KAAKwC,IAAI,oBAAsBxC,KAAKwC,IAAI,oBAAsB,GAAU3L,kBAAkBC,gBACvF0tD,EAAMY,MAAMpqD,OACZoc,EAAMk9C,gBAAkB,GAAUz9D,kBAAkBC,aACpDsgB,EAAMpc,MAAQwpD,EAAMY,MAAMpqD,OAG1Boc,EAAMpc,MAAQiuD,GAAOrjD,iBAAiBwR,EAAMrY,MAChDiB,KAAKmF,aAAe8jD,GAAO/kD,eAAekT,EAAMpc,QAEpDgF,KAAK+iB,KAAK3L,GACV+8C,GAAensC,EAASw8B,EAAM,IAElC,WACI2P,GAAensC,EAAS,KAC5B,GAGZ,EAEA+gC,SAAU,SAAUrpD,EAAMsoB,EAAUnN,GAChC,IAAI2pC,EAAQ,GAAEx6C,OAAO,GAAEqN,MAAMrX,KAAKwC,IAAI,UAAW9C,GACjDM,KAAK+sB,WAAWy3B,MAAMzkC,IAAI/f,KAAKwC,IAAI,OAAQgiD,GAAO,KAC9CxkD,KAAKu0D,kBAAkB/P,EAAMY,MAAMpqD,OACnCgtB,GAAYA,GAAU,GACvBnN,EACP,EAEA25C,iBAAkB,WACd,OAAOx0D,KAAKwC,IAAI,mBAAqB,aAAiB,CAACxC,KAAKwC,IAAI,WACpE,EAEAiyD,UAAW,SAAUluC,EAAQrP,GACzB,IAAIE,EAAQ,CAAEs9C,eAAgB,GAAOvrD,OAC1B,OAAXod,IAAoBnP,EAAMmP,OAASA,GACvB,OAAZrP,IAAqBE,EAAM+xC,eAAiBjyC,GAAW,IACxC,YAAXqP,GAA+C,YAAvBvmB,KAAKwC,IAAI,YACjC4U,EAAMu9C,YAAc30D,KAAKwC,IAAI,WACjCxC,KAAK+iB,KAAK3L,GACLpX,KAAKwC,IAAI,aAEC,YAAX+jB,EACAvmB,KAAKi0D,WAAW,eACRj0D,KAAK2sB,cAGb3sB,KAAK40D,eAFL50D,KAAKgtB,WAIb,EAEAwhC,cAAe,WACgB,YAAvBxuD,KAAKwC,IAAI,WACTxC,KAAK+iB,KAAK,CACN2xC,eAAgB,GAAOvrD,MACvBod,OAAQvmB,KAAKwC,IAAI,gBAAkB,SACnCmyD,iBAAav5C,GAGzB,EAEAy5C,cAAe,SAAUvpB,GACrB,IAAIwpB,EAAcxpB,GAAUtrC,KAAKwC,IAAI,SAAS4iD,MAAMpqD,MACpD,GAAI85D,EAAa,CACb,IAAIC,EAAc5xD,KAAK2xD,GACnBE,EAAMrxD,WAAWiP,KAAKrP,MAAMjC,UAAU+vB,IAAI93B,KAAKw7D,GAAY,SAASp0D,GAChE,OAAOA,EAAE8C,WAAW,EACxB,KACJ,OAAOrF,KAAK42D,EAChB,CAEI,MAAO,EACf,EAEAT,kBAAmB,SAAUnP,GACzB,IAAIvF,EAASmJ,KAAQ71C,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAG++B,eAAe9hD,EAAE,SAASgS,EAAEnlB,KAAK60D,cAAczP,IAAQ/uB,KAAKA,KAC3G,OAAOr2B,KAAK+tD,SAASlO,EACzB,EAEA+U,aAAc,SAAU/wD,EAAMqT,GAC1BrT,EAAOA,GAAQ7D,KAAKwC,IAAI,UACxB,IAAI2mD,EAAiBjyC,GAAWlX,KAAKwC,IAAI,kBAAmBq9C,EAASmJ,KAerE,MAda,YAATnlD,EACAg8C,EAAOzoC,MAAM,CAAC,KAAQ,iBAET,WAATvT,GACAg8C,EAAO1sC,EAAE,QAAQgS,EAAEthB,GAAMwyB,KAE7BwpB,EAAO1sC,EAAE,UAAUgS,EAAEgkC,GAAgB9yB,KACrCwpB,EAAO1sC,EAAE,YAAYgS,EAAEnlB,KAAKwC,IAAI,aAAa6zB,KAC1Cr2B,KAAKwC,IAAI,YACRq9C,EAAO1sC,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGmsB,aAAcz4C,GAAI5J,KAAKwC,IAAI,WAAWugD,YAAY1sB,MAEhGwpB,EAAOvpB,MAAMt2B,KAAK+sB,WAAWmoC,KAAKC,eAAe,CAC7C9kD,KAAM,8CACPugB,QACI5wB,KAAK+tD,SAASlO,EACzB,EAEApkB,aAAc,SAAUtC,EAAOi8B,GAC3B,IAAIC,GAAsB,GAAEjqD,YAAYpL,KAAK2wD,gBACxC3wD,KAAKs1D,gBACNt1D,KAAKs1D,cAAgB,IAAI,2BAA+B,CAACxhC,MAAO9zB,QAC/Dq1D,IACDr1D,KAAK2wD,eAAiB,IAAI,4BAAgC,CAAC78B,MAAO9zB,QACtEA,KAAKohC,oBACL,kBAAsB,mBAAoB,CACtC1U,QAAS1sB,KAAMm5B,MAAOA,EAAOi8B,WAAYA,IAE7Cp1D,KAAKuL,QAAQ,iBACR8pD,IACDr1D,KAAKuL,QAAQ,mBACbvL,KAAK2wD,eAAezhC,SAAS,YAAa,iBAAsB,CAC5DxC,QAAS1sB,KACT8O,GAAI9O,KAAK2wD,eAAehzD,EAAE,mBAAmB,KAEjDqC,KAAK2wD,eAAezhC,SAAS,wBAAyB,6BAAkC,CACpF4E,MAAO9zB,KACP8O,GAAI9O,KAAK2wD,eAAehzD,EAAE,8BAA8B,KAGpE,EAEAyjC,kBAAmB,WACf,IAAIv7B,EAAQ7F,KAAKwiB,SAAShgB,IAAI,SAC9BxC,KAAKs1D,eAAiBt1D,KAAKs1D,cAAcv1D,IAAIP,KAAK,aAAcqG,GAC5D7F,KAAK2wD,gBACL3wD,KAAK2wD,eAAe5wD,IAAIP,KAAK,aAAcqG,GAE/C7F,KAAK0nD,WAAW3nD,IAAIP,KAAK,aAAcqG,EAC3C,EAEA0vD,aAAc,SAAUxS,EAAW/6B,GAC/B,IAAI+N,EAAK,GAAI,CACTlyB,KAAM,MACN0S,GAAIvW,KAAK+sB,WAAW4wB,SACrBxqC,EAAE,SAAU,CAAC8iB,MAAM,GAAQC,GAAGmsB,eACjC,IAAK,IAAImT,EAAY,EAAGA,EAAYzS,EAAU9gD,OAAQuzD,IAClDz/B,EAAG5iB,EAAE,SAAU,CAACvJ,GAAIm5C,EAAUyS,KAAan/B,KAC/Cr2B,KAAK22B,WAAWZ,GAAI,KAChB/N,GAAYA,GAAU,GAE9B,EAEAytC,iBAAkB,SAAUztC,EAAUnN,GAClC,IAAIkb,EAAK,GAAI,CACTlyB,KAAM,MACN0S,GAAIvW,KAAK+sB,WAAW4wB,SACrBxqC,EAAE,aAAc,CAAC8iB,MAAM,GAAQC,GAAGmsB,eACrCriD,KAAK22B,WAAWZ,GAAKkT,IACFjhB,EAASihB,EAAQ,IAEhC,SAAUl7B,GACN8M,GAAWA,EAAQ9M,EACvB,GACR,EAEAg8C,cAAe,SAAU2L,GACrB11D,KAAK21D,2BAA6BD,EAClC,kBAAsB,YAAa,CAACr8B,cAAe,KAC/Cr5B,KAAKwC,IAAI,YACTxC,KAAKu1D,aAAa,CAACv1D,KAAKwC,IAAI,WAAWugD,YAC3C/iD,KAAK4sB,QAAQ7M,IAAI,UAAU,GAC3B/f,KAAKi0D,aACD,gBAAsB,mBAAuB,kBAAoBj0D,KAAKwC,IAAI,QAC1E,WAAe,gBACvB,EAEAwqB,SAAU,WACDhtB,KAAK2sB,eACN3sB,KAAKk+C,SACb,EAEA+V,WAAY,SAAUpwD,GAClBA,IAASA,EAAO,WAChB7D,KAAK4sB,QAAQ7M,IAAI,aAAclc,GAC3B7D,KAAK2sB,eACL3sB,KAAK2uD,aAAa,aAAiB,gDACnC3uD,KAAK40D,aAAa,WAClB50D,KAAK+sB,WAAWqhC,aACZpuD,KAAKmuD,mBAAmBnuD,KAAK4rD,gBAAgBwC,cAEjDpuD,KAAKwyD,gBAEb,EAEAz1B,UAAW,WACH/8B,KAAK+sB,aAAe/sB,KAAK+sB,WAAWuyB,SAASvC,eAC7C/8C,KAAK+sB,WAAWkxB,iBAAmB,MACnCj+C,KAAKwiB,UACLxiB,KAAKwiB,SAASgvC,UACdxxD,KAAK2sB,gBACL3sB,KAAK+sB,WAAWqhC,aACZpuD,KAAKmuD,mBAAmBnuD,KAAK4rD,gBAAgBwC,cAErDpuD,KAAKwnB,0BAA0BouC,iBAC/B51D,KAAKsnB,cAAcsuC,iBACnB51D,KAAKynB,uBAAuBmuC,iBAC5B51D,KAAKuL,QAAQ,oBACjB,EAEAsqD,kBAAmB,WACf71D,KAAK+sB,WAAW6J,cAAc52B,KAAK81D,iBACnC91D,KAAK81D,gBAAkB91D,KAAK+sB,WAAW2J,YAAYX,IAC3C/1B,KAAK+1D,QAAQhgC,IACN,IACR,KAAM,KAAM,MACvB,EAGAigC,wBAAyB,WACrBh2D,KAAK+sB,WAAW6J,cAAc52B,KAAKi2D,wBACnCj2D,KAAKi2D,uBAAyBj2D,KAAK+sB,WAAW2J,WAC1C12B,KAAKk2D,WAAW5tD,KAAKtI,MACrB,GAAQk2B,GAAGqsB,gBAAiB,KAAM,MAC1C,EAEAyQ,wBAAyB,WACrBhzD,KAAK+sB,WAAW6J,cAAc52B,KAAKm2D,eACnCn2D,KAAKm2D,cAAgBn2D,KAAK+sB,WAAW2J,YAChC0/B,IACGp2D,KAAKq2D,WAAWD,IACT,IACR,KAAM,WAAY,KAC7B,EAEAE,cAAe,SAAUvgC,GACrB,IAAIxf,EAAK,GAAEwf,GAAIv2B,KAAK,MAChBQ,KAAK4rD,iBAAmB5rD,KAAK4rD,gBAAgB1zC,MAAQ3B,IACjDvW,KAAK4rD,gBAAgBJ,eAAiBxrD,KAAK4rD,gBAAgBL,eAC5DvrD,KAAK4rD,gBAAgBxa,WAAoC,YAAvBpxC,KAAKwC,IAAI,UAC9CxC,KAAK22B,WAAW,GAAI,CAChB9yB,KAAM,SAAU+F,GAAImsB,EAAG4D,aAAa,SAEjC35B,KAAK+sB,YAAc/sB,KAAK+sB,WAAW7U,MAAQ3B,GAAMvW,KAAK+sB,WAAWw+B,gBACpEvrD,KAAK+sB,WAAWy+B,eAAiBxrD,KAAK4sB,QAAQpqB,IAAI,cAAuC,YAAvBxC,KAAKwC,IAAI,WAC/ExC,KAAK2mD,OAAO,GAAI,CACZ9iD,KAAM,SAAU+F,GAAImsB,EAAG4D,aAAa,QAGhD,EAEAu8B,WAAY,SAAUngC,GAGlB,OAFA/1B,KAAKs2D,cAAcvgC,GACnB/1B,KAAKu2D,OAAOC,kBAAkBzgC,IACvB,CACX,EAEAggC,QAAS,SAAUhgC,GACf,IAGI0gC,EAHAC,EAAe,GAAE3gC,GACjB4gC,EAAWD,EAAa72D,KAAK,kBAAkB,GAAQq2B,GAAG0gC,eAC1DC,EAAwBH,EAAa72D,KAAK,gBAAgB,GAAQq2B,GAAG4gC,gBAErE3G,EAAWuG,EAAal3D,KAAK,QAajC,GAZIm3D,EAAS10D,SACTw0D,EAAeE,EAASn3D,KAAK,MACzBQ,KAAKwC,IAAI,6BACTxC,KAAK+2D,WAAWN,GAGhBz2D,KAAKuqD,sBAAsBnpD,KAAK,CAC5BwI,GAAI8sD,EAAal3D,KAAK,MACtBkB,KAAM+1D,KAIdI,EAAsB50D,OAAQ,CAC9B,IAAuE+0D,EAAnEC,EAAaJ,EAAsBlpC,SAAS,WAAWnuB,KAAK,MAC5Dy3D,GAAc,sBAA4BA,IAAe,yBAA6B,gBAAkB,yBAA6B,UACrID,EAAiC,GAAI,CAACzgD,GAAI45C,EAAUtsD,KAAM,SAAU+F,GAAI8sD,EAAal3D,KAAK,QACrF2T,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG4gC,aAC9B3jD,EAAE,UAAW,CAACvJ,GAAIqtD,IACvB,kCAAsC,aAAiB,2CAGvDD,EAAiC,GAAI,CAACzgD,GAAI45C,EAAUtsD,KAAM,QAAS+F,GAAI8sD,EAAal3D,KAAK,QACpF2T,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG4gC,aAGvC92D,KAAK22B,WAAWqgC,EACpB,CACJ,EAEAE,uBAAwB,SAASlvC,GAC7B,IAAImvC,EAAc,IAAIjuD,KAClBkuD,EAAkB,IAAIluD,KAAKlJ,KAAKwC,IAAI,0BACpCxC,KAAKwC,IAAI,gBACTxC,KAAK2hC,KAAK,8BAA+B3Z,GAEpCmvC,EAAcC,EACnBpvC,GAAYA,IAEPhoB,KAAKwiD,gBAAgBhgD,IAAI,kBAC9BxC,KAAKq3D,gBAAgBr3D,KAAKwiD,gBAAgBhgD,IAAI,kBAC9CxC,KAAK2hC,KAAK,8BAA+B3Z,IAEnChoB,KAAKwiD,gBAAgBhgD,IAAI,mBAC/BxC,KAAK+f,IAAI,mBAAe3E,GACxBpb,KAAK+f,IAAI,qBAAiB3E,GAC1Bpb,KAAK+f,IAAI,6BAAyB3E,GAClC4M,GAAYA,IAEpB,EAEAqvC,gBAAiB,SAASC,GACtBt3D,KAAK+f,IAAI,cAAeu3C,EAAgB90D,IAAI,SACxCxC,KAAKwC,IAAI,iBAAmBxC,KAAKwC,IAAI,kBACrCxC,KAAK+f,IAAI,gBAAgB,GACzB,GAAEqpB,KAAK,CACHvlC,KAAM,OACNrO,IAAKwK,KAAKwC,IAAI,eAAiB,gCAC/BwmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAACr6B,IAAKlY,KAAKkY,IAAKrU,KAAM,OAC3ColC,QAAUwK,IACN,GAAIA,EAASoc,aACT7vD,KAAK+f,IAAI,4BAA6B0zB,EAASoc,YAC3C7vD,KAAKuqD,sBAAsBtoD,QAAO,CAClC,IAAI6tD,EAAiB9vD,KAAKuqD,sBAAsB1qD,MAAKkwD,GAAmBA,EAAenmD,KAAO5J,KAAKwC,IAAI,+BACnGstD,GAAkBA,EAAepvD,MACjCV,KAAK+2D,WAAWjH,EAAepvD,KACvC,CACJ,EAEJqN,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/BzzC,KAAK+f,IAAI,gBAAgB,GACzB/f,KAAKuqD,sBAAwB,GAC7B,GAAQxkC,IAAI0tB,EAAQ,IAIpC,EAEAsjB,WAAY,SAAUS,GAClBx3D,KAAKuqD,sBAAwB,GAC7BvqD,KAAK+f,IAAI,iCAA6B3E,GAClCo8C,GACA,GAAEpuB,KAAK,CACHvlC,KAAM,OACNrO,IAAKwK,KAAKwC,IAAI,eAAiB,wBAC/BwmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAACr6B,IAAKlY,KAAK4J,GAAIlJ,KAAM82D,IAC1CvuB,QAAUwK,IACFA,EAASzC,OACThxC,KAAK+f,IAAI,gBAAiB0zB,EAASzC,OACnCyC,EAASgkB,SACTz3D,KAAK+f,IAAI,wBAAyB0zB,EAASgkB,SAC/Cz3D,KAAKuL,QAAQ,+BACbvL,KAAK+f,IAAI,gBAAgB,EAAK,EAElChS,MAAQ0lC,IACJzzC,KAAK+f,IAAI,gBAAgB,GACzB/f,KAAKu3D,0BAA0B9jB,GAC/B,GAAQ1tB,IAAI0tB,EAAQ,GAGpC,EAEAikB,aAAc,SAAUlvB,EAAOxgB,GAC3BwgB,EAAMn2B,SAASpL,IACX,IAAIe,EAAS,IAAIC,WACjBD,EAAO2vD,UAAY,KACf,IAAIC,EAAM5vD,EAAOE,OAAOhJ,MAAM,WAC1BiJ,EAAchF,KAAKy0D,EAAI,IACvBxvD,EAAQ,IAAIzE,WAAWwE,EAAYlG,QACvC,IAAK,IAAIuB,EAAI,EAAGA,EAAI2E,EAAYlG,OAAQuB,IACpC4E,EAAM5E,GAAK2E,EAAY1E,WAAWD,GACtCxD,KAAK63D,SAAS,CAACjzD,KAAMqC,EAAKrC,KAAM7F,KAAMkI,EAAKlI,KAAMyI,KAAMpJ,KAAKgK,IAASnB,EAAM+gB,EAAQ,EAEvFhgB,EAAOO,cAActB,EAAK,GAElC,EAEAswD,0BAA2B,SAAU9jB,GACT,MAApBA,EAASltB,SACLvmB,KAAKwiD,gBAAgBhgD,IAAI,iBACzBxC,KAAKq3D,gBAAgBr3D,KAAKwiD,gBAAgBhgD,IAAI,mBAE9CxC,KAAK+f,IAAI,cAAe,MACxB/f,KAAK+f,IAAI,gBAAiB,OAGtC,EAEA+3C,gBAAiB,SAAUjuD,EAAQme,GAC/BhoB,KAAKk3D,wBAAuB,KACxBrtD,IAAWA,EAAS,CAAC,GACjB7J,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,gBACtC,GAAE4mC,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAKwC,IAAI,kBAChDhN,IAAKwK,KAAKwC,IAAI,eAAiB,kBAC/BwmC,SAAU,OACVtpC,KAAMmK,EACNo/B,QAAUwK,IACNzrB,GAAYA,EAASyrB,EAAQ,EAEjC1lC,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/B,GAAQ1tB,IAAI0tB,EAAQ,GAE1B,GAEd,EAEAokB,SAAU,SAAUhuD,EAAQ5C,EAAM+gB,GAC9BhoB,KAAKk3D,wBAAuB,KACpBl3D,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,gBACtC,GAAE4mC,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAKwC,IAAI,kBAChDhN,IAAKwK,KAAKwC,IAAI,eAAiB,iBAC/BwmC,SAAU,OACVtpC,KAAMmK,EACNo/B,QAAUwK,IACNzzC,KAAK+3D,WAAW9wD,EAAO+gB,EAAQ,EAEnCja,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/B,GAAQ1tB,IAAI0tB,EAAQ,GAE1B,GAGd,EAEAskB,WAAY,SAAU9wD,EAAM+gB,EAAUnN,GAClC7a,KAAKk3D,wBAAuB,KACxB,GAAIl3D,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,eAAgB,CACtD,IAAIw1D,EAAW,IAAIC,SACnBD,EAASnrD,OAAO,OAAQ5F,EAAMA,EAAKlI,MAC/BkI,EAAK2O,UACLoiD,EAASnrD,OAAO,WAAY5F,EAAK2O,UACjC3O,EAAKixD,MACLF,EAASnrD,OAAO,aAAc5F,EAAKpD,KAAO,UAE1Cm0D,EAASnrD,OAAO,aAAc5F,EAAKpD,MACvC,GAAEulC,KAAK,CACHvlC,KAAM,OACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAKwC,IAAI,kBAChDhN,IAAKwK,KAAKwC,IAAI,eAAiB,mBAC/B9C,KAAMs4D,EACNh1D,aAAa,EACbm1D,aAAa,EACblvB,QAAUwK,IACN,GAAQ1tB,IAAI0tB,GACZzrB,GAAYA,EAASyrB,EAAQ,EAEjC1lC,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/B,GAAQ1tB,IAAI0tB,GACZ54B,GAAWA,EAAQ44B,EAAQ,GAGvC,IAER,EAEAqZ,aAAc,SAAU7lD,EAAM+gB,EAAUnN,GACpC7a,KAAKk3D,wBAAuB,KACxB,GAAIl3D,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,eAAgB,CACjDyE,GACD4T,GAAWA,EAAQ,WACvB,IAAIm9C,EAAW,IAAIC,SACnBD,EAASnrD,OAAO,OAAQ5F,EAAMA,EAAKlI,MACnCi5D,EAASnrD,OAAO,aAAc5F,EAAKpD,MACnC,GAAEulC,KAAK,CACHvlC,KAAM,OACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAKwC,IAAI,kBAChDhN,IAAKwK,KAAKwC,IAAI,eAAiB,oBAC/B9C,KAAMs4D,EACNh1D,aAAa,EACbm1D,aAAa,EACblvB,QAAUwK,IACN,GAAQ1tB,IAAI0tB,GACZzrB,GAAYA,EAASyrB,EAAQ,EAEjC1lC,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/B,GAAQ1tB,IAAI0tB,GACZ54B,GAAWA,EAAQ44B,EAAQ,GAGvC,IAER,EAEA2kB,WAAY,SAAUC,EAASrwC,EAAUnN,GACrC7a,KAAKk3D,wBAAuB,KACpBl3D,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,gBAAkB61D,GACxD,GAAEjvB,KAAK,CACHvlC,KAAM,SACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAKwC,IAAI,kBAChDhN,IAAKwK,KAAKwC,IAAI,eAAiB,YAC/BwmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAC3oC,GAAIyuD,IAC1BpvB,QAAUwK,IACN,GAAQ1tB,IAAI0tB,GACZzrB,GAAYA,EAASyrB,EAAQ,EAEjC1lC,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/B,GAAQ1tB,IAAI0tB,GACZ54B,GAAWA,EAAQ44B,EAAQ,GAEjC,GAEd,EAEA6kB,iBAAkB,SAAU9iE,EAAKwyB,EAAUnN,GACvC7a,KAAKk3D,wBAAuB,KACpBl3D,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,gBACtC,GAAE4mC,KAAK,CACHvlC,KAAM,OACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAKwC,IAAI,iBAAkB,eAAgB,oBAClFhN,IAAKwK,KAAKwC,IAAI,eAAiB,gBAC/BwmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAC/8C,IAAKA,IAC3ByzC,QAAUwK,IACNA,EAAS8kB,KAAO,GAAE9kB,EAAS+kB,KAAKz9B,QAAQ,iCAAiCv7B,KAAK,WAC9Ei0C,EAAS5vC,KAAO,GAAE4vC,EAAS+kB,KAAKz9B,QAAQ,4BAA4Bv7B,KAAK,WACzEi0C,EAASj+C,IAAM,GAAEi+C,EAAS+kB,KAAKz9B,QAAQ,2BAA2Bv7B,KAAK,WACvEi0C,EAASwR,YAAc,GAAExR,EAAS+kB,KAAKz9B,QAAQ,mCAAmCv7B,KAAK,WACvFi0C,EAAS7xC,MAAQ,GAAE6xC,EAAS+kB,KAAKz9B,QAAQ,6BAA6Bv7B,KAAK,WAC3Ei0C,EAASz4C,MAAQ,GAAEy4C,EAAS+kB,KAAKz9B,QAAQ,6BAA6Bv7B,KAAK,WAC3Ei0C,EAASglB,aAAe,GAAEhlB,EAAS+kB,KAAKz9B,QAAQ,oCAAoCv7B,KAAK,WACzFi0C,EAASilB,YAAc,GAAEjlB,EAAS+kB,KAAKz9B,QAAQ,mCAAmCv7B,KAAK,WACvFi0C,EAASklB,UAAY,GAAEllB,EAAS+kB,KAAKz9B,QAAQ,iCAAiCv7B,KAAK,WACnF,GAAQumB,IAAI0tB,GACZzrB,GAAYA,EAASyrB,EAAQ,EAEjC1lC,MAAQ0lC,IACJzzC,KAAKu3D,0BAA0B9jB,GAC/B54B,GAAWA,EAAQ44B,GACnB,GAAQ1tB,IAAI0tB,EAAQ,GAE1B,GAEd,EAEA4c,oBAAqB,SAAUj5C,GAC3B,IAAI6d,EAAUj1B,KAAKs1B,SAASsjC,aAAaxhD,EAAM+4C,UACpCnwD,KAAK0zB,MAAMgC,QAAQT,GACzB1B,SAASwd,OAAO35B,EACzB,EAEAi/C,WAAY,SAAUD,GAClB,IAAIyC,EAAY,GAAEzC,GACdvyD,EAAOuyD,EAASz8B,aAAa,QACjC,GAAa,UAAT91B,EAAoB,OACxB,IAAIqU,EAAMk+C,EAASz8B,aAAa,QAC5Bm/B,EAAW,GAAQjb,kBAAkB3lC,GACzC,GAAI4gD,IAAa94D,KAAKwC,IAAI,OAItB,YAHA,GAAE1C,KAAKE,KAAK4qD,sBAAsB,SAAUn0B,GACxCA,EAAQ2/B,EAAU0C,EACtB,IAGJ,IAAI3V,EAAW,GAAQC,mBAAmBlrC,GACtCkxC,EAAWrnD,OAAO82D,EAAUh5D,KAAK,YAAYyC,QAC7CikB,EAASsyC,EAAUh5D,KAAK,QAAQyC,QAAU,SAC1C6mD,EAAiB0P,EAAUh5D,KAAK,UAAUyC,OAC9C,GAAEmT,MAAM2zC,KAAcA,EAAW,GACjC,IAAI2P,EAAgBF,EAAUh5D,KAAK,YAAY,GAAQq2B,GAAG8iC,iBAG1D,GAFID,EAAc92D,QAAUjC,KAAKwC,IAAI,oBAAsBxC,KAAKwC,IAAI,oBAAsB,GAAU3L,kBAAkBC,cAClHkJ,KAAK+iB,KAAK,aAAcg2C,EAAcl5D,KAAK,SAASyC,QACpD6gD,EAAU,CACV,IAAI8V,EAAej5D,KAAK6kB,UAAUriB,IAAI2gD,GACtC,GAAa,gBAATt/C,EACIo1D,GAAgBA,EAAazH,cAC9B,CACH,IAAIp6C,EAAQ,CACR+rC,SAAUA,EACViG,SAAUA,EACV7iC,OAAQA,EACR4iC,eAAgBA,GAEhB+P,EAAUL,EAAUh5D,KAAK,iBAAiB,GAAQq2B,GAAGmsB,kBACrD6W,GAAWl5D,KAAKmyD,eAAiB+G,EAAQ15D,KAAK,QAC9C4X,EAAM2rC,UAAYmW,EAAQ15D,KAAK,OAE9By5D,EAGDA,EAAal5C,IAAI3I,GAFjB6hD,EAAej5D,KAAK6kB,UAAUksB,OAAO35B,EAG7C,CACJ,CACJ,GAEJ,CACI+hD,cAAe,SAAUC,GACrBp5D,KAAKsB,UAAU0pD,cAAc5pD,KAAKg4D,EACtC,EAEAC,cAAe,SAAUD,EAAMxd,EAAM0d,GACjC1d,GAAQ57C,KAAKsB,UAAUoxD,yBAAyBtxD,KAAKg4D,GACrDE,GAAUt5D,KAAKsB,UAAUuxD,2BAA2BzxD,KAAKg4D,EAC7D,EAEAG,kBAAmB,SAAUH,EAAMxd,EAAM0d,GACrC1d,GAAQ57C,KAAKsB,UAAUqxD,8BAA8BvxD,KAAKg4D,EAC9D,IAGR,YAAkBj4C,SAASyvB,sBAAsB5mC,OAAO,CACpD8pB,MAAO,WACPiB,WAAY,SAAUqiB,EAAMC,GACxB,OAAOD,EAAK50B,SAAShgB,IAAI,SAAW60C,EAAK70B,SAAShgB,IAAI,UAAY,EAAI,CAC1E,EAEA+rB,YAAa,SAAUirC,EAAQx6D,GAC3BgB,KAAKmxC,cAAgB,yBACrBnxC,KAAKy5D,iBACLz5D,KAAK05D,mBACL15D,KAAKqjB,GAAG,MAAOrjB,KAAK25D,MAAO35D,MAC3BA,KAAKqjB,GAAG,UAAWrjB,KAAK+8B,UAAW/8B,MACnCA,KAAKqjB,GAAG,iBAAkBrjB,KAAKy5D,eAAgBz5D,MAC/CA,KAAKqjB,GAAG,eAAgBrjB,KAAK45D,eAAgB55D,MAC7CA,KAAKqjB,GAAG,kCAAmCrjB,KAAK65D,cAAe75D,MAC/DA,KAAKqjB,GAAG,qBAAsBrjB,KAAK85D,sBAAuB95D,MAC1D,MAAU,OAAQA,KAAKujB,OAAQvjB,MAC/B,MAAU,gBAAiBA,KAAK+5D,eAAgB/5D,MAChDA,KAAKmxC,cAAc9tB,GAAG,eAAgBrjB,KAAKg6D,gBAAiBh6D,MAC5D,gBAAsB,kBAAsB,mBAAmB,SAAUkI,GACrEA,GAAUlI,KAAKuL,QAAQ,eAC3B,GAAGvL,KACP,EAEAujB,OAAQ,WACJ,gBAAsB,8BACtB,GAAEzjB,KAAK,GAAEuX,MAAMrX,KAAKw5D,SAAS,SAAU9sC,GACnCA,EAAQq9B,gBACRr9B,EAAQq+B,cAAcn/C,aACtB,GAAM+U,OAAO7U,aACjB,KACC9L,KAAKw5D,OAAOv3D,QAAU,kBAAsB,QACjD,EAEA83D,eAAgB,WACZ,gBAAsB,8BACtB,GAAEj6D,KAAK,GAAEuX,MAAMrX,KAAKw5D,SAAS,SAAU9sC,GAC/BA,EAAQlK,SAAShgB,IAAI,aACrBkqB,EAAQq9B,gBACRr9B,EAAQq+B,cAAcn/C,aACtB,GAAM+U,OAAO7U,cAErB,KACC9L,KAAKw5D,OAAOv3D,QAAU,kBAAsB,QACjD,EAEAw3D,eAAgB,WACZz5D,KAAKkpD,QAAUlpD,KAAK2W,QAAO+V,GAAWA,EAAQlqB,IAAI,YACtD,EAEAk3D,iBAAkB,WACd15D,KAAKoxC,UAAYpxC,KAAK2W,QAAO+V,GAAWA,EAAQC,eACpD,EAEAktC,cAAe,WACX75D,KAAKy5D,iBACLz5D,KAAK05D,mBACL15D,KAAKuL,QAAQ,eAAgBvL,KACjC,EAEA25D,MAAO,SAAUjtC,GACTA,EAAQi9B,YACRj9B,EAAQ8kC,SAChB,EAEAz0B,UAAW,SAAUrQ,GACjB,IAAKA,EAAQlqB,IAAI,UAAW,GACJxC,KAAKiC,QAAU,gBAAsB,mBAAuB,cAE5E,kBAAsB,SACfyqB,EAAQipC,2BACf,kBAAsB,aAEtB,kBAAsB,aACtB,6BAER,CACJ,EAEAmE,sBAAuB,WACnB,2CACA,6BACJ,EAEAE,gBAAiB,SAAUx3C,GACvB,IAAItK,EAAMsK,EAAShgB,IAAI,OAClBxC,KAAKwC,IAAI0V,IACVlY,KAAK+wC,OAAO,CAAC74B,IAAKA,GAC1B,EAEA0hD,eAAgB,WACZ55D,KAAKg1B,OACLh1B,KAAKy5D,iBACLz5D,KAAK05D,kBACT,EAEA5P,aAAc,WACV,OAAO9pD,KAAKiC,OAASjC,KAAKi6D,OAAOz3C,SAAShgB,IAAI,SAAW,CAC7D,EAEAkG,gBAAiB,WACb,IAAIwxD,EAAc,CAAC,EAAGC,EAAS,GAAUxjE,gBACzCqJ,KAAKF,MAAK,SAAU4sB,GAChBwtC,EAAYxtC,EAAQlK,SAAShgB,IAAI,WAAY,CACjD,IACA,IAAK,IAAIE,EAAM,EAAGA,EAAMy3D,EAAOl4D,OAAQS,IACnC,IAAKw3D,EAAYC,EAAOz3D,IACpB,OAAOy3D,EAAOz3D,GAEtB,MAAO,KACX,EAEA03D,WAAY,SAAUhjB,EAAMC,GACxB,IAAIgjB,EAASr6D,KAAKoE,QAAQizC,GACtBijB,EAAaD,EAAS,EAAIr6D,KAAKu6D,GAAGF,EAAO,GAAG73C,SAAShgB,IAAI,SAAW,EACxE40C,EAAK50B,SAASO,KAAK,SAAUs0B,EAAK70B,SAAShgB,IAAI,SAAW83D,GAAY,GACtEt6D,KAAKw6D,cACT,EAEAC,aAAc,SAAUpzC,GACpBA,EAAI7E,SAASO,KAAK,QAAS/iB,KAAK8pD,eAAiB,GACjD9pD,KAAKw6D,cACT,EAEAA,aAAc,WACVx6D,KAAKg1B,OACLh1B,KAAKF,MAAK,SAAUunB,EAAKqzC,GACrBrzC,EAAI7E,SAASO,KAAK,CAACkwB,MAAOynB,EAAQ,GACtC,IACA16D,KAAKuL,QAAQ,gBACT,gBAAsB,mBAAuB,eAC7CvL,KAAKmxC,cAAc6B,gBAAgBjwB,KAAK,YAAa,GAAM5Z,OAC3D,4CAER,IAGJ,0BAAgC,oBAAwB,CACpD4nB,UAAW,4BACXvD,SAAU,GAAUmtC,aACpB79B,YAAa,GAAU7lC,aAAaC,qBAEpC+5B,OAAQ,CACJ,sBAAuB,cACvB,uBAAwB,gBAG5B1C,YAAa,WACTvuB,KAAK46D,kBACL56D,KAAK66D,kBACL76D,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAKD,IAAIP,KAAK,WAAYQ,KAAK8zB,MAAMtxB,IAAI,QACzCxC,KAAK8zB,MAAMlH,QAAQvJ,GAAG,qBAAsBrjB,KAAK66D,gBAAiB76D,MAClEA,KAAK8zB,MAAMlH,QAAQvJ,GAAG,mBAAoBrjB,KAAK46D,gBAAiB56D,MAChEA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAK86D,aAAc96D,MAClDA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACjDA,KAAK8zB,MAAMtR,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MAC/DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAK+6D,UAAW/6D,MAC9CA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAK+6D,UAAW/6D,KACnD,EAEA46D,gBAAiB,WACb56D,KAAKD,IAAIgN,YAAY,gBAAiB/M,KAAK8zB,MAAMnH,eACjD,2BACJ,EAEAkuC,gBAAiB,WACb,IAAItM,EAAcvuD,KAAK8zB,MAAMlH,QAAQpqB,IAAI,eACzC,4BACAxC,KAAKrC,EAAE,WAAW4T,OAAOg9C,GACzBvuD,KAAKrC,EAAE,gBAAgB2T,OAAOi9C,EAClC,EAEAuM,aAAc,WACV96D,KAAKrC,EAAE,WAAW6B,KAAK,cAAeQ,KAAK8zB,MAAMtxB,IAAI,UACzD,EAEAg7B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAsE,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK8zB,MAAMtR,SAAShgB,IAAI,SACxD,EAEAi5B,aAAc,WACV,IAAI3L,EAAa,+BACjB9vB,KAAK8zB,MAAM2H,eACX,yBAA6B3L,EACjC,EAEAkrC,YAAa,SAAUnwD,GACnB,IAAIilB,EAAa,+BACjBjlB,EAAGsmB,kBACH,iCAAqCnxB,KAAK8zB,OAC1C9zB,KAAK8zB,MAAMvoB,QAAQ,gBACnB,yBAA6BukB,EACjC,EAEAirC,UAAW,WACP,kBAAsB,iBAAiB76D,YAAY,UACnDF,KAAKD,IAAII,SAAS,SACtB,IAGJ,4BAAkC,oBAAwB,CACtDouB,YAAa,WACTvuB,KAAKi7D,aACLj7D,KAAK8zB,MAAMzQ,GAAG,qBAAsBrjB,KAAKk7D,gBAAiBl7D,MAC1DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKi7D,WAAYj7D,MAC/CA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKm7D,iBAAkBn7D,KACpD,EAEAi7D,WAAY,SAAUvuC,GAClB,GAAE5sB,KAAKE,KAAK2tB,UAAU,SAAUE,GAAQA,EAAK/iB,QAAU,IACvD,GAAEhL,KAAKE,KAAK8zB,MAAMo1B,SAAUx8B,IACxB,IAAIxU,EAAMwU,EAAQlqB,IAAI,OAAQqrB,EAAO7tB,KAAKivB,MAAM/W,IAC/C2V,IAASA,EAAO7tB,KAAKkvB,SAAShX,EAAK,0BAA+B,CAAC4b,MAAOpH,KAC3E1sB,KAAKD,IAAI8M,OAAOghB,EAAK9tB,IAAI,IAE7BC,KAAKytB,OAAOoB,iBAChB,EAEAqsC,gBAAiB,SAAUxuC,GACvB,IAAIxU,EAAMwU,EAAQlqB,IAAI,OACtB,GAAIkqB,EAAQlqB,IAAI,WAAY,CACxB,IAAIqrB,EAAO7tB,KAAKivB,MAAM/W,GAClB2V,EACAA,EAAK9tB,IAAI+K,SAET+iB,EAAO7tB,KAAKkvB,SAAShX,EAAK,0BACtB,CAAC4b,MAAOpH,IAEhB,IAAIguC,EAAQ16D,KAAK8zB,MAAMo1B,QAAQ9kD,QAAQsoB,GACzB,IAAVguC,EACA16D,KAAKD,IAAIq1B,QAAQvH,EAAK9tB,KAEtBC,KAAKrC,EAAE,iBAAiBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,IAEzD,MACI2sB,EAAQk9B,mBAAqB,EAC7B5pD,KAAKovB,YAAYlX,GAErBlY,KAAKytB,OAAOoB,iBAChB,EAEAssC,iBAAkB,SAAUzuC,GACxB1sB,KAAKovB,YAAY1C,EAAQlqB,IAAI,QAC7BxC,KAAKytB,OAAOoB,iBAChB,IAGJ,YAAkB1N,SAASC,MAAMpX,OAAO,CACpCqmC,YAAa,WACbhvB,SAAU,CACN+nC,SAAU,KAIlB,gBAAsB,oBAAwB,CAC1Cr4B,UAAW,gBACXvD,SAAU,GAAU21B,SAEpB50B,YAAa,SAAUvvB,GACnBgB,KAAKi4B,SACLj4B,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,KACzC,EAEAi4B,OAAQ,WACJ,IAAI7gB,EAAQpX,KAAK8zB,MAAMxc,WAMvB,OALAtX,KAAKrC,EAAE,WAAW6B,KAAK,cAAe4X,EAAMmP,QAC5CvmB,KAAKrC,EAAE,mBAAmB2E,KAAK8U,EAAM+xC,gBAAkB,aAAiB/xC,EAAMmP,SAC9EvmB,KAAKrC,EAAE,WAAW2E,KAAK8U,EAAM26C,QAAU,aAAiB,gBACxD/xD,KAAKrC,EAAE,aAAa2E,KAAK8U,EAAM+rC,UAC/BnjD,KAAKrC,EAAE,aAAa2E,KAAK8U,EAAMgyC,UACxBppD,IACX,IAGJ,qBAA2B,oBAAwB,CAC/C+wB,UAAW,gBACXvD,SAAU,GAAU6tC,eAEpB9sC,YAAa,SAAUvvB,GACnBgB,KAAKi4B,SACLj4B,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,KACzC,EAEAi4B,OAAQ,WACJ,IAAI7gB,EAAQpX,KAAK8zB,MAAMxc,WAMvB,OALAtX,KAAKrC,EAAE,WAAW6B,KAAK,cAAe4X,EAAMmP,QAC5CvmB,KAAKrC,EAAE,mBAAmB2E,KAAK8U,EAAM+xC,gBAAkB,aAAiB/xC,EAAMmP,SAC9EvmB,KAAKrC,EAAE,WAAW2E,KAAK8U,EAAM26C,QAAU,aAAiB,gBACxD/xD,KAAKrC,EAAE,aAAa2E,KAAK8U,EAAM+rC,UAC/BnjD,KAAKrC,EAAE,aAAa2E,KAAK8U,EAAMgyC,UACxBppD,IACX,IAGJ,aAAmBmhB,SAASm6C,WAAWtxD,OAAO,CAC1C8pB,MAAO,YACPiB,WAAY,SAAUwmC,EAAIC,GACtB,IAAIC,EAAKF,EAAG/4D,IAAI,YAAak5D,EAAKF,EAAGh5D,IAAI,YACzC,OAAOi5D,EAAKC,GAAM,EAAKD,EAAKC,EAAK,EAAI,CACzC,EAEAC,YAAa,SAAUxY,EAAUn7B,GAC7B,IAAI9P,EAAMlY,KAAKkY,IAAM,IAAMirC,EAAS3gD,IAAI,YACpCxC,KAAK+sB,YAAc/sB,KAAK+sB,WAAWqkB,WACnCpxC,KAAK+sB,WAAWqvB,MAAMz9B,KAAKzG,EAAK,MAAO6d,IACnC,IAAI6lC,EAAY,GAAE7lC,GAAIl2B,KAAK,6BACvB+7D,EAAU35D,QACVkhD,EAASpjC,IAAI,SAAU67C,EAAUp8D,KAAK,SAC1CQ,KAAK67D,oBAAsB77D,KAAK87D,mBAAmB/lC,EAAI,GAAQG,GAAG6lC,WAClE/zC,GAAYA,GAAU,GAGlC,EAEA8zC,mBAAoB,SAAUjc,EAAQmc,GAClC,IAAInO,EAAU,GAAEhO,GAASoc,GAAe,EAMxC,OALApO,EAAQhuD,KAAK,WAAWC,MAAK,WACT,GAAEE,MAAMR,KAAK,SACXw8D,IACdC,GAAe,EACvB,IACOA,CACX,IAGJ,iBAAuB,oBAAwB,CAC3C1tC,YAAa,WACTvuB,KAAKk8D,eACLl8D,KAAK8zB,MAAMzQ,GAAG,MAAOrjB,KAAKm8D,gBAAiBn8D,MAC3CA,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKo8D,kBAAmBp8D,MAChDA,KAAK8zB,MAAMzQ,GAAG,QAASrjB,KAAKq8D,QAASr8D,MACrCA,KAAK8zB,MAAMzQ,GAAG,kBAAmBrjB,KAAKs8D,kBAAmBt8D,KAC7D,EAEAk8D,aAAc,WACVl8D,KAAK8zB,MAAMh0B,MAAMqjD,IACbnjD,KAAKm8D,gBAAgBhZ,EAAS,GAEtC,EAEAgZ,gBAAiB,SAAUhZ,GACvBnjD,KAAK8zB,MAAM6nC,YAAYxY,GACvBnjD,KAAKkvB,SAASi0B,EAAS3gD,IAAI,YACvB,gBAAqB,CAACsxB,MAAOqvB,IACjCnjD,KAAKu8D,eAAepZ,GACpBnjD,KAAKD,IAAIG,YAAY,UACrBF,KAAKytB,OAAOoB,iBAChB,EAEAytC,kBAAmB,SAAUnZ,GACzBnjD,KAAK8zB,MAAMkB,OACXh1B,KAAKu8D,eAAepZ,EACxB,IAGJ,oBAA0B,oBAAwB,CAC9CxhC,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKkY,IAAMlZ,EAAQ0tB,QAAQlqB,IAAI,OAC/BxC,KAAK+sB,WAAa/tB,EAAQ0tB,QAAQK,UACtC,IAGJ,wBAA8B,wBAA4B,CACtDqvC,kBAAmB,SAAUjZ,GACzBnjD,KAAKovB,YAAY+zB,EAAS3gD,IAAI,aAC9BxC,KAAKytB,OAAOoB,iBAChB,EAEAwtC,QAAS,WACLr8D,KAAKsvB,iBACLtvB,KAAKytB,OAAOoB,iBAChB,EAEA0tC,eAAgB,SAAUpZ,GACtB,IAAIt1B,EAAO7tB,KAAKivB,MAAMk0B,EAAS3gD,IAAI,aACnC,IAAKqrB,EAAM,OACXA,EAAK9tB,IAAI+K,SACT,IAAI4vD,EAAQ16D,KAAK8zB,MAAM1vB,QAAQ++C,GACjB,IAAVuX,EACA16D,KAAKrC,EAAE,kBAAkBy9D,MAAMvtC,EAAK9tB,KAEpCC,KAAKrC,EAAE,kBAAkBq2B,GAAG0mC,GAAOU,MAAMvtC,EAAK9tB,KAElDC,KAAK6uB,iBACT,IAGJ,oBAA0B,oBAAwB,CAC9CoC,OAAQ,CACJ,2BAA4B,UAC5B,wBAAyB,eACzB,sBAAuB,eAG3BzC,aAAc,WACVxuB,KAAKi9B,gBACLj9B,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKi9B,cAAej9B,KAC7D,EAEAi9B,cAAe,WACX,IAAImU,EAAYpxC,KAAK8zB,MAAMnH,cAC3B3sB,KAAKrC,EAAE,mBAAmB2T,OAAO8/B,GACjCpxC,KAAKrC,EAAE,sBAAsB2T,OAAO8/B,EACxC,EAEAorB,aAAc,WACVx8D,KAAK8zB,MAAM2H,aAAa,aAC5B,IAGJ,2BAAiC,oBAAwB,CACrDjO,SAAU,GAAUivC,sBACpBxrC,OAAQ,CACJ,8BAA+B,qBAC/B,uDAAwD,aACxD,iDAAkD,eAClD,mBAAoB,aACpB,6BAA8B,YAC9B,sBAAuB,eAG3B1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MACpB9zB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKytB,OAAOM,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OAC9EA,KAAK0sB,QAAQrJ,GAAG,qBAAsBrjB,KAAK08D,gBAAgBp0D,KAAKtI,MACpE,EAEAgvB,OAAQ,WACJhvB,KAAK28D,gBAQL38D,KAAKrC,EAAE,oBAAoB28B,SAPH,CACpBC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAGnB,EAEA1G,SAAU,WACN,GAAIj0B,KAAKD,IAAIiN,SAAS,UAClB,OACYhN,KAAKytB,OAAOM,aAAa,GAAGiC,WACzBhwB,KAAKytB,OAAOM,aAAa,GAAG3U,aAC5BpZ,KAAKytB,OAAOM,aAAa,GAAGoC,cAEzB,KAAQnwB,KAAK48D,eAAkB58D,KAAK68D,aAAe78D,KAAK88D,cAC1E98D,KAAK68D,eACL78D,KAAK+8D,gBAAgBC,KAAOh9D,KAAK68D,aACjC78D,KAAKi9D,SAASj9D,KAAK+8D,iBAE3B,EAEAJ,cAAe,SAAUO,EAAgBC,GACrCn9D,KAAK0sB,QAAQorC,gBAAgB,MAAMrkB,IAC/B,IAAI2pB,EAAe,GAAM5nD,YAAYi+B,EAAS4pB,MAAMC,OAAS,IAqD7D,GApDAt9D,KAAKrC,EAAE,8BAA8B4T,SAASkiC,EAAS4pB,OAAS5pB,EAAS4pB,MAAMC,OAC/Et9D,KAAKrC,EAAE,2BAA2B4T,SAASkiC,EAAS4pB,OAAS5pB,EAAS4pB,MAAMC,OAC5Et9D,KAAKrC,EAAE,kBAAkBgC,KAAKy9D,EAAe,aAAiB,MAAQ,GAAM5nD,YAAYi+B,EAAS8pB,QAC5FJ,IACDn9D,KAAKrC,EAAE,2CAA2C4T,SAASkiC,EAAS/yB,QAAU+yB,EAAS/yB,OAAO48C,OAC1F7pB,EAAS/yB,QAAU+yB,EAAS/yB,OAAO48C,KACnCt9D,KAAKrC,EAAE,2CAA2CwC,SAAS,OAE3DH,KAAKrC,EAAE,2CAA2CuC,YAAY,QAEtEF,KAAKrC,EAAE,yBAAyB4T,SAASkiC,EAAS/yB,QAAU+yB,EAAS/yB,OAAO48C,OAC5Et9D,KAAKrC,EAAE,yBAAyB4T,SAASkiC,EAAS/yB,QAAU+yB,EAAS/yB,OAAO48C,OAC5Et9D,KAAKrC,EAAE,+CAA+CgC,KAAK,GAAM6V,YAAYi+B,EAAS/yB,OAAO48C,OAC7Ft9D,KAAKrC,EAAE,2CAA2C4T,SAASkiC,EAAS+pB,QAAU/pB,EAAS+pB,OAAOF,OAC1F7pB,EAAS+pB,QAAU/pB,EAAS+pB,OAAOF,KACnCt9D,KAAKrC,EAAE,2CAA2CwC,SAAS,OAE3DH,KAAKrC,EAAE,2CAA2CuC,YAAY,OAClEF,KAAKrC,EAAE,yBAAyB4T,SAASkiC,EAAS+pB,QAAU/pB,EAAS+pB,OAAOF,OAC5Et9D,KAAKrC,EAAE,yBAAyB4T,SAASkiC,EAAS+pB,QAAU/pB,EAAS+pB,OAAOF,OAC5Et9D,KAAKrC,EAAE,+CAA+CgC,KAAK,GAAM6V,YAAYi+B,EAAS+pB,OAAOF,OAC7Ft9D,KAAKrC,EAAE,2CAA2C4T,SAASkiC,EAASgqB,QAAUhqB,EAASgqB,OAAOH,OAC1F7pB,EAASgqB,QAAUhqB,EAASgqB,OAAOH,KACnCt9D,KAAKrC,EAAE,2CAA2CwC,SAAS,OAE3DH,KAAKrC,EAAE,2CAA2CuC,YAAY,OAClEF,KAAKrC,EAAE,yBAAyB4T,SAASkiC,EAASgqB,QAAUhqB,EAASgqB,OAAOH,OAC5Et9D,KAAKrC,EAAE,yBAAyB4T,SAASkiC,EAASgqB,QAAUhqB,EAASgqB,OAAOH,OAC5Et9D,KAAKrC,EAAE,+CAA+CgC,KAAK,GAAM6V,YAAYi+B,EAASgqB,OAAOH,OAC7Ft9D,KAAKrC,EAAE,2CAA2C4T,SAASkiC,EAASjL,OAASiL,EAASjL,MAAM80B,OACxF7pB,EAASjL,OAASiL,EAASjL,MAAM80B,KACjCt9D,KAAKrC,EAAE,2CAA2CwC,SAAS,OAE3DH,KAAKrC,EAAE,2CAA2CuC,YAAY,OAClEF,KAAKrC,EAAE,wBAAwB4T,SAASkiC,EAASjL,OAASiL,EAASjL,MAAM80B,OACzEt9D,KAAKrC,EAAE,wBAAwB4T,SAASkiC,EAASjL,OAASiL,EAASjL,MAAM80B,OACzEt9D,KAAKrC,EAAE,8CAA8CgC,KAAK,GAAM6V,YAAYi+B,EAASjL,MAAM80B,OACvF7pB,EAAS/yB,QACT1gB,KAAKrC,EAAE,4BAA4B2H,IAAI,SAAWmuC,EAAS/yB,OAAO48C,KAAK7pB,EAAS8pB,MAAS,KAAK7nD,QAAQ,GAAK,KAE3G+9B,EAAS+pB,QACTx9D,KAAKrC,EAAE,4BAA4B2H,IAAI,SAAWmuC,EAAS+pB,OAAOF,KAAK7pB,EAAS8pB,MAAS,KAAK7nD,QAAQ,GAAK,KAE3G+9B,EAASgqB,QACTz9D,KAAKrC,EAAE,4BAA4B2H,IAAI,SAAWmuC,EAASgqB,OAAOH,KAAK7pB,EAAS8pB,MAAS,KAAK7nD,QAAQ,GAAK,KAE3G+9B,EAASjL,OACTxoC,KAAKrC,EAAE,2BAA2B2H,IAAI,SAAWmuC,EAASjL,MAAM80B,KAAK7pB,EAAS8pB,MAAS,KAAK7nD,QAAQ,GAAK,KAE7G1V,KAAKrC,EAAE,oBAAoBuT,SAC3BlR,KAAKrC,EAAE,SAAS+/D,OAChB19D,KAAKrC,EAAE,cAAcwC,SAAS,oBAC1B+8D,EAAe,CACf,IAAKl9D,KAAKrC,EAAE,2BAA2BsE,OACnC,QAEHjC,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiB1rB,QAAUjC,KAAKrC,EAAE,6BAA6Bu0B,QAAQzmB,OAC9G,IAER,EAEAkyD,WAAY,SAAU70D,EAAW80D,GAC7B59D,KAAKrC,EAAE,kBAAkBgC,KAAK,IACZ,UAAdmJ,GAAuC,UAAdA,GAAuC,YAAdA,GAClD9I,KAAKrC,EAAE,kBAAkBuC,YAAY,SACrCF,KAAKrC,EAAE,kBAAkBwC,SAAS,SACb,UAAd2I,GACP9I,KAAKrC,EAAE,kBAAkBwC,SAAS,SAClCH,KAAKrC,EAAE,kBAAkBuC,YAAY,UAErCF,KAAKrC,EAAE,kBAAkBuC,YAAY,SACrCF,KAAKrC,EAAE,kBAAkBuC,YAAY,SAEzCF,KAAKrC,EAAE,yBAAyBuC,YAAY,UAC5CF,KAAKrC,EAAE,mCAAqCmL,EAAY,QAAQ3I,SAAS,UACzE,IAAInB,EAAU,CAAC6E,KAAMiF,GACrB80D,IAAY5+D,EAAQ6+D,SAAWD,GAC/B59D,KAAK+8D,gBAAkB/9D,EACL,YAAd8J,EACA9I,KAAK89D,WAAW9+D,GAEhBgB,KAAKi9D,SAASj+D,EACtB,EAEA++D,WAAY,SAAUlzD,GAClB,IACI/B,EADU,GAAE+B,EAAG4C,QAAQstB,QAAQ,QACXv7B,KAAK,cAC7BQ,KAAK68D,aAAe,EACpB78D,KAAK88D,YAAc,EACnB98D,KAAKrC,EAAE,kBAAkBgC,KAAK,IAC9BK,KAAK29D,WAAW70D,EACpB,EAEA4zD,gBAAiB,SAAU7xD,GACvB7K,KAAK28D,eAAc,GAAO,GACwC,YAA9D38D,KAAKrC,EAAE,gBAAgBo9B,QAAQ,QAAQv7B,KAAK,gBAC5CQ,KAAK68D,aAAe,EACpB78D,KAAK88D,YAAc,EACnB98D,KAAKrC,EAAE,kBAAkBgC,KAAK,IAC9BK,KAAK29D,WAAW,WAExB,EAEAK,UAAW,SAAUnzD,GACjB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,wBAC/BjyB,EAAY9I,KAAKrC,EAAE,gBAAgBo9B,QAAQ,QAAQv7B,KAAK,cACxDy+D,EAAYv5B,EAAQllC,KAAK,cAC7BQ,KAAK68D,aAAe,EACpB78D,KAAK88D,YAAc,EACnB98D,KAAKrC,EAAE,kBAAkBgC,KAAK,IAC9BK,KAAK29D,WAAW70D,EAAWm1D,EAC/B,EAEAC,YAAa,SAAUrzD,GACnB,IAAI25B,EAAQ,GAAE35B,EAAG4C,QACjB,GAAI+2B,EAAMx3B,SAAS,kBAAnB,CACI,IACIy1B,EADQ+B,EAAMzJ,QAAQ,iBACRv7B,KAAK,aAEvB,GAAMuM,QAAQC,OAAO,GAAI,wFAA0Fy2B,EAAO,aAAc,KAAM,KAAM,KAAM,sBAE9J,KANA,CAOA,GAAI+B,EAAMx3B,SAAS,gBAAkBw3B,EAAMx3B,SAAS,mCAAoC,CACpF,IAAI4zB,EAAc4D,EAAMzJ,QAAQ,iBAC5B0H,EAAQ7B,EAAYphC,KAAK,aAK7B,OAJAohC,EAAY/gC,KAAK,aAAaK,YAAY,mBAC1C0gC,EAAY,GAAGC,cAAgB7gC,KAAKkjC,mBAAmBtC,EAAY/gC,KAAK,iCAAiC,GAAI4iC,GAC7GziC,KAAKm+D,oBAAsBn+D,KAAKm+D,mBAAmBt9B,cAAcyE,aACjEtlC,KAAKm+D,mBAAqBv9B,EAAY,GAE1C,CAEA,GAAI4D,EAAMx3B,SAAS,YAAa,CAC5B,IAAI4zB,EAAc4D,EAAMzJ,QAAQ,iBAIhC,OAHA/6B,KAAKm+D,mBAAmBt9B,cAAcyE,QACtCtlC,KAAKm+D,mBAAqBv9B,EAAY,QACtCA,EAAY,GAAGC,cAAckB,MAEjC,CAEIyC,EAAMx3B,SAAS,cACfhN,KAAKm+D,mBAAmBt9B,cAAcyE,OApB1C,CAuBJ,EAEApC,mBAAoB,SAAUlqB,EAASolD,GACnC,IAAIC,EAAmBrlD,EAAQ5I,UAC3ByjD,EAAY,WAAa,GAAO1qD,MAChCq7B,EAAQ,GAAExrB,GACVslD,EAAe95B,EAAMzJ,QAAQ,iBACjCyJ,EAAMrkC,SAAS,2BAA2BR,KAAK,GAAE,GAAU4+D,oBAAoB,CAACC,YAAa3K,MAC7F,IAAI4K,EAAMz+D,KAAK0+D,YAAYN,EAAUvK,GA2CrC,OAzCA4K,EAAIp7C,GAAG,SAAS,KACZi7C,EAAaz+D,KAAK,6CAA6CK,YAAY,eAC3Eo+D,EAAaz+D,KAAK,wCAAwCK,YAAY,mCACtE,IAAI0V,EAAWtZ,KAAKqiE,MAAMF,EAAIG,eAC9Bp6B,EAAM3kC,KAAK,yBAAyByC,KAAK,GAAMqT,gBAAgBC,IAC/D6oD,EAAI18B,MAAM,IAGd08B,EAAIp7C,GAAG,SAAS,KACZmhB,EAAMtkC,YAAY,2BAClB8Y,EAAQ5I,UAAYiuD,EACpBI,EAAII,QACJr6B,EAAM3kC,KAAK,uBAAuB2C,IAAI,GAAG0O,SACzC,GAAMqJ,uBAAuB,aAAiB,sCAAuC,IAAK,IAG9FkkD,EAAIp7C,GAAG,QAAQ,KACXi7C,EAAaz+D,KAAK,6CAA6CM,SAAS,aAAaD,YAAY,YACjGo+D,EAAan+D,SAAS,WACtB,IAAI2+D,EAAUr7C,aAAY,WACtB,IAAIs7C,EAAWziE,KAAKqiE,MAAMF,EAAIO,kBAC1BP,EAAIQ,YACJz6B,EAAM3kC,KAAK,2BAA2ByC,KAAK,GAAMqT,gBAAgBopD,IAEjEjxB,cAAcgxB,EACtB,GAAG,IAAI,IAGXL,EAAIp7C,GAAG,UAAU,KACbi7C,EAAaz+D,KAAK,6CAA6CK,YAAY,aAAaC,SAAS,YACjGm+D,EAAap+D,YAAY,UAAU,IAGvCu+D,EAAIp7C,GAAG,SAAS,KACZi7C,EAAaz+D,KAAK,6CAA6CK,YAAY,aAAaC,SAAS,YACjGm+D,EAAap+D,YAAY,UAAU,IAGvCskC,EAAM3kC,KAAK,yBAAyB,GAAGq/D,SAAW,KAC9CT,EAAIU,UAAU36B,EAAM3kC,KAAK,yBAAyB0N,MAAM,IAAI,EAEzDkxD,CACX,EAEAC,YAAa,SAASN,EAAUvK,GAC5B,IAAI54D,EAAQ6C,WAAWizC,OAAO,CAC1BquB,UAAW,IAAMvL,EACjBwL,cAAc,EACdC,SAAU,EACVv6D,OAAQ,GACRw6D,UAAW,GACXC,YAAa,sBACbC,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,cAAe,YAInB,OAFA3kE,EAAM4kE,KAAKzB,GACXnjE,EAAMkkE,UAAU,IACTlkE,CACX,EAEAgiE,SAAU,SAAUj+D,GAChBgB,KAAK0sB,QAAQwqC,wBAAuB,KAGhC,GAFAl4D,GAAWA,EAAQiI,OAASjI,EAAU,CAAC,GACvCA,EAAUmX,OAAO2pD,OAAO,CAACC,aAAc,GAAIlC,SAAU,OAAQ7+D,GACzDgB,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,eAAgB,CACtE,GAAIxC,KAAK48D,eAAiB58D,KAAKggE,wBAA0BhhE,EAAQ6E,OAAS7E,EAAQg+D,KAC9E,OACJh9D,KAAKggE,sBAAwBhhE,EAAQ6E,KACrC7D,KAAK48D,eAAgB,EACrB,GAAE,GAAI/9D,UAAUy2B,SAASO,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACtD,GAAEyrC,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK0sB,QAAQlqB,IAAI,kBACxDhN,IAAKwK,KAAK0sB,QAAQlqB,IAAI,eAAiB,YACvCwmC,SAAU,OACVtpC,KAAMV,EACNiqC,QAAUwK,IACNA,EAAS5vC,KAAO7E,EAAQ6E,KACxB7D,KAAKigE,YAAYxsB,GACjBzzC,KAAK48D,eAAgB,GAEzB7uD,MAAQ0lC,IACJzzC,KAAK0sB,QAAQ6qC,0BAA0B9jB,GACvCzzC,KAAKggE,2BAAwB5kD,EAC7B,GAAQ2K,IAAI0tB,GACZzzC,KAAK48D,eAAgB,EACrB58D,KAAKrC,EAAE,qCAAqCuT,QAAO,GAG/D,IAER,EAEA4sD,WAAY,SAAU9+D,GAClBgB,KAAK0sB,QAAQwqC,wBAAuB,KAGhC,GAFAl4D,GAAWA,EAAQiI,OAASjI,EAAU,CAAC,GACvCA,EAAUmX,OAAO2pD,OAAO,CAACC,aAAc,GAAIlC,SAAU,MAAOh6D,KAAM,WAAY7E,GAC1EgB,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,eAAgB,CACtE,GAAIxC,KAAK48D,eAAiB58D,KAAKggE,wBAA0BhhE,EAAQ6E,OAAS7E,EAAQg+D,KAC9E,OACJh9D,KAAKggE,sBAAwBhhE,EAAQ6E,KACrC7D,KAAK48D,eAAgB,EACrB,GAAE,GAAI/9D,UAAUy2B,SAASO,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACtD,GAAEyrC,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK0sB,QAAQlqB,IAAI,kBACxDhN,IAAKwK,KAAK0sB,QAAQlqB,IAAI,eAAiB,aACvCwmC,SAAU,OACVtpC,KAAMV,EACNiqC,QAAUwK,IACNA,EAAS5vC,KAAO7E,EAAQ6E,KACxB7D,KAAKigE,YAAYxsB,GACjBzzC,KAAK48D,eAAgB,GAEzB7uD,MAAQ0lC,IACJzzC,KAAK0sB,QAAQ6qC,0BAA0B9jB,GACvCzzC,KAAKggE,2BAAwB5kD,EAC7B,GAAQ2K,IAAI0tB,GACZzzC,KAAK48D,eAAgB,EACrB58D,KAAKrC,EAAE,qCAAqCuT,QAAO,GAG/D,IAER,EAEA+uD,YAAa,SAAUxsB,GACnB,GAAIA,EAAS5vC,MAAQ7D,KAAKrC,EAAE,gBAAgBo9B,QAAQ,QAAQv7B,KAAK,cAC7D,OACJ,IAAKi0C,EAASysB,eAAkC,WAAjBzsB,EAAS5vC,MAChC4vC,EAAS5vC,KAAK,CACd,IAAIs8D,EAAMngE,KAAKrC,EAAE,kCAAoC81C,EAAS5vC,KAAO,KACrEs8D,EAAIjgE,YAAY,OAChBigE,EAAIhgE,SAAS,UACbH,KAAKrC,EAAE,oBAAoBuT,SAC3BlR,KAAKrC,EAAE,SAAS+/D,OAChB19D,KAAKrC,EAAE,cAAcwC,SAAS,mBAClC,CAEJ,IAAKszC,EAAS8I,MAAMt6C,OAEhB,aADCjC,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiB1rB,QAAUjC,KAAKrC,EAAE,6BAA6Bu0B,QAAQzmB,SAG9GzL,KAAK88D,YAAcrpB,EAASqpB,YAC5B98D,KAAKrC,EAAE,qCAAqCuT,SACxCuiC,EAAS8I,MAAMt6C,OACfwxC,EAAS8I,MAAMlqC,SAASnR,IACpBA,EAAKooC,WAAapoC,EAAKooC,UAAU9zC,MAAQ0L,EAAKooC,UAAYpoC,EAAKooC,UAAU9zC,KACzE,IAAI4qE,EAAgB,GAAE,GAAUC,2BAA2B,CAACp5D,KAAM/F,EAAMo/D,SAAU,GAAMjrD,mBAAmBnU,EAAKq/D,YAAaC,SAAU,GAAMhrD,YAAYtU,EAAK0D,MAAOgR,SAAU,GAAMD,gBAAgBzU,EAAK0U,aACvL,YAAlB69B,EAAS5vC,MAAuBu8D,EAAcjgE,SAAS,kBACxDigE,EAAc/2D,SAASrJ,KAAKrC,EAAE,mBAC9ByiE,EAAcvgE,KAAK,iBAAiBoC,QAAUm+D,EAAcvgE,KAAK,iBAAiBpB,cAAc,CAC5FoF,KAAM,QACN48D,qBAAqB,EACrBC,iBAAiB,EACjBC,UAAW,+BACX3lE,MAAO,CACH4lE,aAAa,EACbC,SAAU,SAAS3/D,GACf,MAAO,sCAAsCA,EAAK4N,GAAGtP,KAAK,OAAO,qBAAuB0B,EAAKnC,KAAO,MACxG,GAEJ+hE,KAAM,CACF5X,SAAS,EACTtzC,SAAU,MAEhB,IAIN5V,KAAKrC,EAAE,kBAAkBgC,KAAK,aAAiB,aASnDK,KAAKrC,EAAE,oBAAoB28B,SAPH,CACpBC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAGnB,EAEAy9B,WAAY,SAAUvtD,GAClB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,iBAC/Bs9B,EAAU3zB,EAAQllC,KAAK,WAC3BQ,KAAK0sB,QAAQ0rC,WAAWC,GAAS5kB,IAC7BzzC,KAAK28D,eAAc,GACnBj4B,EAAQ55B,QAAQ,IAChBwd,IAAD,GAEP,EAEAy4C,aAAc,SAAUl2D,GACpB7K,KAAK0sB,QAAQwqC,wBAAuB,KAChC,IAAIxyB,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,iBAC/Bs9B,EAAU3zB,EAAQllC,KAAK,WACvBQ,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBAAkB61D,GACxE,GAAEjvB,KAAK,CACHvlC,KAAM,SACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK0sB,QAAQlqB,IAAI,kBACxDhN,IAAKwK,KAAK0sB,QAAQlqB,IAAI,eAAiB,aACvCwmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAC3oC,GAAIyuD,IAC1BpvB,QAAUwK,IACNzzC,KAAK28D,eAAc,GACnBj4B,EAAQ55B,QAAQ,EAEpBiD,MAAQ0lC,IACJzzC,KAAK0sB,QAAQ6qC,0BAA0B9jB,GACvC,GAAQ1tB,IAAI0tB,EAAQ,GAE1B,GAEd,EAEAutB,oBAAqB,SAAUn2D,GAC3B7K,KAAK0sB,QAAQwqC,wBAAuB,KAChC,IACI+J,EADU,GAAEp2D,EAAG4C,QAAQstB,QAAQ,qBAChBv7B,KAAK,aACpB0hE,EAAO,IAAIh4D,KACf+3D,GAAQC,EAAKC,QAAQD,EAAKE,UAAYH,GAClCjhE,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBAAkB0+D,GAAQA,EAAKG,cAAcniE,MAAM,MAAQgiE,EAAKG,cAAcniE,MAAM,KAAK,IAC/I,GAAEkqC,KAAK,CACHvlC,KAAM,SACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK0sB,QAAQlqB,IAAI,kBACxDhN,IAAKwK,KAAK0sB,QAAQlqB,IAAI,eAAiB,YACvCwmC,SAAU,OACVtpC,KAAMgnB,KAAK6rB,UAAU,CAAC+uB,SAAUJ,EAAKG,cAAcniE,MAAM,KAAK,KAC9D+pC,QAAUwK,IACNzzC,KAAK28D,eAAc,EAAK,EAE5B5uD,MAAQ0lC,IACJzzC,KAAK0sB,QAAQ6qC,0BAA0B9jB,GACvC,GAAQ1tB,IAAI0tB,EAAQ,GAE1B,GAEd,EAEArJ,mBAAoB,SAAUv/B,GAC1B,IAAI4C,EAAS5C,EAAG4C,OACZ+6B,EAAQ,GACZ,IAAK,IAAIhlC,EAAI,EAAGA,EAAIiK,EAAO+6B,MAAMvmC,OAAQuB,IACrCglC,EAAMpnC,KAAKqM,EAAO+6B,MAAMhlC,IAGxBglC,IACAxoC,KAAK0sB,QAAQgrC,aAAalvB,EAAOxoC,KAAKuhE,iBAAiBj5D,KAAKtI,OAC5D,GAAEyN,GAAQF,IAAI,IAEtB,IAGJ,2BAAiC,oBAAwB,CACrDwjB,UAAW,6BACXvD,SAAU,GAAU8nC,cACpBx4B,YAAa,GAAU7lC,aAAaM,sBAEpC05B,OAAQ,CACJ,8CAA+C,eAC/C,0BAA2B,eAC3B,yBAA0B,iBAC1B,oBAAqB,kBACrB,gCAAiC,mBACjC,0CAA2C,cAC3C,qCAAsC,iBAG1C1C,YAAa,WACTvuB,KAAKwhE,aAAe,IAAI,uBAA2B,CAC/C1yD,GAAI9O,KAAKrC,EAAE,gBAAgB,GAC3Bm2B,MAAO9zB,KAAK8zB,QAEhB9zB,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKyhE,eACLzhE,KAAK8zB,MAAMzQ,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MAC9CA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK86D,aAAc96D,MAC1DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACjDA,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAK0hE,cAAe1hE,MAC1DA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKyhE,aAAczhE,MACxDA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKkR,OAAQlR,KAC1C,EAEAgvB,OAAQ,SAAUhwB,GAed,OAdCA,EAAQo2D,aAAep2D,EAAQo2D,WAAa,cAC7Cp1D,KAAKD,IAAIgN,YAAY,aAA+B,cAAjB/N,EAAQm6B,OAC3Cn5B,KAAKrC,EAAE,2CAA2C4T,OAAuC,YAAhCvR,KAAK8zB,MAAMtxB,IAAI,cACxExC,KAAKrC,EAAE,iBAAiBuC,YAAY,UACpCF,KAAKrC,EAAE,kCAAkCqB,EAAQo2D,gBAAgBj1D,SAAS,UAC1EH,KAAKrC,EAAE,kCAAkC28B,SAAS,CAC9CC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAGf36B,KAAKouB,YACEpuB,IACX,EAEAm9B,WAAY,WACRn9B,KAAKrC,EAAE,SAAS2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SACpCxC,KAAK2hE,eACT,EAEA7G,aAAc,WACV96D,KAAKrC,EAAE,2BAA2B6B,KAAK,cAAeQ,KAAK8zB,MAAMtxB,IAAI,UACzE,EAEAg7B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEA2kC,aAAc,WACV,IAAIrwB,EAAYpxC,KAAK8zB,MAAMnH,cAC3B3sB,KAAKrC,EAAE,mBAAmBoP,YAAY,gBAAiBqkC,GAEvDpxC,KAAKrC,EAAE,gDAAgD2T,OAAO8/B,GAC9DpxC,KAAKrC,EAAE,8CAA8C2T,OAAO8/B,GAC5DpxC,KAAKrC,EAAE,gDAAgD2T,OAAO8/B,GAC9DpxC,KAAK0hE,gBACL1hE,KAAK6uB,iBACT,EAEA6yC,cAAe,WACX,IAAItwB,EAAYpxC,KAAK8zB,MAAMnH,cAC3B3sB,KAAKrC,EAAE,kDAAkD2T,OAAO8/B,GAAapxC,KAAK8zB,MAAMtxB,IAAI,iBAChG,EAEAm/D,cAAe,WACX,IAAK3hE,KAAKyuB,YACN,OACJ,IAAImzC,EAAQ5hE,KAAKrC,EAAE,SACnBikE,EAAMjyC,WAAW,SACjB,IAAIkyC,EAAa7hE,KAAKrC,EAAE,cAAcmH,QAClCA,EAAQ88D,EAAM98D,QACdg9D,EAAY,GAChB,KAAOh9D,EAAQ+8D,GAAcC,EAAY,IACrCF,EAAMt8D,IAAI,CAAC,YAAaw8D,IACxBh9D,EAAQ88D,EAAM98D,QACdg9D,GAAa,EAEjBF,EAAMt8D,IAAI,CAAC,eAAgBu8D,EAAa/8D,GAAS,GACrD,EAEAi9D,aAAc,WACV,GAAI/hE,KAAK8zB,MAAMtxB,IAAI,kBAAoBxC,KAAK8zB,MAAMtxB,IAAI,eAAgB,EAChD,IAAI,kBACVwsB,OAAO,CAAC8E,MAAO9zB,KAAK8zB,OACpC,MACI9zB,KAAKrC,EAAE,wCAAwC8N,OACvD,EAEAu2D,eAAgB,YACW,IAAI,0BACV/3D,KAAK,CAAC6pB,MAAO9zB,KAAK8zB,OACvC,EAEAmuC,gBAAiB,YACW,IAAI,2BACVh4D,KAAK,CAAC6pB,MAAO9zB,KAAK8zB,OACxC,EAEAouC,aAAc,SAAUr3D,GACpB,IAAI6O,EAAQ7O,EAAG4C,OACf,IAAKiM,EAAM8uB,MAAMvmC,OACb,OACJ,IAAIgF,EAAOyS,EAAM8uB,MAAM,GACvB9uB,EAAM3O,MAAQ,KACV9D,EAAKrC,KAAO,GAAUhO,uBAA0BoJ,KAAK8zB,MAAMtxB,IAAI,kBAAoBxC,KAAK8zB,MAAMtxB,IAAI,eAG1FyE,EAAKpD,KAAK+jB,WAAW,UAIjC5nB,KAAKrC,EAAE,kBAAkBkC,KAAK,mBAAmBM,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UACzG,GAAMugB,OAAO1Z,kBAAkBC,GAAMshB,MAAK,CAACvtB,EAAOwM,EAAM5C,KAChD5J,EACAgF,KAAK8zB,MAAMk4B,UAAU,CAACpjD,OAAQ5N,EAAOwM,KAAMA,EAAM5C,KAAMA,EAAMf,KAAMoD,EAAKpD,KAAMoD,KAAMA,IAAO,KACnFjH,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,aAC/C98B,KAAKrC,EAAE,kBAAkBkC,KAAK,mBAAmBK,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,SAAS,IACzH,KACCF,KAAKrC,EAAE,kBAAkBkC,KAAK,mBAAmBK,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAC/G,GAAM6L,QAAQgC,MAAM,aAAiB,sCAAsC,IAGnF,GAAMhC,QAAQgC,MAAM,aAAiB,sCAAsC,KAd/E,GAAMhC,QAAQgC,MAAM,aAAiB,uCAHrC,GAAMhC,QAAQgC,MAAM,aAAiB,2CAmB7C,EAEAqgB,UAAW,WACPpuB,KAAK2hE,eACT,EAEAQ,iBAAkB,YACb,wBAA8B,sBAA4B,IAAI,qBAC/D,2BAA+BniE,KAAK8zB,MACxC,EAEAwQ,YAAa,SAAUz5B,GACnB,IAAI05B,EAAO,GAAE15B,EAAG4C,QAAQstB,QAAQ,iBAC5Bq6B,EAAa7wB,EAAK7kC,KAAK,cACR,eAAf01D,GACAp1D,KAAK8zB,MAAM2H,aAAa25B,EAAY,SACpCp1D,KAAKrC,EAAE,iBAAiBuC,YAAY,UACpCqkC,EAAKpkC,SAAS,WAEM,kBAAfi1D,GACLp1D,KAAK8zB,MAAM2H,aAAa,KAAM25B,GAC9Bp1D,KAAK8zB,MAAM68B,eAAeyR,aAAazkE,EAAE,oCAAoCu0B,QAAQzmB,SAGrFzL,KAAK8zB,MAAM2H,aAAa,KAAM25B,EACtC,EAEArL,cAAe,WACX,IAAI59C,EAAiB,GACjB,gBAAsB,mBAAuB,eAC7CA,EAAiB,CAAC,CAACpN,KAAM,kBACrBqkC,QAASpjC,KAAK8zB,MAAMtR,SAAShgB,IAAI,WACjCF,KAAM,aAAiB,0DAE/B,GAAMyJ,QAAQiC,IAAI,aAAiB,yCAA0C,aAAiB,gCAC1F7B,EAAgB,CAAEgC,eAAgB,aAAiB,iBAAiBoa,MAAMhpB,IACrEA,IAEDA,EAAIszC,iBAAmB,iBACnB,mBAAuB,kBAAoB7yC,KAAK8zB,MAAMtxB,IAAI,OAC1D,4BAAgC,SAAU,qCAAsC,CAAC0V,IAAKlY,KAAK8zB,MAAMtxB,IAAI,SAErG,+BAAmCxC,KAAK8zB,MAAMtxB,IAAI,SAE1DxC,KAAK8zB,MAAMi2B,gBAAe,GAElC,IAGJ,4BAAkC,oBAAwB,CACtDh5B,UAAW,8BACXvD,SAAU,GAAUmjC,eACpB7iC,YAAa,iBAEbmD,OAAQ,CACJ,8BAA+B,aAC/B,yCAA0C,wBAC1C,kCAAmC,kBACnC,6BAA8B,mBAC9B,uBAAwB,YACxB,MAAS,gBACT,4BAA6B,gBAC7B,uBAAwB,oBACxB,6BAA8B,iBAC9B,6DAA8D,cAC9D,sCAAuC,eACvC,uCAAwC,mBACxC,wCAAyC,oBACzC,mBAAoB,kBACpB,8BAA+B,kBAC/B,8BAA+B,kBAC/B,0BAA2B,sBAC3B,mBAAoB,cACpB,oBAAqB,eACrB,gCAAiC,eACjC,oCAAqC,aAGzC1C,YAAa,WAGTvuB,KAAKqiE,WAAariE,KAAKkvB,SAAS,QAAS,oBACrC,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,UAAU,KAC7CqC,KAAKoiE,aAAepiE,KAAKkvB,SAAS,gBAAiB,2BAC/C,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,kBAAkB,KACrDqC,KAAKrC,EAAE,wBAAwB2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QACnDxC,KAAK86D,eACL96D,KAAKsiE,aACLtiE,KAAKuiE,uBACLviE,KAAKwiE,6BAELxiE,KAAK8zB,MAAMjP,UAAUxB,GAAG,SAAUrjB,KAAKoyD,cAAepyD,MACtDA,KAAK8zB,MAAMjP,UAAUxB,GAAG,MAAOrjB,KAAKoyD,cAAepyD,MACnDA,KAAK8zB,MAAMjP,UAAUxB,GAAG,UAAWrjB,KAAKoyD,cAAepyD,MACvDA,KAAK8zB,MAAMlH,QAAQvJ,GAAG,sBAAuBrjB,KAAKyiE,sBAAuBziE,MACzEA,KAAK8zB,MAAMlH,QAAQvJ,GAAG,uBAAwBrjB,KAAKuiE,qBAAsBviE,MACzEA,KAAK8zB,MAAMtR,SAASa,GAAG,iBAAkBrjB,KAAK0iE,iBAAkB1iE,MAChEA,KAAK8zB,MAAMtR,SAASa,GAAG,iBAAkBrjB,KAAK2iE,wBAAyB3iE,MACvEA,KAAK8zB,MAAMtR,SAASa,GAAG,+BAAgCrjB,KAAK4iE,gBAAiB5iE,MAC7E,gBAAsB,kBAAsB,mBAAoBA,KAAKwiE,2BAA4BxiE,MACjGA,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAK6iE,cAAe7iE,MACpDA,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAK8iE,mBAAoB9iE,MAC/DA,KAAK8zB,MAAMtR,SAASa,GAAG,eAAgBrjB,KAAK+iE,mBAAoB/iE,MAChEA,KAAK8zB,MAAMtR,SAASa,GAAG,8BAA+BrjB,KAAKgjE,0BAA2BhjE,MACtFA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK86D,aAAc96D,MAC1DA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKsiE,WAAYtiE,MACtDA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKsiE,WAAYtiE,MACnDA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKkR,OAAQlR,KAC1C,EAEAgvB,OAAQ,SAAUhwB,GAYd,IAXCA,EAAQo2D,aAAep2D,EAAQo2D,WAAa,cAC7Cp1D,KAAK+iE,qBACL/iE,KAAKgjE,4BACLhjE,KAAK6iE,gBACL7iE,KAAKoyD,gBACLpyD,KAAKsiE,aACLtiE,KAAKrC,EAAE,0BAA0B2E,KAAK,OAAW,gBACjDtC,KAAKrC,EAAE,4BAA4B2E,KAAKtC,KAAK8zB,MAAMqvB,UACnDnjD,KAAKrC,EAAE,4BAA4B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,aACvDxC,KAAKrC,EAAE,8DAA8DqC,KAAK8zB,MAAMtR,SAAShgB,IAAI,cACxF+H,KAAK,WAAW,GACjBvL,EAAQo2D,aACRp1D,KAAKrC,EAAE,wBAAwBwC,SAAS,UACxCH,KAAKrC,EAAE,wBAAwBqB,EAAQo2D,YAAYl1D,YAAY,UAC/DF,KAAKrC,EAAE,uDAAuD2E,KAAKtC,KAAKrC,EAAE,wBAAwBqB,EAAQo2D,YAAY51D,KAAK,gBAC3HQ,KAAKrC,EAAE,cAAcoP,YAAY,UAAiC,kBAAtB/N,EAAQo2D,YACpDp1D,KAAKrC,EAAE,kCAAkC4T,OAA6B,iBAAtBvS,EAAQo2D,YAC7B,kBAAvBp2D,EAAQo2D,YAAgC,CACxC,IAAI6N,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAEf36B,KAAKrC,EAAE,yCAAyC28B,SAAS2oC,GAEzDjjE,KAAKrC,EAAE,8BAA8B28B,SAAS,CAC1CC,WAAY,IACZC,YAAa,IACbE,OAAO,EACPgJ,aAAa,GAErB,CAUJ,OARA1jC,KAAKowB,cAAcpwB,KAAKrC,EAAE,wBAAwBqB,EAAQo2D,aAC1Dp1D,KAAKrC,EAAE,uBAAuBuC,YAAY,UACtCF,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAGzCjuB,KAAK8iE,mBACE9iE,IACX,EAEA86D,aAAc,WACV,IAAIpuC,EAAU1sB,KAAK8zB,MACfvN,EAASmG,EAAQlqB,IAAI,UACrB2mD,EAAiBz8B,EAAQ8nC,mBAC7Bx0D,KAAKrC,EAAE,0BAA0B6B,KAAK,cAAe+mB,GACrDvmB,KAAKrC,EAAE,kCAAkC2E,KAAK6mD,EAClD,EAEA2Z,mBAAoB,WAChB,GAAI9iE,KAAK8zB,MAAMw/B,OAAStzD,KAAK8zB,MAAMw/B,MAAM4P,MAAM,CACxBljE,KAAK8zB,MAAMw/B,MAAM4P,MAAM1gE,IAAI,eAE1CxC,KAAKrC,EAAE,qDAAqDuC,YAAY,WAExEF,KAAK8zB,MAAMw/B,MAAM4P,MAAMvhC,KAAK,sBAAsB,KAC9C3hC,KAAKrC,EAAE,qDAAqDuC,YAAY,UAAU,GACnFF,KAEX,MAEIA,KAAKrC,EAAE,qDAAqDwC,SAAS,UAC7E,EAEAmiE,WAAY,WACQtiE,KAAK8zB,MAAMnH,cAC3B3sB,KAAKrC,EAAE,uDAAuD4T,OAAuC,YAAhCvR,KAAK8zB,MAAMtxB,IAAI,cACpFxC,KAAKrC,EAAE,iDAAiD4T,OAAuC,YAAhCvR,KAAK8zB,MAAMtxB,IAAI,cAC9ExC,KAAK6uB,iBACT,EAEA2zC,2BAA4B,WACxBxiE,KAAKrC,EAAE,iCAAiC2T,OAAO,gBAAsB,mBAAuB,cAC5FtR,KAAK4iE,kBACL5iE,KAAK0iE,mBACL1iE,KAAK2iE,yBACT,EAEAQ,cAAe,SAAUt4D,GACrB7K,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtC,IAAI6xD,EAAc,GAAEv4D,EAAG4C,QAAQjO,KAAK,oBACpCQ,KAAKrC,EAAE,0CAA0CylE,OAAiB7xD,QAAO,EAC7E,EAEA8xD,cAAe,SAAUx4D,GACf,GAAEA,EAAG4C,QAAQT,SAAS,cAAgB,GAAEnC,EAAG4C,QAAQT,SAAS,aAAe,GAAEnC,EAAG4C,QAAQstB,QAAQ,wBAAwB94B,OAAS,GACnIjC,KAAKrC,EAAE,wBAAwB4T,QAAO,EAC9C,EAEA+xD,YAAa,SAAUz4D,GACf7K,KAAK8zB,MAAMw/B,SACVtzD,KAAKujE,oBAAsBvjE,KAAKujE,kBAAoB,IAAI,0BAA8B,CAACzvC,MAAO9zB,KAAK8zB,MAAMw/B,SAC1GtzD,KAAKujE,kBAAkBD,YAAYz4D,GAE3C,EAEA24D,aAAc,SAAU34D,GAChB7K,KAAK8zB,MAAMw/B,SACVtzD,KAAKujE,oBAAsBvjE,KAAKujE,kBAAoB,IAAI,0BAA8B,CAACzvC,MAAO9zB,KAAK8zB,MAAMw/B,SAC1GtzD,KAAKujE,kBAAkBC,aAAa34D,GAE5C,EAEA24D,aAAc,SAAU34D,GAChB7K,KAAK8zB,MAAMw/B,SACVtzD,KAAKujE,oBAAsBvjE,KAAKujE,kBAAoB,IAAI,0BAA8B,CAACzvC,MAAO9zB,KAAK8zB,MAAMw/B,SAC1GtzD,KAAKujE,kBAAkBC,aAAa34D,GAE5C,EAEA44D,aAAc,SAAU54D,GAChB7K,KAAK8zB,MAAMw/B,SACVtzD,KAAKujE,oBAAsBvjE,KAAKujE,kBAAoB,IAAI,0BAA8B,CAACzvC,MAAO9zB,KAAK8zB,MAAMw/B,SAC1GtzD,KAAKujE,kBAAkBE,aAAa54D,GAE5C,EAEA64D,iBAAkB,WACd1jE,KAAKrC,EAAE,8CAA8CgC,KAAK,IAC1DK,KAAKrC,EAAE,2DAA2DgC,KAAK,IACvE,GAAE,GAAEgkE,OAAO3jE,KAAK8zB,MAAMq+B,eAAgB,aAAaryD,MAAK,CAAC4C,EAAKsuC,KAC1D,IAAI4yB,EAAe,CACf3K,kBAAc79C,EACd22C,OAAQ/gB,EAAM+gB,OACd5pC,OAAQ6oB,EAAM7oB,OACd46B,UAAW/R,EAAM+R,UACjBmP,GAAIlhB,EAAMkhB,GACVF,UAAW/9C,GAAgB+8B,EAAMghB,WACjCpP,OAAQ3uC,GAAgB+8B,EAAM4R,SAE9BqW,EAAej5D,KAAK8zB,MAAMjP,UAAUg/C,UAAU,CAAE9gB,UAAW/R,EAAM+R,YAGrE,GAFIkW,IACA2K,EAAa3K,aAAeA,EAAa6K,UACzC9jE,KAAK8zB,MAAMtxB,IAAI,YACXxC,KAAK8zB,MAAMtxB,IAAI,WAAWugD,WAAa/R,EAAM+R,UAAW,CACxD,IAAIghB,EAAkB,GAAE,GAAUC,mBAAmBJ,IAErD,YADA5jE,KAAKrC,EAAE,gDAAgDkP,OAAOk3D,EAElE,CAEJ,IAAIE,EAAc,GAAE,GAAUC,WAAWN,IACzC5jE,KAAKrC,EAAE,6CAA6CkP,OAAOo3D,EAAY,IAEvEjkE,KAAK8zB,MAAMw/B,QACVtzD,KAAKujE,oBAAsBvjE,KAAKujE,kBAAoB,IAAI,0BAA8B,CAACzvC,MAAO9zB,KAAK8zB,MAAMw/B,SAC1GtzD,KAAKujE,kBAAkBY,iBAAiBnkE,KAAKrC,EAAE,8CAE/CqC,KAAKrC,EAAE,sDAAsDwC,SAAS,UACtEH,KAAKrC,EAAE,6CAA6CgwB,WAAW1rB,OAC/DjC,KAAKrC,EAAE,kDAAkDuC,YAAY,UAErEF,KAAKrC,EAAE,kDAAkDwC,SAAS,SAC1E,EAEAiyD,cAAe,WACX,GAAoC,YAAhCpyD,KAAK8zB,MAAMtxB,IAAI,aAGf,OAFAxC,KAAKrC,EAAE,+BAA+BwC,SAAS,eAC/CH,KAAKrC,EAAE,8CAA8CgwB,WAAWhuB,KAAK,IAGzEK,KAAKrC,EAAE,8CAA8CgC,KAAK,IACtDK,KAAK8zB,MAAMq+B,eAAiBnyD,KAAK8zB,MAAMq+B,cAAclwD,QACrDjC,KAAK0jE,kBAEb,EAEAnO,aAAc,SAAU1qD,GACpB,IACIk4C,EADU,GAAEl4C,EAAG4C,QAAQstB,QAAQ,eACXr7B,KAAK,aAC7BM,KAAK8zB,MAAMyhC,aAAa,CAACxS,IAAY,KAC7B/iD,KAAK8zB,MAAMtxB,IAAI,YACXxC,KAAK8zB,MAAMtxB,IAAI,WAAWugD,YAAcA,EACxC/iD,KAAK8zB,MAAMi2B,gBAGnB/pD,KAAK8zB,MAAM69B,eAAe,GAElC,EAEA8D,iBAAkB,WACd,GAAM1pD,QAAQiC,IAAI,aAAiB,uDAAwD,aAAiB,gCAAiC,KAAM,CAAEG,eAAgB,aAAiB,sBAAsBoa,MAAMrgB,IAC1MA,GAAUlI,KAAK8zB,MAAMq+B,eACrBnyD,KAAK8zB,MAAM2hC,kBAAiB,KACxBz1D,KAAK8zB,MAAM69B,eAAe,GAC5B,GAEd,EAEAiR,gBAAiB,WACb,IAAInpC,EAIAA,EAHCz5B,KAAK8zB,MAAMtR,SAAShgB,IAAI,WAGjBxC,KAAK8zB,MAAMtR,SAAShgB,IAAI,UAAY,MAAQ,KAF5C,MAGZxC,KAAKrC,EAAE,gBAAgB2E,KAAK,aAAiB,GAAUlI,mBAAmBq/B,GAAO5/B,MACjF,IAAIi+C,EAAW,GAAU19C,mBAAmBq/B,GAAO3/B,KAC/Ci+C,EAAa/3C,KAAKrC,EAAE,qBACxBo6C,EAAW73C,YAAY63C,EAAWv4C,KAAK,kBAClCA,KAAK,gBAAiBs4C,GAAU33C,SAAS23C,EAClD,EAEA4qB,iBAAkB,WACd1iE,KAAKrC,EAAE,iBAAiB4M,KAAK,UAAWvK,KAAK8zB,MAAMtR,SAAShgB,IAAI,WACpE,EAEAmgE,wBAAyB,WACrB3iE,KAAKrC,EAAE,wBAAwB4T,OAAOvR,KAAK8zB,MAAMtR,SAAShgB,IAAI,WAClE,EAEAqgE,cAAe,WACX,IAAI3Z,EAAUlpD,KAAK8zB,MAAMtxB,IAAI,WAC7BxC,KAAKrC,EAAE,uCAAuC4M,KAAK,UAAW2+C,EAClE,EAEA6Z,mBAAoB,WAChB,IAAI7Z,EAAUlpD,KAAK8zB,MAAMtR,SAAShgB,IAAI,SAAU4hE,GAAW,EAC3D,GAAIpkE,KAAK8zB,MAAMw/B,MACX8Q,EAAWjuD,OAAOC,KAAKpW,KAAK8zB,MAAMw/B,MAAM9wD,IAAI,YAAYP,WACrD,CACH,IAAIqxD,EAAQ,IAAI,SAAa,CAAC1pD,GAAI,SAAU,CACxC8iB,QAAS1sB,KAAK8zB,MACdzR,aAAc,oBAA0B,mBAAqBriB,KAAK8zB,MAAMtxB,IAAI,OAC5E+f,MAAO,WAEX6hD,EAAWjuD,OAAOC,KAAKk9C,EAAM9wD,IAAI,YAAYP,OAC7CqxD,EAAM9B,SACV,CACI,GAAEpmD,YAAY89C,KACdA,GAAU,GACVA,GAAWlpD,KAAK8zB,MAAMuwC,mBACtBrkE,KAAK8zB,MAAMuwC,kBAAkBn5D,QACjClL,KAAKrC,EAAE,2CAA2C4M,KAAK,UAAW2+C,GAClElpD,KAAKrC,EAAE,yDAAyDoP,YAAY,UAAWm8C,GACvFlpD,KAAKrC,EAAE,iDAAiDoP,YAAY,UAAWq3D,GAC1EpkE,KAAK8zB,MAAMw/B,OACZtzD,KAAKrC,EAAE,qDAAqDwC,SAAS,UAE7E,EAEA6iE,0BAA2B,WACvB,IAAI9Z,EAAUlpD,KAAK8zB,MAAMtR,SAAShgB,IAAI,wBACtCxC,KAAKrC,EAAE,kDAAkD4M,KAAK,UAAW2+C,EAC7E,EAEAuZ,sBAAuB,WACnBziE,KAAKrC,EAAE,kBAAkBoP,YAAY,WAAY/M,KAAK8zB,MAAMlH,QAAQpqB,IAAI,gBAC5E,EAEA8hE,WAAY,SAAUz5D,GAClB,IAAIq+C,EAAUlpD,KAAKrC,EAAE,wBAAwB4M,KAAK,WAClDvK,KAAK8zB,MAAM/Q,KAAK,UAAWmmC,GAC3BA,EAAUlpD,KAAK8zB,MAAM9G,WAAahtB,KAAK8zB,MAAMmgC,YACjD,EAEAsQ,gBAAiB,WACb,IAAIrb,EAAUlpD,KAAKrC,EAAE,4BAA4B4M,KAAK,WACtDvK,KAAK8zB,MAAMtR,SAASO,KAAK,QAASmmC,GAClClpD,KAAKrC,EAAE,yDAAyDoP,YAAY,UAAWm8C,GACnFA,EACAlpD,KAAKwkE,YAELxkE,KAAKykE,cACb,EAEAC,sBAAuB,WACnB,IAAIxb,EAAUlpD,KAAKrC,EAAE,mCAAmC4M,KAAK,WAC7DvK,KAAK8zB,MAAMtR,SAASO,KAAK,uBAAwBmmC,EACrD,EAEAsb,UAAW,WACPxkE,KAAK8zB,MAAMw/B,MAAQ,IAAI,SAAa,CAAC1pD,GAAI,SAAU,CAC/C8iB,QAAS1sB,KAAK8zB,MACdzR,aAAc,oBAA0B,mBAAqBriB,KAAK8zB,MAAMtxB,IAAI,OAC5E+f,MAAO,WAEXnY,YAAW,KACPpK,KAAK8zB,MAAMw/B,MAAMf,aAAa,GAC/B,IACP,EAEAkS,aAAc,WACVzkE,KAAK8zB,MAAMw/B,MAAM9B,UACjBxxD,KAAK8zB,MAAMw/B,WAAQl4C,CACvB,EAEAupD,kBAAmB,WACX3kE,KAAK8zB,MAAMw/B,QACVtzD,KAAK4kE,gBAAkB5kE,KAAK4kE,cAAgB,IAAI,gBAAoB,CAAC9wC,MAAO9zB,KAAK8zB,MAAMw/B,SACxFtzD,KAAK4kE,cAAc36D,QAGnB,GAAM8B,QAAQgC,MAAM,aAAiB,gDAC7C,EAEA82D,UAAW,WACP,GAAM94D,QAAQiC,IAAI,aAAiB,oCAAqC,aAAiB,kCACrF,KAAM,CAAEG,eAAgB,aAAiB,iDAAiDoa,MAAMrgB,IAChG,GAAIA,EAAQ,CACR,GAAIlI,KAAK8zB,MAAMw/B,MAAO,CAClB,IAAIwR,EAAY9kE,KAAK8zB,MAAMw/B,MAAM9wD,IAAI,aACrCxC,KAAK8zB,MAAMw/B,MAAMvwC,KAAK,UAAW,CAAC,GAClC/iB,KAAK8zB,MAAMw/B,MAAMyR,SAAW/kE,KAAK8zB,MAAMw/B,MAAMyR,OAAOC,QAAU,IAC1DhlE,KAAK8zB,MAAMw/B,MAAM2R,YAAYH,KAC7B9kE,KAAK8zB,MAAMw/B,MAAM2R,YAAYH,GAAWE,QAAU,GAClDhlE,KAAK8zB,MAAMw/B,MAAM2R,YAAYH,GAAW/kD,IAAI,CAACmlD,GAAI,KAAMC,YAAa,QAExEnlE,KAAK8zB,MAAM63B,qBAAqB2H,MAAM8R,mBAAmB,GAAG,GAAQlvC,GAAGmvC,gBAAiBP,EAC5F,KAAO,CACH,IAAIxR,EAAQ,IAAI,SAAa,CAAC1pD,GAAI,SAAU,CACxC8iB,QAAS1sB,KAAK8zB,MACdzR,aAAc,oBAA0B,mBAAqBriB,KAAK8zB,MAAMtxB,IAAI,OAC5E+f,MAAO,WAEX+wC,EAAMvwC,KAAK,UAAW,CAAC,GACvB/iB,KAAK8zB,MAAM63B,qBAAqB2H,MAAM8R,mBAAmB,GAAG,GAAQlvC,GAAGmvC,gBAAiB/R,EAAM9wD,IAAI,cAClG8wD,EAAM9B,SACV,CACAxxD,KAAKrC,EAAE,iDAAiDoP,YAAY,UAAU,EAClF,IAER,EAEAw1D,qBAAsB,WAClBviE,KAAKrC,EAAE,gBAAgB2E,KAAKtC,KAAK8zB,MAAMlH,QAAQpqB,IAAI,iBACvD,EAEA8iE,iBAAkB,WACdtlE,KAAK8zB,MAAMi3B,cAAcr8B,MAC7B,EAEAoyB,UAAW,WACH9gD,KAAK8zB,MAAMlH,QAAQpqB,IAAI,kBAE3BxC,KAAK8zB,MAAM/Q,KAAK,WAAW,GACvB/iB,KAAK8zB,MAAM/G,WAAWqkB,UACtBpxC,KAAK8zB,MAAM/G,WAAWqhC,aAEtBpuD,KAAK8zB,MAAMoqB,UACnB,EAEAqnB,kBAAmB,SAAU16D,GACzB,IAAIylC,EAAU,GAAEzlC,EAAG4C,QAAQlD,KAAK,WAC5BiY,EAAWxiB,KAAK8zB,MAAMtR,SAC1BA,EAASO,KAAK,UAAWutB,GACrBA,IACA9tB,EAASiuB,mBACT,gBAAsB,2CAE9B,EAEA+0B,eAAgB,WACZ,GAAMz5D,QAAQiC,IAAI,aAAiB,kCAAmC,aAAiB,2BACnF,CAAC,CAACjP,KAAM,iBAAkBqkC,QAASpjC,KAAK8zB,MAAMtR,SAAShgB,IAAI,WACvDF,KAAM,aAAiB,6DAA6D,CAAE6L,eAAgB,aAAiB,YAAYoa,MAAMhpB,IACzIA,IACKA,EAAIkmE,eAEGzlE,KAAK8zB,MAAMtR,SAAShgB,IAAI,YAChCxC,KAAK8zB,MAAMi2B,eAAc,GAFzB/pD,KAAK8zB,MAAMtR,SAASO,KAAK,WAAW,GAIxC,gBAAsB,+BAAmC/iB,KAAK8zB,MAAMtxB,IAAI,QAC5E,GAER,EAEAkjE,YAAa,SAAU76D,GACnB,IAAIE,EAAQF,EAAG4C,OAAO1C,MACtB/K,KAAK8zB,MAAMtR,SAASkuB,gBAAgB,CAAC7qC,MAAOkF,GAChD,EAEA46D,gBAAiB,WACb,GAAM55D,QAAQyC,gBAAgB,aAAiB,mCAAoC,KAAM,CAACnC,YAAa,sBAAuBgB,wBAAyB,aAAiB,4CAA6C,CAAEc,eAAgB,aAAiB,uBAAuBoa,MAAMrgB,IACjR,GAAIA,EAAQ,CACR,IAAI+sB,EAAUj1B,KAAK8zB,MAAMwB,SAAS9yB,IAAI0F,GAClC+sB,EACAA,EAAQ2wC,QAER5lE,KAAK8zB,MAAMwB,SAASuwC,aAAa39D,EAEzC,IAER,EAEA49D,gBAAiB,WACT9lE,KAAK2tB,UAAY3tB,KAAK2tB,SAASo4C,WAC/B/lE,KAAK2tB,SAASo4C,UAAUD,iBAChC,EAEAE,gBAAiB,WACThmE,KAAK2tB,UAAY3tB,KAAK2tB,SAASo4C,WAC/B/lE,KAAK2tB,SAASo4C,UAAUC,iBAChC,EAEAhF,oBAAqB,SAAUn2D,GACvB7K,KAAKoiE,cACLpiE,KAAKoiE,aAAapB,oBAAoBn2D,EAC9C,IAGJ,uBAA6B,sBAA0B,CACnDmsB,WAAY,iBACZC,YAAa,oBAEbM,gBAAiB,WACbv3B,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAKo3B,YAAap3B,KAC7D,EAEA23B,SAAU,WACN,OAAO33B,KAAK8zB,MAAM0gC,kBACtB,EAEA18B,SAAU,SAAU/sB,GAChB/K,KAAK8zB,MAAM2gC,UAAU,KAAM1pD,EAC/B,IAGJ,2BAAiC,oBAAwB,CACrDgmB,UAAW,mCACXvD,SAAU,GAAUy4C,qBACpBnpC,YAAa,GAAU7lC,aAAaE,sBAEpC85B,OAAQ,CACJ,2BAA4B,eAC5B,8BAA+B,cAGnC1C,YAAa,WACTvuB,KAAKrC,EAAE,QAAQ2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QACnCxC,KAAK6iE,gBACL7iE,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAK4iE,kBACL5iE,KAAKuiE,uBACLviE,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAK6iE,cAAe7iE,MACpDA,KAAK8zB,MAAMtR,SAASa,GAAG,eAAgBrjB,KAAK+iE,mBAAoB/iE,MAChEA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACjDA,KAAK8zB,MAAMtR,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MAC/DA,KAAK8zB,MAAMlH,QAAQvJ,GAAG,uBAAwBrjB,KAAKuiE,qBAAsBviE,MACzEA,KAAKD,IAAIsjB,GAAG,UAAWrjB,KAAKkmE,SAAS59D,KAAKtI,OAC1CA,KAAKrC,EAAE,yBACF0lB,GAAG,oBAAqBrjB,KAAKmmE,cAAc79D,KAAKtI,OACrDA,KAAK8zB,MAAMtR,SAASa,GAAG,iBAAkBrjB,KAAK4iE,gBAAiB5iE,KACnE,EAEAw9B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAsE,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK8zB,MAAMtR,SAAShgB,IAAI,SACxD,EAEA+/D,qBAAsB,WAClBviE,KAAKrC,EAAE,gBAAgB2E,KAAKtC,KAAK8zB,MAAMlH,QAAQpqB,IAAI,iBACvD,EAEAqgE,cAAe,WACX,IAAI3Z,EAAUlpD,KAAK8zB,MAAMtxB,IAAI,WAC7BxC,KAAKD,IAAIgN,YAAY,YAAam8C,GAClClpD,KAAKrC,EAAE,uCAAuC4M,KAAK,UAAW2+C,EAClE,EAEAob,WAAY,SAAUz5D,GAClB,IAAIq+C,EAAUlpD,KAAKrC,EAAE,wBAAwB4M,KAAK,WAClDvK,KAAK8zB,MAAM/Q,KAAK,UAAWmmC,GAC3BA,EAAUlpD,KAAK8zB,MAAM9G,WAAahtB,KAAK8zB,MAAMmgC,YACjD,EAEAiS,SAAU,SAAUr7D,EAAIkhC,GACpBA,GAAa,GAAEA,GAAWxgC,QAAQ,oBAAqBvL,KAAK8zB,MAChE,EAEAqyC,cAAe,SAAUt7D,EAAI6hB,GACzB1sB,KAAK8zB,MAAM+1B,WAAWuQ,WAAW1tC,EAAS1sB,KAAK8zB,MACnD,EAEA8uC,gBAAiB,WACb,IAAIxxB,EAAY,gBAAsB,mBAAuB,aAC7DpxC,KAAKrC,EAAE,qBAAqB2T,OAAO8/B,GACnCpxC,KAAKD,IAAIF,KAAK,gBAAgByR,OAAOtR,KAAK8zB,MAAMtR,SAAShgB,IAAI,WACjE,EAEAi5B,aAAc,WACVz7B,KAAK8zB,MAAM2H,cACf,IAGJ,6BAAmC,oBAAwB,CACvDlN,YAAa,WACTvuB,KAAKi7D,aACLj7D,KAAK4iE,kBACL5iE,KAAK8zB,MAAMzQ,GAAG,MAAOrjB,KAAKk7D,gBAAiBl7D,MAC3CA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKi7D,WAAYj7D,MAC/CA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKm7D,iBAAkBn7D,MAChD,gBAAsB,kBAAsB,mBAAoBA,KAAK4iE,gBAAiB5iE,MACtFA,KAAKrC,EAAE,2BACF0lB,GAAG,oBAAqBrjB,KAAKomE,sBAAsB99D,KAAKtI,MACjE,EAEAi7D,WAAY,WACR,GAAEn7D,KAAKE,KAAK2tB,UAAU,SAAUE,GAAQA,EAAK/iB,QAAU,IACvD9K,KAAK8zB,MAAMh0B,MAAM4sB,IACb,IAAIxU,EAAMwU,EAAQlqB,IAAI,OAAQqrB,EAAO7tB,KAAKivB,MAAM/W,GAC3C2V,IACDA,EAAO7tB,KAAKkvB,SAAShX,EAAK,2BAAgC,CAAC4b,MAAOpH,KAEtE1sB,KAAKrC,EAAE,oBAAoBy1B,OAAOvF,EAAK9tB,IAAI,IAE/CC,KAAKqmE,aACLrmE,KAAKytB,OAAOoB,iBAChB,EAEAqsC,gBAAiB,SAAUxuC,GACvB,IAAIxU,EAAMwU,EAAQlqB,IAAI,OAClBqrB,EAAO7tB,KAAKivB,MAAM/W,GAClB2V,EACAA,EAAK9tB,IAAI+K,SAET+iB,EAAO7tB,KAAKkvB,SAAShX,EAAK,2BAAgC,CAAC4b,MAAOpH,IACtE,IAAIguC,EAAQ16D,KAAK8zB,MAAM1vB,QAAQsoB,GACjB,IAAVguC,EACA16D,KAAKrC,EAAE,uBAAuBy9D,MAAMvtC,EAAK9tB,KAEzCC,KAAKrC,EAAE,iBAAiBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,KACrDC,KAAKqmE,aACLrmE,KAAKytB,OAAOoB,iBAChB,EAEAssC,iBAAkB,SAAUzuC,GACxB1sB,KAAKovB,YAAY1C,EAAQlqB,IAAI,QAC7BxC,KAAKqmE,aACLrmE,KAAKytB,OAAOoB,iBAChB,EAEAG,OAAQ,WACJhvB,KAAKqmE,aACL,GAAEvmE,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5BA,EAAKg1C,eACT,GACJ,EAEAwD,WAAY,WACRrmE,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAM7xB,QAC7CjC,KAAKrC,EAAE,uBAAuB2T,OAAOtR,KAAK8zB,MAAM7xB,QAChDjC,KAAKytB,OAAO9vB,EAAE,uEACT2E,KAA2B,IAAtBtC,KAAK8zB,MAAM7xB,OAAe,aAAiB,WAAa,aAAiB,qCACvF,EAEA2gE,gBAAiB,WACb,IAAIxxB,EAAY,gBAAsB,mBAAuB,aAC7DpxC,KAAKrC,EAAE,cAAc2T,OAAO8/B,GAC5BpxC,KAAKrC,EAAE,qBAAqB2T,OAAO8/B,GACnCpxC,KAAKrC,EAAE,cAAc4T,QAAQ6/B,GAC7BpxC,KAAKrC,EAAE,qBAAqB4T,QAAQ6/B,EACxC,EAEAg1B,sBAAuB,SAAUv7D,EAAI6hB,GACjC1sB,KAAK8zB,MAAM2mC,aAAa/tC,EAC5B,IAGJ,oBAA0B,oBAAwB,CAC9CqE,UAAW,uCACXvD,SAAU,GAAU84C,cAEpBr1C,OAAQ,CACJ,0BAA2B,eAC3B,0CAA2C,0BAC3C,wBAAyB,QACzB,uBAAwB,oBAG5BhnB,KAAM,SAAUyiB,GACZ1sB,KAAK0sB,QAAUA,EACf1sB,KAAKumE,gBAAgB75C,EAAQlqB,IAAI,WACjCxC,KAAKwmE,4BACLxmE,KAAK0uB,MACT,EAEA63C,gBAAiB,SAAUhgD,GACvBvmB,KAAKrC,EAAE,iCAAiC4oB,EAAO,MAAMpmB,SAAS,UACzDq4B,WAAWt4B,YAAY,SAChC,EAEAumE,aAAc,SAAU57D,GACpB,IAAI0b,EAAS,GAAE1b,EAAG4C,QAAQstB,QAAQ,MAAMr7B,KAAK,SAC7CM,KAAKumE,gBAAgBhgD,GACrBvmB,KAAK0mE,YACL1mE,KAAK4L,YACT,EAEA46D,0BAA2B,WACvB,IAAIrd,EAAiBnpD,KAAK0sB,QAAQlqB,IAAI,kBACtCxC,KAAKrC,EAAE,mBAAmB4P,IAAI47C,GACzBp8C,YAAY,SAAUo8C,GACtBA,GACDnpD,KAAKrC,EAAE,mBAAmB6B,KAAK,cAAeQ,KAAK0sB,QAAQ8nC,mBAEnE,EAEAmS,wBAAyB,WACrB,IAAIC,EAAiB,aAAiB5mE,KAAK0sB,QAAQlqB,IAAI,WACvDxC,KAAKrC,EAAE,mBAAmB4P,IAAI,IAAI/N,KAAK,cAAeonE,GACjD1mE,YAAY,SACrB,EAEA23B,MAAO,SAAUhtB,GACb,GAAIA,EAAGW,UAAY,GAAUlZ,UACzB0N,KAAK0mE,YACL1mE,KAAK4L,iBACF,CACH,IAAIb,EAAQ/K,KAAKrC,EAAE,mBAAmB4P,MACtCvN,KAAKrC,EAAE,mBAAmBoP,YAAY,SAAUhC,EACpD,CACJ,EAEA27D,UAAW,WACP,IAAIngD,EAASvmB,KAAKrC,EAAE,4BAA4B+B,KAAK,SACjDypD,EAAiBnpD,KAAKrC,EAAE,mBAAmB4P,MAC3CvN,KAAK6mE,aACL,kBAAqB,SAAUn6C,GAC3BA,EAAQ+nC,UAAUluC,EAAQ4iC,EAC9B,IAEAnpD,KAAK0sB,QAAQ+nC,UAAUluC,EAAQ4iC,EAEvC,EAEA2d,iBAAkB,SAAUj8D,GACxB7K,KAAK6mE,aAAe,GAAEh8D,EAAG4C,QAAQlD,KAAK,UAC1C,EAEAykB,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAOv9B,KAAKs1C,SAAShtC,KAAKtI,MAC1BmL,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEAs1C,SAAU,WACNpG,YAAYsG,kBAChB,EAEAzmB,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACSlL,KAAKrC,EAAE,mBAAmB4P,OAElCvN,KAAK0mE,YACT1mE,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,iBAAuB,oBAAwB,CAC3C+wB,UAAW,kDACXvD,SAAU,GAAUu5C,gBACpBj5C,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,kBAAmB,mBACnB,kCAAmC,iBACnC,4BAA6B,qBAC7B,kBAAmB,iBACnB,iBAAkB,YAClB,oBAAqB,SAGzB1C,YAAa,WACTvuB,KAAKrC,EAAE,aAAa,GAAGoqC,QAAU/nC,KAAKgoC,QAAQ1/B,KAAKtI,KACvD,EAEAgvB,OAAQ,SAAUhwB,GACdgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKioC,gBACLjoC,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,yCAAyCwC,SAAS,UACzDH,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,8BACnDtC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kBAAkBqwB,iBAAiB,CAAC5E,MAAO,aAAa,EAEnEje,SAAUnL,KAAKkL,MAAM5C,KAAKtI,QAE9B,IAAIkoC,EAAYloC,KAAKrC,EAAE,gBACvBuqC,EAAU,GAAGC,YAAc,SAAUt9B,GACjCA,EAAGa,iBACHw8B,EAAU/nC,SAAS,YACvB,EACA+nC,EAAU,GAAGE,WAAa,SAAUv9B,GAChCA,EAAGa,gBACP,EACAw8B,EAAU,GAAGG,YAAc,SAAUx9B,GAC7B,GAAEA,EAAGy9B,eAAevN,QAAQ,gBAAgB94B,SAEhD4I,EAAGa,iBACHw8B,EAAUhoC,YAAY,aAC1B,EACAgoC,EAAU,GAAGK,OAAU19B,IACnBA,EAAGa,iBACHb,EAAGsmB,kBACH+W,EAAUhoC,YAAY,aACtB,IAAyC+G,EAArCuhC,EAAQ39B,EAAG49B,aAAaD,OAAS,GACrC,IAAK,IAAIhlC,EAAI,EAAGA,EAAIglC,EAAMvmC,OAAQuB,IAC9B,GAAI,GAAMmR,YAAY6zB,EAAMhlC,GAAGK,MAAO,CAClCoD,EAAOuhC,EAAMhlC,GACb,KACJ,CAEJyD,GAAQjH,KAAK0oC,QAAQzhC,EAAK,CAElC,EAEA+gC,QAAS,SAAUn9B,GACf,IAAIrV,EAAMqV,EAAG4+B,cAAcC,QAAQ,QAAQllC,OAC3CxE,KAAKrC,EAAE,sBAAsB,GAAG2J,OAAS,KACrCtH,KAAKrC,EAAE,sBAAsBuC,YAAY,UACzCF,KAAK2pC,oBAAoB,EAE7B3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM5R,EACzDwK,KAAK2pC,oBACT,EAEAC,iBAAkB,SAAU/+B,GACxB,IAAIg/B,EAAch/B,EAAG4C,OAAOksB,aAAa,oBACzC35B,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,+BAA+BksC,OAAiB1pC,SAAS,UAChEH,KAAK8pC,aAAaD,EACtB,EAEAC,aAAc,SAAU/qC,GACpBiB,KAAKrC,EAAE,gBAAgBwC,SAAS,UAChCH,KAAKrC,EAAE,6BAA6BoB,OAAUmB,YAAY,UAC1DF,KAAKiwB,cACLjwB,KAAK2pC,oBACT,EAEAA,mBAAoB,WAChB,IAAII,EAAiB/pC,KAAKrC,EAAE,6BACxBqsC,GAAa,EACyB,WAAtCD,EAAevqC,KAAK,eACpBuqC,EAAelqC,KAAK,cAAcoC,SAAW+nC,GAAa,GAE1DD,EAAelqC,KAAK,oBAAoBoC,SAAW+nC,GAAa,GAEpEhqC,KAAKrC,EAAE,0BAA0BoP,YAAY,aAAci9B,EAC/D,EAEAi2B,YAAa,SAAUxsB,GACnBzzC,KAAKrC,EAAE,oCAAoCuT,SACvCuiC,EAAS8I,MAAMt6C,SACfjC,KAAKgnE,cAAgBvzB,EAAS8I,MAC9B9I,EAAS8I,MAAMlqC,SAAQ,CAACnR,EAAMwB,KAC1B,IAAI2mC,EAAM,GAAE,6BACZA,EAAI/jC,IAAI,mBAAoB,QAAQpE,EAAKooC,UAAU9zC,SACnD6zC,EAAI7pC,KAAK,WAAY0B,EAAK+F,MAC1BoiC,EAAI7pC,KAAK,UAAWkD,GACpB1C,KAAKrC,EAAE,iBAAiBkP,OAAOw8B,EAAI,IAG/C,EAEApB,cAAe,WACXjoC,KAAK8zB,MAAMojC,wBAAuB,KAC9B,IAAIl4D,EAAU,CAAC6+D,SAAU,OACrB79D,KAAK8zB,MAAMtxB,IAAI,kBAAoBxC,KAAK8zB,MAAMtxB,IAAI,iBAClDxC,KAAKrC,EAAE,iBAAiBgC,KAAK,GAAId,UAAUy2B,SAASO,aACpD,GAAEuT,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK8zB,MAAMtxB,IAAI,kBACtDhN,IAAKwK,KAAK8zB,MAAMtxB,IAAI,eAAiB,aACrCwmC,SAAU,OACVtpC,KAAMV,EACNiqC,QAAUwK,IACN,GAAQ1tB,IAAI0tB,GACZzzC,KAAKigE,YAAYxsB,EAAQ,EAE7B1lC,MAAQ0lC,IACJzzC,KAAK8zB,MAAMyjC,0BAA0B9jB,GACrC,GAAQ1tB,IAAI0tB,GACZzzC,KAAKrC,EAAE,oCAAoCuT,QAAO,IAG9D,GAER,EAEAi5B,eAAgB,SAAUt/B,GACtB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACfi3B,EAAQ13B,SAAS,UACjB03B,EAAQxkC,YAAY,WAEpBF,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxCwkC,EAAQvkC,SAAS,WAErBH,KAAK2pC,oBACT,EAEAS,mBAAoB,SAAUv/B,GAC1B,IAAwB5D,EAApBwG,EAAS5C,EAAG4C,OAChB,IAAK,IAAIjK,EAAI,EAAGA,EAAIiK,EAAO+6B,MAAMvmC,OAAQuB,IACrC,GAAI,GAAMmR,YAAYlH,EAAO+6B,MAAMhlC,GAAGK,MAAO,CACzCoD,EAAOwG,EAAO+6B,MAAMhlC,GACpB,KACJ,CAEJyD,GAAQjH,KAAK0oC,QAAQzhC,GACrB,GAAEwG,GAAQF,IAAI,GAClB,EAEAm7B,QAAS,SAAUzhC,GACf,IAAIe,EAAS,IAAIC,WACjBD,EAAOV,OAAUwK,IACb,IAAIu4B,EAAa,IAAIljC,MACjBC,EAAM0K,EAAErE,OAAOvF,OACnBmiC,EAAWjjC,IAAMA,EACjBpH,KAAKrC,EAAE,0CAA0CmN,SACjD9K,KAAKrC,EAAE,sCAAsCy3B,QAAQiV,GACrDrqC,KAAKinE,aAAehgE,EACpBjH,KAAK2pC,oBAAoB,EAE7B3hC,EAAOO,cAActB,EACzB,EAEAqjC,eAAgB,SAAUz/B,GACtB,GAAIA,EAAG4C,OAAO1C,MAAMvG,QAAUxE,KAAKrC,EAAE,sBAAsB,GAAGyJ,IAE9D,GAAIyD,EAAG4C,OAAO1C,MAAMvG,QAAUqG,EAAGW,UAAY,GAAUhZ,UAAYqY,EAAGW,UAAY,GAAUjZ,WAAasY,EAAGW,UAAY,GAAU5Y,cAAgBiY,EAAGW,UAAY,GAAU1Y,gBAAkB+X,EAAGW,UAAY,GAAU3Y,iBAAmBgY,EAAGW,UAAY,GAAU7Y,eAAgB,CAC9Q,IAAI6C,EAAMqV,EAAG4C,OAAO1C,MAAMvG,OAC1BxE,KAAKrC,EAAE,sBAAsB,GAAG2J,OAAS,KACrCtH,KAAKrC,EAAE,sBAAsBuC,YAAY,UACzCF,KAAK2pC,oBAAoB,EAE7B3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM5R,EACzDwK,KAAK2pC,oBACT,MACI3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM,GACzDpH,KAAK2pC,oBAEb,EAEAu9B,UAAW,WACP,GAAIlnE,KAAKrC,EAAE,YAAYqP,SAAS,cAC5B,OACJ,IAAIhS,EAAOkmC,EAAM,IAAI,GAAE75B,SAAY0iC,EAAiB/pC,KAAKrC,EAAE,6BAC3DujC,EAAI3Y,MAAK,CAAC8gB,EAAK89B,KACPA,GACAnsE,EAAM6I,KAAO7I,EAAMulE,WACnBvgE,KAAK8zB,MAAMk4B,UAAUhxD,GAAO,KACxBgF,KAAKgnE,cAAgB,GACrBhnE,KAAKkL,QACLlL,KAAK8zB,MAAMvoB,QAAQ,qBAAqB,IACzC,KACC,GAAMQ,QAAQgC,MAAM,aAAiB,sCAAsC,KAG/E,GAAM2S,OAAO1Z,kBAAkBqiC,GAAK9gB,MAAK,CAACvtB,EAAOwM,EAAM5C,KAC/C5J,EACAgF,KAAK8zB,MAAMk4B,UAAU,CAACpjD,OAAQ5N,EAAOwM,KAAMA,EAAM5C,KAAMA,EAAMf,KAAMwlC,EAAIxlC,KAAMoD,KAAMoiC,IAAM,KACrFrpC,KAAKkL,QACLlL,KAAK8zB,MAAMvoB,QAAQ,qBAAqB,IACzC,KACC,GAAMQ,QAAQgC,MAAM,aAAiB,sCAAsC,IAG/E,GAAMhC,QAAQgC,MAAM,aAAiB,sCAAsC,GAEvF,IAEJ/N,KAAKrC,EAAE,yBAAyBgC,KAAK,GAAId,UAAUy2B,SAASO,aAC5D71B,KAAKrC,EAAE,YAAYwC,SAAS,mBAEc,WAAtC4pC,EAAevqC,KAAK,gBACpBxE,EAAQgF,KAAKgnE,cAAcj9B,EAAelqC,KAAK,cAAcL,KAAK,YAClExE,EAAM4xD,UAAW,EACjB1rB,EAAI74B,QAAQrN,GAAO,IAEwB,eAAtC+uC,EAAevqC,KAAK,gBACzBxE,EAAQ+uC,EAAelqC,KAAK,oBAAoB,GAAGuH,IACnDpH,KAAKonE,kBAAkBpsE,GAAOqf,MAAMpT,IAChCi6B,EAAI74B,QAAQpB,EAAK,IACjB6K,IACA9R,KAAKrC,EAAE,sBAAsBuT,SAC7BlR,KAAKrC,EAAE,YAAYuC,YAAY,mBAC/B,GAAM6L,QAAQgC,MAAM,aAAiB,sCAAsC,KAG/EmzB,EAAI74B,QAAQrI,KAAKinE,aACzB,EAEAG,kBAAmBjrD,eAAgB3mB,GAC/B,IAAIi+C,QAAiBlxB,MAAM/sB,GACvBkK,QAAa+zC,EAAS1rC,OAK1B,OADW,IAAIiB,KAAK,CAACtJ,GAAO,aAHb,CACXmE,KAAM,aAId,EAEAqH,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,IAGJ,0BAAgC,oBAAwB,CACpDgR,UAAW,gCACXvD,SAAU,GAAU65C,aAEpBp2C,OAAQ,CACJ,kBAAmB,aACnB,oBAAqB,SAGzBhnB,KAAM,SAAUjL,GACZgB,KAAK0sB,QAAU1tB,EAAQ80B,MACvB9zB,KAAKsnE,aAAetoE,EAAQsoE,aAC5BtnE,KAAKunE,kBAAoBvoE,EAAQuoE,kBAEjCvnE,KAAK8E,MAAQ,IACb9E,KAAK+E,OAAS,IACd/E,KAAKwnE,WAAY,EACjBxnE,KAAK9E,MAAQ,KACb8E,KAAKmG,OAAS,KACdnG,KAAKolD,MAAQ,KACbplD,KAAKynE,YAAc,KAEnBznE,KAAK0uB,OACL1uB,KAAK0nE,eACT,EAEA14C,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACfR,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEA+uB,OAAQ,WACJ,GAAI/uB,KAAK9E,OAAS8E,KAAK9E,MAAMysE,WAAa3nE,KAAK9E,MAAMysE,UAAUC,YAAY,CAC1D5nE,KAAK9E,MAAMysE,UAAUC,YAC3Bv1D,SAAQ,SAASw1D,GACpBA,EAAMC,MACV,IACA9nE,KAAK9E,MAAMysE,UAAY,IAC3B,CACA3nE,KAAKD,IAAI+K,QAEb,EAEAI,MAAO,WACHlL,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEA0nE,cAAe,SAAU78D,GACrB7K,KAAK9E,MAAQ8E,KAAKrC,EAAE,iBAAiB,GACrCqC,KAAKmG,OAASnG,KAAKrC,EAAE,WAAW,GAChCqC,KAAKolD,MAAQplD,KAAKrC,EAAE,iBAAiB,GACrCqC,KAAKynE,YAAcznE,KAAKrC,EAAE,mBAAmB,GAC7Ckb,UAAUoJ,aAAa8lD,aAAa,CAAC7sE,OAAO,EAAMD,OAAO,IACpDof,MAAM2tD,IACHhoE,KAAK9E,MAAMysE,UAAYK,EACvBhoE,KAAK9E,MAAM6mC,MAAM,IAEpB1Z,OAAOC,IACJ,GAAQvC,IAAI,sBAAwBuC,EAAI,IAGhDtoB,KAAK9E,MAAMmP,iBAAiB,WAAYQ,IAC/B7K,KAAKwnE,YACF/xD,MAAMzV,KAAK+E,UACX/E,KAAK+E,OAAS/E,KAAK8E,OAAS,EAAE,IAElC9E,KAAK9E,MAAMw+B,aAAa,QAAS15B,KAAK8E,OACtC9E,KAAK9E,MAAMw+B,aAAa,SAAU15B,KAAK+E,QACvC/E,KAAKmG,OAAOuzB,aAAa,QAAS15B,KAAK8E,OACvC9E,KAAKmG,OAAOuzB,aAAa,SAAU15B,KAAK+E,QACxC/E,KAAKwnE,WAAY,EACrB,IACD,GAEHxnE,KAAKynE,YAAYp9D,iBAAiB,SAAUQ,IACxC7K,KAAKioE,cACLp9D,EAAGa,gBAAgB,IACpB,GAEH1L,KAAKrC,EAAE,gBAAgB,GAAG0M,iBAAiB,SAAUQ,IAC7C,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAElDhN,KAAKkoE,aACLr9D,EAAGa,iBAAgB,IACpB,GAEH1L,KAAKkoE,YAET,EAGAA,WAAY,SAAUr9D,GAClB,IAAIqnC,EAAUlyC,KAAKmG,OAAOG,WAAW,MACrC4rC,EAAQzrC,UAAY,OACpByrC,EAAQi2B,SAAS,EAAG,EAAGnoE,KAAKmG,OAAOrB,MAAO9E,KAAKmG,OAAOpB,QAEtD,IAAIrF,EAAOM,KAAKmG,OAAOY,UAAU,aACjC/G,KAAKolD,MAAM1rB,aAAa,MAAOh6B,GAC/BM,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,WAAW4T,QAAO,EAC7B,EAGA02D,YAAa,SAAUp9D,GACnB,IAAIqnC,EAAUlyC,KAAKmG,OAAOG,WAAW,MAIrC,GAHAtG,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,WAAW4T,QAAO,GACrBvR,KAAK8E,OAAS9E,KAAK+E,OAAQ,CAC3B/E,KAAKmG,OAAOrB,MAAQ9E,KAAK8E,MACzB9E,KAAKmG,OAAOpB,OAAS/E,KAAK+E,OAC1BmtC,EAAQtqC,UAAU5H,KAAK9E,MAAO,EAAG,EAAG8E,KAAK8E,MAAO9E,KAAK+E,QACrDmtC,EAAQk2B,yBAAyB,iBACjCl2B,EAAQm2B,YACRn2B,EAAQo2B,IAAItoE,KAAK8E,MAAM,EAAE9E,KAAK+E,OAAO,EAAE/E,KAAK+E,OAAO,EAAE,EAAU,EAARzI,KAAKisE,IAC5Dr2B,EAAQs2B,YACRt2B,EAAQxrC,OAER,IAAIhH,EAAOM,KAAKmG,OAAOY,UAAU,aACjC/G,KAAKolD,MAAM1rB,aAAa,MAAOh6B,EACnC,MACIM,KAAKkoE,YAEb,EAGAO,WAAY,WACR,IAAI1gE,EAAOkhD,GAAOtjD,aAAa3F,KAAKmG,OAAOY,UAAU,aAAalF,QAAQ,+CAAgD,KACtHoF,EAAO,IAAI+B,KAAK,CAACjB,GAAO,aAAc,CAClClE,KAAM,cAEdoD,EAAK2B,OAAS5I,KAAKmG,OAAOY,UAAU,aAAalF,QAAQ,+CAAgD,IACrGoF,GAAQA,EAAK2B,SACT5I,KAAKsnE,cAAgBtnE,KAAKunE,mBAC1BvnE,KAAKunE,kBAAkBj8B,OAASrkC,EAChCjH,KAAKunE,kBAAkB5pE,EAAE,aAAa4M,KAAK,YAAY,GACvDvK,KAAKunE,kBAAkB5pE,EAAE,kBAAkBwC,SAAS,WACpDH,KAAKunE,kBAAkB5pE,EAAE,kBAAkBsH,UAAUjF,KAAKmG,OAAOY,UAAU,aAAalF,QAAQ,+CAAgD,IAAK7B,KAAK0oE,4BAC1J1oE,KAAKkL,UAELlL,KAAKrC,EAAE,yBAAyBgC,KAAK,GAAId,UAAUy2B,SAASO,aAC5D71B,KAAKrC,EAAE,aAAawC,SAAS,mBAC7BH,KAAKrC,EAAE,gBAAgBwC,SAAS,YAChCH,KAAK0sB,QAAQs/B,UAAU/kD,GAAM,KACzBjH,KAAKkL,OAAO,IACb,KACC,GAAMa,QAAQgC,MAAM,aAAiB,sCAAsC,KAI3F,IAGJ,yBAA+B,oBAAwB,CACnDgjB,UAAW,+BACXvD,SAAU,GAAUm7C,YAEpB13C,OAAQ,CACJ,wCAAyC,cACzC,qBAAsB,kBACtB,qBAAsB,QACtB,kBAAmB,aACnB,oBAAqB,SAGzBhnB,KAAM,SAAUjL,GACZgB,KAAK0sB,QAAU1tB,EAAQ80B,MACvB9zB,KAAKsnE,aAAetoE,EAAQsoE,aAC5BtnE,KAAKunE,kBAAoBvoE,EAAQuoE,kBACjCvnE,KAAK4oE,iBAAmB5oE,KAAKkvB,SAAS,qBAAsB,mBAAuB,CAAC,GACpFlvB,KAAK0uB,MACT,EAEAM,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACfR,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEA+uB,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACHlL,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEA6oE,gBAAiB,WACb7oE,KAAK4oE,iBAAiB3+D,KAAKjK,KAC/B,EAEA0lE,YAAa,SAAU76D,GACnB,IAAIhF,EAAQ,GAAEgF,EAAG4C,QAAQ/N,KAAK,SAC9BM,KAAKrC,EAAE,mCAAmCuC,YAAY,2BACtD,GAAE2K,EAAG4C,QAAQtN,SAAS,2BACtBH,KAAKrC,EAAE,kBAAkB6B,KAAK,QAAS,iBACvCQ,KAAKrC,EAAE,kBAAkB6B,KAAK,aAAcqG,GAC5C7F,KAAKrC,EAAE,kBAAkBwC,SAAS,gBAAkB0F,EAAQ,OAChE,EAEA4iE,WAAY,SAAU59D,GAClB,IAAI9C,EAAOkhD,GAAOrjD,iBAAiB5F,KAAKrC,EAAE,iBAAiB+B,KAAK,SAAUM,KAAKrC,EAAE,kBAAkB2H,IAAK,oBAAsB,uBAAwB,IAAK,KACvJ2B,EAAO,IAAI+B,KAAK,CAACjB,GAAO,SAAU,CAC9BlE,KAAM,cAEdoD,EAAK4lD,WAAY,EACjB5lD,EAAK2B,OAASb,EACVd,GAAQA,EAAK2B,SACT5I,KAAKsnE,cAAgBtnE,KAAKunE,mBAC1BvnE,KAAKunE,kBAAkBj8B,OAASrkC,EAChCjH,KAAKunE,kBAAkB5pE,EAAE,aAAa4M,KAAK,YAAY,GACvDvK,KAAKunE,kBAAkB5pE,EAAE,kBAAkBwC,SAAS,WACpDH,KAAKunE,kBAAkB5pE,EAAE,kBAAkBsH,UAAU8C,EAAM/H,KAAK0oE,4BAChE,kBAAsB,aAAc1oE,KAAKrC,EAAE,kBAAkB6B,KAAK,eAClE,WAAe,qBACfQ,KAAKkL,UAELlL,KAAKrC,EAAE,yBAAyBgC,KAAK,GAAId,UAAUy2B,SAASO,aAC5D71B,KAAKrC,EAAE,aAAawC,SAAS,mBAC7BH,KAAK0sB,QAAQs/B,UAAU/kD,GAAM,KACzBjH,KAAKkL,OAAO,IACb,KACC,GAAMa,QAAQgC,MAAM,aAAiB,sCAAsC,KAI3F,IAGJ,mBAAyB,oBAAwB,CAC7CgjB,UAAW,4CACXvD,SAAU,GAAUs7C,aAEpB73C,OAAQ,CACJ,oCAAqC,eACrC,4BAA6B,YAC7B,qBAAsB,SAG1BhnB,KAAM,WACFjK,KAAKD,IAAI4L,UAAU,CACfR,SAAUnL,KAAKkL,MAAM5C,KAAKtI,QAE9BA,KAAK+oE,iBACL/oE,KAAK0uB,MACT,EAEAq6C,eAAgB,WACZ/oE,KAAKgpE,OAAS,GAAUA,OAEpBhpE,KAAKgpE,OAAO/mE,SACZjC,KAAKrC,EAAE,sBAAsBgC,KAAK,GAAUspE,kBAAkB,CAC1DD,OAAQhpE,KAAKgpE,UAEjBhpE,KAAK+tB,aAAe/tB,KAAKrC,EAAE,eACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAIjD,EAEAe,OAAQ,WACR,EAEAD,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACHlL,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEA+vB,SAAU,SAAUjvB,GAChBd,KAAK+tB,aAAajuB,MAAM46D,IACpB16D,KAAK+tB,aAAa2sC,GAAO1qC,UAAYlvB,CAAM,IAE/Cd,KAAK+tB,aAAaC,iBAAiB,SACvC,EAEAiC,YAAa,WACTjwB,KAAK+vB,SAAS,EAClB,EAEAm5C,aAAc,SAAUr+D,GACpB,IAAIs1D,EAAM,GAAEt1D,EAAG4C,QAAQ/N,KAAK,SAC5BM,KAAKrC,EAAE,+BAA+BuC,YAAY,yBAClD,GAAE2K,EAAG4C,QAAQtN,SAAS,yBACtBH,KAAKrC,EAAE,eAAeuC,YAAY,oBAAoBC,SAAS,UAC/DH,KAAKrC,EAAE,2BAA2BwiE,OAASjgE,YAAY,UAAUC,SAAS,oBAC1EH,KAAKiwB,aACT,EAEAk5C,UAAW,SAAUt+D,GACjB,IAAI1J,EAAQ,GAAE0J,EAAG4C,QAAQstB,QAAQ,uBAAuBr7B,KAAK,SAC7DM,KAAKytB,OAAO9vB,EAAE,iBAAiB6B,KAAK,aAAc2B,GAAOmB,KAAKnB,GAC9DnB,KAAKkL,OACT,IAGJ,sBAA4B,oBAAwB,CAChD6lB,UAAW,yCACXvD,SAAU,GAAU47C,gBAEpBn4C,OAAQ,CACJ,oBAAqB,SACrB,oBAAqB,QACrB,6BAA8B,SAGlC1C,YAAa,WAKT,OAJAvuB,KAAKrC,EAAE,mBAAmB4P,IAAIvN,KAAK8zB,MAAMtxB,IAAI,QAC7CxC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,wBAC9BqC,KAAKN,KAAK2jB,GAAG,wBAAyBrjB,KAAKi9B,cAAej9B,MAC1D,MAAU,OAAQA,KAAKujB,OAAQvjB,MACxBA,IACX,EAEAgvB,OAAQ,SAAUhwB,GACdA,IAAYA,EAAU,CAAC,GACvBgB,KAAKqpE,SAAWrqE,EAAQ+0C,MACxB/zC,KAAKkuD,kBAAoBlvD,EAAQkvD,kBACjCluD,KAAKrC,EAAE,sBAAsB2E,KAAKtC,KAAKqpE,SAAW,aAAiB,+CAAiD,aAAiB,oBACrIrpE,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAKqpE,SAAW,aAAiB,QAAU,aAAiB,WACvFrpE,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAKqpE,SAAW,aAAiB,+CAAiD,aAAiB,QAC9HrpE,KAAKD,IAAI4L,UAAU,CACfzB,WAAW,EACXqzB,MAAOv9B,KAAKs1C,SAAShtC,KAAKtI,MAC1BmL,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEAs1C,SAAU,WACNpG,YAAYsG,mBACZx1C,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKo1C,gBAAgB7nC,IAAI,IAAIwB,OACjC,EAEAu6D,cAAe,WACX,OAAOtpE,KAAKqpE,SAAW,aAAiB,SAAW,aAAiB,MACxE,EAEAxxC,MAAO,SAAUhtB,GACbA,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAKy1C,QAC/C,EAEAA,OAAQ,WACJ,GAAIz1C,KAAKN,KAAK8C,IAAI,kBAEd,YADAxC,KAAK+/B,SAGT//B,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAKu1C,aAAa,CAAC,GACTv1C,KAAK8zB,MAAMtxB,IAAI,OAAzB,IACIsxC,EAAW9zC,KAAKo1C,gBAAgB7nC,MACpC,IAAKumC,EACD,OAAO9zC,KAAK01C,cAAc,CAAC5B,SAAU,aAAiB,oDAC1DA,EAAWA,EAAStvC,OACpBxE,KAAKu1C,aAAa,CAACzB,SAAU,aAAiB,2DAC1C9zC,KAAK8zB,MAAM/G,WAAWqkB,WACtBpxC,KAAK8zB,MAAM6N,KAAK,cAAc,KAC1B3hC,KAAK06C,YAAY5G,EAAS,IAE9B9zC,KAAK8zB,MAAMmgC,cAEXj0D,KAAK06C,YAAY5G,EAEzB,EAEA4G,YAAa,SAAU5G,GACnB9zC,KAAK8zB,MAAM81B,mBAAqB,EAChC5pD,KAAK8zB,MAAM/Q,KAAK,CACZ29B,UAAW,WACX5M,SAAU,GAAMxgC,KAAKwgC,GACrBoV,SAAS,IAEblpD,KAAK8zB,MAAM41B,UAAY1pD,KACvBA,KAAK8zB,MAAMoqB,SACf,EAEAne,OAAQ,WACJ//B,KAAKN,KAAKqgB,IAAI,kBAAkB,EACpC,EAEAkd,cAAe,WACX,IAAI0Y,EAAiB31C,KAAKN,KAAK8C,IAAI,kBACnCxC,KAAKrC,EAAE,eAAe2E,KAAKqzC,EAAiB,aAAiB,QAAU31C,KAAKspE,gBAChF,EAEA/zB,aAAc,SAAUv2C,GACpBgB,KAAKo1C,gBAAgBroC,YAAY,UAAW/N,EAAQ80C,UAC/Ctb,SAAS,eAAel2B,KAAKtD,EAAQ80C,UAAY,GAC1D,EAEA4B,cAAe,SAAU12C,GACrBgB,KAAKu1C,aAAav2C,GAClBgB,KAAKN,KAAKqgB,IAAI,kBAAkB,EACpC,EAEA81B,gBAAiB,WACb71C,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAK4L,YACT,EAEAwlD,QAAS,SAAU1kC,GACf1sB,KAAK8zB,MAAM/Q,KAAK,cAAU3H,GAC1Bpb,KAAK61C,gBAAgB71C,KAAK8zB,OAC1B9zB,KAAK8zB,MAAM41B,UAAY,IAC3B,EAEA36B,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAyY,OAAQ,WACJvjB,KAAK4L,YACT,EAEAV,MAAO,WACClL,KAAKqpE,UACLrpE,KAAK8zB,MAAM/Q,KAAK,WAAW,GAC3B/iB,KAAKkuD,mBACLluD,KAAK8zB,MAAMi2B,gBACf/pD,KAAK+/B,SACL//B,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAK8zB,MAAM41B,UAAY,KACvB1pD,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,6BAAmC,oBAAwB,CACvDixB,OAAQ,CACJ,oBAAqB,SACrB,oBAAqB,SACrB,cAAe,SAGnB1C,YAAa,WAKT,OAJAvuB,KAAK0sB,QAAU1sB,KAAK8zB,MACpB9zB,KAAKupE,oBAAsBvpE,KAAKrC,EAAE,4BAClCqC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,wBAC9BqC,KAAKwpE,wBAA0BxpE,KAAKrC,EAAE,gCAC/BqC,IACX,EAEAgvB,OAAQ,SAAUhwB,GACdgB,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKo1C,gBAAgB7nC,IAAI,IACzBvN,KAAKwpE,wBAAwBj8D,IAAI,IACjCvN,KAAKupE,oBAAoBh8D,IAAI,IAAIwB,OACrC,EAEA8oB,MAAO,SAAUhtB,GACbA,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAKy1C,QAC/C,EAEAA,OAAQ,WACJz1C,KAAKu1C,aAAa,CAAC,GACnB,IAAIr9B,EAAMlY,KAAK0sB,QAAQlqB,IAAI,OACvBquD,EAAe7wD,KAAKupE,oBAAoBh8D,MACxCumC,EAAW9zC,KAAKo1C,gBAAgB7nC,MAChCk8D,EAAmBzpE,KAAKwpE,wBAAwBj8D,MACpD,OAAKsjD,EAEA/c,EAEDA,GAAY21B,EACLzpE,KAAK01C,cAAc,CAAC+zB,iBAAkB,aAAiB,qDAClE5Y,EAAeA,EAAarsD,OAC5BxE,KAAKu1C,aAAa,CAACk0B,iBAAkB,aAAiB,gEACjDzpE,KAAK0sB,QAAQqkC,qCACd/wD,KAAK0sB,QAAQqkC,mCAAqC,IAAI,GAAQtQ,kBAAkBzgD,KAAK0sB,QAAQp5B,gBAC7F0M,KAAK0sB,QAAQokC,2BAA6B9wD,KAAK0sB,QAAQqkC,mCAAmChkC,WAC1F/sB,KAAK0sB,QAAQokC,2BAA2BpkC,QAAU1sB,KAAK0sB,QACvD1sB,KAAK0sB,QAAQokC,2BAA2BxR,SAASd,wBAAwBtmC,EAAK24C,EAAc7wD,KAAK0sB,QAAQgkC,uBAAuBpoD,KAAKtI,KAAK0sB,aATnI1sB,KAAK01C,cAAc,CAAC5B,SAAU,aAAiB,oDAF/C9zC,KAAK01C,cAAc,CAACmb,aAAc,aAAiB,mDAalE,EAEAtb,aAAc,SAAUv2C,GACpBgB,KAAKo1C,gBAAgBroC,YAAY,UAAW/N,EAAQ80C,UAC/Ctb,SAAS,eAAel2B,KAAKtD,EAAQ80C,UAAY,IACtD9zC,KAAKupE,oBAAoBx8D,YAAY,UAAW/N,EAAQ6xD,cACnDr4B,SAAS,eAAel2B,KAAKtD,EAAQ6xD,cAAgB,IAC1D7wD,KAAKwpE,wBAAwBz8D,YAAY,UAAW/N,EAAQyqE,kBACvDjxC,SAAS,eAAel2B,KAAKtD,EAAQyqE,kBAAoB,GAClE,EAEA/zB,cAAe,SAAU12C,GACjBgB,KAAK0sB,QAAQokC,4BACb9wD,KAAK0sB,QAAQokC,2BAA2B1C,aAC5CpuD,KAAKu1C,aAAav2C,EACtB,EAEA62C,gBAAiB,WACT71C,KAAK0sB,QAAQokC,4BACb9wD,KAAK0sB,QAAQokC,2BAA2B1C,aAC5CpuD,KAAKgvB,QACT,IAGJ,YAAkB,oBAAwB,CACtCT,YAAa,WAIT,OAHAvuB,KAAK0pE,WAAa1pE,KAAKrC,EAAE,mBACzBqC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,wBAC9BqC,KAAKN,KAAK2jB,GAAG,wBAAyBrjB,KAAKi9B,cAAej9B,MACnDA,IACX,EAEAgvB,OAAQ,WACJhvB,KAAKs1C,UACT,EAEAA,SAAU,WACNt1C,KAAK0sB,QAAU,KACf1sB,KAAKu1C,aAAa,CAAC,GACnBrG,YAAYsG,mBACZx1C,KAAK0pE,WAAWn8D,IAAI,IAAIwB,QACxB/O,KAAKo1C,gBAAgB7nC,IAAI,IACzBvN,KAAKi9B,gBACLj9B,KAAK2pE,eAAiB3pE,KAAK2pE,eAC/B,EAEA9xC,MAAO,SAAUhtB,GACbA,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAKy1C,QAC/C,EAEAA,OAAQ,WACJ,GAAIz1C,KAAKN,KAAK8C,IAAI,kBAEd,YADAxC,KAAK+/B,SAGT//B,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAKu1C,aAAa,CAAC,GACnB,IAAIr9B,EAAMlY,KAAK0pE,WAAWn8D,MACtBumC,EAAW9zC,KAAKo1C,gBAAgB7nC,MACpC,GAAIvN,KAAKN,KAAK8C,IAAI,gBAAgB,CAC9B,IAAIm7C,EAAS39C,KAAKrC,EAAE,uBAAuB4P,OAASvN,KAAKrC,EAAE,kEAAkE2E,OAC7H,KAAK,GAAUjN,4BAAgC,GAAUL,qBAAqBoP,QAAQu5C,IAAW,GAC7F,OAAO39C,KAAKywD,0BAA0B,CAAC9S,OAAQ,aAAiB,qDACpEzlC,EAAMA,EAAM,IAAMylC,CACtB,MACK,GACA39C,KAAKrC,EAAE,+CAA+CsE,SAAWjC,KAAKrC,EAAE,+CAA+CqP,SAAS,YAChIhN,KAAKrC,EAAE,oBAAsBqC,KAAKrC,EAAE,mBAAmB4P,OAASvN,KAAKrC,EAAE,uEAAuE2E,QAClJ,CACG,IAAIq7C,EAAS39C,KAAKrC,EAAE,mBAAmB4P,OAASvN,KAAKrC,EAAE,uEAAuE2E,OAC9H4V,EAAMA,EAAM,IAAMylC,CACtB,CACA,IAAKzlC,EACD,OAAIlY,KAAKN,KAAK8C,IAAI,gBACPxC,KAAKywD,0BAA0B,CAACv4C,IAAK,aAAiB,8CAE1DlY,KAAK01C,cAAc,CAACx9B,IAAK,aAAiB,8CAGrD,GADAA,EAAMA,EAAI1T,QACLsvC,EACD,OAAI9zC,KAAKN,KAAK8C,IAAI,gBACPxC,KAAKywD,0BAA0B,CAAC3c,SAAU,aAAiB,oDAE/D9zC,KAAK01C,cAAc,CAAC5B,SAAU,aAAiB,oDAE1D,KAAK9zC,KAAKN,KAAK8C,IAAI,iBAAoB,GAAUlN,qBAAyB,GAAUL,cAAcmP,QAAQ,GAAQk6C,iBAAiBpmC,KAAS,GACxI,OAAOlY,KAAK01C,cAAc,CAACx9B,IAAK,aAAiB,8CACrD47B,EAAWA,EAAStvC,OACpB,IAAIolE,EAAS1xD,EAAI9T,QAAQ,KACzB,GAAIwlE,GAAU,GAAKA,IAAW1xD,EAAIjW,OAAS,EACvC,OAAIjC,KAAKN,KAAK8C,IAAI,gBACPxC,KAAKywD,0BAA0B,CAACv4C,IAAK,aAAiB,8CAE1DlY,KAAK01C,cAAc,CAACx9B,IAAK,aAAiB,8CAIrD,GAFAA,EAAM,GAAQ2lC,kBAAkB3lC,GAAKlC,cACvB,gBAAoBkC,GACrB,CACT,GAAIlY,KAAKN,KAAK8C,IAAI,gBACd,OAAOxC,KAAKywD,0BAA0B,CAACv4C,IAAK,aAAiB,4CAEjElY,KAAK01C,cAAc,CAACx9B,IAAK,aAAiB,2CAC9C,MACQlY,KAAKN,KAAK8C,IAAI,gBACdxC,KAAK6pE,iBAAiB,CAACC,sBAAsB,EAAMh2B,SAAU,aAAiB,uDAE9E9zC,KAAK+pE,kBACT/pE,KAAKgqE,gBAAgB9xD,GAAMu7B,IACvBzzC,KAAK0sB,QAAU,mBAAuB,CAClCxU,IAAKA,EACLwyC,yBAA0BjX,GAAY,GAAUngD,eAChDwgD,SAAU,GAAMxgC,KAAKwgC,GACrB2V,QAAQ,GACT,CAACC,UAAW1pD,OAEXA,KAAKN,KAAK8C,IAAI,gBACdxC,KAAK0sB,QAAQK,WAAWuyB,SAASpB,QAAQhmC,EAAKlY,KAAK0sB,QAAQ6jC,iBAAiBjoD,KAAKtI,KAAK0sB,UAGtF1sB,KAAK0sB,QAAQnhB,QAAQ,QAAQ,GAG7C,EAEAy+D,gBAAiB,SAAU9xD,EAAK8P,GAC5B,GAAK,GAAUiiD,kBAqBXjiD,GAAYA,EAAS,UArBS,CAC9B,IAAI21B,EAAS,GAAQW,iBAAiBpmC,GAClC6wB,EAAU,CACNllC,KAAM,MACNrO,IAAKuO,OAAO0e,SAASynD,SAAW,KAAOvsB,EAAS,yBAChD3U,SAAU,MACVC,QAAUA,IACN,IAAIkhC,EAAa,GAAElhC,GAASppC,KAAK,QAAQL,KAAK,QAC1C2qE,EACAniD,GAAYA,EAASmiD,GAErBniD,GAAYA,EAAS,KAAK,EAElCja,MAAO,KACHia,GAAYA,EAAS,KAAK,EAE9B0mC,QAAS,KAEjB,GAAEtlB,KAAKL,EACX,CAGJ,EAEAhJ,OAAQ,WACJ//B,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAKs1C,WACDt1C,KAAK0sB,UACL1sB,KAAK0sB,QAAQ8kC,UACbxxD,KAAK0sB,QAAU,KAEvB,EAEA6oB,aAAc,SAAUv2C,GACpBgB,KAAK0pE,WAAW38D,YAAY,UAAW/N,EAAQkZ,KAC1CsgB,SAAS,eAAel2B,KAAKtD,EAAQkZ,KAAO,IACjDlY,KAAKo1C,gBAAgBroC,YAAY,UAAW/N,EAAQ80C,UAC/Ctb,SAAS,eAAel2B,KAAKtD,EAAQ80C,UAAY,GAC1D,EAEA4B,cAAe,SAAU12C,GACrBgB,KAAKu1C,aAAav2C,GAClBgB,KAAKN,KAAKqgB,IAAI,kBAAkB,EACpC,EAEAgqD,gBAAiB,WACb/pE,KAAKu1C,aAAa,CAACzB,SAAU,aAAiB,gDAClD,EAEAsd,QAAS,SAAU1kC,GACf1sB,KAAK0sB,QAAQ3J,KAAK,cAAU3H,GAC5Bpb,KAAK61C,gBAAgB71C,KAAK0sB,SAC1B1sB,KAAK0sB,QAAQg9B,UAAY,IAC7B,EAEA5T,WAAY,SAAUjrC,GAClB,IAAIkrC,EAAShyC,OAAO0e,SAAS9gB,KACzBw/B,EAAW,GAAEt2B,EAAG4C,QAAQstB,QAAQ,eAAer7B,KAAK,YACxC,SAAZyhC,EACA,kBAAsB,QAAS,CAAC,aAAgB,WAEhDp9B,OAAO0e,SAAS9gB,KAAO,GAAUhG,mBAAqB,iBAAmBwlC,EAAW,YAAc4U,EAAS,oBACnH,IAGJ,kBAAwB,mBAAuB,CAC3ChlB,UAAW,cACXvD,SAAU,GAAU48C,WAEpBn5C,OAAQ,CACJ,oBAAqB,QACrB,6BAA8B,oBAC9B,2BAA4B,mBAC5B,wBAAyB,gBACzB,sBAAuB,WACvB,oBAAqB,SACrB,0BAA2B,kBAC3B,qBAAsB,mBACtB,kBAAmB,eACnB,kBAAmB,wBACnB,2BAA4B,UAC5B,sCAAuC,gBACvC,iCAAkC,WAClC,wBAAyB,aACzB,6BAA8B,aAC9B,mCAAoC,aACpC,oCAAqC,cACrC,uCAAwC,iBACxC,sCAAuC,gBACvC,8BAA+B,eAC/B,0BAA2B,eAC3B,yBAA0B,iBAC1B,oBAAqB,kBACrB,8CAA+C,kCAC/C,mDAAoD,2BAGxDzC,aAAc,WAIV,OAHAxuB,KAAKwwD,gBAAkBxwD,KAAKrC,EAAE,iCAC9BqC,KAAKqqE,cAAgBrqE,KAAKrC,EAAE,+BAC5BqC,KAAKN,KAAK2jB,GAAG,cAAerjB,KAAKsqE,uBAAwBtqE,MAClDA,IACX,EAEAs1C,SAAU,WACNt1C,KAAKN,KAAKqgB,IAAI,OAAQ,GACtB/f,KAAK0sB,QAAU,KACf1sB,KAAKixD,cAAe,EACpBjxD,KAAKuqE,uBAAwB,EAC7BvqE,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAK6pE,iBAAiB,CAAC,GACvB36B,YAAYsG,mBACZx1C,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKwwD,gBAAgBjjD,IAAI,IACzBvN,KAAK0pE,WAAWn8D,IAAI,IACpBvN,KAAKo1C,gBAAgB7nC,IAAI,IACzBvN,KAAKrC,EAAE,kBAAkB2H,IAAI,CAAC,mBAAoB,KAClDtF,KAAKrC,EAAE,kBAAkB2H,IAAI,CAAC,mBAAoB,KAClDtF,KAAKi9B,gBACLj9B,KAAKwqE,gBACLxqE,KAAKyqE,oBACL,IAAIxH,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QAEf36B,KAAKrC,EAAE,8CAA8C28B,SAAS2oC,GAC9DjjE,KAAKrC,EAAE,8DAA8D28B,SAAS2oC,GAC9EjjE,KAAKrC,EAAE,mDAAmD28B,SAAS2oC,GACnEjjE,KAAKrC,EAAE,mEAAmE28B,SAAS2oC,GACnFjjE,KAAKrC,EAAE,gCAAgC28B,SAAS2oC,GAChDjjE,KAAKrC,EAAE,sBAAsB4T,QAAQ,GAAUnc,qBAC/C4K,KAAKrC,EAAE,mBAAmB4T,QAAQ,GAAUjc,sBAAwB,GAAUL,cAAcgN,QAC5FjC,KAAKrC,EAAE,2DAA2D4T,QAAQ,GAAUlc,4BACpF2K,KAAKrC,EAAE,wDAAwD4T,QAAQ,GAAUjc,qBACjF0K,KAAK2pE,eAAiB3pE,KAAK2pE,gBAC3B3pE,KAAKrC,EAAE,uBAAuB4T,OAAO,oBACrCvR,KAAKrC,EAAE,8BAA8B4T,OAAO,oBACZ,UAA5B,sBAAwC,mBACxCvR,KAAKN,KAAKqgB,IAAI,OAAQ,GACW,UAA5B,sBACL/f,KAAKN,KAAKqgB,IAAI,OAAQ,EAC9B,EAEA2qD,gBAAiB,WACb1qE,KAAKN,KAAKqgB,IAAI,OAAQ,EAC1B,EAEAu/B,SAAU,WACFt/C,KAAKN,KAAK8C,IAAI,gBACdxC,KAAK+/B,UAGT//B,KAAKN,KAAKqgB,IAAI,gBAAgB,GAC9B/f,KAAK0pE,WAAWn/D,KAAK,YAAY,GACjCvK,KAAKo1C,gBAAgB7qC,KAAK,YAAY,GACtCvK,KAAKy1C,SACT,EAEA1B,MAAO,WACH/zC,KAAKy1C,QACT,EAEAk1B,cAAe,SAAU9/D,GAClB7K,KAAKwwD,gBAAgBjjD,MACpBvN,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GAGrCvK,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GAErCvK,KAAKwwD,gBAAgBjjD,OAAS1C,GAC9BA,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAK4qE,cACnD,EAEAC,SAAU,SAAUhgE,GAEhB,GADA0pB,aAAav0B,KAAK8qE,qBACb9qE,KAAKrC,EAAE,aAAa4M,KAAK,cAAeM,GAAMA,EAAGW,UAAY,GAAUlZ,UAA5E,CAIA,GAAI0N,KAAK0pE,WAAWn8D,OAASvN,KAAK0pE,WAAWn8D,MAAMgI,SAAS,MAAQ,GAAUlgB,2BAK1E,OAJA2K,KAAK+qE,4BAA4B/qE,KAAKrC,EAAE,iFACxCqC,KAAKqqE,cAAc98D,IAAIvN,KAAK0pE,WAAWn8D,MAAMrO,MAAM,KAAK,IACxDc,KAAK0pE,WAAWn8D,IAAIvN,KAAK0pE,WAAWn8D,MAAMrO,MAAM,KAAK,SACrDc,KAAKqqE,cAAct7D,QAIvB,GADA/O,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GAClCvK,KAAK0pE,WAAWn8D,MAAM,CACrB,IAAIy9D,EAAoB,qEACpBC,EAAgB,6FAChBttB,EAAS39C,KAAKqqE,cAAc98D,OAASvN,KAAKrC,EAAE,iEAAiE2E,OACjH,IAAK0oE,EAAkBl2D,KAAK9U,KAAK0pE,WAAWn8D,OACxC,OAAOvN,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,0CACnD,IAAM+yD,EAAcn2D,KAAK6oC,GAC1B,OAAO39C,KAAK6pE,iBAAiB,CAAClsB,OAAQ,aAAiB,uCAG3D,GADI39C,KAAK6pE,iBAAiB,CAAC,KACtB,GAAUx0E,4BAAgC,GAAUL,qBAAqBoP,QAAQu5C,IAAW,GAC7F,OAAO39C,KAAK6pE,iBAAiB,CAAClsB,OAAQ,aAAiB,qDAC3D39C,KAAK8qE,oBAAsB1gE,YAAW,KAClCuzC,EAAS39C,KAAKqqE,cAAc98D,OAASvN,KAAKrC,EAAE,iEAAiE2E,OAC7GtC,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GACrCvK,KAAKkrE,uBAAyBlrE,KAAK0pE,WAAWn8D,MAC9CvN,KAAKmrE,qBAAuBxtB,EACxBA,GACI39C,KAAKorE,iBAAmBprE,KAAKorE,gBAAgBztB,QAAUA,GACvD39C,KAAKorE,gBAAgBhd,aACpBpuD,KAAKorE,gBAQFprE,KAAKorE,iBAAmBprE,KAAKorE,gBAAgBh6B,YACjDpxC,KAAKorE,gBAAgB9rB,SAAS3D,YAAYgE,eAAe3/C,KAAKqrE,qBAAqB/iE,KAAKtI,KAAKorE,gBAAgB9rB,UACzG,KAAM,KAAM,KAAM,MACtBt/C,KAAKorE,gBAAgB9rB,SAAS3D,YAAY90B,KAAK,GAAI,CAAChjB,KAAM,MAAO+F,GAAI,KAAQ2M,GAAIvW,KAAKorE,gBAAgB9rB,SAAS3B,SAAUxqC,EAAE,QACvH,CAAC8iB,MAAO,GAAQC,GAAG8lB,WAAW7oC,EAAE,YAAYgS,EAAEnlB,KAAKkrE,uBAAuB1mE,QAAQosB,SAXtF5wB,KAAKgqE,gBAAgBrsB,GAASlK,IAC1BzzC,KAAK1M,eAAiBmgD,GAAY,GAAUngD,eAC5C0M,KAAKsrE,kBAAoB,IAAI,GAAQ7qB,kBAAkBzgD,KAAK1M,gBAC5D0M,KAAKorE,gBAAkBprE,KAAKsrE,kBAAkBv+C,WAC9C/sB,KAAKorE,gBAAgB9rB,SAASf,mBAAmBZ,EAAQ39C,KAAKurE,kBAAkBjjE,KAAKtI,MAAK,KAWlGA,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,sCACjD,GACD,IACP,MAEIlY,KAAK6pE,iBAAiB,CAAC,EAlD3B,MAFI7pE,KAAK4qE,cAqDb,EAEAY,cAAe,SAAU3gE,GAClB7K,KAAKo1C,gBAAgB7nC,MACpBvN,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GAGrCvK,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GAErCvK,KAAKo1C,gBAAgB7nC,OAAS1C,GAC9BA,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAK4qE,cACnD,EAEAa,YAAa,WACb,EAEAC,WAAY,SAAU7gE,GACf7K,KAAK0pE,WAAWn8D,OAASvN,KAAKo1C,gBAAgB7nC,MAC7CvN,KAAKrC,EAAE,eAAe4M,KAAK,YAAY,GAGvCvK,KAAKrC,EAAE,eAAe4M,KAAK,YAAY,GAE3CvK,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKrC,EAAE,+CAA+C4T,OAAOvR,KAAK0pE,WAAWn8D,OAASvN,KAAK0pE,WAAWn8D,MAAMgI,SAAS,MAAQ,GAAUjgB,qBACnI0K,KAAK0pE,WAAWn8D,OAASvN,KAAK0pE,WAAWn8D,MAAMgI,SAAS,MAAQ,GAAUjgB,oBAC1E0K,KAAKrC,EAAE,oBAAoBwC,SAAS,2BAEpCH,KAAKrC,EAAE,oBAAoBuC,YAAY,2BAEvC2K,GAAM7K,KAAK0pE,WAAWn8D,OAASvN,KAAKo1C,gBAAgB7nC,OACpD1C,EAAGW,UAAY,GAAUlZ,WAAa0N,KAAK+zC,OACnD,EAEA43B,eAAgB,WACT3rE,KAAK0pE,WAAWn8D,QAAUvN,KAAKqqE,cAAc98D,OAASvN,KAAKrC,EAAE,iEAAiE2E,SAC7HtC,KAAK6qE,UACb,EAEAQ,qBAAsB,SAAUxrB,GAC5B,IAAIr8C,EAAG6uB,EAAO3Y,EAAOkyD,EAAgBhwB,EAAO57C,KAAK27C,YAEjD,GADAtpB,EAAQwtB,EAAON,qBAAqB,SACf,IAAjBltB,EAAMpwB,OAEN,OADA25C,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAU,YAC5C,EAGX,IADA1pB,EAAQA,EAAM,GACT7uB,EAAI,EAAGA,EAAI6uB,EAAMjgB,WAAWnQ,OAAQuB,IACrCkW,EAAQ2Y,EAAMjgB,WAAW5O,GACW,iBAAhCkW,EAAMlH,QAAQwD,cAGyB,aAAhC0D,EAAMlH,QAAQwD,cAIkB,eAAhC0D,EAAMlH,QAAQwD,cAGkB,MAAhC0D,EAAMlH,QAAQwD,gBAGzB4lC,EAAK0D,SAAS7lC,OAAOC,EAAMlH,QAAQwD,eAAiB,GAAQ8pC,QAAQpmC,IALhEkyD,GAAiB,EAJb,GAAQ9rB,QAAQpmC,KAChB1Z,KAAK6rE,sBAAuB,GAJhCjwB,EAAK0D,SAAS7C,aAAe,GAAQqD,QAAQpmC,GAuBrD,OATI1Z,KAAK6rE,qBACDD,EACAhwB,EAAK8D,qBAAqB,GAAQ7D,OAAOK,SAAU,MAEnDN,EAAK8D,qBAAqB,GAAQ7D,OAAOI,WAAY,MAGzDL,EAAK8D,qBAAqB,GAAQ7D,OAAOE,SAAU,kBAEhD,CACX,EAEAwvB,kBAAmB,SAAUhlD,EAAQnV,GAC7BmV,IAAW,GAAQs1B,OAAOG,UAAYz1B,IAAW,GAAQs1B,OAAOE,YAC3D/7C,KAAKrC,EAAE,qDAAuDqC,KAAKorE,gBAAgB9rB,SAAS3B,OAAS,MAAM17C,QAAU,GAAU5M,4BAChI,GAAE,SAAU,CAACy2E,MAAO,kDACfxpE,KAAKtC,KAAKorE,gBAAgB9rB,SAAS3B,QACnCn+C,KAAK,aAAcQ,KAAKorE,gBAAgB9rB,SAAS3B,QACjD5pB,aAAa/zB,KAAKrC,EAAE,4DAE7BqC,KAAKrC,EAAE,gDAAgDwC,SAAS,UAChEH,KAAKrC,EAAE,uBAAuB4P,IAAI,IAClCvN,KAAKrC,EAAE,8DAA8D2E,KAAKtC,KAAKorE,gBAAgB9rB,SAAS3B,QACnGz9C,YAAY,UAAUV,KAAK,aAAcQ,KAAKorE,gBAAgB9rB,SAAS3B,SAE5Ep3B,IAAW,GAAQs1B,OAAOG,SACtBh8C,KAAKorE,iBAAmBprE,KAAKorE,gBAAgBh6B,YAC7CpxC,KAAKorE,gBAAgB9rB,SAAS3D,YAAYgE,eAAe3/C,KAAKqrE,qBAAqB/iE,KAAKtI,KAAKorE,gBAAgB9rB,UACzG,KAAM,KAAM,KAAM,MACtBt/C,KAAKorE,gBAAgB9rB,SAAS3D,YAAY90B,KAAK,GAAI,CAAChjB,KAAM,MAAO+F,GAAI,KAAQ2M,GAAIvW,KAAKorE,gBAAgB9rB,SAAS3B,SAAUxqC,EAAE,QACvH,CAAC8iB,MAAO,GAAQC,GAAG8lB,WAAW7oC,EAAE,YAAYgS,EAAEnlB,KAAKkrE,uBAAuB1mE,QAAQosB,SAEnFrK,IAAW,GAAQs1B,OAAOI,YACjCj8C,KAAK6pE,iBAAiB,CAACkC,cAAc,EAAM7zD,IAAK,aAAiB,4CACjElY,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,IAC9Bgc,IAAW,GAAQs1B,OAAOK,UACjCl8C,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,2CAC7ClY,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,IAC9Bgc,IAAW,GAAQs1B,OAAOwD,UACjCr/C,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,qBAAuB,KAAO9G,IAC3EpR,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,IAC9Bgc,IAAW,GAAQs1B,OAAOE,UACf,kBAAd3qC,GACApR,KAAK6pE,iBAAiB,CAAC,GACvB7pE,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,KAGrCvK,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,gDAC7ClY,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,IAEzCvK,KAAKorE,gBAAgBhd,cACd7nC,IAAW,GAAQs1B,OAAOmV,YACjCz8B,aAAav0B,KAAKgsE,gCACdhsE,KAAKgsE,+BAAiC5hE,YAAW,KAC1CpK,KAAKorE,kBAAoBprE,KAAKorE,gBAAgBh6B,YAC7CpxC,KAAKorE,gBAAgBa,cAAe,EACpCjsE,KAAKorE,gBAAgBhd,aACzB,GACD,MACA7nC,IAAW,GAAQs1B,OAAOuT,eAC7BpvD,KAAKorE,iBAAmBprE,KAAKorE,gBAAgBa,eAC7CjsE,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,uCAC7ClY,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,IAEzCvK,KAAKsrE,uBAAoBlwD,EACzBpb,KAAKorE,qBAAkBhwD,EAE/B,EAEA8wD,iBAAkB,WACd,IAAIC,EAAOnsE,KAAKN,KAAK8C,IAAI,QACN,iBAAT2pE,IACNA,IACAnsE,KAAKN,KAAKqgB,IAAI,OAAQosD,GAE9B,EAEAvB,aAAc,WACV,IAAIuB,EAAOnsE,KAAKN,KAAK8C,IAAI,QACN,iBAAT2pE,IACNA,IACAnsE,KAAKN,KAAKqgB,IAAI,OAAQosD,GAE9B,EAEA7B,uBAAwB,WACpB,IAAI6B,EAAOnsE,KAAKN,KAAK8C,IAAI,QAczB,IAbc,IAAV2pE,IACAnsE,KAAKrC,EAAE,sCAAsCwC,SAAS,UAAUA,SAAS,WACzEH,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAKrC,EAAE,mBAAmBuC,YAAY,kBACtCF,KAAKrC,EAAE,wBAAwBwC,SAAS,cAAcD,YAAY,8BAClEF,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,2BACnDtC,KAAKrC,EAAE,0DAA0D2E,KAAK,aAAiB,mCAAoC,CAACtC,KAAK0sB,QAAQixB,UACzI39C,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,+BAA+B4T,QAAO,GAC7CvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKosE,wBAEI,IAATD,EACAnsE,KAAK0pE,WAAa1pE,KAAKrC,EAAE,mBACzBqC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,wBAC9BqC,KAAKqqE,cAAgBrqE,KAAKrC,EAAE,8BAC5BqC,KAAKqqE,cAAc98D,IAAI,IACvBvN,KAAK0pE,WAAWn8D,IAAI,IACpBvN,KAAKo1C,gBAAgB7nC,IAAI,IACzBvN,KAAK0rE,aACL1rE,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAKkxD,mBACLlxD,KAAKrC,EAAE,mDAAmDuC,YAAY,qCACtEF,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,+BACnDtC,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,kBAAkB4T,QAAO,GAChCvR,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,+BAA+B4T,QAAO,GAC7CvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAK0pE,WAAW36D,aAEf,GAAa,IAATo9D,EACLnsE,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,kBAAkB4T,QAAO,GAChCvR,KAAKrC,EAAE,oBAAoB4T,QAAO,QAEjC,GAAa,IAAT46D,EACLnsE,KAAK0pE,WAAa1pE,KAAKrC,EAAE,4BACzBqC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,iCAC9BqC,KAAKqqE,cAAgBrqE,KAAKrC,EAAE,+BAC5BqC,KAAK2qE,gBACL3qE,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,kCACnDtC,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,kBAAkB4T,QAAO,GAChCvR,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,0BAA0B4T,QAAO,GACxCvR,KAAKwwD,gBAAgBzhD,aAEpB,GAAa,IAATo9D,EAAW,CAChB,IAAInsE,KAAKwwD,gBAAgBjjD,MAYrB,OADAvN,KAAK6pE,iBAAiB,CAACllB,SAAU,aAAiB,+CAC3C3kD,KAAKN,KAAKqgB,IAAI,OAAQ,GAX7B/f,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,kBACnDtC,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,0BAA0B4T,QAAO,GACxCvR,KAAK6qE,WACL7qE,KAAK0pE,WAAW36D,QAChB/O,KAAKo1C,gBAAgB7nC,IAAI,GAOjC,MACK,GAAa,IAAT4+D,EAAW,CAChB,IAAInsE,KAAK0pE,WAAWn8D,MAWhB,OADAvN,KAAK6pE,iBAAiB,CAAC3xD,IAAK,aAAiB,8CACtClY,KAAKN,KAAKqgB,IAAI,OAAQ,GAV7B/f,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,cACnDtC,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,0BAA0B4T,QAAO,GACxCvR,KAAKwrE,gBACLxrE,KAAKo1C,gBAAgBrmC,OAO7B,MACK,GAAa,IAATo9D,EAAW,CAChB,IAAInsE,KAAKo1C,gBAAgB7nC,MAKrB,OADAvN,KAAK6pE,iBAAiB,CAAC/1B,SAAU,aAAiB,oDAC3C9zC,KAAKN,KAAKqgB,IAAI,OAAQ,GAJ7B/f,KAAKs/C,UAMb,MACkB,IAAT6sB,GACLnsE,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,2CACnDtC,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,0BAA0B4T,QAAO,GACxCvR,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,IAEhC4hE,GAAQ,IACVnsE,KAAKsrC,QACJtrC,KAAK0sB,QAAQs/B,UAAUhsD,KAAKsrC,QAAQ,SACjC,KACC,GAAMv/B,QAAQgC,MAAM,aAAiB,sCAAsC,IAEnF/N,KAAKqsE,8BAEb,EAEAC,sBAAuB,WACnBtsE,KAAKqsE,6BACT,EAEAE,kBAAmB,WACfvsE,KAAK0sB,QAAQE,QAAQ7M,IAAI,UAAU,GACnC/f,KAAK0sB,QAAQunC,aACbj0D,KAAKwsE,kBACT,EAEAA,iBAAkB,WACdxsE,KAAKN,KAAKqgB,IAAI,OAAQ,EAC1B,EAEA0sD,cAAe,WACXzsE,KAAKN,KAAKqgB,IAAI,OAAQ,EAC1B,EAEAkd,cAAe,WACX,IAAI0Y,EAAiB31C,KAAKN,KAAK8C,IAAI,kBACnCxC,KAAKrC,EAAE,eAAe4M,KAAK,WAAYorC,EAC3C,EAEA60B,cAAe,WACX,IAAIkC,EAAc,GAAU13E,qBAC5B,GAAI,oBAA0B03E,EAAYzqE,OACtC,IAAK,IAAIuB,EAAIkpE,EAAYzqE,OAAS,EAAGuB,GAAK,EAAGA,IACpCpF,KAAKsuE,EAAYlpE,IAAIuS,OAAO,EAAG,IAAIR,SAAS,0BAA8B,EAAG,MAC9Em3D,EAAYzyB,OAAOz2C,EAAG,GAIlCxD,KAAKrC,EAAE,kDAAkDuT,SACrDw7D,EAAYzqE,OACZjC,KAAKrC,EAAE,4DAA4D2E,KAAKoqE,EAAY,IAEpF1sE,KAAK+qE,4BAA4B/qE,KAAKrC,EAAE,iFAC5CqC,KAAKrC,EAAE,oEAAoEuT,SAE3E,IAAK,IAAI1N,EAAI,EAAGA,EAAIkpE,EAAYzqE,OAAQuB,IACpC,GAAE,SAAU,CAACsoE,MAAO,kDACfxpE,KAAKoqE,EAAYlpE,IACjBhE,KAAK,aAAcktE,EAAYlpE,IAC/BuwB,aAAa/zB,KAAKrC,EAAE,2DAEjC,EAEA8sE,kBAAmB,WACf,IAAIiC,EAAc,GAAUz3E,cAE5B+K,KAAKrC,EAAE,+CAA+CuT,SAClDw7D,EAAYzqE,OACZjC,KAAKrC,EAAE,yDAAyD2E,KAAKoqE,EAAY,IAEjF1sE,KAAK2sE,oBAAoB3sE,KAAKrC,EAAE,8EACpCqC,KAAKrC,EAAE,iEAAiEuT,SAExE,IAAK,IAAI1N,EAAI,EAAGA,EAAIkpE,EAAYzqE,OAAQuB,IACpC,GAAE,SAAU,CAACsoE,MAAO,kDACfxpE,KAAKoqE,EAAYlpE,IACjBhE,KAAK,aAAcktE,EAAYlpE,IAC/BuwB,aAAa/zB,KAAKrC,EAAE,wDAEjC,EAEAotE,4BAA6B,SAAU6B,GACnC5sE,KAAKrC,EAAE,uBAAuB4P,IAAI,IAClCq/D,EAAgBzsE,SAAS,UAAUmC,KAAK,IACxCtC,KAAKrC,EAAE,8BAA8BwC,SAAS,UAC9CH,KAAKrC,EAAE,gDAAgDuC,YAAY,SACvE,EAEAysE,oBAAqB,SAAUC,GAC3B5sE,KAAKrC,EAAE,mBAAmB4P,IAAI,IAC9Bq/D,EAAgBzsE,SAAS,UAAUmC,KAAK,IACxCtC,KAAKrC,EAAE,mCAAmCwC,SAAS,UACnDH,KAAKrC,EAAE,qDAAqDuC,YAAY,SAC5E,EAEA2sE,gCAAiC,SAAUhiE,GACvC,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,mBAAmBl7B,KAAK,mBACjEitE,EAAe9/D,SAAS,qBACxBhN,KAAK+qE,4BAA4B6B,IAG5BE,EAAe9/D,SAAS,wBAC7BhN,KAAKrC,EAAE,gDAAgDwC,SAAS,UAChEH,KAAKrC,EAAE,uBAAuB4P,IAAI,KAEtCq/D,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgB1sE,YAAY,UAAUV,KAAK,aAAcstE,EAAettE,KAAK,eAC7EQ,KAAKrC,EAAE,8BAA8BuC,YAAY,UAC9CF,KAAK0pE,WAAWn8D,QAAUvN,KAAKqqE,cAAc98D,OAASvN,KAAKrC,EAAE,iEAAiE2E,SAC7HtC,KAAK6qE,WACb,EAEAkC,wBAAyB,SAAUliE,GAC/B,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,mBAAmBl7B,KAAK,mBACjEitE,EAAe9/D,SAAS,qBACxBhN,KAAK2sE,oBAAoBC,IAGpBE,EAAe9/D,SAAS,wBAC7BhN,KAAKrC,EAAE,qDAAqDwC,SAAS,UACrEH,KAAKrC,EAAE,mBAAmB4P,IAAI,KAElCq/D,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgB1sE,YAAY,UAAUV,KAAK,aAAcstE,EAAettE,KAAK,eAC7EQ,KAAKrC,EAAE,mCAAmCuC,YAAY,UAC1D,EAEA6hE,aAAc,WACV/hE,KAAKrC,EAAE,wBAAwB8N,OACnC,EAEAu2D,eAAgB,YACW,IAAI,0BACV/3D,KAAK,CAAC6pB,MAAO9zB,KAAK0sB,QAAS46C,cAAc,EAAMC,kBAAmBvnE,MACvF,EAEAiiE,gBAAiB,YACW,IAAI,2BACVh4D,KAAK,CAAC6pB,MAAO9zB,KAAK0sB,QAAS46C,cAAc,EAAMC,kBAAmBvnE,MACxF,EAEAkiE,aAAc,SAAUr3D,GACpB,IAAI6O,EAAQ7O,EAAG4C,OACf,IAAKiM,EAAM8uB,MAAMvmC,OACb,OACJ,IAAIgF,EAAOyS,EAAM8uB,MAAM,GACvB9uB,EAAM3O,MAAQ,GACV9D,EAAKrC,KAAO,GAAUhO,qBACtB,GAAMmV,QAAQgC,MAAM,aAAiB,4CAE7B9G,EAAKpD,KAAK+jB,WAAW,SAKjC,GAAMlH,OAAO1Z,kBAAkBC,GAAMshB,MAAMvtB,IACnCA,IACAiM,EAAK2B,OAAS5N,EACdgF,KAAKsrC,OAASrkC,EACdjH,KAAKrC,EAAE,aAAa4M,KAAK,YAAY,GACrCvK,KAAKrC,EAAE,kBAAkBwC,SAAS,WAClCH,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK0oE,4BACnD,IAXA,GAAM38D,QAAQgC,MAAM,aAAiB,sCAa7C,EAEA8nC,gBAAiB,WACb71C,KAAKN,KAAKqgB,IAAI,QAAS,EAC3B,EAEAqsD,qBAAsB,WAClBpsE,KAAKrC,EAAE,0BAA0B2E,KAAK,IACtC,IAAI0qE,EAAgB,IACpB5iE,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGC,MAC5Cn2B,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,SAASh2B,SAAS,kBACnEH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,cAAc5kB,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGhHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,cAAc5kB,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACpHF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,4BAA4Bj2B,YAAY,UAAUA,YAAY,WAC/GkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGqsB,kBAC5CviD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,qBAAqBpiD,SAAS,kBAC/EH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,0BAA0BhxC,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAG5HH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,0BAA0BhxC,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BAChIF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,wCAAwCriD,YAAY,UAAUA,YAAY,WAC3HkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,UAC5CpzD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,aAAajzD,SAAS,kBACvEH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,kBAAkB7hD,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGpHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,kBAAkB7hD,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACxHF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,gCAAgClzD,YAAY,UAAUA,YAAY,WACnHkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGmsB,eAC5CriD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,kBAAkBliD,SAAS,kBAC5EH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,uBAAuB9wC,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGrHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,uBAAuB9wC,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACjIF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,qCAAqCniD,YAAY,UAAUA,YAAY,WACxHkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGm2B,SAC5CrsD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,YAAYlsD,SAAS,kBACtEH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,iBAAiB96C,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGnHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,iBAAiB96C,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACvHF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,+BAA+BnsD,YAAY,UAAUA,YAAY,WAClHkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,cAC5CjtE,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,iBAAiB9sE,SAAS,kBAC3EH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,sBAAsB17D,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGxHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,sBAAsB17D,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BAC5HF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,oCAAoC/sE,YAAY,UAAUA,YAAY,WACvHkK,YAAW,KACH,GAAUjV,oBAA0E,GAAnD6K,KAAKrC,EAAE,kCAAkCsE,SAC1EjC,KAAKrC,EAAE,0BAA0B2E,KAAK,aAAiB,0BAA2B,CAAC,GAAUnN,sBAC7F6K,KAAKrC,EAAE,mDAAmDwC,SAAS,qCACnEH,KAAKrC,EAAE,wBAAwB4T,QAAO,IAEa,GAAnDvR,KAAKrC,EAAE,kCAAkCsE,QACzCjC,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,0BACnDtC,KAAKrC,EAAE,sBAAsBwC,SAAS,YAAYD,YAAY,qBAG9DF,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,kBACnDtC,KAAKrC,EAAE,sBAAsBuC,YAAY,YAAYC,SAAS,oBAElEH,KAAKrC,EAAE,sBAAsB4T,QAAO,EAAM,GAC3Cy7D,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EACP,EAEA5b,QAAS,SAAU1kC,GACf1sB,KAAK0sB,QAAQ3J,KAAK,cAAU3H,GAC5Bpb,KAAKN,KAAKqgB,IAAI,gBAAgB,GAC9B/f,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC,kBAAsB,YAAa,CAACoZ,MAAO,OAC3Cn5B,KAAK0sB,QAAQkoC,eACb50D,KAAK0sB,QAAQnhB,QAAQ,uBACrBvL,KAAK0sB,QAAQg9B,UAAY,IAC7B,EAEAnU,aAAc,SAAUv2C,GACpBgB,KAAK0pE,WAAW38D,YAAY,UAAW/N,EAAQkZ,KAC/ClY,KAAKrC,EAAE,oCAAoC2E,KAAKtD,EAAQkZ,KAAO,IAAI5G,OAAOtS,EAAQkZ,KAClFlY,KAAKo1C,gBAAgBroC,YAAY,UAAW/N,EAAQ80C,UACpD9zC,KAAKrC,EAAE,yCAAyC2E,KAAKtD,EAAQ80C,UAAY,IAAIxiC,OAAOtS,EAAQ80C,UAC5F9zC,KAAKrC,EAAE,mDAAmD4T,OAAOvS,EAAQ80C,UAAY90C,EAAQkZ,IACjG,EAEAg5C,iBAAkB,WACdlxD,KAAKrC,EAAE,kCAAkCwC,SAAS,UAAUA,SAAS,WACrEH,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKrC,EAAE,eAAeuC,YAAY,kBAClCF,KAAKrC,EAAE,oBAAoBwC,SAAS,oBAAoBD,YAAY,6BACxE,EAEA6pE,gBAAiB,WACb/pE,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKrC,EAAE,eAAe4T,QAAO,EACjC,EAEA4/C,iBAAkB,WACdnxD,KAAKrC,EAAE,+BAA+B4T,QAAO,GAC7C,IAAIy7D,EAAgB,IACpB5iE,YAAW,KACPpK,KAAKrC,EAAE,+BAA+BwC,SAAS,kBAC/CH,KAAKrC,EAAE,kDAAkDuC,YAAY,UAAUA,YAAY,WAC3FF,KAAKrC,EAAE,oCAAoC4T,QAAO,GAAOrR,YAAY,oBAAoBC,SAAS,8BAClGH,KAAKrC,EAAE,gCAAgC4T,QAAO,GAC9CnH,YAAW,KACPpK,KAAKrC,EAAE,gCAAgCwC,SAAS,kBAChDH,KAAKrC,EAAE,mDAAmDuC,YAAY,UAAUA,YAAY,WAC5FF,KAAKrC,EAAE,qCAAqC4T,QAAO,GAAOrR,YAAY,oBAAoBC,SAAS,8BACnGiK,YAAW,KACH,GAAUlV,gBAAgBkP,QAAQpE,KAAK0sB,QAAQK,WAAW4wB,SAAW,EACrE39C,KAAKoxD,WAELpxD,KAAKuqE,uBAAwB,EACzBvqE,KAAKktE,yBACLltE,KAAK61C,kBACb,GACFm3B,EAAa,GACjBA,EAAa,GACjBA,EACN,EAEAzb,iBAAkB,SAAU4b,EAAYnuE,GAEpCgB,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKrC,EAAE,+BAA+B4T,QAAO,GAC7CnH,YAAW,KACP,IAAI+iE,EAUA,OAHAntE,KAAKrC,EAAE,kDAAkDuC,YAAY,UAAUA,YAAY,WAC3FF,KAAKrC,EAAE,oCAAoC4T,QAAO,QAClDvR,KAAK01C,cAAc12C,GARnBgB,KAAKrC,EAAE,+BAA+BwC,SAAS,kBAC/CH,KAAKrC,EAAE,kDAAkDuC,YAAY,UAAUA,YAAY,WAC3FF,KAAKrC,EAAE,oCAAoC4T,QAAO,GAAOrR,YAAY,oBAAoBC,SAAS,8BAClGH,KAAKrC,EAAE,gCAAgC4T,QAAO,GAQlDnH,YAAW,KACPpK,KAAKrC,EAAE,mDAAmDuC,YAAY,UAAUA,YAAY,WAC5FF,KAAKrC,EAAE,qCAAqC4T,QAAO,GACnDvR,KAAK01C,cAAc12C,EAAQ,GAnBf,IAoBD,GApBC,IAsBxB,EAEA6qE,iBAAkB,SAAU7qE,GACrBA,EAAQ+sE,cACP/rE,KAAKrC,EAAE,gDAAgDwC,SAAS,aAAamC,KAAKtD,EAAQkZ,KAAO,IAAI5G,OAAOtS,EAAQkZ,KACpHlY,KAAK0pE,WAAWxpE,YAAY,WAC5BF,KAAKrC,EAAE,sDAAsD4T,OAAOvS,EAAQkZ,MAExElZ,EAAQ8qE,sBACZ9pE,KAAKrC,EAAE,qDAAqDwC,SAAS,aAAamC,KAAKtD,EAAQ80C,UAAY,IAAIxiC,OAAOtS,EAAQ80C,UAC9H9zC,KAAKo1C,gBAAgBl1C,YAAY,WACjCF,KAAKrC,EAAE,2DAA2D4T,OAAOvS,EAAQ80C,YAGjF9zC,KAAKwwD,gBAAgBzjD,YAAY,UAAW/N,EAAQ2lD,UACpD3kD,KAAKrC,EAAE,oDAAoD2E,KAAKtD,EAAQ2lD,UAAY,IAAIrzC,OAAOtS,EAAQ2lD,UACvG3kD,KAAKrC,EAAE,2DAA2D4T,OAAOvS,EAAQ2lD,UACjF3kD,KAAK0pE,WAAW38D,YAAY,UAAW/N,EAAQkZ,KAC/ClY,KAAKqqE,cAAct9D,YAAY,UAAW/N,EAAQ2+C,QAClD39C,KAAKrC,EAAE,gDAAgDuC,YAAY,aAAaoC,KAAKtD,EAAQkZ,KAAOlZ,EAAQ2+C,QAAU,IAAIrsC,OAAOtS,EAAQkZ,KAAOlZ,EAAQ2+C,QACxJ39C,KAAKrC,EAAE,sDAAsD4T,OAAOvS,EAAQkZ,KAAOlZ,EAAQ2+C,QAC3F39C,KAAKo1C,gBAAgBroC,YAAY,UAAW/N,EAAQ80C,UACpD9zC,KAAKrC,EAAE,qDAAqDuC,YAAY,aAAaoC,KAAKtD,EAAQ80C,UAAY,IAAIxiC,OAAOtS,EAAQ80C,UACjI9zC,KAAKrC,EAAE,2DAA2D4T,OAAOvS,EAAQ80C,UAEzF,EAEA2c,0BAA2B,SAAUzxD,GACjCgB,KAAK6pE,iBAAiB7qE,GACtBgB,KAAKN,KAAKqgB,IAAI,gBAAgB,GAC9B/f,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC/f,KAAK0pE,WAAWn/D,KAAK,YAAY,GACjCvK,KAAKo1C,gBAAgB7qC,KAAK,YAAY,GACnCvK,KAAK0sB,SACJ1sB,KAAK0sB,QAAQ8kC,SACrB,EAEA6a,4BAA6B,WACzBrsE,KAAK0pE,WAAWn/D,KAAK,YAAY,GACjCvK,KAAKo1C,gBAAgB7qC,KAAK,YAAY,GACtCvK,KAAK0sB,QAAQnhB,QAAQ,QACzB,IAIJ,kBAAwB,yBAA6B,CACjDwlB,UAAW,qCACXvD,SAAU,GAAU4/C,YAEpBn8C,OAAQ,CACJ,oBAAqB,kBACrB,oBAAqB,QACrB,oBAAqB,SACrB,0BAA2B,QAC3B,2BAA4B,UAC5B,wBAAyB,aACzB,6BAA8B,aAC9B,mCAAoC,aACpC,0BAA2B,2BAG/BjC,OAAQ,SAAUhwB,GACdgB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAOv9B,KAAKs1C,SAAShtC,KAAKtI,MAC1BmL,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEAs1C,SAAU,WACNt1C,KAAKN,KAAKqgB,IAAI,OAAQ,GACtB/f,KAAK0sB,QAAU,KACf1sB,KAAKixD,cAAe,EACpBjxD,KAAKuqE,uBAAwB,EAC7BvqE,KAAKu1C,aAAa,CAAC,GACnBv1C,KAAK0pE,WAAa1pE,KAAKrC,EAAE,mBACzBqC,KAAKo1C,gBAAkBp1C,KAAKrC,EAAE,wBAC9BqC,KAAKqqE,cAAgBrqE,KAAKrC,EAAE,8BAC5BqC,KAAK0pE,WAAWn8D,IAAI,IACpBvN,KAAKo1C,gBAAgB7nC,IAAI,IACzBvN,KAAK0rE,aACL1rE,KAAKyqE,oBACLzqE,KAAKrC,EAAE,oBAAoB4T,QAAO,GAClCvR,KAAKkxD,mBACLlxD,KAAKrC,EAAE,mDAAmDuC,YAAY,qCACtEF,KAAKrC,EAAE,iBAAiB2E,KAAK,aAAiB,gBAC9CtC,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,+BAA+B4T,QAAO,GAC7CvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpC,IAAI0xD,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QAEf36B,KAAKrC,EAAE,mDAAmD28B,SAAS2oC,GACnEjjE,KAAKrC,EAAE,mEAAmE28B,SAAS2oC,GACnFjjE,KAAKrC,EAAE,wDAAwD4T,QAAQ,GAAUjc,qBACjF45C,YAAYsG,mBACZx1C,KAAKi9B,gBACLj9B,KAAK2pE,eAAiB3pE,KAAK2pE,eAC/B,EAEAW,uBAAwB,YAEN,IADHtqE,KAAKN,KAAK8C,IAAI,UAErBxC,KAAKrC,EAAE,sCAAsCwC,SAAS,UAAUA,SAAS,WACzEH,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAKrC,EAAE,mBAAmBuC,YAAY,kBACtCF,KAAKrC,EAAE,wBAAwBwC,SAAS,cAAcD,YAAY,8BAClEF,KAAKrC,EAAE,iBAAiB2E,KAAK,aAAiB,2BAC9CtC,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,+BAA+B4T,QAAO,GAC7CvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKosE,uBAEb,EAEAp3B,OAAQ,WACJh1C,KAAK0sB,QAAQE,QAAQ7M,IAAI,UAAU,GACnC/f,KAAK0sB,QAAQunC,aACbj0D,KAAK4L,YACT,EAEAwlD,QAAS,WACLpxD,KAAK0sB,QAAQ3J,KAAK,cAAU3H,GAC5Bpb,KAAKN,KAAKqgB,IAAI,kBAAkB,GAChC,kBAAsB,YAAa,CAACoZ,MAAO,OAC3Cn5B,KAAK0sB,QAAQkoC,eACb50D,KAAK0sB,QAAQnhB,QAAQ,uBACrBvL,KAAK0sB,QAAQg9B,UAAY,KACzB1pD,KAAK4L,YACT,EAEAwgE,qBAAsB,WAClBpsE,KAAKrC,EAAE,0BAA0B2E,KAAK,IACtC,IAAI0qE,EAAgB,IACpB5iE,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGC,MAC5Cn2B,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,SAASh2B,SAAS,kBACnEH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,cAAc5kB,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGhHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,cAAc5kB,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACpHF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGC,4BAA4Bj2B,YAAY,UAAUA,YAAY,WAC/GkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGqsB,kBAC5CviD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,qBAAqBpiD,SAAS,kBAC/EH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,0BAA0BhxC,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAG5HH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,0BAA0BhxC,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BAChIF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGqsB,wCAAwCriD,YAAY,UAAUA,YAAY,WAC3HkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,UAC5CpzD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,aAAajzD,SAAS,kBACvEH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,kBAAkB7hD,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGpHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,kBAAkB7hD,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACxHF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGk9B,gCAAgClzD,YAAY,UAAUA,YAAY,WACnHkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGmsB,eAC5CriD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,kBAAkBliD,SAAS,kBAC5EH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,uBAAuB9wC,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGzHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,uBAAuB9wC,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BAC7HF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGmsB,qCAAqCniD,YAAY,UAAUA,YAAY,WACxHkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGm2B,SAC5CrsD,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,YAAYlsD,SAAS,kBACtEH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,iBAAiB96C,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGnHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,iBAAiB96C,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BACvHF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAGm2B,+BAA+BnsD,YAAY,UAAUA,YAAY,WAClHkK,YAAW,KACHpK,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,cAC5CjtE,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,iBAAiB9sE,SAAS,kBAC3EH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,sBAAsB17D,QAAO,GAAOrR,YAAY,cAAcC,SAAS,+BAGxHH,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,sBAAsB17D,QAAO,GAAOpR,SAAS,cAAcD,YAAY,8BAC5HF,KAAKrC,EAAE,+BAA+B,GAAQu4B,GAAG+2C,oCAAoC/sE,YAAY,UAAUA,YAAY,WACvHkK,YAAW,KACH,GAAUjV,oBAA0E,GAAnD6K,KAAKrC,EAAE,kCAAkCsE,QAC1EjC,KAAKrC,EAAE,0BAA0B2E,KAAK,aAAiB,0BAA2B,CAAC,GAAUnN,sBAE1C,GAAnD6K,KAAKrC,EAAE,kCAAkCsE,OACzCjC,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,0BAEnDtC,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,kBACvDtC,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,eAAe4T,QAAO,EAAM,GACpCy7D,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EAAc,GAClBA,EACP,EAEAj+C,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACHlL,KAAK+/B,SACL//B,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,QAAY,SAAS,WACjBA,KAAKqtE,iBAAmB,uBAA2B,aAAcrtE,KAAKstE,gBACtEttE,KAAKutE,iBAAmB,uBAA2B,mBAC/CvtE,KAAKwvC,SAAU,CAAC5hB,UAAW,0CAC/B5tB,KAAKwtE,kBAAoB,6BAAiC,OACtDxtE,KAAKytE,UAAW,CAAC7/C,UAAW,oCAChC5tB,KAAK0tE,mBAAqB,6BAAiC,QACvD1tE,KAAKytE,UAAW,CAAC7/C,UAAW,qCAEhC5tB,KAAKonB,SAAW,IAAIpnB,KAAK2tE,SAAS,KAAM,CACpCtrD,aAAcriB,KAAKsiB,iBAAmB,cAE1CtiB,KAAKonB,SAAS7E,QAEdviB,KAAKyvC,aAAavgB,SAAS,WAAYlvB,KAAK4tE,yBACxC,CAAC95C,MAAO9zB,KAAKonB,SAAUtY,GAAI9O,KAAKyvC,aAAa9xC,EAAE,aAAa,KAChEqC,KAAKkwC,cAAchhB,SAAS,WAAYlvB,KAAK6tE,0BACzC,CAAC/5C,MAAO9zB,KAAKonB,SAAUtY,GAAI9O,KAAKkwC,cAAcvyC,EAAE,kBAAkB,KAGtEqC,KAAKqjB,GAAG,eAAe,WACdrjB,KAAK8tE,mBACN9tE,KAAK8tE,iBAAmB,IAAI9tE,KAAK+tE,gBACrC/tE,KAAK8tE,iBAAiBp/C,MAC1B,GAAG1uB,MAEH,GAAE+D,QAAQuE,KAAK,gBAAe,WAC1B,sBAA4B,6BAEhC,IAEAvE,OAAOiqE,eAAiB,KACpB,GAAEluE,KAAKE,KAAKonB,SAASgqB,WAAW,SAAU1kB,GACtCA,EAAQkoC,aAAa,UACzB,GAAE,EAGN50D,KAAKuvC,WAAW1e,UAAY,SAAUD,EAAM5xB,GAExC,MAAwB,UADLA,EAAQivE,cAAgB,GAAUhyE,sBACpB,CAAEmuE,WAAY,MAAS,CAAEl0B,aAAc,KAC5E,CACJ,GAAG,IAEH,Y,gBC1sKA,IAAI,GAAM,OACN,GAAI,GAAIv4C,EAER,IADI,GAAIC,EACC,GAAIC,QACb,GAAU,GAAIa,QACR,GAAIs3B,IAEd,iBAAuB7U,SAASC,MAAMpX,OAAO,CACzCqmC,YAAa,cAGjB,eAAqB,oBAAwB,CACzCtf,UAAW,iBACXvD,SAAU,WACNxtB,KAAKD,IAAI8M,OAAO,wCACPA,OAAO,0BACpB,EAEA0hB,YAAa,WACTvuB,KAAKgvB,SACLhvB,KAAKD,IAAIsJ,SAASrJ,KAAK8zB,MAAM+1B,WAAWn9B,QAAQikC,eAAehzD,EAAE,kBACjEqC,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKgvB,OAAQhvB,MACrCA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKkR,OAAQlR,KAC1C,EAEAgvB,OAAQ,WACJ,IAAIjwB,EAAOiB,KAAK8zB,MAAMtxB,IAAI,gBACtB0rE,EAAWluE,KAAK8zB,MAAMtxB,IAAI,YAC9BxC,KAAKrC,EAAE,iBAAiB2E,KAAKvD,GAC7BiB,KAAKrC,EAAE,aAAa2E,KAAK4rE,EAAW,aAAiB,mDAAqD,aAAiB,qDAC/H,IAGJ,kBAAwB/sD,SAASm6C,WAAWtxD,OAAO,CAC/C8pB,MAAO,iBAEPnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK0sB,QAAQrJ,GAAG,kBAAmBrjB,KAAKgvB,OAAQhvB,MAChDA,KAAK+sB,WAAa/sB,KAAK0sB,QAAQK,WAC/B/sB,KAAK+sB,WAAWqvB,MAAM+xB,YAClB,SACA,MACA,OAAW,eACX,MAEJnuE,KAAKq8C,WAAW,GAAQnmB,GAAGk4C,KAAM,2BACjCpuE,KAAKq8C,WAAW,GAAQnmB,GAAGwwB,MAAO,wBAClC1mD,KAAKq8C,WAAW,GAAQnmB,GAAGK,IAAK,mCAChCv2B,KAAK+sB,WAAWqvB,MAAMC,WAAW,GAAQnmB,GAAGm4C,YAC5CruE,KAAKq8C,WAAW,GAAQnmB,GAAGo4C,SAAU,8BACrCtuE,KAAKq8C,WAAW,GAAQnmB,GAAGq4C,KAAM,uBACjCvuE,KAAK+sB,WAAWqvB,MAAMC,WAAW,GAAQnmB,GAAG6lC,UAAW,uBACvD/7D,KAAKq8C,WAAW,GAAQnmB,GAAGg+B,QAAS,6BACpCl0D,KAAKq8C,WAAW,GAAQnmB,GAAGC,IAAK,wCAChCn2B,KAAK+sB,WAAWqvB,MAAMC,WAAW,GAAQnmB,GAAGs4C,cAC5CxuE,KAAK+sB,WAAWqvB,MAAMC,WAAW,GAAQnmB,GAAGo2B,uBAAyB,WACrEtsD,KAAKq8C,WAAW,GAAQnmB,GAAG+2C,YAAa,8BACxCjtE,KAAKq8C,WAAW,GAAQnmB,GAAGqsB,gBAAiB,oCAC5CviD,KAAKq8C,WAAW,GAAQnmB,GAAGmsB,aAAc,2CACzCriD,KAAKq8C,WAAW,GAAQnmB,GAAGu4C,OAAQ,2BACnCzuE,KAAKq8C,WAAW,GAAQnmB,GAAGm2B,OAAQ,+BACnCrsD,KAAKq8C,WAAW,GAAQnmB,GAAGw4C,QAAS,gCACpC1uE,KAAKq8C,WAAW,GAAQnmB,GAAG49B,SAAU,2CACrC9zD,KAAKq8C,WAAW,GAAQnmB,GAAGy4C,WAAY,sBACvC3uE,KAAKq8C,WAAW,GAAQnmB,GAAGk9B,QAAS,2CACpCpzD,KAAKq8C,WAAW,GAAQnmB,GAAG8lB,SAAU,iCACzC,EAEAK,WAAY,SAAUuyB,EAAWC,GACf7uE,KAAK+wC,OAAO,CACtB69B,UAAWA,EACXC,aAAcA,IAElB7uE,KAAK+sB,WAAWqvB,MAAMC,WAAWuyB,EACrC,EAEA5/C,OAAQ,WACJhvB,KAAKw5D,OAAOnnD,SAASy8D,IACN,IAAI,eAAmB,CAACh7C,MAAOg7C,GAAS,GAE3D,IAGJ,iBAAuB3tD,SAASC,MAAMpX,OAAO,CACzCqmC,YAAa,QAGjB,kBAAwBlvB,SAASm6C,WAAWtxD,OAAO,CAC/C8pB,MAAO,iBAEPnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK+sB,WAAa/sB,KAAK0sB,QAAQK,WAC/B/sB,KAAKqjB,GAAG,MAAOrjB,KAAK+uE,eAAgB/uE,KACxC,EAEA+oC,QAAS,WACL/oC,KAAK0sB,QAAQjF,uBAAuBunD,0BAA0BzvE,IACtDA,GAAOA,EAAI0C,QACX1C,EAAI8S,SAASnR,IACTlB,KAAK+wC,OAAO,CACR,IAAO7vC,EAAK6Y,IACZnH,KAAM1R,EAAK0R,MACb,IAEN5S,KAAKivE,WAAY,GAEjBjvE,KAAK+sB,WAAWqvB,MAAMz9B,KAAK3e,KAAK0sB,QAAQixB,OAAQ,KAAM39C,KAAKkvE,OAAO5mE,KAAKtI,OAE3EA,KAAK+sB,WAAWqvB,MAAMG,MAAMv8C,KAAK0sB,QAAQixB,OAAQ,KAAM39C,KAAKmvE,QAAQ7mE,KAAKtI,MAAM,GAEvF,EAEAmvE,QAAS,SAAUtvB,GACf,IAAI0J,EAAyB,GAC7B,GAAE1J,GAAQhgD,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACpC,IAAIgX,EAAM,GAAEhX,GAAM1B,KAAK,OACnBT,EAAO,GAAEmC,GAAM1B,KAAK,QACpB6Q,EAAO,GAAEnP,GAAM1B,KAAK,QACpB6Q,IAAS,GAAQ6lB,GAAGy4C,aACpBplB,EAAuBnoD,KAAK8W,GAC5BlY,KAAK0sB,QAAQ3M,IAAI,yBAA0BwpC,IAE/CvpD,KAAK+sB,WAAWqvB,MAAMgzB,QAAQl3D,EAAKnZ,EAAMsR,GAAM,UAC7CrQ,KAAKivE,WAAcjvE,KAAK+sB,WAAWqvB,MAAMz9B,KACvCzG,EACA,KACAlY,KAAKkvE,OAAO5mE,KAAKtI,MAAM,GAEnC,EAEAkvE,OAAQ,SAAUrvB,GACd,IAAIgO,EAAU,GAAEhO,GACZjtC,EAAOi7C,EAAQruD,KAAK,QACpB8rB,EAAOtrB,KACX6tD,EAAQhuD,KAAK,WAAWC,MAAK,WACzB,IAAI8uE,EAAY,GAAE5uE,MAAMR,KAAK,OAC7B8rB,EAAKylB,OAAO,CACR,IAAO69B,EACPh8D,KAAMA,IAENg8D,IAAc,GAAQ14C,GAAGmsB,cACzB/2B,EAAKoB,QAAQilC,eACrB,IACA9D,EAAQhuD,KAAK,KAAKC,MAAK,WACnB,IAAIuvE,EAAgB,GAAErvE,MAAMH,KAAK,gCACjC,GAAIwvE,EAAcptE,QAAUotE,EAAc/sE,SAAW,GAAQ4zB,GAAGo5C,UAAYhkD,EAAKoB,QAAQixB,SAAW/qC,EAAK,CACrG,IAAI28D,EAAoB,GAAEvvE,MAAMH,KAAK,cAAgB,GAAQq2B,GAAGs5C,aAAe,YAC3ED,EAAkBttE,QAAUstE,EAAkBjtE,QAC9CgpB,EAAKylB,OAAO,CACR,IAAO,gBACPn+B,KAAM28D,EAAkBjtE,QAGpC,CACJ,KACItC,KAAK0sB,QAAQg9B,WAAev4D,UAAU+D,gBAAgBkP,QAAQpE,KAAK0sB,QAAQK,WAAW4wB,SAAW,IACjG39C,KAAK0sB,QAAQg9B,UAAUwjB,yBAA0B,EAC7CltE,KAAK0sB,QAAQg9B,UAAU6gB,uBACvBvqE,KAAK0sB,QAAQg9B,UAAU7T,kBAEnC,EAEAk5B,eAAgB,SAAUD,GACtB,IAAIW,EAAOX,EAAQtsE,IAAI,OACnBktE,EAAiB1vE,KAAK0sB,QAAQijD,gBAAgBntE,IAAIitE,GACtDC,GAAkBA,EAAe3vD,IAAI,YAAY,GAChD0vD,GAAQ,GAAQv5C,GAAGwsB,0BAA4B+sB,GAAQ,GAAQv5C,GAAGqsB,iBAAoBviD,KAAK0sB,QAAQjF,uBAAuBmoD,oBAAoB,CAC3I71D,IAAK01D,EACL78D,KAAMk8D,EAAQtsE,IAAI,UAGT,kBAATitE,IACAzvE,KAAK0sB,QAAQ3M,IAAI,gBAAgB,GAC3B/f,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBAAkBssE,EAAQtsE,IAAI,SAC3HxC,KAAK0sB,QAAQ2qC,gBAAgByX,GAEzC,IAGJ,0BAA6B,WACzB9uE,KAAK2vE,gBAAkB,IAAI,kBAAsB,KAAM,CAACjjD,QAAS1sB,OACjEA,KAAKwiD,gBAAkB,IAAI,kBAAsB,KAAM,CAAC91B,QAAS1sB,MACrE,IAEA,0BAA6B,WACzBA,KAAKg0D,sBAAwB,GAAO7qD,MAEpCnJ,KAAK+sB,WAAW6J,cAAc52B,KAAK6vE,sBACnC7vE,KAAK6vE,qBAAuB7vE,KAAK+sB,WAAW2J,YAAW,KACnD12B,KAAKg0D,sBAAwB,GAAO7qD,OAC7B,KAGXnJ,KAAK+sB,WAAW6J,cAAc52B,KAAK8vE,eACnC9vE,KAAK8vE,cAAgB9vE,KAAK+sB,WAAWgjD,KAAKC,gBAAgBD,IACtD/vE,KAAKg0D,sBAAwB,GAAO7qD,MACpCnJ,KAAK+sB,WAAWgjD,KAAKE,KAAKF,IACnB,KAGP/vE,KAAKsvD,uBACLtvD,KAAKsvD,sBAAsBC,YAE/BvvD,KAAKsvD,sBAAwB,IAAI4gB,OAAO,IAAIlsE,IAAI,oBAEhDhE,KAAKsvD,sBAAsBvuC,UAAY,KACnC,IAAIovD,GAAY,GAAOhnE,MAAQnJ,KAAKg0D,uBAAyB,MACxDn7C,UAAUu3D,QAAUD,GAAYh/E,UAAU4C,+BAAiC,OACvE8kB,UAAUu3D,SACX,GAAQrqD,IAAI,cAAgBlN,UAAUu3D,QACtC,GAAQrqD,IAAI,8BAAgC/lB,KAAK+sB,WAAWqkB,YAEhE,GAAQrrB,IAAI,gCAAkCoqD,GAC9C,GAAQpqD,IAAI/lB,KAAK+sB,WAAWqkB,WACxBpxC,KAAK+sB,WAAWqkB,UAChBpxC,KAAK+sB,WAAWqhC,aAEhBpuD,KAAKk+C,UACTl+C,KAAKsvD,sBAAsBC,aAE3B4gB,GAAYh/E,UAAU6C,uBAAyB,MAC/C,GAAQ+xB,IAAI,0BAA4BoqD,GACxCnwE,KAAK+sB,WAAWgjD,KAAKA,KAAK/vE,KAAKwC,IAAI,WACvC,EAGJxC,KAAKsvD,sBAAsBpuC,YAAY,CAAC,GAExClhB,KAAKwiD,gBAAgBzZ,SACzB,IAAG,GAAM,GAET,8BAAiC,WAC7B/oC,KAAKqwE,2BAA6B,GAAOlnE,MAEzCnJ,KAAK4rD,gBAAgBh1B,cAAc52B,KAAKswE,2BACxCtwE,KAAKswE,0BAA4BtwE,KAAK4rD,gBAAgBl1B,YAAW,KAC7D12B,KAAKqwE,2BAA6B,GAAOlnE,OAClC,KAGXnJ,KAAK4rD,gBAAgBh1B,cAAc52B,KAAKuwE,oBACxCvwE,KAAKuwE,mBAAqBvwE,KAAK4rD,gBAAgBmkB,KAAKC,gBAAgBD,IAChE/vE,KAAKqwE,2BAA6B,GAAOlnE,MACzCnJ,KAAK4rD,gBAAgBmkB,KAAKE,KAAKF,IACxB,KAGP/vE,KAAK4yD,uBACL5yD,KAAK4yD,sBAAsBrD,YAE/BvvD,KAAK4yD,sBAAwB,IAAIsd,OAAO,IAAIlsE,IAAI,oBAEhDhE,KAAK4yD,sBAAsB7xC,UAAY,KACnC,IAAIovD,GAAY,GAAOhnE,MAAQnJ,KAAKqwE,4BAA8B,MAC7Dx3D,UAAUu3D,QAAUD,GAAYh/E,UAAU4C,+BAAiC,OACvE8kB,UAAUu3D,SACX,GAAQrqD,IAAI,cAAgBlN,UAAUu3D,QACtC,GAAQrqD,IAAI,8BAAgC/lB,KAAK+sB,WAAWqkB,YAEhE,GAAQrrB,IAAI,gCAAkCoqD,GAC9C,GAAQpqD,IAAI/lB,KAAK+sB,WAAWqkB,WACxBpxC,KAAK4rD,gBAAgBxa,UACrBpxC,KAAK4rD,gBAAgBwC,aAErBpuD,KAAK4rD,gBAAgB1N,QAAQ,WAAYl+C,KAAK4rD,gBAAgB1zC,IAAKlY,KAAK4rD,gBAAgB5N,MAC5Fh+C,KAAK4yD,sBAAsBrD,aAE3B4gB,GAAYh/E,UAAU6C,uBAAyB,MAC/C,GAAQ+xB,IAAI,0BAA4BoqD,GACxCnwE,KAAK4rD,gBAAgBmkB,KAAKA,KAAK/vE,KAAKwC,IAAI,WAC5C,EAEJxC,KAAK4yD,sBAAsB1xC,YAAY,CAAC,EAC5C,IAAG,GAAM,GAET,0BAA6B,WACzB,IAAIk7B,EAAQp8C,KAAK+sB,WAAWqvB,MAC5Bp8C,KAAK+sB,WAAW2J,WAAW0lB,EAAMo0B,aAAaloE,KAAK8zC,GAC3C,GAAQlmB,GAAGu6C,WAAY,KAAM,MAAO,KAAM,MAClDzwE,KAAK+sB,WAAW2J,WAAW0lB,EAAMs0B,cAAcpoE,KAAK8zC,GAC5C,GAAQlmB,GAAGy6C,YAAa,KAAM,MAAO,KAAM,KACvD,IAAG,GAAO,GAEV,YC7RA,IAAI,GAAM,OACN,GAAY,GAAIx/E,UAChB,GAAY,GAAI0N,UAAUy2B,SAC1B,GAAQ,GAAIriB,MACZ,GAAI,GAAItV,EACR,GAAM,GAAIq4B,IACV,GAAQ,GAAIgzB,MACZ,GAAU,GAAItqD,QACd,GAAI,GAAId,EACR,GAAS,GAAIC,OACbW,GAAY,GAAIA,UAChB,GAAO,GAAI0U,KACX,GAAS,GAAMwN,OACfkwD,GAAQ,GAAMzvE,MAGlB,WAAiBggB,SAASC,MAAMpX,OAAO,CACnCqmC,YAAa,MACbhvB,SAAU,CACNkF,OAAQ,UACR4iC,eAAgB,GAChB0nB,kBAAcz1D,EACd01D,yBAAyB,EACzBC,0BAA0B,EAC1BC,OAAQ,GACRC,YAAY,GAGhBtvD,WAAY,SAAUuvB,EAAQlyC,GAC1BgB,KAAKqjB,GAAG,oBAAqBrjB,KAAKkxE,mBAAoBlxE,MACtDA,KAAK0sB,QAAU1tB,EAAQ0tB,QACnBwkB,EAAO5F,SACP4F,EAAOl2C,MAAQk2C,EAAO5F,cACf4F,EAAO5F,QAElB,IAAIl0B,EAAQ,GAAEC,MAAM65B,GAChB95B,EAAM+rC,SACN/rC,EAAM+5D,SAAW/5D,EAAMc,IAAM,IAAMd,EAAM+rC,SAClC/rC,EAAM65D,aACb75D,EAAM+5D,SAAW/5D,EAAMc,IAAM,UAEhClY,KAAK0sB,SAAW1sB,KAAK0sB,QAAQixB,SAAWvmC,EAAMc,KAAQ,GAAElO,OAAOoN,EAAO,CAACg6D,QAAQ,EAAM7qD,OAAQ,WAC9FnP,EAAMrY,KAAOqY,EAAMi6D,aAAej6D,EAAMrY,MAAQqY,EAAMc,IACjDd,EAAMpc,QACPoc,EAAM4yC,WAAa,GACnB5yC,EAAMpc,MAAQ,GAAO4K,iBAAiBwR,EAAMrY,OAE5CiB,KAAK0sB,QAAQq5C,UAAUuL,UAAUl6D,EAAMc,OACvCd,EAAMm6D,SAAU,GACpBvxE,KAAKmF,aAAe,GAAOjB,eAAekT,EAAMpc,OAChDoc,EAAMotC,MAAQ,GAAMA,MAAMqC,SAASzvC,EAAMc,KACzClY,KAAK+f,IAAI3I,GACTpX,KAAKkxE,qBACLlxE,KAAK29C,OAAS,GAAQW,iBAAiBt+C,KAAKwC,IAAI,SAC/CxC,KAAKwC,IAAI,eAAiBxC,KAAK+f,IAAI,aAAc,GAAE8a,SAAS76B,KAAK0sB,QAAQ8kD,cAAchvE,IAAI,cAAexC,KAAKwC,IAAI,SACpHxC,KAAKu1B,QAAU,GAAIk8C,SAASzxE,KAAK0sB,QAAQlqB,IAAI,OAAS,IAAM4U,EAAMc,KAClElY,KAAK6kB,UAAY,IAAI,oBAAwB,KAAM,CAACoQ,QAASj1B,OAC7DA,KAAKqjB,GAAG,gBAAiBrjB,KAAKw9B,aAAcx9B,MAC5CA,KAAKqjB,GAAG,kBAAmBrjB,KAAK0xE,iBAAkB1xE,MAClDA,KAAKqjB,GAAG,qBAAsBrjB,KAAKm9B,WAAYn9B,MAC/CA,KAAK0sB,QAAQo+B,aAAaviC,MAAK,KACtBvoB,KAAKwC,IAAI,YAAexC,KAAKwC,IAAI,kBAAqB4U,EAAMu6D,YAC7D3xE,KAAK+mD,UAAU,GAE3B,EAEAyN,iBAAkB,WACd,IAAIqc,EAAe7wE,KAAKwC,IAAI,gBAExBovE,GADa5xE,KAAKwC,IAAI,2BACRxC,KAAKwC,IAAI,6BACvBqvE,EAAc,GAgClB,OA/BI7xE,KAAKwC,IAAI,WACTqvE,EAAc,aAAiB,0BAC1B7xE,KAAKwC,IAAI,cACVxC,KAAKwC,IAAI,eACLxC,KAAKwC,IAAI,cAAcmjD,cACvBksB,GAAe,qBAAyB,kCAAmC7xE,KAAKwC,IAAI,cAAcmjD,cAClG3lD,KAAKwC,IAAI,cAAcsvE,mBAAqB,IAC5CD,GAAe,aAAiB,kCAAmC,CAAC7xE,KAAKwC,IAAI,cAAcsvE,oBAAsB,MAIrHD,EAHQhB,EAGM7wE,KAAKwC,IAAI,mBAAqB,aAAiBxC,KAAKwC,IAAI,WAFxD,aAAiB,kCAM3BqvE,EAFa,SAAjBhB,EACIe,EACc,aAAiB,kCAEjB,aAAiB,kCACX,SAAjBf,EACHe,EACc,aAAiB,kCAEjB,aAAiB,iCAI7Bf,EAGQ7wE,KAAKwC,IAAI,mBAAqB,aAAiBxC,KAAKwC,IAAI,WAFxD,aAAiB,qCAIhCqvE,CACX,EAEAE,wBAAyB,WACrB,IAAIlB,EAAe7wE,KAAKwC,IAAI,gBACxBwvE,EAA2BhyE,KAAKwC,IAAI,4BACpCyvE,EAAajyE,KAAKwC,IAAI,2BACtBovE,EAAc5xE,KAAKwC,IAAI,4BACvB0vE,EAAqB,GACrBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAkB,GAClBC,EAAiB,GAgFrB,OA/EItyE,KAAKwC,IAAI,aACT6vE,EAAkB,aAAiB,2BAClB,SAAjBxB,GACAwB,EAAkB,aAAiB,8BACnCC,EAAiB,aAAiB,+BAClCJ,EAAqB,aAAiB,yCAEhB,SAAjBrB,EACDe,GACAS,EAAkB,aAAiB,qCACnCC,EAAiB,aAAiB,+BAClCJ,EAAqB,aAAiB,2DAGtCG,EAAkB,aAAiB,gCACnCC,EAAiB,aAAiB,+BAClCJ,EAAqB,aAAiB,qDAGpB,OAAjBrB,EACDoB,GACAI,EAAkB,aAAiB,8BACnCC,EAAiB,aAAiB,2CAClCJ,EAAqB,aAAiB,gEAGtCG,EAAkB,aAAiB,8BACnCC,EAAiB,aAAiB,sCAClCJ,EAAqB,aAAiB,yDAClCF,IACAM,EAAiB,aAAiB,kCAClCJ,EAAqB,aAAiB,uDAGtB,SAAjBrB,EACHe,GAAeK,GACfI,EAAkB,aAAiB,qCACnCC,EAAiB,aAAiB,2CAClCJ,EAAqB,aAAiB,sEAEjCN,GACLS,EAAkB,aAAiB,qCACnCC,EAAiB,aAAiB,sCAClCJ,EAAqB,aAAiB,gEAClCF,IACAM,EAAiB,aAAiB,kCAClCJ,EAAqB,aAAiB,4DAGrCD,GACLI,EAAkB,aAAiB,gCACnCC,EAAiB,aAAiB,2CAClCJ,EAAqB,aAAiB,kEAGtCG,EAAkB,aAAiB,gCACnCC,EAAiB,aAAiB,sCAClCJ,EAAqB,aAAiB,2DAClCF,IACAM,EAAiB,aAAiB,kCAClCJ,EAAqB,aAAiB,yDAIxCrB,IACNwB,EAAkB,aAAiB,gBAEnCT,IACAO,EAAmB,WACnBF,IACAG,EAAkB,WACD,OAAjBvB,IACAsB,EAAmB,UACF,SAAjBtB,IACAuB,EAAkB,UACD,SAAjBvB,IACAsB,EAAmB,SACnBC,EAAkB,UAEf,CACHG,WAAYF,EACZG,UAAWF,EACXH,iBAAkBA,EAClBC,gBAAiBA,EACjBF,mBAAoBA,EAE5B,EAEAO,QAAS,WACL,OAAIzyE,KAAKwC,IAAI,WACF,UACPxC,KAAKwC,IAAI,cACF,eACPxC,KAAKwC,IAAI,cACLxC,KAAKwC,IAAI,OAAO+S,SAAS,kBAClB,OACPvV,KAAKwC,IAAI,gBACF,gBACPxC,KAAKwC,IAAI,kBACF,kBACJ,eAEPxC,KAAKwC,IAAI,UACF,SACPxC,KAAKwC,IAAI,OACF,WADX,CAGJ,EAEAg7B,aAAc,WACVx9B,KAAK0sB,QAAQpF,cAAcorD,cAAc1yE,KAAKwC,IAAI,QAASmwE,IACnDA,GAAe3yE,KAAKwC,IAAI,gBAAkBmwE,EAAY3oB,YAE1DhqD,KAAK+mD,UAAU,GAEvB,EAEAA,SAAU,SAAU/+B,GAChB,IAAI9P,EAAMlY,KAAKwC,IAAI,OACf2xD,EAAc,GAAEC,WAAWpsC,GAC/BhoB,KAAK0sB,QAAQi/B,qBAAqBnH,MAAMhiD,IAAI0V,GACtCssC,IACE,GAAIA,EAAMe,WAAY,CAClB,IAAIA,EAAavlD,KAAKwC,IAAI,eAAiB,CAAC,EAC5C+iD,EAAa,GAAEv7C,OAAOu7C,EAAYf,EAAMe,YACxCvlD,KAAK+f,IAAI,CAACwlC,sBACHf,EAAMe,UACjB,CACA,IAAInuC,EAAQ,CACRotC,MAAOA,EACP6P,cAAe,GAAOlrD,MACtBpK,KAAMiB,KAAKwC,IAAI,gBAEd4U,EAAMrY,OACHiB,KAAKwC,IAAI,cACT4U,EAAMrY,KAAOylD,EAAMG,UAAY3kD,KAAKwC,IAAI,QAExC4U,EAAMrY,KAAOylD,EAAMG,WAAaH,EAAMz+C,WAAa,IAAMy+C,EAAMx+C,WAAWxB,QAAUggD,EAAMI,UAAY1sC,KAEzGlY,KAAKwC,IAAI,oBAAsBxC,KAAKwC,IAAI,oBAAsB,GAAU3L,kBAAkBC,gBACvF0tD,EAAMY,MAAMpqD,OACZoc,EAAMk9C,gBAAkB,GAAUz9D,kBAAkBC,aACpDsgB,EAAMpc,MAAQwpD,EAAMY,MAAMpqD,OAG1Boc,EAAMpc,MAAQ,GAAO4K,iBAAiBwR,EAAMrY,MAChDiB,KAAKmF,aAAe,GAAOjB,eAAekT,EAAMpc,QAEpDgF,KAAK+f,IAAI3I,GACLpX,KAAKwC,IAAI,cACTxC,KAAK0xE,mBAETvd,GAAensC,EAASw8B,EAAM,IAElC,WACI2P,GAAensC,EAAS,KAC5B,GAER,EAEA0pD,iBAAkB,WACd,IAAIkB,EAAc,CACd16D,IAAKlY,KAAKwC,IAAI,OACdqwE,UAAW7yE,KAAKwC,IAAI,aACpBwuE,OAAQhxE,KAAKwC,IAAI,UACjBquE,aAAc7wE,KAAKwC,IAAI,gBACvB6uE,YAAarxE,KAAKwC,IAAI,eACtBuuE,yBAA0B/wE,KAAKwC,IAAI,4BACnCsuE,wBAAyB9wE,KAAKwC,IAAI,2BAClCzD,KAAMiB,KAAKwC,IAAI,QACf6xD,cAAer0D,KAAKwC,IAAI,kBACzB2uE,EAAWnxE,KAAKwC,IAAI,aACnBxC,KAAKwC,IAAI,eAAiBxC,KAAKwC,IAAI,WACnC,GAAEwH,OAAO4oE,EAAa,CAClB5oB,WAAahqD,KAAKwC,IAAI,eAAiBxC,KAAK0sB,QAAQmoC,cAAc70D,KAAKwC,IAAI,UAC3E8xD,gBAAiBt0D,KAAKwC,IAAI,mBAC1B8oC,OAAQtrC,KAAKwC,IAAI,WAErB2uE,IACAyB,EAAYzvB,SAAW,GAAQC,mBAAmB+tB,IACtDnxE,KAAK0sB,QAAQpF,cAAcwrD,YAAYF,EAC3C,EAEA1B,mBAAoB,WACZlxE,KAAKwC,IAAI,gBACTxC,KAAK+yE,iBACL/yE,KAAKgzE,aAAe,IAAI,gBAAoB,KAAM,CAAC/9C,QAASj1B,OAEpE,EAEAizE,uBAAwB,SAAUjrD,EAAUnN,GACxC,IAAIkb,EAAK,GAAI,CACTlyB,KAAM,MACN0S,GAAIvW,KAAKwC,IAAI,aAAexC,KAAKwC,IAAI,SACpC2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,WAChD3uE,KAAK0sB,QAAQm/B,SAAS91B,EAAI/N,EAAUnN,EACxC,EAEAk4D,eAAgB,WACZ,0CACJ,EAEAG,YAAa,WACT,GAA0B,WAAtBlzE,KAAKwC,IAAI,UAAwB,CACjC,IAAK,GAAQu7C,eAAe/9C,KAAKwC,IAAI,QAEjC,YADAxC,KAAK+f,IAAI,CAACopC,eAAgB,WAG9B,IAAIpzB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKwC,IAAI,SAAU2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGk4C,OAChFpuE,KAAK0sB,QAAQiK,WAAWZ,GAAKA,IACzB,IAAIo9C,EAAYnzE,KAAKozE,kBAAkBr9C,GAGvC,MAF0B,WAAtB/1B,KAAKwC,IAAI,WACTxC,KAAK+f,IAAI,CAACopC,eAAgBgqB,IACvBnzE,IAAI,GAEnB,CACJ,EAEAqzE,UAAW,SAAUrrD,GACjBhoB,KAAKgzE,aAAaM,oBAAoB,CAAC1pE,GAAI,GAAI2pE,YAAY,IAAQ9/B,IAC/D,IAAI7lC,EAAQ,GAAE,GAAE6lC,GAAU5zC,KAAK,eAC3B2zE,EAAgBxzE,KAAK0sB,QAAQ8kD,cAAciC,kBAAkB7lE,EAAM/N,KAAK,MAAMyC,QAClFsL,EAAM3L,QAAUjC,KAAKgzE,cAAgBhzE,KAAKgzE,aAAaU,iBAAiB9lE,GACxE4lE,GAAkBA,EAAcrnB,aAAensD,KAAK2zE,QAAQnxE,IAAI,WAAcxC,KAAK2zE,QAAQ5zD,IAAI,aAAcyzD,EAAcI,YAC3H5zE,KAAKuL,QAAQ,kBACbvL,KAAKgzE,aAAaM,oBAAoB,CAAC1pE,GAAI,KAAM6pC,IAC7C,IAAIl6B,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE1Z,GAAU5zC,KAAK,YAAY,GAAQq2B,GAAGE,eACnFp2B,KAAK6zE,UAAYt6D,EACjBvZ,KAAKuL,QAAQ,uBACbyc,GAAYA,GAAU,GACxB,GAEV,EAEA+kC,UAAW,SAAUzhB,EAAQj7B,EAAM2X,EAAUnN,GACzC,IAAI3C,EAAMlY,KAAKwC,IAAI,cAAgBxC,KAAKwC,IAAI,YAAcxC,KAAKwC,IAAI,OAC/DwqD,EAAoB,GAAI,CAACnpD,KAAM,MAAO0S,GAAI2B,IACzC/E,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,QAAS,CAAC9C,KAAMA,IAClB8C,EAAE,OAAQ,CAACvJ,GAAI0hC,IACpBtrC,KAAK0sB,QAAQiK,WAAWq2B,GAAoBj3B,IACxC,IAAIk3B,EAAgB,GAAEl3B,GAAIl2B,KAAK,QAAQyC,OAClB,IAAjB2qD,EACApyC,GAAWA,EAAQ,aAAiB,mCAEpCmN,GAAYA,EAASilC,EAAc,GAE/C,EAEAjB,UAAW,SAAUhxD,EAAOqV,EAAM2X,EAAUnN,GACxC,IAAIsxC,EAAc/tD,KAAKpD,EAAM4N,QACzB8jD,EAAc,GAAI,CAAC7oD,KAAM,MAAO0S,GAAIvW,KAAKwC,IAAI,SACxC2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,UAAW,CAAC9C,KAAM,GAAQ6lB,GAAGy2B,mBAAqBt8C,IACpD8C,EAAE,OAAQ,CAACvJ,GAAIuiD,IACfh5C,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy2B,qBAAqBxnC,EAAEnqB,EAAM4N,QAC/DwjD,EAAkB,GAAI,CAACvoD,KAAM,MAAO0S,GAAIvW,KAAKwC,IAAI,SAC5C2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGm2B,SAC/Bl5C,EAAE,UAAW,CAAC9C,KAAM,GAAQ6lB,GAAGo2B,uBAAyBj8C,IACxD8C,EAAE,OAAQ,CAACvJ,GAAIuiD,IACfh5C,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGo2B,yBACjCn5C,EAAE,OAAQ,CAAC/K,MAAOpN,EAAM4J,KAAMgF,GAAIuiD,EAAatoD,KAAM7I,EAAM6I,OACpE7D,KAAK0sB,QAAQiK,WAAW+1B,GAAa,KAC7B1sD,KAAK0sB,QAAQiK,WAAWy1B,GAAiB,KACjCpkC,GAAYA,EAASmkC,EAAY,IAErC,SAAUM,GACN5xC,GAAWA,EAAQ4xC,EACvB,GAAE,IACNA,IACA5xC,GAAWA,EAAQ4xC,EAAW,GAE1C,EAEA2mB,kBAAmB,SAASr9C,GACxB,IAAI9P,EAAU,GAAE8P,GAAIpI,SAAS,SAASnuB,KAAK,WACvCs0E,EAAe,GAAO3qE,MAAQ,IAAK8c,EAEvC,OADAjmB,KAAK+f,IAAI,CAAEozD,UAAWW,IACf,oBAAwB7tD,EACnC,EAEA8tD,KAAM,SAAUlwE,GACZ,IAAIkwE,EAAO,GAAM,CAACx9D,GAAIvW,KAAKwC,IAAI,OAAQqB,KAAMA,IAE7C,OADA7D,KAAK0sB,QAAQqhC,SAASgmB,GACf/zE,IACX,EAEAg0E,aAAc,SAAU58D,EAAO4Q,EAAUnN,GACrCzD,IAAUA,EAAQ,CAAC,GACnB,IAAIrY,EAAOqY,EAAMrY,MAAQiB,KAAKwC,IAAI,eAC9BwuE,EAAS55D,EAAM45D,QAAUhxE,KAAKwC,IAAI,UAClCuzB,EAAK,GAAI,CAAClyB,KAAM,QACfsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG+9C,SAC9B9gE,EAAE,OAAQ,CAAC+E,IAAKlY,KAAKwC,IAAI,OAAQzD,KAAMA,IAO5C,OANA,GAAEe,KAAKkxE,GAAQ,SAAUkD,GACrBn+C,EAAG5iB,EAAE,SAASgS,EAAE+uD,GAAO79C,IAC3B,IACAr2B,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAAUnN,GACtC7a,KAAK+f,IAAI,SAAS,GAClB/f,KAAK+f,IAAI,WAAW,GACb/f,IACX,EAEAm0E,iBAAkB,SAAUnsD,EAAUnN,GAClC,IAAK7a,KAAKwC,IAAI,WAAW,CACrB,IAAIuzB,EAAK,GAAI,CAAClyB,KAAM,QACfsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG+9C,SAC9B9gE,EAAE,OAAQ,CAAC+E,IAAKlY,KAAKwC,IAAI,OAAQquE,aAAc,WACpD7wE,KAAK0sB,QAAQpF,cAAc6sD,iBAAiBn0E,KAAKwC,IAAI,QACrDxC,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAAUnN,GACtC7a,KAAK+f,IAAI,SAAS,GAClB/f,KAAK+f,IAAI,WAAW,EACxB,CACA,OAAO/f,IACX,EAEAo0E,cAAe,SAAUpsD,GACrBhoB,KAAK+zE,KAAK,cACV/rD,GAAYA,GAChB,EAEAqsD,WAAY,SAAUrsD,GAClBhoB,KAAK+zE,KAAK,aACV/rD,GAAYA,GAChB,EAEAssD,aAAc,SAAUtsD,GACpBhoB,KAAK4lE,MAAM59C,EACf,EAEAusD,eAAgB,SAAUvsD,GACtBhoB,KAAK+zE,KAAK,gBACV/zE,KAAKm0E,iBAAiBnsD,EAC1B,EAEAwsD,oBAAqB,WACjBx0E,KAAK+zE,KAAK,eACV/zE,KAAK+f,IAAI,4BAA4B,EACzC,EAEA00D,iBAAkB,WACdz0E,KAAK+zE,KAAK,iBACT/zE,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGwsB,2BAA6B1iD,KAAK+f,IAAI,4BAA4B,EACnH,EAEA20D,iBAAkB,WACd,IAAIC,EAAW30E,KAAKwC,IAAI,cACpByJ,EAAS0oE,EAAW,aAAiB,gBAAkB,aAAiB,kBACxEC,EAAWD,EAAW,aAAiB,uBAAwB,CAAC30E,KAAKwC,IAAI,QAAQqyE,SAAW,aAAiB,+BAAgC,CAAC70E,KAAKwC,IAAI,QAAQqyE,SAC/JpoE,EAAmBkoE,EAAW,KAAO,CAAC,CAAE51E,KAAM,iBAAkBqkC,SAAS,EAAO9gC,KAAM,aAAiB,0CAC3G,GAAMyJ,QAAQiC,IAAI/B,EAAQ2oE,EAAUnoE,EAAkB,CAAE0B,eAAgB,aAAiB,YAAYoa,MAAMrgB,IACvG,GAAIA,EACA,GAAIysE,EAAU,CACV,IAAIh3B,EAAS39C,KAAK29C,OACdm3B,EAAY,GAAQ/2B,eAAe/9C,KAAKwC,IAAI,QAC5CuzB,EAAK,GAAI,CAACxf,GAAIonC,EAAQ95C,KAAM,QACvBsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBAAsBxpD,EAAE2vD,GAClE90E,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxB/1B,KAAKw0E,sBACLx0E,KAAKm0E,mBACMn0E,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,MACjCuL,QAAQ,cACb,kBAAsB,YAAa,CAAC8tB,cAAe,GAAIF,WAAO/d,GAAW,GAEjF,KAAO,CAEH,GADApb,KAAKm0E,mBACDjsE,EAAO6sE,eAAgB,CACvB,IAAI7gF,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,MACtC9L,EAAK8gF,oBAAmB,GACxB9gF,EAAK+gF,4BACL,kBAAsB,YAAa,CAAC57C,cAAe,GAAIF,WAAO/d,GAClE,CACA,WAAe,eACnB,CACJ,GAER,EAEA85D,gBAAiB,WACb,IAAIP,EAAW30E,KAAKwC,IAAI,cACpByyB,EAAUj1B,KACViM,EAAS0oE,EAAW,aAAiB,uBAAyB,aAAiB,iBAC/EzoE,EAAU,CAAEiC,eAAgB,aAAiB,sBAC7CymE,EAAW,aAAiB,8BAA+B,CAAC50E,KAAKwC,IAAI,QAAQqyE,SAC5EF,IACDzoE,EAAQoC,gBAAkB,aAAiB,4BAC3CsmE,GAAY,KAAK,aAAiB,wBAAyB,CAAC50E,KAAKwC,IAAI,YAEzE,GAAMuJ,QAAQiC,IAAI/B,EAAQ2oE,EAAU,KAAM1oE,GAASqc,MAAK,SAAUrgB,GAC9D,GAAIA,EAAQ,CACT,IAAKysE,EAAU,CACV,IAAIzgF,EAAO+gC,EAAQvI,QAAQgH,MAAMgC,QAAQT,GAC1B,mBAAX/sB,IACA+sB,EAAQk/C,mBACRjgF,EAAK8gF,oBAAmB,GACxB9gF,EAAK+gF,4BACL/gF,EAAK6rB,IAAI,UAAU,GAE3B,CACAkV,EAAQq/C,eACR,WAAe,gBACVK,GACD,kBAAsB,YAAa,CAACt7C,cAAe,GAAIF,WAAO/d,GACtE,CACJ,GACJ,EAEA+5D,kBAAmB,WACf,IAAIlgD,EAAUj1B,KACd,GAAM+L,QAAQiC,IAAI,aAAiB,yCAA0C,aAAiB,gCAAiC,CAAChO,KAAKwC,IAAI,UAAW,KAAM,CAAE2L,eAAgB,aAAiB,yBAAyBoa,MAAK,SAAUrgB,GAC7NA,IACA+sB,EAAQmgD,UACR,WAAe,gBAEvB,GACJ,EAEAxP,MAAO,SAAU59C,EAAUnN,GACvB,IAAIkb,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGo4C,WACrDn7D,EAAE,OAAQ,CAAC+E,IAAKlY,KAAKwC,IAAI,SAC9BxC,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAAUnN,GACtC7a,KAAK+f,IAAI,WAAW,GACpB/f,KAAK+f,IAAI,SAAS,EACtB,EAEAq1D,QAAS,SAAUptD,EAAUnN,GACzB,IAAIkb,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAGo4C,WACvDn7D,EAAE,OAAQ,CAAC+E,IAAKlY,KAAKwC,IAAI,SAC9BxC,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAAUnN,GACtC7a,KAAK+f,IAAI,WAAW,EACxB,EAEAs1D,YAAa,WACT,IAAItB,EAAO,GAAM,CAACx9D,GAAIvW,KAAKwC,IAAI,SAC1B2Q,EAAE,IAAK,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,uBAClC3uE,KAAK0sB,QAAQqhC,SAASgmB,GACtBjmC,cAAc9tC,KAAKs1E,2BACnBt1E,KAAKs1E,0BAA4B7xD,aAAY,KACzCzjB,KAAK0sB,QAAQqhC,SAASgmB,EAAK,GAC5B,GAAUt/E,iBACjB,EAEA8gF,eAAgB,WACZ,IAAIxB,EAAO,GAAM,CAACx9D,GAAIvW,KAAKwC,IAAI,SAC1B2Q,EAAE,IAAK,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,2BAClC3uE,KAAK0sB,QAAQqhC,SAASgmB,GACtBjmC,cAAc9tC,KAAKs1E,0BACvB,EAEAE,eAAgB,SAAUpf,GACtB,IAAIyC,EAAY,GAAEzC,GACdvyD,EAAOuyD,EAASz8B,aAAa,QAC7Bo/B,EAAgBF,EAAUh5D,KAAK,YAAY,GAAQq2B,GAAG++B,kBACtD8D,EAAc92D,QAAUjC,KAAKwC,IAAI,oBAAsBxC,KAAKwC,IAAI,oBAAsB,GAAU3L,kBAAkBC,eAClHkJ,KAAK+f,IAAI,aAAcg5C,EAAcl5D,KAAK,SAASyC,QACnDtC,KAAKuL,QAAQ,kBAEjB,IAAIkqE,EAAmB,GAAErf,GAAUv2D,KAAK,YAAY,GAAQq2B,GAAGy4C,gBAC/D,GAAI8G,EAAiBxzE,OAAS,GAAKwzE,EAAiB9nD,WAAW1rB,OAAQ,CACnEjC,KAAK+f,IAAI,WAAY84C,EAAUr5D,KAAK,SAC/BQ,KAAKwC,IAAI,gBACVxC,KAAK+f,IAAI,cAAc,GACvB/f,KAAK0sB,QAAQ8kD,cAAckE,qBAAqB11E,KAAKwC,IAAI,OAAQxC,KAAKwC,IAAI,gBAE1ExC,KAAK21E,eAAiB31E,KAAK21E,aAAa1mD,MAAM,kBAC9CjvB,KAAK21E,aAAe,IAAI,wBAA4B,CAAC7hD,MAAO9zB,QAEhE,IAAI41E,EAAkB51E,KAAK61E,eAAe,GAAEzf,IACxC0f,EAAkB91E,KAAKwC,IAAI,eAAiB,CAAC,EAC7CxC,KAAK21E,cAAgB31E,KAAK21E,aAAalnD,aAAemnD,EAAgB9D,oBAAsBgE,EAAgBhE,oBAC5G9xE,KAAKuL,QAAQ,uBACjB,GAAEvB,OAAO8rE,EAAiBF,GAC1B51E,KAAK+f,IAAI,aAAc+1D,GAClB91E,KAAKwC,IAAI,gBAAmBszE,EAAgB/2E,OAASiB,KAAKwC,IAAI,SAC/DxC,KAAK+f,IAAI,OAAQ+1D,EAAgB/2E,MACrCiB,KAAK+f,IAAI,CAACwG,OAAQuvD,EAAgBvvD,OAAQmuC,eAAgB,GAAOvrD,MAAOggD,eAAiB2sB,EAAgBnwB,YAAc,WAAa,aAAiB,kCAAmC,CAACmwB,EAAgBhE,oBAAsB,KACnO,CACA,GAAa,cAATjuE,EACA7D,KAAK+f,IAAI,2BAA2B,GAChC/f,KAAKwC,IAAI,4BACTxC,KAAK+zE,KAAK,cAEV/zE,KAAKuL,QAAQ,WAAYvL,KAAM,kBAEhC,GAAa,eAAT6D,EACH7D,KAAKwC,IAAI,gBAAkBxC,KAAKwC,IAAI,6BAA+BxC,KAAKwC,IAAI,iBAG5ExC,KAAKwC,IAAI,gBAGbxC,KAAKuL,QAAQ,WAAYvL,KAAM,mBAC5B,GAAa,gBAAT6D,GAEP,GADA7D,KAAK+f,IAAI,2BAA2B,GAChC/f,KAAKwC,IAAI,cAAe,CACxBxC,KAAKm0E,mBACL,IAAIjgF,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,MACjCA,KAAKwC,IAAI,iBASVtO,EAAKqX,QAAQ,cACbvL,KAAKwxD,WATLt9D,EAAK+gF,2BAA0B,KAC3B/gF,EAAKqX,QAAQ,cACbvL,KAAKwxD,SAAS,IACf,KACCt9D,EAAKqX,QAAQ,cACbvL,KAAKwxD,SAAS,GAM1B,OACG,GAAa,iBAAT3tD,EACP7D,KAAK+f,IAAI,4BAA4B,OAElC,CACH,IAAI7H,EAAMk+C,EAASz8B,aAAa,QAC5BwpB,EAAW,GAAQC,mBAAmBlrC,GACtCkxC,EAAWrnD,OAAO82D,EAAUh5D,KAAK,YAAYyC,QAC7CikB,EAASsyC,EAAUh5D,KAAK,QAAQyC,QAAU,SAC1CyzE,EAAkBld,EAAUh5D,KAAK,UACjCspD,EAAiB4sB,EAAgBzzE,OACrC,GAAEmT,MAAM2zC,KAAcA,EAAW,GACjC70B,aAAav0B,KAAKg2E,uBAClB,IAAI/c,EAAej5D,KAAK6kB,UAAUriB,IAAI2gD,GACtC,GAAa,gBAATt/C,EACA7D,KAAK+f,IAAI,CAAEozD,UAAW,GAAOhqE,QAC7B8vD,GAAgBA,EAAazH,cAC1B,CACHxxD,KAAK+f,IAAI,CAAEozD,eAAW/3D,IACtB,IAAIhE,EAAQ,CACR+rC,SAAUA,EACViG,SAAUA,EACV7iC,OAAQA,GAEZwvD,EAAgB9zE,SAAWmV,EAAM+xC,eAAiBA,GAC7C8P,EAGDA,EAAal5C,IAAI3I,GAFjB6hD,EAAej5D,KAAK6kB,UAAUksB,OAAO35B,EAI7C,CACJ,CACJ,EAEAy+D,eAAgB,SAAUhd,GACtB,IAAI3gD,EAAMlY,KAAKwC,IAAI,OACfyzE,EAAcpd,EAAUh5D,KAAK,YAAY,GAAQq2B,GAAGy4C,gBACpD5vE,EAAOk3E,EAAYp2E,KAAK,QAAQyC,OAChC4zE,EAASD,EAAYp2E,KAAK,cAC1B0mB,EAASsyC,EAAUlrC,SAAS,QAAQrrB,SAAuC,gBAA3Bu2D,EAAUr5D,KAAK,QAA6B,cAAgB,UAC5GkmD,EAAamT,EAAUlrC,SAAS,UAAUrrB,OAC1C6zE,EAAUF,EAAYp2E,KAAK,WAAWyC,OACtC8zE,EAASH,EAAYp2E,KAAK,SAC1Bw2E,EAAeJ,EAAYp2E,KAAK,eAChCy2E,EAAiBv0E,OAAOk0E,EAAYp2E,KAAK,kBAAkByC,QAC3Di0E,EAAsBv2E,KAAKwC,IAAI,kBAAoBxC,KAAKwC,IAAI,kBAAkBA,IAAI,aAAe,EACjGg0E,EAAeP,EAAYp2E,KAAK,eAAeyC,SAAU,EACzDqjD,EAAc5jD,OAAOk0E,EAAYp2E,KAAK,WAAWyC,QACjDm0E,EAAsBR,EAAYp2E,KAAK,WACvC8e,EAAO,CAACzG,MAAKnZ,OAAM2mD,aAAYywB,UAAS5vD,SAAQo/B,eACpDywB,EAAOn0E,SAAW0c,EAAK8mC,WAAa2wB,EAAO9zE,QAC3C4zE,EAAOj0E,SAAW0c,EAAKmV,MAAQoiD,EAAO5zE,QACtC+zE,EAAap0E,SAAW0c,EAAKsmC,YAAcoxB,EAAa/zE,QACxDm0E,EAAoBx0E,SAAW0c,EAAKmzD,mBAAqB/vE,OAAO00E,EAAoBn0E,SACpFk0E,GAAgBx2E,KAAK+f,IAAI,eAAgBy2D,GAC7B,cAAZL,GAA2Bn2E,KAAK+f,IAAI,kBAAkB,GACtD,IAAiD22D,EAA7CxiF,EAAO8L,KAAK0sB,QAAQgH,MAAMlxB,IAAIxC,KAAKu1B,SAqBvC,OApBI0gD,EAAYp2E,KAAK,kBAAkBoC,QAC/Bs0E,GAAuBD,IACnBpiF,IACIA,EAAK0gC,YAAc1gC,EAAK0gC,UAAUqO,UAClC/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE8hD,EAAkBxiF,EAAK0gC,UAAUqO,QAAQ0zC,iBAEzCD,IACIJ,EACAt2E,KAAK42E,qBAAqBN,GAAiBO,IACvC72E,KAAK82E,mBAAmBD,EAAUH,EAAgB,KAItD12E,KAAK+f,IAAI,sBAAkB3E,GAC3Bpb,KAAK82E,wBAAmB17D,EAAWs7D,MAK5C/3D,CACX,EAEAo4D,aAAc,SAAU/uD,GACpB,IAAIgvD,EAAgB,GAAI,CAACnzE,KAAM,MAAO0S,GAAIvW,KAAKwC,IAAI,aAAexC,KAAKwC,IAAI,SACtE2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBACtC3uE,KAAK0sB,QAAQiK,WAAWqgD,GAAgBC,IACpC,IAAIC,EAAkB,GAAED,GAAep3E,KAAK,cACxCs3E,EAAmB,GAAEF,GAAep3E,KAAK,eAC7CG,KAAKo3E,WAAa,CAACC,YAAaH,EAAiBI,aAAcH,GAC/DnvD,GAAYA,GAAU,GAE9B,EAEI4uD,qBAAsB,SAAUW,EAAWvvD,GACvC,IAAI8K,EAAU,KACVpG,EAAU1sB,KAAK0sB,QAEfkvB,EADUlvB,EAAQk/B,kBAAoBl/B,EAAQk/B,gBAAgBJ,eAAiB9+B,EAAQk/B,gBAAgBL,eAAiB7+B,EAAQk/B,gBAAgBxa,WAAuC,YAA1B1kB,EAAQlqB,IAAI,UACxJkqB,EAAQk/B,gBAAkBl/B,EAAQK,WACnDgJ,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKwC,IAAI,aAAexC,KAAKwC,IAAI,SACvD2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGC,IAAKrD,QAASA,IAC5C3f,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAGE,SAAUvyB,KAAM,WAC1CsP,EAAE,QAAS,CAAC,IAAO,YAAatP,KAAM,WACtCsP,EAAE,SAASgS,EAAE,GAAQ+Q,GAAGC,KAAKE,KAAKA,KAClCljB,EAAE,QAAS,CAAC,IAAO,8BACnBA,EAAE,SAASgS,EAAEoyD,GAClB9gD,EAAUmlB,EAAKllB,YAAYxf,IAC3B,IAAIsgE,EAAO,GAAEtgE,GAGb,OAFIsgE,EAAK33E,KAAK,UAAUL,KAAK,aAAeszB,GACxC9K,GAAYA,EAASwvD,IAClB,CAAI,GACZ,GAAQthD,GAAGC,KACdn2B,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACpB6lB,EAAKhlB,cAAcH,EAAQ,IAC5B,KACCmlB,EAAKhlB,cAAcH,EAAQ,GAGvC,EAEJpD,WAAY,SAAUr0B,EAASgpB,EAAUnN,GACrC,IAKyEkb,EALrErJ,EAAU1sB,KAAK0sB,QACfI,EAAU9tB,EAAQy4E,MAAQ/qD,EAAQk/B,kBAAoBl/B,EAAQk/B,gBAAgBJ,eAAiB9+B,EAAQk/B,gBAAgBL,eAAiB7+B,EAAQk/B,gBAAgBxa,WAAuC,YAA1B1kB,EAAQlqB,IAAI,UACzLo5C,EAAO9uB,EAAUJ,EAAQk/B,gBAAkBl/B,EAAQK,WACnDkI,EAAUj1B,KACVuzB,EAAW,GAAIT,EAAU,KACzB4kD,EAAeziD,GAAWA,EAAQzyB,IAAI,cAAeymC,GAAU,SAC5DjqC,EAAQy4E,KAEX1hD,EAAK,GADL2hD,EACS,CAAC7zE,KAAM,MAAO0S,GAAI0e,EAAQzyB,IAAI,aAAeyyB,EAAQzyB,IAAI,QAEzD,CAACqB,KAAM,QACpBkyB,EAAG5iB,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGC,IAAKrD,QAASA,IAC1C3f,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAGE,SAAUvyB,KAAM,WAC1CsP,EAAE,QAAS,CAAC,IAAO,YAAatP,KAAM,WACtCsP,EAAE,SAASgS,EAAE,GAAQ+Q,GAAGC,KAAKE,KAAKA,KACnCr2B,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGw4C,UAAY1vE,EAAQugB,WAChEwW,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,6BAChCv7D,EAAE,SAASgS,EAAEnmB,EAAQugB,WAAW8W,KAAKA,KAE1Cr2B,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGw4C,WAAa1vE,EAAQugB,YAC7DvgB,EAAQ24E,cACR5hD,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,yBAChCv7D,EAAE,SAASgS,EAAEnmB,EAAQ24E,cAActhD,KAAKA,KAC7Cr3B,EAAQ44E,cACR7hD,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,yBAChCv7D,EAAE,SAASgS,EAAEnmB,EAAQ44E,cAAcvhD,KAAKA,KAC7Cr3B,EAAQ64E,cACR9hD,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,yBAChCv7D,EAAE,SAASgS,EAAEnmB,EAAQ64E,cAAcxhD,KAAKA,KAC7Cr3B,EAAQ84E,eACR/hD,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,yBAChCv7D,EAAE,SAASgS,EAAE,SAASkR,KAAKA,KAChCN,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,yBAChCv7D,EAAE,SAASgS,EAAE,SAASkR,KAAKA,KAChCN,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,yBAChCv7D,EAAE,SAASgS,EAAE,SAASkR,KAAKA,KAChCN,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,2BAChCv7D,EAAE,SAASgS,EAAE,SAASkR,KAAKA,OAGnCqhD,GACD3hD,EAAG5iB,EAAE,QAAS,CAAC,IAAO,SACjBA,EAAE,SAASgS,EAAEnlB,KAAKwC,IAAI,QAAQ6zB,KAAKA,KACxCr3B,EAAQ+a,KACR/a,EAAQ+a,IAAI1H,SAAS0lE,IACjBhiD,EAAG5iB,EAAE,QAAS,CAAC,IAAO4kE,EAAQh+D,MACzB5G,EAAE,SAASgS,EAAE4yD,EAAQhtE,OAAOsrB,KAAKA,IAAI,IAElDN,EAAGM,KAAKC,MAAM,IAAI,GAAQC,IAAIv3B,GAASw3B,SACvC,IAAI1lC,EAAW,IAAI,GAAEuW,SACrBqlB,EAAQgH,MAAMskD,oBAAoBlnF,GAClCA,EAASy3B,MAAK,WACV,IAAIkO,EAAUmlB,EAAKllB,YAAW,SAAUxf,GACpC,GAAK+d,GAAWyiD,GAAgBziD,EAAQzyB,IAAI,cAAgB,CAC7C,GAAE0U,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GACxCS,EAASnyB,KAAK8V,EAEtB,MAEIqc,EAAW,GACX0V,GAAU,EAEd,OAAO,CACX,GAAG,GAAQ/S,GAAGC,KACV8hD,EAAQ,SAAU14E,GACdq8C,EAAKhlB,cAAcH,GACnB/J,EAAQgH,MAAMwkD,sBAAsBpnF,GACpC,IAAI+lC,EAAO,GAAEt3B,GAAKM,KAAK,cAAc,GAAQq2B,GAAGC,SAChD,GAAIU,EAAK50B,QAAU40B,EAAKr3B,KAAK,aAAeszB,EAAS,CACjD,IAAIqlD,EAAM,IAAI,GAAQ5hD,IAAI,CAAC20B,IAAKr0B,EAAKh3B,KAAK,OAAO,KACjDs4E,EAAIhtE,SAAsC,SAA1B0rB,EAAKr3B,KAAK,YAC1BwoB,GAAYA,EAASihB,EAAS1V,EAAU4kD,EAC5C,CACJ,EACAC,EAAO,SAAU9vD,GACbszB,EAAKhlB,cAAcH,GACnB,SAAa,aACb,SAAanO,GACboE,EAAQgH,MAAMwkD,sBAAsBpnF,GACpC+pB,GAAWA,EAAQyN,EACvB,EACAwE,EACAJ,EAAQm/B,SAAS91B,EAAIkiD,EAAOG,GAE5B1rD,EAAQi6B,OAAO5wB,EAAIkiD,EAAOG,EAClC,GACJ,EAEAC,mBAAoB,SAAUxB,EAAU73E,GAEpC,IAAIs5E,GADJzB,EAAWA,EAASh3E,KAAK,YACC8tB,SAAS,oBAAoB,GAAQuI,GAAGqiD,eAAet2E,OAC7E40E,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAGqiD,eACjD1B,EAASlpD,SAAS,YAAYA,SAAS,WAAWA,SAAS,oBAAoB,GAAQuI,GAAGqiD,eAC1Fh8B,EAAQ,GAsCZ,OApCA+7B,EAAWx4E,MAAK,CAAC4C,EAAK81E,KAClB,IAAIC,EAAa,GAAED,GAEnB,GAAa,YADFC,EAAWj5E,KAAK,QACH,CACpB,IAAIk5E,EAAgBD,EAAW54E,KAAK,uBAAuB,GAAQq2B,GAAGyiD,WAAWzmD,QACjF,GAAIwmD,EAAcz2E,OAAQ,CACtB,IAAI4B,EAAO60E,EAAcjrD,OAAO,wBAAwB,GAAQyI,GAAG0iD,mBAAmB32E,OAAS,QAAU,OACrG42E,EAAQH,EAAc/qD,SAAS,QAASmrD,EAAa,CAAC,EAAGp3C,EAAU,GAkBvE,GAjBAg3C,EAAc/qD,SAAS,WAAWA,SAAS,OAAO7tB,MAAK,CAAC0D,EAAGgV,KAASkpB,EAAQtgC,KAAK,GAAEoX,GAAKlW,OAAO,IAC/Fw2E,EAAa,CACT/5E,KAAM85E,EAAMlrD,SAAS,QAAQrrB,OAC7BkF,KAAMqxE,EAAMlrD,SAAS,eAAe,GAAQuI,GAAG6iD,UAAUz2E,OACzDsC,KAAMi0E,EAAMlrD,SAAS,QAAQrrB,OAC7B02E,SAAUnC,EAASr3E,KAAK,MACxBoK,GAAIivE,EAAMlrD,SAAS,cAAcrrB,OACjC22E,WAAYJ,EAAMlrD,SAAS,WAAWrrB,OACtCgnC,UAAWuvC,EAAMlrD,SAAS,iBAAiBrrB,OAC3Ci+D,WAAYsY,EAAMlrD,SAAS,cAAcrrB,OACzCsT,SAAUijE,EAAMlrD,SAAS,YAAYrrB,OACrC2iD,YAAa4zB,EAAMlrD,SAAS,QAAQrrB,OACpCyC,OAAQ8zE,EAAMlrD,SAAS,UAAUrrB,OACjCwC,MAAO+zE,EAAMlrD,SAAS,SAASrrB,OAC/B41D,MAAgB,UAATr0D,EACP69B,QAASA,GAEuB,GAAhCA,EAAQ,GAAGt9B,QAAQ,UAAgB,CACnC,IAAIoU,EAAMkpB,EAAQ,GAAG7/B,QAAQ,UAAW,SACpCwU,EAAM,GAAMwF,wBAAwBrD,EAAInV,MAAMmV,EAAIvW,OAAS,KAC/DuW,EAAMA,EAAInV,MAAM,EAAGmV,EAAIvW,OAAS,GAAK,GACrC,GAAE+H,OAAO8uE,EAAY,CAACp3C,QAAS,CAAClpB,GAAMnC,IAAKA,IAC3CyiE,EAAWI,qBAAsB,CACrC,CACA38B,EAAMn7C,KAAK03E,EACf,CACJ,KAEGv8B,CACX,EAEAu6B,mBAAoB,SAAUD,EAAUH,GACpC,GAAKG,EAGA,CACD,IAAIW,EAAOX,EAASh3E,KAAK,kBAAkBqyB,QAC3C,GAAIlyB,KAAKwC,IAAI,mBACLxC,KAAKwC,IAAI,kBAAkB+0E,YAAcC,EAAK33E,KAAK,aAAaL,KAAK,MACrE,OACR,IAAI0X,EAAUlX,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAU,CAACP,gBAAgB,IAC/Et2E,KAAK+f,IAAI,iBAAkB7I,GAC3BlX,KAAKm5E,oBAAoBjiE,EAASw/D,EACtC,MAVI12E,KAAKm5E,oBAAoB,KAAMzC,EAWvC,EAEAyC,oBAAqB,SAAUjiE,EAASw/D,GACpC,GAAKx/D,EAIA,CACD,IAAIwJ,EAASxJ,EAAQ1U,IAAI,WAAa,GAClCgmC,EAAQtxB,EAAQ1U,IAAI,UAAY,GAChC42E,EAAYliE,EAAQ1U,IAAI,aACxB62E,EAAcniE,EAAQ1U,IAAI,qBAC1B82E,EAAiB,KACjB1E,EAAW,GAAE/iE,OAAOqF,EAAQ1U,IAAI,YAEpC,GADA0U,EAAQ1U,IAAI,WAAa0U,EAAQ1U,IAAI,UAAUP,SAAWumC,EAAQA,EAAM+wC,OAAOriE,EAAQ1U,IAAI,YACvF62E,EAAa,CACb,IAAIG,EAAYH,EAAY,GAAG72E,IAAI,cAAgB,CAAC,EAChDoyE,IACOyE,EAAYp3E,OAAS,EAC5B2yE,EAAW,qBAAyB,2BAA4ByE,EAAYp3E,SAE5E2yE,EAAWyE,EAAY,GAAG72E,IAAI,YAAc62E,EAAY,GAAG72E,IAAI,sBAAwB,aAAiB,oCAAqC,CAAC62E,EAAY,GAAG72E,IAAI,qBAAqBP,SACtLq3E,EAAiBE,EAAU70B,UAAY00B,EAAY,GAAG72E,IAAI,aAAeg3E,EAAU5vE,IAE3F,CACK8W,GAAUA,EAAOze,QAAYumC,GAASA,EAAMvmC,OAC7C2yE,EAAW,8BAA8B,aAAiB,yCAA0C,CAACl0D,EAAOze,OAASumC,EAAMvmC,mBAEvHye,GAAUA,EAAOze,SACI,GAAjBye,EAAOze,SACP2yE,EAAW,8BAA8B,aAAiB,yDAA2Dl0D,EAAO,GAAG3hB,MAC/H2hB,EAAOze,OAAS,IAChB2yE,EAAW,8BAA8B,qBAAyB,oCAAqCl0D,EAAOze,mBAElHumC,GAASA,EAAMvmC,SACK,GAAhBumC,EAAMvmC,SACN2yE,EAAW,8BAA8B,aAAiB,wDAA0DpsC,EAAM,GAAGzpC,KAAO,KAAOypC,EAAM,GAAG5jC,KAAO,KAC3J4jC,EAAMvmC,OAAS,IACf2yE,EAAW,8BAA8B,qBAAyB,mCAAoCpsC,EAAMvmC,oBAGpHm3E,GAAaA,EAAUn3E,SACC,GAApBm3E,EAAUn3E,SACV2yE,EAAW,8BAA8B,aAAiB,2DAC1DwE,EAAUn3E,OAAS,IACnB2yE,EAAW,8BAA8B,qBAAyB,uCAAwCwE,EAAUn3E,mBAE5H,IAAIu3E,EAAYtiE,EAAQ1U,IAAI,cAAgB,CAAC,EACzCi3E,EAAez5E,KAAK0sB,QAAQgH,MAAMlxB,IAAIxC,KAAKu1B,SAASX,UAAUqO,QAC9Dy2C,EAAcD,EAAa9oD,qBAE3BgpD,EAAa,CACTC,OAFSJ,EAAU70B,UAAYztC,EAAQ1U,IAAI,aAAeg3E,EAAU5vE,GAGpE4Q,MAj6BG1G,EAi6BmBoD,EAAQ1U,IAAI,QAj6BR,GAAMyR,gBAAgBH,GAAwC,SAA5B,sBAAmE,WAA5B,sBAA2E,SAAlC,OAAW,sBAAmC,yBAk6B1LoD,QAAS09D,EACTiF,WAAYP,GAEhBQ,EAAkB,GAAE,GAAUC,YAAYzD,eAAeqD,IAC7DjD,EAAgB/2E,KAAKm6E,GAAiBv4E,QAAQ,oBAAqB,CAACG,WAAY,KAChF,IAAIs4E,EAAoBtD,EAAgB3xE,SACxC2xE,EAAgBl+C,SAAS,iBAAiBlzB,IAAI,CAC1C,OAAU,eAAiB00E,EAAoB,QAE/CN,GACAD,EAAavpD,iBACjBwmD,EAAgBl3E,KAAK,gBAAiB0X,EAAQ1U,IAAI,aACtD,MA9DIk0E,EAAgB/2E,KAAK,IACrB+2E,EAAgBl+C,SAAS,iBAAiBlzB,IAAI,CAAC,OAAS,SAj3B9C,IAACwO,CA+6BnB,EAEAmmE,YAAa,SAAUvrB,GACnBn6B,aAAav0B,KAAKg2E,uBAClBh2E,KAAKg2E,sBAAwB5rE,YAAW,KACpCpK,KAAK+f,IAAI,CACL20C,eAAgB,GAAOvrD,MACvBod,OAAQ,UACR4iC,eAAgB,IAClB,GACHuF,GAAW,IAClB,EAEAwrB,qBAAsB,SAAU7nD,EAAOrK,GACnC,GAAKhoB,KAAKgzE,aAAa3f,QAKhB,CACH,IAAI8mB,EAAoBn6E,KAAKgzE,aAAa1gD,OAAOD,GACjDrK,GAAYA,EAASmyD,EACzB,MAPIn6E,KAAKgzE,aAAaM,oBAAoB,CAAC,GAAG,KACtC,IAAI6G,EAAoBn6E,KAAKgzE,aAAa1gD,OAAOD,GACjDrK,GAAYA,EAASmyD,EAAkB,GAMnD,EAEAh9C,WAAY,WACJn9B,KAAKwC,IAAI,gBAAkBxC,KAAKwC,IAAI,UAAYxC,KAAKwC,IAAI,gBACzDxC,KAAK+f,IAAI,OAAQ/f,KAAKwC,IAAI,eAClC,EAEA43E,YAAa,SAAU/kD,GACdr1B,KAAK21E,eACN31E,KAAK21E,aAAgB31E,KAAKwC,IAAI,cAAiB,IAAI,wBAA4B,CAACsxB,MAAO9zB,OAAS,IAAI,sBAA0B,CAAC8zB,MAAO9zB,QAC1Iq1B,IAAWA,EAAS,YACpB,kBAAsBA,EAAQ,CAAC8D,MAAO,kBAAmBlE,QAASj1B,MACtE,EAEA6iC,iBAAkB,SAAUxN,EAAQr2B,GAChC,IACKq7E,EAAyBC,EAD1BpmF,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,MAElC9L,IACKA,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,cACzE0lD,EAAoBpmF,EAAK0gC,UAAUqO,QAAQpT,eAC3C,gBACAwqD,EAA0B,8BAC9Br7E,EAAUA,GAAW,CAAC,EACjBgB,KAAKu6E,oBAAuBv7E,EAAQugB,YACrCvf,KAAKu6E,mBAAsBv6E,KAAKwC,IAAI,cAAiB,IAAI,6BAAiC,CAACsxB,MAAO9zB,OAAS,IAAI,2BAA+B,CAAC8zB,MAAO9zB,SACrJA,KAAKw6E,8BAAgCx7E,EAAQugB,YAC9Cvf,KAAKw6E,6BAA+B,IAAI,2BAA+B,CAAC1mD,MAAO9zB,KAAMuf,WAAW,KACpG8V,IAAWA,EAAS,YAChB,mBAAuB,kBAAoC,UAAhBr2B,EAAQ6E,MAAoC,WAAhB7E,EAAQ6E,MAAqC,eAAhB7E,EAAQ6E,OAA0B7E,EAAQ8jC,aAC9I9iC,KAAK+f,IAAI,iBAAiB,GAC1B,kBAAsBsV,EAAQ,CAACgE,cAAe,GAAIpE,QAASj1B,SAGvDhB,EAAQugB,UACR,kBAAsB8V,EAAQ,CAACgE,cAAe,4BAA6BpE,QAASj1B,OAEpF,kBAAsBq1B,EAAQ,CAACgE,cAAe,kBAAmBpE,QAASj1B,OAC1EA,KAAKu6E,oBAAsBv6E,KAAKu6E,mBAAmBE,iCACnDz6E,KAAKu6E,mBAAmBE,+BAA+BC,aAClC,WAAjB17E,EAAQ6E,OACR7D,KAAKu6E,mBAAmBE,+BAA+B7oD,cACvD5xB,KAAKu6E,mBAAmBI,sBAEP,YAAjB37E,EAAQ6E,MACR7D,KAAKu6E,mBAAmB58E,EAAE,yEAAyE8N,QAEvGzL,KAAKu6E,mBAAmBtmD,aAG5BqmD,GACApmF,EAAK0gC,UAAUqO,QAAQlT,SAASuqD,GAChCD,GACA,uBAA2BA,EACnC,IAGJ,0BAAgC,oBAAwB,CACpDtpD,UAAW,uCACXvD,SAAU,GAAUusD,YAAYa,WAEhC3pD,OAAQ,CACJ,0BAA2B,gBAG/BhnB,KAAM,SAAUgrB,GACZj1B,KAAKi1B,QAAUA,EACfj1B,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAK0uB,OACL1uB,KAAK66E,aACT,EAEAC,YAAa,WACT,IAAIC,EAAU/6E,KAAKi1B,QAAQw9C,UAC3BzyE,KAAKrC,EAAE,gBAAgBwC,SAAS,UAChC46E,GAAW/6E,KAAKrC,EAAE,gBAAgBuC,YAAY,UAAU6M,YAAYguE,EAAoB,UAAXA,GAAkC,WAAXA,GAAsBp7E,KAAK,GAAId,UAAUuB,IAAI26E,KACrJ,EAEAxU,gBAAiB,SAAUhgD,GACvBvmB,KAAKrC,EAAE,iCAAiC4oB,OAAYpmB,SAAS,UACxDq4B,WAAWt4B,YAAY,UAC5BF,KAAK86E,aACT,EAEAD,YAAa,WACT,IAAIG,EAAoB,GAAI,CAACzkE,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAQqB,KAAM,QAC3FsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBACtC3uE,KAAK0sB,QAAQm/B,SAASmvB,GAAoBzH,IACtCvzE,KAAKuZ,UAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAEomB,GAAY1zE,KAAK,YAAc,GAAQq2B,GAAGE,SAAW,OACnG,IAAIorC,EAAexhE,KAAKuZ,UAAUE,OAAO5Z,MAAK6Z,GAAsB,UAAbA,EAAMK,MACzD/a,GAAWgB,KAAKuZ,UAAUE,OAAO5Z,MAAK6Z,GAAsB,UAAbA,EAAMK,OAAoB,IAAI/a,SAAW,GAC5F,IAAKA,EAAQiD,QAA+B,SAArBu/D,EAAa39D,KAGhC,OAFA7D,KAAK4L,kBACL,GAAMG,QAAQgC,MAAM,aAAiB,+CAGzC/N,KAAKi7E,eAAej8E,EAAQ,IAC7B,KACCgB,KAAK4L,aACL,GAAMG,QAAQgC,MAAM,aAAiB,gDAC/B,GAEd,EAEAktE,eAAgB,SAAUj8E,GACtBgB,KAAKrC,EAAE,kBAAkBgC,KAAK,IAC9BX,EAAQqT,SAAS7E,IACb,IAAI+Y,EAAS/Y,EACTg0D,EAAexhE,KAAKuZ,UAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,KAAOwM,EAAOxb,QAE/Dwb,EAAOmI,KADP8yC,EACcA,EAAa3nD,OAAO,GAEpB0M,EAAOxb,MACzB,IAAIowE,EAAe,GAAE,GAAUpB,YAAYqB,YAAY,CAAC70D,YACxDvmB,KAAKrC,EAAE,kBAAkBkP,OAAOsuE,EAAa,IAEjDn7E,KAAKumE,gBAAgBvmE,KAAKi1B,QAAQzyB,IAAI,UAC1C,EAEAikE,aAAc,SAAU57D,GACpB,IAAI0b,EAAS,GAAE1b,EAAG4C,QAAQstB,QAAQ,MAAMr7B,KAAK,SAC7CM,KAAKumE,gBAAgBhgD,GACrBvmB,KAAK0mE,YACL1mE,KAAK4L,YACT,EAEA86D,UAAW,WACP,IAAIngD,EAASvmB,KAAKrC,EAAE,4BAA4B+B,KAAK,SACrDM,KAAKy0D,UAAUluC,EACnB,EAEAyI,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACfR,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAElC,EAEAy0D,UAAW,SAAUluC,GACjB,IAAKvmB,KAAKuZ,WAAavZ,KAAKi1B,QAAQzyB,IAAI,cAAc+jB,SAAWA,EAC7D,OACJ,IAAI80D,EAAgB,GAAI,CAAC9kE,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAQqB,KAAM,QACnFsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBACtCnN,EAAexhE,KAAKuZ,UAAUE,OAAO5Z,MAAK6Z,GAAuB,WAAdA,EAAMK,MACzDrX,EAAM1C,KAAKuZ,UAAUE,OAAOrV,QAAQo9D,GACxCA,EAAa3nD,OAAS,CAAC0M,GACvBvmB,KAAKuZ,UAAUE,OAAO/W,GAAO8+D,EAC7B6Z,EAAgBr7E,KAAK0sB,QAAQkhC,oBAAoBytB,EAAer7E,KAAKuZ,WACrEvZ,KAAK0sB,QAAQm/B,SAASwvB,EAC1B,EAEAtsD,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACSlL,KAAKrC,EAAE,mBAAmB4P,OAElCvN,KAAK0mE,YACT1mE,KAAK4L,YACT,EAEAA,WAAY,WACR5L,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,mBAAyB,oBAAwB,CAC7C+wB,UAAW,2BAEXxC,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKD,IAAIP,KAAK,CAAC,UAAW,KAAQ,WAAYQ,KAAK8zB,MAAMtxB,IAAI,SAC7DxC,KAAKrC,EAAE,QAAQ2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QACnCxC,KAAKs7E,cACLt7E,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKu7E,aACLv7E,KAAKw7E,kBACLx7E,KAAKy7E,aACLz7E,KAAK8zB,MAAMzQ,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MAC9CA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACjDA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK86D,aAAc96D,MAC1DA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAK86D,aAAc96D,MACxDA,KAAK8zB,MAAMzQ,GAAG,kCAAmCrjB,KAAK86D,aAAc96D,MACpEA,KAAK8zB,MAAMzQ,GAAG,iCAAkCrjB,KAAK86D,aAAc96D,MACnEA,KAAK8zB,MAAMzQ,GAAG,kCAAmCrjB,KAAK86D,aAAc96D,MACpEA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKy7E,WAAYz7E,MACtDA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAKy7E,WAAYz7E,MACxDA,KAAK8zB,MAAMzQ,GAAG,aAAcrjB,KAAKy7E,WAAYz7E,MAC7CA,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAK07E,UAAW17E,MAChDA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK27E,gBAAiB37E,MAC7DA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAK47E,gBAAiB57E,MACxDA,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKw7E,gBAAiBx7E,KAC7D,EAEAm9B,WAAY,WACRn9B,KAAKrC,EAAE,SAAS2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QACxC,EAEAg7B,aAAc,WACVx9B,KAAKrC,EAAE,kBAAkBsH,UAAUjF,KAAK8zB,MAAM3uB,aAAcnF,KAAK88B,YACrE,EAEAg+B,aAAc,WAIV,GAHA96D,KAAKrC,EAAE,WAAW6B,KAAK,cAAeQ,KAAK8zB,MAAMtxB,IAAI,WACrDxC,KAAKrC,EAAE,cAAc6B,KAAK,cAAeQ,KAAK8zB,MAAMtxB,IAAI,WACxDxC,KAAKrC,EAAE,mBAAmB2E,KAAKtC,KAAK8zB,MAAM0gC,oBACV,WAA5Bx0D,KAAK8zB,MAAMtxB,IAAI,UAAwB,CACvC,IAAK,GAAQu7C,eAAe/9C,KAAK8zB,MAAMtxB,IAAI,QAEvC,YADAxC,KAAK8zB,MAAM/T,IAAI,CAACopC,eAAgB,WAGpC,GAAInpD,KAAK8zB,MAAMtxB,IAAI,aAAc,CACjC,IAAIyjB,GAAW,GAAO9c,MAAQnJ,KAAK8zB,MAAMtxB,IAAI,cAAc,IACvDq5E,EAAa,oBAAwB51D,GACzCjmB,KAAK8zB,MAAM/T,IAAI,CAAEopC,eAAgB0yB,GACjC,CACJ,CACJ,EAEAH,UAAW,WACP17E,KAAKy7E,aACLz7E,KAAKD,IAAIgN,YAAY,UAAW/M,KAAK8zB,MAAMtxB,IAAI,WACnD,EAEA+4E,WAAY,WACJv7E,KAAK8zB,MAAMtxB,IAAI,gBACfxC,KAAKrC,EAAE,iBAAiBwC,SAAS,UACjCH,KAAKrC,EAAE,eAAeuC,YAAY,UAE1C,EAEA07E,gBAAiB,WACmB,WAA5B57E,KAAK8zB,MAAMtxB,IAAI,WAA0BxC,KAAK8zB,MAAMtxB,IAAI,cAAgB,GAAE4I,YAAYpL,KAAKs7E,eAC3Ft7E,KAAKs7E,cAAgB73D,aAAY,KAC7B,IAAIwC,GAAW,GAAO9c,MAAQnJ,KAAK8zB,MAAMtxB,IAAI,cAAc,IACvDq5E,EAAa,oBAAwB51D,GACzCjmB,KAAK8zB,MAAM/T,IAAI,CAAEopC,eAAgB0yB,GAAa,GAC/C,KAIH/tC,cAAc9tC,KAAKs7E,cAE3B,EAEAE,gBAAiB,WACb,IAAIM,EAAgB97E,KAAK8zB,MAAMtxB,IAAI,cACnCxC,KAAKrC,EAAE,WAAW4T,OAAOuqE,GACzB97E,KAAKy7E,YACT,EAEAA,WAAY,WACR,IAAIV,EAAU/6E,KAAK8zB,MAAM2+C,UACzBzyE,KAAKrC,EAAE,cAAcwC,SAAS,UAC1BH,KAAK8zB,MAAMtxB,IAAI,eAEnBu4E,GAAW/6E,KAAKrC,EAAE,cAAcuC,YAAY,UAAU6M,YAAYguE,EAAoB,UAAXA,GAAkC,WAAXA,GAAsBp7E,KAAK,GAAId,UAAUuB,IAAI26E,KACnJ,EAEAY,gBAAiB,WACb37E,KAAKrC,EAAE,mBAAmB2E,KAAKtC,KAAK8zB,MAAM0gC,mBAC9C,IAGJ,wBAA8B,0BAA8B,CACxDhnC,SAAU,GAAUuuD,mBACpBj/C,YAAa,GAAU7lC,aAAaW,mBAEpCq5B,OAAQ,CACJ,MAAS,cACT,UAAa,UACb,WAAc,WAGlB+qD,QAAS,WACDh8E,KAAKrC,EAAE,SAAS2E,SAAWtC,KAAK8zB,MAAMtxB,IAAI,SAC1CxC,KAAKrC,EAAE,mBAAmBwC,SAAS,UACnCH,KAAKrC,EAAE,QAAQuC,YAAY,UAEnC,EAEA+7E,QAAS,WACLj8E,KAAKrC,EAAE,QAAQwC,SAAS,UACxBH,KAAKrC,EAAE,mBAAmBuC,YAAY,SAC1C,EAEAg8E,YAAa,WACTl8E,KAAK8zB,MAAMvoB,QAAQ,YAAavL,KAAK8zB,MACzC,IAGJ,uBAA6B,0BAA8B,CACvDtG,SAAU,GAAU2uD,kBACpBr/C,YAAa,GAAU7lC,aAAaa,kBAEpCm5B,OAAQ,CACJ,MAAS,eAGbzC,aAAc,WACVxuB,KAAKo8E,sBACLp8E,KAAKq8E,qBACLr8E,KAAKs8E,mBACLt8E,KAAKw7E,kBACLx7E,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAKo8E,oBAAqBp8E,MAC1DA,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAKq8E,mBAAoBr8E,MACzDA,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKw7E,gBAAiBx7E,KAC7D,EAEAo8E,oBAAqB,WACjBp8E,KAAKD,IAAIgN,YAAY,SAAU/M,KAAK8zB,MAAMtxB,IAAI,WAClD,EAEA65E,mBAAoB,WAChBr8E,KAAKD,IAAIgN,YAAY,UAAW/M,KAAK8zB,MAAMtxB,IAAI,WACnD,EACA85E,iBAAkB,WACdt8E,KAAKrC,EAAE,eAAemxB,MAC1B,EAEAotD,YAAa,WACT,IAAIl9E,EAAU,CAAC,EACd,2BAAiC,oCAAwC,SAAWgB,KAAK8zB,MAAMtxB,IAAI,QAAU,oCAAwC,eAAkBxD,EAAQugB,WAAY,GAC5Lvf,KAAK8zB,MAAMvoB,QAAQ,YAAavL,KAAK8zB,MAAO90B,EAChD,IAGJ,oBAA0B,oBAAwB,CAC9C2iB,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAKkY,IAAMlZ,EAAQi2B,QAAQzyB,IAAI,OAC/BxC,KAAK+sB,WAAa/tB,EAAQi2B,QAAQvI,QAAQK,WAC1C/sB,KAAKqjB,GAAG,aAAcrjB,KAAKu8E,kBAAmBv8E,MAC9CA,KAAKqjB,GAAG,SAAUrjB,KAAKo8D,kBAAmBp8D,KAC9C,EAEAu8E,kBAAmB,SAAUp5B,GACrBA,IAAanjD,KAAKkyB,SAClBlyB,KAAKi1B,QAAQlV,IAAI,CACb20C,eAAgB,GAAOvrD,MACvBod,OAAQ48B,EAAS3gD,IAAI,UACrB2mD,eAAgBhG,EAAS3gD,IAAI,mBAGzC,EAEA45D,kBAAmB,WACf,IAAIhlD,EAAQ,CAACs9C,eAAgB,GAAOvrD,OAChCnJ,KAAKiC,QACLmV,EAAMmP,OAASvmB,KAAKkyB,QAAQ1vB,IAAI,UAChC4U,EAAM+xC,eAAiBnpD,KAAKkyB,QAAQ1vB,IAAI,oBAExC4U,EAAMmP,OAAS,UACfnP,EAAM+xC,eAAiB,IAE3BnpD,KAAKi1B,QAAQlV,IAAI3I,EACrB,IAGJ,wBAA8B,wBAA4B,CACtD+kD,gBAAiB,SAAUhZ,GACvBnjD,KAAKkvB,SAASi0B,EAAS3gD,IAAI,YACvB,gBAAqB,CAACsxB,MAAOqvB,IACjCnjD,KAAKu8D,eAAepZ,GACpBnjD,KAAKD,IAAIG,YAAY,UACrBF,KAAKytB,OAAOoB,iBAChB,EAEAutC,kBAAmB,SAAUjZ,GACzBnjD,KAAKovB,YAAY+zB,EAAS3gD,IAAI,aAC9BxC,KAAKD,IAAIuR,OAAOtR,KAAK8zB,MAAM7xB,QAC3BjC,KAAKytB,OAAOoB,iBAChB,EAEAwtC,QAAS,WACLr8D,KAAKsvB,iBACLtvB,KAAKD,IAAII,SAAS,UAClBH,KAAKytB,OAAOoB,iBAChB,EAEA0tC,eAAgB,SAAUpZ,GACtB,IAAIt1B,EAAO7tB,KAAKivB,MAAMk0B,EAAS3gD,IAAI,aACnC,IAAKqrB,EAAM,OACXA,EAAK9tB,IAAI+K,SACT,IAAI4vD,EAAQ16D,KAAK8zB,MAAM1vB,QAAQ++C,GACjB,IAAVuX,EACA16D,KAAKrC,EAAE,mBAAmBy3B,QAAQvH,EAAK9tB,KAEvCC,KAAKrC,EAAE,kBAAkBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,KAEtDC,KAAK6uB,iBACT,IAGJ,6BAAmC,wBAA4B,CAC3DkC,UAAW,kCAEXxC,YAAa,WACTvuB,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKo8D,kBAAmBp8D,MAChDA,KAAK8zB,MAAMzQ,GAAG,QAASrjB,KAAKq8D,QAASr8D,MACrCA,KAAK8zB,MAAMzQ,GAAG,kBAAmBrjB,KAAKs8D,kBAAmBt8D,KAC7D,EAEAk8D,aAAc,WACVl8D,KAAK8zB,MAAMh0B,MAAMqjD,IACbnjD,KAAKm8D,gBAAgBhZ,EAAS,GAEtC,EAEAl5C,KAAM,WACEjK,KAAK8zB,MAAM7xB,QACXjC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKD,IAAIJ,KAAK,oFACdK,KAAKD,IAAIF,KAAK,iBAAiBF,KAAK,GAAId,UAAUuB,IAAI,gBACtDJ,KAAKk8D,cAAc,GAQnC,EAEAC,gBAAiB,SAAUhZ,GACvBnjD,KAAK8zB,MAAM6nC,YAAYxY,GACvBnjD,KAAKkvB,SAASi0B,EAAS3gD,IAAI,YACvB,qBAA0B,CAACsxB,MAAOqvB,IACtCnjD,KAAKu8D,eAAepZ,GACpBnjD,KAAKD,IAAIG,YAAY,SACzB,EAEAk8D,kBAAmB,SAAUjZ,GACzBnjD,KAAKovB,YAAY+zB,EAAS3gD,IAAI,aAC9BxC,KAAKD,IAAIuR,OAAOtR,KAAK8zB,MAAM7xB,OAC/B,EAEAo6D,QAAS,WACLr8D,KAAKsvB,iBACLtvB,KAAKD,IAAII,SAAS,SACtB,EAEAo8D,eAAgB,SAAUpZ,GACtB,IAAIt1B,EAAO7tB,KAAKivB,MAAMk0B,EAAS3gD,IAAI,aACnC,IAAKqrB,EAAM,OACXA,EAAK9tB,IAAI+K,SACT,IAAI4vD,EAAQ16D,KAAK8zB,MAAM1vB,QAAQ++C,GACjB,IAAVuX,EACA16D,KAAKrC,EAAE,mBAAmBy3B,QAAQvH,EAAK9tB,KAEvCC,KAAKrC,EAAE,kBAAkBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,KAEtDC,KAAK6uB,iBACT,IAGJ,oBAA0B,oBAAwB,CAC9CoC,OAAQ,CACJ,2BAA4B,UAC5B,sBAAuB,iBAI/B,yBAA+B,yBAA6B,CACxDA,OAAQ,CACJ,2BAA4B,UAC5B,oBAAqB,cACrB,wBAAyB,YACzB,kBAAmB,aAIvBurD,UAAW,SAAU3xE,GACjB7K,KAAK8zB,MAAM/T,IAAI,gBAAgB,GAC/B/f,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,iBACjDxC,KAAK8zB,MAAMizB,UAAS,KAChB/mD,KAAKm9B,aACLn9B,KAAKi4B,QAAQ,IAEjBj4B,KAAKytB,OAAO9vB,EAAE,8BAA8BwC,SAAS,WACrDH,KAAKrC,EAAE,iBAAiB2H,IAAI,CAACR,MAAO,gCAAoC,wBAAwBA,UAChG9E,KAAKytB,OAAOwC,cACRjwB,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBAAiB,UAElD,EAEAyuD,UAAW,SAAU5xE,GACjB7K,KAAK8zB,MAAM/T,IAAI,gBAAgB,GAC3B/f,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKiwB,cACLjwB,KAAKi0B,WACLj0B,KAAKytB,OAAOwG,WACZj0B,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,gBACrD,EAEA26B,WAAY,WACRn9B,KAAKrC,EAAE,yBAAyB2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SAChDxC,KAAK8zB,MAAMtxB,IAAI,SAAWxC,KAAK8zB,MAAMtxB,IAAI,eACzCxC,KAAKrC,EAAE,yBAAyBwC,SAAS,kBAEzCH,KAAKrC,EAAE,yBAAyBuC,YAAY,iBACpD,IAGJ,sBAA4B,oBAAwB,CAChD6wB,UAAW,sCACXvD,SAAU,GAAUkvD,gBACpB5uD,YAAa,sBACbgP,YAAa,GAAU7lC,aAAae,gBAEpCi5B,OAAQ,CACJ,oBAAqB,WACrB,kBAAmB,WACnB,wBAAyB,YACzB,iBAAkB,aAClB,oBAAqB,gBACrB,mBAAoB,eACpB,qBAAsB,aACtB,qBAAsB,iBACtB,kBAAmB,sBACnB,0BAA2B,uBAC3B,uCAAwC,yBAG5C1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK28E,WAAa,IAAI,qBAAyB,CAC3C7tE,GAAI9O,KAAKrC,EAAE,cAAc,GACzBm2B,MAAO9zB,KAAK8zB,QAEhB9zB,KAAK48E,eAAiB58E,KAAKkvB,SAAS,YAChC,wBAA6B,CAAC4E,MAAO9zB,KAAK8zB,MAAMjP,UAC5C/V,GAAI9O,KAAKrC,EAAE,yBAAyB,KAC5CqC,KAAKqiE,WAAariE,KAAKkvB,SAAS,QAAS,oBACrC,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,UAAU,KAC7CqC,KAAK68E,iBAAmB78E,KAAKkvB,SAAS,SAClC,yBAA8B,CAACpgB,GAAI9O,KAAKrC,EAAE,sBAAsB,KACpEqC,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKi9B,gBACLj9B,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,MACrC,MAAU,eAAgBA,KAAK88E,oBAAqB98E,MACpD,MAAU,eAAgBA,KAAK88E,oBAAqB98E,KACxD,EAEAgvB,OAAQ,SAAUhwB,GACTgB,KAAK8zB,MAAMtxB,IAAI,kBAChBxC,KAAKqiE,WAAW7a,UASpBxnD,KAAKrC,EAAE,+BAA+B28B,SAPd,CACpBC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,UAGf36B,KAAK+8E,sBACL/8E,KAAK88E,sBACL98E,KAAK27E,kBACL37E,KAAKm9B,aACLn9B,KAAKg9E,kBACLh9E,KAAK8zB,MAAMjP,UAAU20C,OAAOnnD,SAAS8wC,IAAcnjD,KAAK8zB,MAAMjP,UAAU82C,YAAYxY,EAAQ,GAChG,EAEA65B,gBAAiB,WACb,IAAIC,EAAS,GACbj9E,KAAKrC,EAAE,2BAA2BmC,MAAK,CAAC0D,EAAG05E,KAAYD,EAAO77E,KAAK87E,EAAOhkE,YAAW,IACrFlZ,KAAKrC,EAAE,2BAA2B2H,IAAI,QAAS,GAAGhJ,KAAKw5B,IAAIlH,MAAM,KAAMquD,OAC3E,EAEA9uD,oBAAqB,WACjBnuB,KAAK8zB,MAAM/T,IAAI,UAAW/f,KAAKyuB,YACnC,EAEAquD,oBAAqB,WACjB98E,KAAKrC,EAAE,mBAAmBoP,YAAY,cAAe,OAAW,SACpE,EAEAkrB,OAAQ,WACJ,IAAIqB,EAAUt5B,KAAK8zB,MAAMwF,QACrB,GAAExI,IAAIwI,EAAS,SAASt5B,KAAKm9B,aAC7B,GAAErM,IAAIwI,EAAS,UAAUt5B,KAAKw9B,eAC9B,GAAE1M,IAAIwI,EAAS,mBAAmBt5B,KAAK86D,eAEvC,GAAEhqC,IAAIwI,EAAS,iBAAiBt5B,KAAK+8E,sBACrC,GAAEjsD,IAAIwI,EAAS,4BAA4Bt5B,KAAK+8E,sBAChD,GAAEjsD,IAAIwI,EAAS,YAAYt5B,KAAK27E,kBAChC,GAAE7qD,IAAIwI,EAAS,mBAAmBt5B,KAAK27E,mBACvC,GAAE7qD,IAAIwI,EAAS,cAAgB,GAAExI,IAAIwI,EAAS,YAC9C,GAAExI,IAAIwI,EAAS,kBACft5B,KAAKi9B,eAEb,EAEAE,WAAY,WACRn9B,KAAKrC,EAAE,4BAA4B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SACnDxC,KAAK8zB,MAAMtxB,IAAI,SAAWxC,KAAK8zB,MAAMtxB,IAAI,eACzCxC,KAAKrC,EAAE,4BAA4BwC,SAAS,kBAE5CH,KAAKrC,EAAE,4BAA4BuC,YAAY,iBACvD,EAEA46D,aAAc,WACV96D,KAAKrC,EAAE,sBAAsB6B,KAAK,cAAeQ,KAAK8zB,MAAMtxB,IAAI,WAChExC,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAM0gC,mBACzD,EAEAmnB,gBAAiB,WACb37E,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAM0gC,mBACzD,EAEAh3B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAG,cAAe,WACX,IAAI41C,EAAY7yE,KAAK8zB,MAAMtxB,IAAI,aAC3B26E,EAAan9E,KAAK8zB,MAAMtxB,IAAI,WAC5B46E,EAAYp9E,KAAK8zB,MAAMtxB,IAAI,UAC3BquE,EAAe7wE,KAAK8zB,MAAMtxB,IAAI,gBAClCxC,KAAKrC,EAAE,YAAY4T,OAAOshE,GAC1B7yE,KAAKrC,EAAE,eAAe2T,OAAOuhE,GAC7B7yE,KAAKrC,EAAE,qBAAqBoP,YAAY,aAAcowE,GAAYpwE,YAAY,cAAeowE,GAC7Fn9E,KAAKrC,EAAE,6BAA6B2E,KAAK66E,EAAa,aAAiB,uBAAyB,aAAiB,sBACjHn9E,KAAKrC,EAAE,mDAAmDoP,YAAY,aAAcowE,GACpFn9E,KAAKrC,EAAE,qBAAqB2T,QAAQ8rE,GAAavK,IAAcsK,GAC1C,SAAjBtM,GAA4C,OAAjBA,EACnC,EAQAwM,WAAY,WACR,IAAIC,EAAS,IAAI9+E,GAAU,CACvBhJ,IAAK,QAAUwK,KAAK8zB,MAAMtxB,IAAI,OAC9B+6E,UAAU,IAEd,GAAMxxE,QAAQiC,IAAI,aAAiB,+BAAgC,KAAM,CAACZ,eAAe,EAAMjH,OAAQm3E,EAAOE,WAAYrwE,YAAc,qBAAuBnN,KAAK8zB,MAAMtxB,IAAI,QAAU,0BAA4BxC,KAAK8zB,MAAMtxB,IAAI,OAAS,UAAY,CAAE4L,mBAAoB,IAAKD,eAAgB,KAAM,UAAUoa,MAAMrgB,IAAD,GAE5T,EAEA60E,oBAAqB,WACjB,IAAIlM,EAAe7wE,KAAK8zB,MAAMtxB,IAAI,gBAC9ByvE,EAAajyE,KAAK8zB,MAAMtxB,IAAI,2BAC5BovE,EAAc5xE,KAAK8zB,MAAMtxB,IAAI,4BAC7Bi7E,EAAmBz9E,KAAKrC,EAAE,uCAC1B+/E,EAAkB19E,KAAKrC,EAAE,sCACR,SAAjBkzE,GACA6M,EAAgBp7E,KAAK,aAAiB,8BAA8Bq7E,KAAK,SAASpzE,KAAK,WAAW,GAClGkzE,EAAiBn7E,KAAK,aAAiB,iCAAiCq7E,KAAK,SAASpzE,KAAK,WAAW,IAC9E,SAAjBsmE,GACP6M,EAAgBp7E,KAAK,aAAiB,8BAA8Bq7E,KAAK,SAASpzE,KAAK,WAAW,GAClGkzE,EAAiBn7E,KAAK,aAAiB,6BAA6Bq7E,KAAK,SAASpzE,KAAK,WAAW,IAC1E,OAAjBsmE,GACP6M,EAAgBp7E,KAAK,aAAiB,gCAAgCq7E,KAAK,SAASpzE,KAAK,YAAWvK,KAAK8zB,MAAMtxB,IAAI,6BACnHi7E,EAAiBn7E,KAAK,aAAiB,iCAAiCq7E,KAAK,SAASpzE,KAAK,WAAW,IAEhGsmE,GAAiC,SAAjBA,IACtB6M,EAAgBp7E,KAAK,aAAiB,gCAAgCq7E,KAAK,SAASpzE,KAAK,YAAWvK,KAAK8zB,MAAMtxB,IAAI,6BACnHi7E,EAAiBn7E,KAAK,aAAiB,6BAA6Bq7E,KAAK,SAASpzE,KAAK,WAAW,IAElG0nE,GAA+B,SAAjBpB,GACd6M,EAAgBp7E,KAAK,aAAiB,8BAA8Bq7E,KAAK,SAASpzE,KAAK,WAAW,GAElGqnE,GACA6L,EAAiBn7E,KAAK,aAAiB,6BAA6Bq7E,KAAK,SAASpzE,KAAK,WAAW,EAE1G,EAEAqzE,sBAAuB,SAAU/yE,GAC7B,IAAIoqB,EAAUj1B,KAAK8zB,MACf4Q,EAAU,GAAE75B,EAAG4C,QACFi3B,EAAQn6B,KAAK,WAEC,2BAAvBm6B,EAAQllC,KAAK,MACby1B,EAAQo/C,cAERp/C,EAAQlV,IAAI,4BAA4B,GACxCkV,EAAQm/C,iBAIe,2BAAvB1vC,EAAQllC,KAAK,MACby1B,EAAQu/C,sBAERv/C,EAAQw/C,kBAEpB,EAEAoJ,SAAU,SAAUhzE,GAChB,GAAIA,IAAO,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAAiB,GAAEnC,EAAG4C,QAAQstB,QAAQ,gBAAgB94B,QAAUjC,KAAK8zB,MAAMtxB,IAAI,YACpI,OACJ,IAAIxD,EAAU,CAAC,EACd,2BAAiC,oCAAwC,SAAWgB,KAAK8zB,MAAMtxB,IAAI,QAAU,oCAAwC,eAAkBxD,EAAQugB,WAAY,GAC5Lvf,KAAK8zB,MAAMvoB,QAAQ,YAAavL,KAAK8zB,MAAO90B,EAChD,EAEA8+E,UAAW,SAAUjzE,GACb,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAAiBhN,KAAK8zB,MAAMtxB,IAAI,YAE9E,OAAW,UACXxC,KAAK+9E,SAASlzE,EACtB,EAEAkzE,SAAU,WACN,GAAI,qBAEA,YADA,GAAMxjE,uBAAuB,aAAiB,mCAAoC,KAGtFva,KAAK69E,WACL,IAAI3pF,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OACtC5/B,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQ+6C,mBAC3B,EAEAC,cAAe,WACXj+E,KAAK8zB,MAAM4gD,kBACf,EAEA7O,aAAc,WACV7lE,KAAK8zB,MAAMohD,iBACf,EAEAgJ,eAAgB,WACZl+E,KAAK8zB,MAAMqhD,mBACf,EAEAgJ,oBAAqB,SAAUtzE,GAC3B,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAAiBhN,KAAK8zB,MAAMtxB,IAAI,WAC9E,OACOxC,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OACtCsqD,UACT,EAEAC,WAAY,WACR,yBAA6B,CAAC3xD,QAAS1sB,KAAK0sB,QAASxU,IAAKlY,KAAK8zB,MAAMtxB,IAAI,QAC7E,EAEA87E,qBAAsB,WAClBt+E,KAAK8zB,MAAMigD,KAAK,aAChB/zE,KAAK8zB,MAAMvoB,QAAQ,WAAYvL,KAAK8zB,MAAO,kBAC3C9zB,KAAK69E,UACT,IAGJ,2BAAiC,6BAAiC,CAC9D9sD,UAAW,4CACXvD,SAAU,GAAU+wD,sBACpBzhD,YAAa,GAAU7lC,aAAae,gBAEpCi5B,OAAQ,CACJ,kCAAmC,WACnC,4BAA6B,oBAC7B,kBAAmB,WACnB,kBAAmB,WACnB,oCAAqC,WACrC,oBAAqB,qBACrB,wBAAyB,YACzB,iBAAkB,aAClB,oBAAqB,gBACrB,mBAAoB,eACpB,qBAAsB,aACtB,qBAAsB,iBACtB,2BAA4B,WAC5B,wBAAyB,aACzB,sBAAuB,aACvB,0BAA2B,wBAG/B1C,YAAa,SAAUvvB,GACnBgB,KAAKuf,UAAYvgB,EAAQugB,UACzBvf,KAAK+tB,aAAe/tB,KAAKrC,EAAE,uBAC3BqC,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK9L,KAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,MAAO90B,EAAQugB,WAAa,aACxEvf,KAAK28E,WAAa,IAAI,qBAAyB,CAC3C7tE,GAAI9O,KAAKrC,EAAE,cAAc,GACzBm2B,MAAO9zB,KAAK8zB,QAEhB9zB,KAAK28E,WAAWh/E,EAAE,uBAAuB4M,KAAK,YAAY,GACrDvK,KAAKuf,YACNvf,KAAKw+E,kBAAoBx+E,KAAKkvB,SAAS,OAAQ,mBAC3C,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,oBAAoB,MAE3DqC,KAAKy6E,+BAAiCz6E,KAAKkvB,SAAS,SAAU,+BAC1D,CAAC4E,MAAO9zB,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OAAQR,WAAY,IAAKxkB,GAAI9O,KAAKrC,EAAE,+BAA+B,KAC/GqC,KAAKqiE,WAAariE,KAAKkvB,SAAS,QAAS,yBACrC,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,UAAU,KAC7CqC,KAAK68E,iBAAmB78E,KAAKkvB,SAAS,SAClC,yBAA8B,CAACpgB,GAAI9O,KAAKrC,EAAE,sBAAsB,KACpEqC,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKi9B,gBACLj9B,KAAKohC,oBACLphC,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,MACrCA,KAAK9L,KAAKmvB,GAAG,eAAgBrjB,KAAKy+E,oBAAqBz+E,MACvD,MAAU,eAAgBA,KAAK88E,oBAAqB98E,MACpD,MAAU,eAAgBA,KAAK88E,oBAAqB98E,KACxD,EAEAgvB,OAAQ,SAAUhwB,GACTgB,KAAK8zB,MAAMtxB,IAAI,kBAChBxC,KAAKqiE,WAAW7a,UAEfxnD,KAAK8zB,MAAMtxB,IAAI,sBAQhBxC,KAAK+tB,aAAaC,iBAAiB,WAP/BhuB,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAO7CjuB,KAAKrC,EAAE,aAAa28B,SAAS,CACzBC,WAAY,IACZC,YAAa,IACbE,OAAO,IAEP16B,KAAKuf,YACLvf,KAAKrC,EAAE,wBAAwBuT,SAC/BlR,KAAKrC,EAAE,aAAauT,SACpBlR,KAAKrC,EAAE,gBAAgBuT,UAE3BlR,KAAK0+E,eACL1+E,KAAK+8E,sBACL/8E,KAAK88E,sBACL98E,KAAK27E,kBACL37E,KAAKm9B,aACLn9B,KAAKy+E,sBACLz+E,KAAKg9E,kBACLh9E,KAAKi7D,WAAW,SAChB,QAAY,aAAcj7D,KAAK2+E,gBAAiB3+E,MAChDA,KAAKi0B,WACLj0B,KAAK8zB,MAAMjP,UAAU20C,OAAOnnD,SAAS8wC,IAAcnjD,KAAK8zB,MAAMjP,UAAU82C,YAAYxY,EAAQ,IAC5F,GAAEp/C,QAAQuE,KAAK,wBAAyBtI,KAAK4+E,eAAet2E,KAAKtI,MACrE,EAEA0+E,aAAc,WACN1+E,KAAKqiE,aAAeriE,KAAK8zB,MAAMtxB,IAAI,iBACnCxC,KAAKqiE,WAAWoa,YAChBz8E,KAAKw+E,oBAAsBx+E,KAAK8zB,MAAMtxB,IAAI,gBAC1CxC,KAAKw+E,kBAAkBK,UAC/B,EAEAF,gBAAiB,WACb3+E,KAAKrC,EAAE,oBAAoBuT,SAC3BlR,KAAKrC,EAAE,SAAS+/D,OAChB19D,KAAKrC,EAAE,cAAcwC,SAAS,mBAClC,EAGAy+E,eAAgB,SAAU/zE,GACjB,qBAAyB,cAAc5I,QAAW,GAAExD,cAAc0uB,SAAS2xD,QAAUj0E,EAAGW,UAAY,GAAU/Y,YAAe,qBAAyB,WAAWk7B,SAAS,SAAS1rB,SACpLjC,KAAK8zB,MAAM+O,iBAAiB,aAC5B,GAAE9+B,QAAQ+0B,OAAO,yBAEzB,EAEA+kD,SAAU,SAAUhzE,GAChB7K,KAAK8zB,MAAM+O,iBAAiB,YAChC,EAEAzB,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,SAC1D,EAEAu8E,kBAAmB,WACf/+E,KAAKrC,EAAE,mBAAmB6B,KAAM,QAAS,qDACzCQ,KAAKrC,EAAE,8BAA8BwC,SAAS,WAC9CH,KAAKrC,EAAE,cAAcuC,YAAY,gBACjCF,KAAKrC,EAAE,0BAA0BwC,SAAS,YAC1CH,KAAKrC,EAAE,eAAeuC,YAAY,WAClCF,KAAKrC,EAAE,iBAAiBwC,SAAS,aAAaD,YAAY,mBAC1DF,KAAKrC,EAAE,+CAA+CuC,YAAY,gBAClEF,KAAKrC,EAAE,mEAAmEuC,YAAY,gBACtFF,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC/BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAW,GACZ,KACA,KACIhwB,KAAKi0B,UAAU,GAE3B,EAEA+oD,gBAAiB,WACb,IAAIC,EAAS,GACbj9E,KAAKrC,EAAE,2BAA2BmC,MAAK,CAAC0D,EAAG05E,KAAYD,EAAO77E,KAAK87E,EAAOhkE,YAAW,IACrFlZ,KAAKrC,EAAE,2BAA2B2H,IAAI,QAAS,GAAGhJ,KAAKw5B,IAAIlH,MAAM,KAAMquD,OAC3E,EAEA9uD,oBAAqB,WACjBnuB,KAAK8zB,MAAM/T,IAAI,UAAW/f,KAAKyuB,YACnC,EAEAquD,oBAAqB,WACjB98E,KAAKrC,EAAE,mBAAmBoP,YAAY,cAAe,OAAW,SACpE,EAEAkrB,OAAQ,WACJ,IAAIqB,EAAUt5B,KAAK8zB,MAAMwF,QACrB,GAAExI,IAAIwI,EAAS,SAASt5B,KAAKm9B,aAC7B,GAAErM,IAAIwI,EAAS,UAAUt5B,KAAKw9B,eAC9B,GAAE1M,IAAIwI,EAAS,mBAAmBt5B,KAAK86D,eACvC,GAAEhqC,IAAIwI,EAAS,iBAAiBt5B,KAAK+8E,sBACrC,GAAEjsD,IAAIwI,EAAS,4BAA4Bt5B,KAAK+8E,sBAChD,GAAEjsD,IAAIwI,EAAS,YAAYt5B,KAAK27E,kBAChC,GAAE7qD,IAAIwI,EAAS,mBAAmBt5B,KAAK27E,mBACvC,GAAE7qD,IAAIwI,EAAS,cAAgB,GAAExI,IAAIwI,EAAS,YAC9C,GAAExI,IAAIwI,EAAS,kBACft5B,KAAKi9B,eAEb,EAEAE,WAAY,WACRn9B,KAAKrC,EAAE,yBAAyB2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SAChDxC,KAAK8zB,MAAMtxB,IAAI,gBAAkBxC,KAAK8zB,MAAMtxB,IAAI,SAAWxC,KAAK8zB,MAAMtxB,IAAI,eAC1ExC,KAAKrC,EAAE,yBAAyBwC,SAAS,kBAEzCH,KAAKrC,EAAE,yBAAyBuC,YAAY,iBACpD,EAEA+zB,SAAU,WACN,GAAIj0B,KAAK8zB,MAAMtxB,IAAI,wBAA0BxC,KAAK8zB,MAAMtxB,IAAI,iBAExD,OADAxC,KAAK+tB,aAAaC,iBAAiB,YAC5B,EAEX,IAAIixD,EACAj/E,KAAKrC,EAAE,2CACPshF,EAAsBj/E,KAAKrC,EAAE,yCAAyC6E,IAAI,GAAG6pC,wBAAwBlO,KAEtGn+B,KAAK+tB,aAAa,GAAGiC,WAAa,KACjChwB,KAAKrC,EAAE,mBAAmB6B,KAAK,QAAS,sHACxCQ,KAAKrC,EAAE,8BAA8BuC,YAAY,WACjDF,KAAKrC,EAAE,cAAcwC,SAAS,gBAC9BH,KAAKrC,EAAE,cAAc2H,IAAI,CAACR,MAAO,gCAAoC,wBAAwBA,UAC7F9E,KAAKrC,EAAE,4CAA4CuC,YAAY,YAC/DF,KAAKrC,EAAE,sCAAsCwC,SAAS,aAElDH,KAAK+tB,aAAa,GAAGiC,WAAa,IACtChwB,KAAKrC,EAAE,mBAAmB6B,KAAK,QAAS,uDACxCQ,KAAKrC,EAAE,cAAcuC,YAAY,gBACjCF,KAAKrC,EAAE,8BAA8BwC,SAAS,WAC9CH,KAAKrC,EAAE,0BAA0BwC,SAAS,cAG1CH,KAAKrC,EAAE,mBAAmB6B,KAAM,QAAS,qDACzCQ,KAAKrC,EAAE,8BAA8BwC,SAAS,WAC9CH,KAAKrC,EAAE,cAAcuC,YAAY,gBACjCF,KAAKrC,EAAE,0BAA0BwC,SAAS,aAE1C8+E,GAAuBA,EAAsB,KAC7Cj/E,KAAKrC,EAAE,+CAA+CwC,SAAS,gBAC/DH,KAAKrC,EAAE,eAAewC,SAAS,WAC/BH,KAAKrC,EAAE,iBAAiBwC,SAAS,mBAAmBD,YAAY,aAChEF,KAAKrC,EAAE,mEAAmEwC,SAAS,gBACnFH,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC/BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,4CAA4CwC,SAAS,YAC5DH,KAAKrC,EAAE,sCAAsCuC,YAAY,YACzDF,KAAKrC,EAAE,sCAAsC2E,KAAKtC,KAAKrC,EAAE,yBAAyB2E,UAGlFtC,KAAKrC,EAAE,eAAeuC,YAAY,WAClCF,KAAKrC,EAAE,iBAAiBwC,SAAS,aAAaD,YAAY,mBAC1DF,KAAKrC,EAAE,+CAA+CuC,YAAY,gBAClEF,KAAKrC,EAAE,mEAAmEuC,YAAY,gBACtFF,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC/BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAEtC,EAEAupD,aAAc,WACV96D,KAAKrC,EAAE,sBAAsB6B,KAAK,cAAeQ,KAAK8zB,MAAMtxB,IAAI,WAChExC,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAM0gC,mBACzD,EAEAmnB,gBAAiB,WACb37E,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAM0gC,mBACzD,EAEAh3B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAG,cAAe,WACX,IAAI41C,EAAY7yE,KAAK8zB,MAAMtxB,IAAI,aAC3B26E,EAAan9E,KAAK8zB,MAAMtxB,IAAI,WAC5B46E,EAAYp9E,KAAK8zB,MAAMtxB,IAAI,UAC3BquE,EAAe7wE,KAAK8zB,MAAMtxB,IAAI,gBAClCxC,KAAKrC,EAAE,YAAY4T,OAAOshE,GAC1B7yE,KAAKrC,EAAE,gCAAgCoP,YAAY,aAAcowE,GAAYpwE,YAAY,cAAeowE,GACxGn9E,KAAKrC,EAAE,6BAA6B2E,KAAK66E,EAAa,aAAiB,uBAAyB,aAAiB,sBACjHn9E,KAAKrC,EAAE,6EAA6EoP,YAAY,aAAcowE,GAC9Gn9E,KAAKrC,EAAE,0BAA0B4T,OAAO4rE,GACxCn9E,KAAKrC,EAAE,qBAAqB2T,QAAQ8rE,GAAavK,IAAcsK,GAC1C,SAAjBtM,GAA4C,OAAjBA,EACnC,EAEA4N,oBAAqB,WACbz+E,KAAK9L,KAAKmoC,WACNr8B,KAAK9L,KAAKmoC,UAAY,KACtBr8B,KAAKrC,EAAE,aAAagC,KAAK,GAAId,UAAUuB,IAAI,eAE3CJ,KAAKrC,EAAE,aAAagC,KAAK,GAAId,UAAUuB,IAAI,iBAC/CJ,KAAKrC,EAAE,aAAawC,SAAS,SAASA,SAAS,YAG/CH,KAAKrC,EAAE,aAAagC,KAAK,GAAId,UAAUuB,IAAU,QACjDJ,KAAKrC,EAAE,aAAauC,YAAY,UAEpCF,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAK9L,KAAKmoC,WAC9Cr8B,KAAKrC,EAAE,wBAAwB4T,QAAQvR,KAAK9L,KAAKmoC,UACrD,EAEAghD,WAAY,WACR,IAAIC,EAAS,IAAI9+E,GAAU,CACvBhJ,IAAK,QAAUwK,KAAK8zB,MAAMtxB,IAAI,OAC9B+6E,UAAU,IAEd,GAAMxxE,QAAQiC,IAAI,aAAiB,+BAAgC,KAAM,CAACZ,eAAe,EAAMjH,OAAQm3E,EAAOE,WAAYrwE,YAAc,qBAAuBnN,KAAK8zB,MAAMtxB,IAAI,QAAU,0BAA4BxC,KAAK8zB,MAAMtxB,IAAI,OAAS,UAAY,CAAE4L,mBAAoB,IAAKD,eAAgB,KAAM,UAAUoa,MAAMrgB,IAAD,GAE5T,EAEA60E,oBAAqB,WACjB,IAAIlM,EAAe7wE,KAAK8zB,MAAMtxB,IAAI,gBAC9ByvE,EAAajyE,KAAK8zB,MAAMtxB,IAAI,2BAC5BovE,EAAc5xE,KAAK8zB,MAAMtxB,IAAI,4BAC7Bi7E,EAAmBz9E,KAAKrC,EAAE,uCAC1B+/E,EAAkB19E,KAAKrC,EAAE,sCACR,SAAjBkzE,GACA6M,EAAgBp7E,KAAK,aAAiB,8BAA8Bq7E,KAAK,SAASpzE,KAAK,WAAW,GAClGkzE,EAAiBn7E,KAAK,aAAiB,iCAAiCq7E,KAAK,SAASpzE,KAAK,WAAW,IAC9E,SAAjBsmE,GACP6M,EAAgBp7E,KAAK,aAAiB,8BAA8Bq7E,KAAK,SAASpzE,KAAK,WAAW,GAClGkzE,EAAiBn7E,KAAK,aAAiB,6BAA6Bq7E,KAAK,SAASpzE,KAAK,WAAW,IAC1E,OAAjBsmE,GACP6M,EAAgBp7E,KAAK,aAAiB,gCAAgCq7E,KAAK,SAASpzE,KAAK,YAAWvK,KAAK8zB,MAAMtxB,IAAI,6BACnHi7E,EAAiBn7E,KAAK,aAAiB,iCAAiCq7E,KAAK,SAASpzE,KAAK,WAAW,IAEhGsmE,GAAiC,SAAjBA,IACtB6M,EAAgBp7E,KAAK,aAAiB,gCAAgCq7E,KAAK,SAASpzE,KAAK,YAAWvK,KAAK8zB,MAAMtxB,IAAI,6BACnHi7E,EAAiBn7E,KAAK,aAAiB,6BAA6Bq7E,KAAK,SAASpzE,KAAK,WAAW,IAElG0nE,GAA+B,SAAjBpB,GACd6M,EAAgBp7E,KAAK,aAAiB,8BAA8Bq7E,KAAK,SAASpzE,KAAK,WAAW,GAElGqnE,GACA6L,EAAiBn7E,KAAK,aAAiB,6BAA6Bq7E,KAAK,SAASpzE,KAAK,WAAW,EAE1G,EAEA20E,SAAU,SAAUr0E,GAChB7K,KAAKw+E,kBAAkBU,UAC3B,EAEApB,UAAW,SAAUjzE,GACb,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAAiBhN,KAAK8zB,MAAMtxB,IAAI,YAE9E,OAAW,UACXxC,KAAK+9E,SAASlzE,EACtB,EAEAkzE,SAAU,WACN,GAAI,qBAEA,YADA,GAAMxjE,uBAAuB,aAAiB,mCAAoC,KAGtF,IAAIrmB,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OACtC5/B,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQ+6C,mBAC3B,EAEAC,cAAe,WACXj+E,KAAK8zB,MAAM4gD,kBACf,EAEA7O,aAAc,WACV7lE,KAAK8zB,MAAMohD,iBACf,EAEAgJ,eAAgB,WACZl+E,KAAK8zB,MAAMqhD,mBACf,EAEAiJ,SAAU,SAAUvzE,GAChB,GAAI7K,KAAK8zB,MAAMtxB,IAAI,WACf,OACJ,IACI28E,EADAC,EAAY,GAAEv0E,EAAG4C,QAAQstB,QAAQ,sBAAsBr7B,KAAK,QAE9C,cAAd0/E,IACAD,EAAgB,KACF,WAAdC,IACAD,EAAgB,MACF,WAAdC,IACAD,EAAgB,MACF,QAAdC,IACAD,EAAgB,OACF,YAAdC,IACAD,EAAgB,GACpBn/E,KAAK9L,KAAKkqF,SAASe,EACvB,EAEAE,WAAY,SAAUx0E,GACd7K,KAAK8zB,MAAMtxB,IAAI,YAEnBxC,KAAK9L,KAAKkqF,SAAS,GACvB,EAEAzD,mBAAoB,SAAU9vE,GAC1B7K,KAAKiwB,cACDjwB,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,WAEvChuB,KAAK8zB,MAAM/T,IAAI,iBAAiB,GAChC/f,KAAKrC,EAAE,gBAAgB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,kBAC7CxC,KAAKy6E,+BAA+B6E,aAAaz/E,KAAK,SAASkP,OACnE,EAEAsvE,WAAY,WACR,yBAA6B,CAAC3xD,QAAS1sB,KAAK0sB,QAASxU,IAAKlY,KAAK8zB,MAAMtxB,IAAI,QAC7E,EAEA+8E,WAAY,SAAU10E,GAClB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,iBAC/BykD,EAAY96C,EAAQhlC,KAAK,SAC7BM,KAAKrC,EAAE,SAASqhF,QAAQ,CAACS,WAAY/6C,EAAQkI,WAAWxO,MAAO,KAC/Dp+B,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAWhwB,KAAKrC,EAAE,yCAAyCivC,WAAWzO,IAAMn+B,KAAK+tB,aAAaiC,YAAY,KAC3G,KACA,KACIhwB,KAAKi0B,WACLj0B,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAWhwB,KAAKrC,EAAE,yCAAyCivC,WAAWzO,IAAMn+B,KAAK+tB,aAAaiC,YAAY,KAC3G,EACH,IAEThwB,KAAKrC,EAAE,2CAA2C2E,KAAKoiC,EAAQpiC,QAC/DtC,KAAKi7D,WAAWukB,EACpB,EAEAvkB,WAAY,SAAUl8D,GAClB,IAAI8uB,EAAO7tB,KAAKivB,MAAMlwB,IACrB8uB,IAASA,EAAO7tB,KAAK0/E,QAAQ3gF,IAC1B8uB,IACA7tB,KAAKrC,EAAE,yBAAyBuC,YAAY,UAC5CF,KAAKrC,EAAE,mCAAqCoB,EAAO,QAAQoB,SAAS,UACpE0tB,EAAK8xD,UAEb,EAEAD,QAAS,SAAU3gF,GACf,IAAI6gF,EACJ,OAAQ7gF,GACJ,IAAK,QACD6gF,EAAmB,mBACnB,MACJ,IAAK,QACDA,EAAmB,mBACnB,MACJ,IAAK,QACDA,EAAmB,kBACnB,MACJ,IAAK,QACDA,EAAmB,kBAG3B,OAAIA,EACO5/E,KAAKkvB,SAASnwB,EAAM6gF,EAAkB,CAAC9rD,MAAO9zB,KAAK8zB,MAAOvU,UAAWvf,KAAKuf,UAAWzQ,GAAI9O,KAAKrC,EAAE,sBAAsB,UAE7H,CACR,EAEA2gF,qBAAsB,WAClBt+E,KAAK8zB,MAAMigD,KAAK,aAChB/zE,KAAK8zB,MAAMvoB,QAAQ,WAAYvL,KAAK8zB,MAAO,kBAC3C9zB,KAAK69E,UACT,IAGJ,wBAA8B,oBAAwB,CAClD9sD,UAAW,wCACXvD,SAAU,GAAUusD,YAAY8F,mBAChC/xD,YAAa,sBACbgP,YAAa,GAAU7lC,aAAae,gBACpC8nF,mBAAoB,GAAU7oF,aAAaY,sBAE3Co5B,OAAQ,CACJ,kBAAmB,sBACnB,qBAAsB,aACtB,mBAAoB,iBACpB,oBAAqB,aACrB,0BAA2B,cAC3B,2BAA4B,iBAC5B,kCAAmC,0BACnC,kBAAmB,WACnB,oBAAqB,WACrB,2BAA4B,qBAC5B,8BAA+B,eAC/B,sBAAuB,cAG3B1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK28E,WAAa,IAAI,qBAAyB,CAC3C7tE,GAAI9O,KAAKrC,EAAE,cAAc,GACzBm2B,MAAO9zB,KAAK8zB,QAEhB9zB,KAAKgzE,aAAehzE,KAAKkvB,SAAS,eAAgB,oBAAyB,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,sBAAsB,KAChIqC,KAAK68E,iBAAmB78E,KAAKkvB,SAAS,SAClC,yBAA8B,CAACpgB,GAAI9O,KAAKrC,EAAE,sBAAsB,KACpEqC,KAAK+/E,sBAAwB//E,KAAKkvB,SAAS,kBAAmB,2BAAgC,CAAC4E,MAAM9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,+BAA+B,KAC3JqC,KAAKggF,kBAAoBhgF,KAAKkvB,SAAS,cAAe,uBAA4B,CAAC4E,MAAM9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,sBAAsB,KACtIqC,KAAKigF,2BAA6B,IAAI,+BAAmC,CAACnsD,MAAO9zB,KAAK8zB,QACtF9zB,KAAKkgF,0BAA4B,IAAI,2BAA+B,CAACpsD,MAAO9zB,KAAK8zB,QACjF9zB,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,MACrCA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKi9B,cAAej9B,MACzDA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKi9B,cAAej9B,KAC7D,EAEAgvB,OAAQ,WACJhvB,KAAKm9B,aACLn9B,KAAKi9B,gBACAj9B,KAAK8zB,MAAM+/C,WACZ7zE,KAAK8zB,MAAMu/C,WAAU,KACjBrzE,KAAKi9B,eAAe,IAE5Bj9B,KAAKrC,EAAE,eAAe2T,OAA0C,SAAnCtR,KAAK8zB,MAAMtxB,IAAI,iBAC5CxC,KAAKrC,EAAE,aAAa2T,OAA0C,SAAnCtR,KAAK8zB,MAAMtxB,IAAI,iBAC1C,IAAIygE,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SASf,OAPA36B,KAAKrC,EAAE,4CAA4C28B,SAAS2oC,GAC5DjjE,KAAKrC,EAAE,+BAA+B28B,SAAS2oC,GAC/CjjE,KAAKi7D,WAAW,gBAChBj7D,KAAKrC,EAAE,oBAAoBuT,SAC3BlR,KAAKrC,EAAE,SAAS+/D,OAChB19D,KAAKrC,EAAE,cAAcwC,SAAS,oBAC9BH,KAAKg9E,kBACEh9E,IACX,EAEAi4B,OAAQ,WACJ,IAAIqB,EAAUt5B,KAAK8zB,MAAMwF,QACrB,GAAExI,IAAIwI,EAAS,SAASt5B,KAAKm9B,aAC7B,GAAErM,IAAIwI,EAAS,UAAUt5B,KAAKw9B,gBAE9B,GAAE1M,IAAIwI,EAAS,mBAAqB,GAAExI,IAAIwI,EAAS,oBAAmBt5B,KAAK86D,cACnF,EAEA15B,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,SAC1D,EAEAw6E,gBAAiB,WACb,IAAIC,EAAS,GACbj9E,KAAKrC,EAAE,2BAA2BmC,MAAK,CAAC0D,EAAG05E,KAAYD,EAAO77E,KAAK87E,EAAOhkE,YAAW,IACrFlZ,KAAKrC,EAAE,2BAA2B2H,IAAI,QAAS,GAAGhJ,KAAKw5B,IAAIlH,MAAM,KAAMquD,OAC3E,EAEAhgD,cAAe,WACX,IAAIkjD,EAAWngF,KAAK8zB,MAAM+/C,WAAa7zE,KAAK8zB,MAAM+/C,UAAUp6D,OAAO5Z,MAAKusB,GAAgC,SAAlBA,EAAWrS,KAAkBqS,EAAWvS,SAC1HumE,EAAepgF,KAAK8zB,MAAM+/C,WAAa7zE,KAAK8zB,MAAM+/C,UAAUp6D,OAAO5Z,MAAKusB,GAAgC,gBAAlBA,EAAWrS,KAAyBqS,EAAWvS,SACrIsjE,EAAan9E,KAAK8zB,MAAMtxB,IAAI,WAChCxC,KAAKrC,EAAE,sBAAsBoP,YAAY,cAAeozE,GACxDngF,KAAKrC,EAAE,sBAAsBoP,YAAY,WAAYozE,GAAYC,IACjEpgF,KAAKrC,EAAE,mBAAmBoP,YAAY,aAAgD,QAAlC/M,KAAK8zB,MAAMtxB,IAAI,iBACnExC,KAAKrC,EAAE,oBAAoBoP,YAAY,aAAc/M,KAAK8zB,MAAMtxB,IAAI,iBAAqD,QAAlCxC,KAAK8zB,MAAMtxB,IAAI,iBACtGxC,KAAKrC,EAAE,kCAAkCoP,YAAY,cAAeozE,GACpEngF,KAAKrC,EAAE,cAAc4T,OAAO4rE,GAC5Bn9E,KAAKrC,EAAE,gBAAgB2T,OAAO6rE,EAClC,EAEAhgD,WAAY,WACRn9B,KAAKrC,EAAE,4BAA4B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SACnDxC,KAAK8zB,MAAMtxB,IAAI,SAAWxC,KAAK8zB,MAAMtxB,IAAI,eACzCxC,KAAKrC,EAAE,4BAA4BwC,SAAS,kBAE5CH,KAAKrC,EAAE,4BAA4BuC,YAAY,iBACvD,EAEAi+E,oBAAqB,SAAUtzE,GAC3B,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAAiBhN,KAAK8zB,MAAMtxB,IAAI,WAC9E,OACOxC,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OACtCsqD,UACT,EAQAf,WAAY,WACR,IAAIC,EAAS,IAAI9+E,GAAU,CACvBhJ,IAAK,QAAUwK,KAAK8zB,MAAMtxB,IAAI,OAC9B+6E,UAAU,IAEd,GAAMxxE,QAAQiC,IAAI,aAAiB,+BAAgC,KAAM,CAACZ,eAAe,EAAMjH,OAAQm3E,EAAOE,WAAYrwE,YAAc,qBAAuBnN,KAAK8zB,MAAMtxB,IAAI,QAAU,0BAA4BxC,KAAK8zB,MAAMtxB,IAAI,OAAS,UAAY,CAAE4L,mBAAoB,IAAKD,eAAgB,KAAM,UAAUoa,MAAMrgB,IAAD,GAE5T,EAEAm4E,eAAgB,SAAUx1E,GACtB,IAAK,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAAe,CAC1D,IAAIguE,EAAoB,GAAI,CAACzkE,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,OAAQqB,KAAM,QACvFsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,aACnC3uE,KAAK0sB,QAAQiK,WAAWqkD,GAAoBzH,IACxC,IAAIh6D,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAEomB,GAAY1zE,KAAK,YAAY,GAAQq2B,GAAGE,eACrFp2B,KAAKigF,2BAA2Bh2E,KAAKsP,EAAU,IAChD,KACC,GAAMgB,uBAAuB,aAAiB,8CAA+C,IAAK,GAE9G,CACJ,EAEA+lE,wBAAyB,SAAUz1E,GAC1B,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAC/ChN,KAAKkgF,0BAA0Bj2E,MACvC,EAEAs2E,eAAgB,SAAU11E,GACtB,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAC9C,OACJ,IAAIioB,EAAUj1B,KAAK8zB,MACnB,GAAM/nB,QAAQiC,IAAI,aAAiB,wBAAyB,aAAiB,0BAA2B,CAACinB,EAAQzyB,IAAI,UAAW,KAAM,CAAE2L,eAAgB,aAAiB,qBAAqBoa,MAAMrgB,IAChM,GAAIA,EAAQ,CACR+sB,EAAQu/C,sBACRv/C,EAAQk/C,mBACR,IAAIjgF,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GACtC/gC,EAAK+gF,2BAA0B,KAC3B/gF,EAAKqX,QAAQ,cACb,kBAAsB,YAAa,CAAC4tB,WAAO/d,GAAW,IACvD,KACClnB,EAAKqX,QAAQ,cACb,kBAAsB,YAAa,CAAC4tB,WAAO/d,GAAW,GAE9D,IAER,EAEAolE,WAAY,SAAU31E,GACb,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,gBAC1C,kBACD,gBAAsB,IAAI,uBAA2B,CAAE8mB,MAAO,mBAClE,qBAAyB9zB,KAAK0sB,QAAS1sB,KAAK8zB,OAEpD,EAEAyrD,WAAY,SAAU10E,GAClB,IACI20E,EADU,GAAE30E,EAAG4C,QAAQstB,QAAQ,iBACXr7B,KAAK,SAC7BM,KAAKi7D,WAAWukB,EACpB,EAEAvkB,WAAY,SAAUl8D,GAClB,IAAI8uB,EAAO7tB,KAAKivB,MAAMlwB,IACrB8uB,IAASA,EAAO7tB,KAAK0/E,QAAQ3gF,IAC1B8uB,IACA7tB,KAAKrC,EAAE,yBAAyBuC,YAAY,UAC5CF,KAAKrC,EAAE,mCAAqCoB,EAAO,QAAQoB,SAAS,UACpE0tB,EAAK8xD,UAEb,EAEAD,QAAS,SAAU3gF,GACf,IAAI6gF,EACJ,OAAQ7gF,GACJ,IAAK,UACD6gF,EAAmB,eACnB,MACJ,IAAK,cACDA,EAAmB,mBAG3B,OAAIA,EACO5/E,KAAKkvB,SAASnwB,EAAM6gF,EAAkB,CAAC9rD,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,sBAAsB,UAElG,CACR,EAEA8iF,eAAgB,SAAUz4D,EAAUnN,GAChC,IAAIkb,EAAK,GAAI,CACTlyB,KAAM,MACN0S,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,SAChD2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,YAChD3uE,KAAK0sB,QAAQm/B,SAAS91B,EAAI/N,EAAUnN,EACxC,EAEA6lE,YAAa,WACT1gF,KAAK8zB,MAAM4gD,kBACf,EAEA7O,aAAc,WACV7lE,KAAK8zB,MAAMohD,iBACf,EAEAgJ,eAAgB,WACZl+E,KAAK8zB,MAAMqhD,mBACf,EAEAra,aAAc,WACV96D,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAM0gC,mBACzD,EAEAh3B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,6BAA6BsH,UAAUjK,EAAOgF,KAAK88B,YAC9D,EAEA+gD,SAAU,WACN79E,KAAK8zB,MAAMvoB,QAAQ,YAAavL,KAAK8zB,MACzC,EAEAouC,aAAc,SAAUr3D,GACpB,IAAI6O,EAAQ7O,EAAG4C,OACf,IAAKiM,EAAM8uB,MAAMvmC,OACb,OAEJ,IAAIgF,EAAOyS,EAAM8uB,MAAM,GACvB9uB,EAAM3O,MAAQ,GACV9D,EAAKrC,KAAO,GAAUhO,qBACtB,GAAMmV,QAAQgC,MAAM,aAAiB,4CAE7B9G,EAAKpD,KAAK+jB,WAAW,UAIjC,GAAElO,GAAO8e,SAAS,mBAAmBr4B,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UAC7F,GAAMugB,OAAO1Z,kBAAkBC,GAAMshB,MAAMvtB,IACnCA,IACAiM,EAAK2B,OAAS5N,EACdgF,KAAK8zB,MAAMk4B,UAAU/kD,EAAM,IAAI,WAC3B,GAAEyS,GAAO8e,SAAS,mBAAmBt4B,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,SACvG,IAAG,SAAU6N,GACT,GAAE2L,GAAO8e,SAAS,mBAAmBt4B,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAEnG,IAAI8/C,EAAa,GAAEjyC,GAAOlO,KAAK,QAAQyC,QAAU,aAAiB,8CAClE,GAAMyJ,QAAQgC,MAAMiyC,EACxB,IACJ,KAfA,GAAMj0C,QAAQgC,MAAM,aAAiB,sCAiB7C,EAEAinE,mBAAoB,WAChB,IAAI/D,EAAajxE,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OACjD,GAAM/nB,QAAQiC,IAAI,aAAiB,2BAA4B,aAAiB,4BAA6B,KAAM,CAAEG,eAAgB,aAAiB,YAAYoa,MAAMrgB,IAChKA,GACA+oE,EAAW+D,oBAAmB,EAClC,GAER,IAGJ,6BAAmC,oBAAwB,CACvDjkD,UAAW,8CACXvD,SAAU,GAAUusD,YAAY4G,yBAChC7yD,YAAa,sBACbgP,YAAa,GAAU7lC,aAAae,gBACpC8nF,mBAAoB,GAAU7oF,aAAaY,sBAE3Co5B,OAAQ,CACJ,2BAA4B,WAC5B,wBAAyB,aACzB,kBAAmB,WACnB,oBAAqB,qBACrB,gCAAiC,eACjC,qBAAsB,aACtB,mBAAoB,iBACpB,oBAAqB,aACrB,0BAA2B,cAC3B,2BAA4B,iBAC5B,kCAAmC,mBACnC,kBAAmB,WACnB,oCAAqC,WACrC,kCAAmC,WACnC,4BAA6B,oBAC7B,2BAA4B,qBAC5B,8BAA+B,eAC/B,mDAAoD,aACpD,6CAA8C,cAGlD1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK9L,KAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OAC5C9zB,KAAK28E,WAAa,IAAI,qBAAyB,CAC3C7tE,GAAI9O,KAAKrC,EAAE,cAAc,GACzBm2B,MAAO9zB,KAAK8zB,QAEhB9zB,KAAK28E,WAAWh/E,EAAE,uBAAuB4M,KAAK,YAAY,GAC1DvK,KAAKgzE,aAAehzE,KAAKkvB,SAAS,eAAgB,yBAA8B,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,sBAAsB,KACrIqC,KAAK68E,iBAAmB78E,KAAKkvB,SAAS,SAClC,yBAA8B,CAACpgB,GAAI9O,KAAKrC,EAAE,sBAAsB,KACpEqC,KAAKw+E,kBAAoBx+E,KAAKkvB,SAAS,OAAQ,iBAC3C,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,oBAAoB,KACvDqC,KAAK+/E,sBAAwB//E,KAAKkvB,SAAS,kBAAmB,gCAAqC,CAAC4E,MAAM9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,+BAA+B,KAChKqC,KAAKggF,kBAAoBhgF,KAAKkvB,SAAS,cAAe,4BAAiC,CAAC4E,MAAM9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,sBAAsB,KAC3IqC,KAAKy6E,+BAAiCz6E,KAAKkvB,SAAS,SAAU,+BAC1D,CAAC4E,MAAO9zB,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OAAQR,WAAY,IAAKxkB,GAAI9O,KAAKrC,EAAE,+BAA+B,KAC/GqC,KAAKigF,2BAA6B,IAAI,+BAAmC,CAACnsD,MAAO9zB,KAAK8zB,QACtF9zB,KAAK4gF,gCAAkC5gF,KAAKkvB,SAAS,eACjD,gCACA,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,4BAA4B,KAC/DqC,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,MACrCA,KAAK9L,KAAKmvB,GAAG,eAAgBrjB,KAAKy+E,oBAAqBz+E,MACvDA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKi9B,cAAej9B,MACzDA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKi9B,cAAej9B,KAC7D,EAEAgvB,OAAQ,WACJhvB,KAAKm9B,aACLn9B,KAAKi9B,gBACAj9B,KAAK8zB,MAAM+/C,WACZ7zE,KAAK8zB,MAAMu/C,WAAU,KACjBrzE,KAAKi9B,eAAe,IAEvBj9B,KAAK8zB,MAAMtxB,IAAI,sBAQhBxC,KAAK+tB,aAAaC,iBAAiB,WAP/BhuB,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAO7CjuB,KAAKrC,EAAE,aAAa28B,SAAS,CACzBC,WAAY,IACZC,YAAa,IACbE,OAAO,IAEX16B,KAAKrC,EAAE,eAAe2T,OAA0C,SAAnCtR,KAAK8zB,MAAMtxB,IAAI,iBAC5CxC,KAAKrC,EAAE,aAAa2T,OAA0C,SAAnCtR,KAAK8zB,MAAMtxB,IAAI,iBAC1C,IAAIygE,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAWf,OATA36B,KAAKrC,EAAE,4CAA4C28B,SAAS2oC,GAC5DjjE,KAAKrC,EAAE,+BAA+B28B,SAAS2oC,GAC/CjjE,KAAKi0B,WACLj0B,KAAK0+E,eACL1+E,KAAKy+E,sBACLz+E,KAAKi7D,WAAW,gBAChBj7D,KAAKg9E,kBACL,QAAY,aAAch9E,KAAK2+E,gBAAiB3+E,MAChD,GAAE+D,QAAQuE,KAAK,wBAAyBtI,KAAK4+E,eAAet2E,KAAKtI,OAC1DA,IACX,EAEA2+E,gBAAiB,WACb3+E,KAAKrC,EAAE,6BAA6BuT,SACpClR,KAAKrC,EAAE,kBAAkB+/D,OACzB19D,KAAKrC,EAAE,6BAA6BwC,SAAS,mBACjD,EAEAu+E,aAAc,WACL1+E,KAAK8zB,MAAMtxB,IAAI,iBAChBxC,KAAK+/E,sBAAsBtD,YAC1Bz8E,KAAK8zB,MAAMtxB,IAAI,gBAChBxC,KAAKw+E,kBAAkBK,WACtB7+E,KAAK8zB,MAAMtxB,IAAI,wBAChBxC,KAAK4gF,gCAAgCC,mBACzC7gF,KAAK8zB,MAAM/T,IAAI,sBAAsB,GACrC/f,KAAKrC,EAAE,6BAA6B4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,sBAC9D,EAEA08E,SAAU,SAAUr0E,GAChB7K,KAAKw+E,kBAAkBU,UAC3B,EAEA4B,iBAAkB,SAAUj2E,GACxB7K,KAAK4gF,gCAAgCE,kBACzC,EAEAD,iBAAkB,SAAUh2E,GACxB7K,KAAK8zB,MAAM/T,IAAI,uBAAuB,GACtC/f,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,wBACnDxC,KAAKk/E,UACT,EAGAN,eAAgB,SAAU/zE,GACjB,qBAAyB,cAAc5I,QAAW,GAAExD,cAAc0uB,SAAS2xD,QAAUj0E,EAAGW,UAAY,GAAU/Y,YAAe,qBAAyB,WAAWk7B,SAAS,SAAS1rB,SACpLjC,KAAK8zB,MAAM+O,iBAAiB,aAC5B,GAAE9+B,QAAQ+0B,OAAO,yBAEzB,EAEA2lD,oBAAqB,WACbz+E,KAAK9L,KAAKmoC,WACNr8B,KAAK9L,KAAKmoC,UAAY,KACtBr8B,KAAKrC,EAAE,aAAagC,KAAK,GAAId,UAAUuB,IAAI,eAE3CJ,KAAKrC,EAAE,aAAagC,KAAK,GAAId,UAAUuB,IAAI,iBAC/CJ,KAAKrC,EAAE,aAAawC,SAAS,SAASA,SAAS,YAG/CH,KAAKrC,EAAE,aAAagC,KAAK,GAAId,UAAUuB,IAAU,QACjDJ,KAAKrC,EAAE,aAAauC,YAAY,UAEpCF,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAK9L,KAAKmoC,UAClD,EAEApE,OAAQ,WACJ,IAAIqB,EAAUt5B,KAAK8zB,MAAMwF,QACrB,GAAExI,IAAIwI,EAAS,SAASt5B,KAAKm9B,aAC7B,GAAErM,IAAIwI,EAAS,UAAUt5B,KAAKw9B,gBAE9B,GAAE1M,IAAIwI,EAAS,mBAAqB,GAAExI,IAAIwI,EAAS,oBAAmBt5B,KAAK86D,cACnF,EAEA15B,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,SAC1D,EAEAw6E,gBAAiB,WACb,IAAIC,EAAS,GACbj9E,KAAKrC,EAAE,2BAA2BmC,MAAK,CAAC0D,EAAG05E,KAAYD,EAAO77E,KAAK87E,EAAOhkE,YAAW,IACrFlZ,KAAKrC,EAAE,2BAA2B2H,IAAI,QAAS,GAAGhJ,KAAKw5B,IAAIlH,MAAM,KAAMquD,OAC3E,EAEAhgD,cAAe,WACX,IAAIkjD,EAAWngF,KAAK8zB,MAAM+/C,WAAa7zE,KAAK8zB,MAAM+/C,UAAUp6D,OAAO5Z,MAAKusB,GAAgC,SAAlBA,EAAWrS,KAAkBqS,EAAWvS,SAC1HumE,EAAepgF,KAAK8zB,MAAM+/C,WAAa7zE,KAAK8zB,MAAM+/C,UAAUp6D,OAAO5Z,MAAKusB,GAAgC,gBAAlBA,EAAWrS,KAAyBqS,EAAWvS,SACrIsjE,EAAan9E,KAAK8zB,MAAMtxB,IAAI,WAChCxC,KAAKrC,EAAE,sBAAsBoP,YAAY,cAAeozE,GACxDngF,KAAKrC,EAAE,sBAAsBoP,YAAY,WAAYozE,GAAYC,IACjEpgF,KAAKrC,EAAE,mBAAmBoP,YAAY,aAAgD,QAAlC/M,KAAK8zB,MAAMtxB,IAAI,iBACnExC,KAAKrC,EAAE,oBAAoBoP,YAAY,aAAc/M,KAAK8zB,MAAMtxB,IAAI,iBAAqD,QAAlCxC,KAAK8zB,MAAMtxB,IAAI,iBACtGxC,KAAKrC,EAAE,kCAAkCoP,YAAY,cAAeozE,GACpEngF,KAAKrC,EAAE,cAAc4T,OAAO4rE,GAC5Bn9E,KAAKrC,EAAE,gBAAgB2T,OAAO6rE,EAClC,EAEAhgD,WAAY,WACRn9B,KAAKrC,EAAE,4BAA4B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QAC3D,EAEA47E,SAAU,SAAUvzE,GAChB,GAAI7K,KAAK8zB,MAAMtxB,IAAI,WACf,OACJ,IACI28E,EADAC,EAAY,GAAEv0E,EAAG4C,QAAQstB,QAAQ,sBAAsBr7B,KAAK,QAE9C,cAAd0/E,IACAD,EAAgB,KACF,WAAdC,IACAD,EAAgB,MACF,WAAdC,IACAD,EAAgB,MACF,QAAdC,IACAD,EAAgB,OACF,YAAdC,IACAD,EAAgB,GACpBn/E,KAAK9L,KAAKkqF,SAASe,EACvB,EAEAE,WAAY,SAAUx0E,GACd7K,KAAK8zB,MAAMtxB,IAAI,YAEnBxC,KAAK9L,KAAKkqF,SAAS,GACvB,EAEAzD,mBAAoB,SAAU9vE,GAC1B7K,KAAKiwB,cACDjwB,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,WAEvChuB,KAAK8zB,MAAM/T,IAAI,iBAAiB,GAChC/f,KAAKrC,EAAE,gBAAgB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,kBAC7CxC,KAAKy6E,+BAA+B6E,aAAaz/E,KAAK,SAASkP,OACnE,EAEAklB,SAAU,WACN,GAAIj0B,KAAK8zB,MAAMtxB,IAAI,wBAA0BxC,KAAK8zB,MAAMtxB,IAAI,iBAExD,OADAxC,KAAK+tB,aAAaC,iBAAiB,YAC5B,EAEX,IAAIixD,EACAj/E,KAAKrC,EAAE,0EACPshF,EAAsBj/E,KAAKrC,EAAE,wEAAwE6E,IAAI,GAAG6pC,wBAAwBlO,KAErIn+B,KAAK+tB,aAAa,GAAGiC,WAAa,KACjChwB,KAAKrC,EAAE,mBAAmB6B,KAAM,QAAS,sHACzCQ,KAAKrC,EAAE,8BAA8BuC,YAAY,WACjDF,KAAKrC,EAAE,cAAcwC,SAAS,gBAC9BH,KAAKrC,EAAE,cAAc2H,IAAI,CAACR,MAAO,gCAAoC,wBAAwBA,UAC7F9E,KAAKrC,EAAE,iDAAiDuC,YAAY,YACpEF,KAAKrC,EAAE,2CAA2CwC,SAAS,aAEvDH,KAAK+tB,aAAa,GAAGiC,WAAa,IACtChwB,KAAKrC,EAAE,mBAAmB6B,KAAM,QAAS,uDACzCQ,KAAKrC,EAAE,cAAcuC,YAAY,gBACjCF,KAAKrC,EAAE,8BAA8BwC,SAAS,WAC9CH,KAAKrC,EAAE,+BAA+BwC,SAAS,cAG/CH,KAAKrC,EAAE,mBAAmB6B,KAAM,QAAS,qDACzCQ,KAAKrC,EAAE,8BAA8BwC,SAAS,WAC9CH,KAAKrC,EAAE,cAAcuC,YAAY,gBACjCF,KAAKrC,EAAE,+BAA+BwC,SAAS,aAE/C8+E,GAAuBA,EAAsB,KAC7Cj/E,KAAKrC,EAAE,8EAA8EwC,SAAS,gBAC9FH,KAAKrC,EAAE,eAAewC,SAAS,WAC/BH,KAAKrC,EAAE,iBAAiBwC,SAAS,mBAAmBD,YAAY,aAChEF,KAAKrC,EAAE,kGAAkGwC,SAAS,gBAClHH,KAAKrC,EAAE,4BAA4B4T,QAAO,GAC1CvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,iDAAiDwC,SAAS,YACjEH,KAAKrC,EAAE,2CAA2CuC,YAAY,YAC9DF,KAAKrC,EAAE,2CAA2C2E,KAAKtC,KAAKrC,EAAE,sDAAsD2E,UAGpHtC,KAAKrC,EAAE,eAAeuC,YAAY,WAClCF,KAAKrC,EAAE,iBAAiBwC,SAAS,aAAaD,YAAY,mBAC1DF,KAAKrC,EAAE,8EAA8EuC,YAAY,gBACjGF,KAAKrC,EAAE,kGAAkGuC,YAAY,gBACrHF,KAAKrC,EAAE,4BAA4B4T,QAAO,GAC1CvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAEtC,EAEAwvE,aAAc,WACN/gF,KAAK9L,MAAQ8L,KAAK9L,KAAK0gC,WAAa50B,KAAK9L,KAAK0gC,UAAUqO,SAAWjjC,KAAK9L,KAAK0gC,UAAUqO,QAAQ+9C,MAC/FhhF,KAAK9L,KAAK0gC,UAAUqO,QAAQ+9C,KAAKD,cAEzC,EAEA1D,WAAY,WACR,IAAIC,EAAS,IAAI9+E,GAAU,CACvBhJ,IAAK,QAAUwK,KAAK8zB,MAAMtxB,IAAI,OAC9B+6E,UAAU,IAEd,GAAMxxE,QAAQiC,IAAI,aAAiB,+BAAgC,KAAM,CAACZ,eAAe,EAAMjH,OAAQm3E,EAAOE,WAAYrwE,YAAc,qBAAuBnN,KAAK8zB,MAAMtxB,IAAI,QAAU,0BAA4BxC,KAAK8zB,MAAMtxB,IAAI,OAAS,UAAY,CAAE4L,mBAAoB,IAAKD,eAAgB,KAAM,UAAUoa,MAAMrgB,IAAD,GAE5T,EAEAm4E,eAAgB,SAAUx1E,GACtB,IAAK,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAAe,CAC1D,IAAIguE,EAAoB,GAAI,CAACzkE,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,OAAQqB,KAAM,QACvFsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,aACnC3uE,KAAK0sB,QAAQiK,WAAWqkD,GAAoBzH,IACxC,IAAIh6D,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAEomB,GAAY1zE,KAAK,YAAY,GAAQq2B,GAAGE,eACrFp2B,KAAKigF,2BAA2Bh2E,KAAKsP,EAAU,IAChD,KACC,GAAMgB,uBAAuB,aAAiB,8CAA+C,IAAK,GAE9G,CACJ,EAEAgmE,eAAgB,SAAU11E,GACtB,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAC9C,OACJ,IAAIioB,EAAUj1B,KAAK8zB,MACnB,GAAM/nB,QAAQiC,IAAI,aAAiB,wBAAyB,aAAiB,0BAA2B,CAACinB,EAAQzyB,IAAI,UAAW,KAAM,CAAE2L,eAAgB,aAAiB,qBAAqBoa,MAAMrgB,IAChM,GAAIA,EAAQ,CACR+sB,EAAQu/C,sBACRv/C,EAAQk/C,mBACR,IAAIjgF,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GACtC/gC,EAAK+gF,2BAA0B,KAC3B/gF,EAAKqX,QAAQ,cACb,kBAAsB,YAAa,CAAC4tB,WAAO/d,EAAWie,cAAe,MAAM,IAC5E,KACCnlC,EAAKqX,QAAQ,cACb,kBAAsB,YAAa,CAAC4tB,WAAO/d,EAAWie,cAAe,MAAM,GAEnF,IAER,EAEAmnD,WAAY,SAAU31E,GACb,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,gBAC1C,kBACD,gBAAsB,IAAI,uBAA2B,CAAE8mB,MAAO,mBAClE,qBAAyB9zB,KAAK0sB,QAAS1sB,KAAK8zB,OAEpD,EAEAirD,kBAAmB,WACf/+E,KAAKrC,EAAE,mBAAmB6B,KAAM,QAAS,qDACzCQ,KAAKrC,EAAE,8BAA8BwC,SAAS,WAC9CH,KAAKrC,EAAE,cAAcuC,YAAY,gBACjCF,KAAKrC,EAAE,+BAA+BwC,SAAS,YAC/CH,KAAKrC,EAAE,eAAeuC,YAAY,WAClCF,KAAKrC,EAAE,iBAAiBwC,SAAS,aAAaD,YAAY,mBAC1DF,KAAKrC,EAAE,8EAA8EuC,YAAY,gBACjGF,KAAKrC,EAAE,kGAAkGuC,YAAY,gBACrHF,KAAKrC,EAAE,4BAA4B4T,QAAO,GAC1CvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAW,GACZ,KACA,KACIhwB,KAAKi0B,UAAU,GAE3B,EAEAsrD,WAAY,SAAU10E,GAClB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,iBAC/BykD,EAAY96C,EAAQhlC,KAAK,SACZ,WAAb8/E,GAAuC,eAAbA,IAC1Bx/E,KAAKrC,EAAE,sDAAsD2E,KAAKoiC,EAAQpiC,QAC1EtC,KAAKrC,EAAE,SAASqhF,QAAQ,CAACS,WAAY/6C,EAAQkI,WAAWxO,KAAO,IAAK,KACpEp+B,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAWhwB,KAAKrC,EAAE,wEAAwEivC,WAAWzO,IAAMn+B,KAAK+tB,aAAaiC,YAAc,KAC5I,KACA,KACIhwB,KAAKi0B,WACLj0B,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAWhwB,KAAKrC,EAAE,wEAAwEivC,WAAWzO,IAAMn+B,KAAK+tB,aAAaiC,YAAc,KAC5I,EACH,KAGbhwB,KAAKi7D,WAAWukB,EACpB,EAEAvkB,WAAY,SAAUl8D,GAClB,IAAI8uB,EAAO7tB,KAAKivB,MAAMlwB,IACrB8uB,IAASA,EAAO7tB,KAAK0/E,QAAQ3gF,IAC1B8uB,IACa,gBAAT9uB,GAAmC,YAATA,GAC1BiB,KAAKrC,EAAE,oCAAoCuC,YAAY,UACvDF,KAAKrC,EAAE,8CAAgDoB,EAAO,QAAQoB,SAAS,YAG/EH,KAAKrC,EAAE,kCAAkCuC,YAAY,UACrDF,KAAKrC,EAAE,4CAA8CoB,EAAO,QAAQoB,SAAS,WAEjF0tB,EAAK8xD,UAEb,EAEAD,QAAS,SAAU3gF,GACf,IAAI6gF,EAAkBqB,EACtB,OAAQliF,GACJ,IAAK,QACD6gF,EAAmB,mBACnB,MACJ,IAAK,QACDA,EAAmB,mBACnB,MACJ,IAAK,QACDA,EAAmB,kBACnB,MACJ,IAAK,QACDA,EAAmB,kBACnB,MACJ,IAAK,UACDA,EAAmB,eACnBqB,GAAY,EACZ,MACJ,IAAK,cACDrB,EAAmB,mBACnBqB,GAAY,EAGpB,OAAIrB,GAAoBqB,EACbjhF,KAAKkvB,SAASnwB,EAAM6gF,EAAkB,CAAC9rD,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,2BAA2B,KAClGiiF,EACE5/E,KAAKkvB,SAASnwB,EAAM6gF,EAAkB,CAAC9rD,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKrC,EAAE,sBAAsB,UAElG,CACR,EAEA8iF,eAAgB,SAAUz4D,EAAUnN,GAChC,IAAIkb,EAAK,GAAI,CACTlyB,KAAM,MACN0S,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,SAChD2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,YAChD3uE,KAAK0sB,QAAQm/B,SAAS91B,EAAI/N,EAAUnN,EACxC,EAEA6lE,YAAa,WACT1gF,KAAK8zB,MAAM4gD,kBACf,EAEA7O,aAAc,WACV7lE,KAAK8zB,MAAMohD,iBACf,EAEAgJ,eAAgB,WACZl+E,KAAK8zB,MAAMqhD,mBACf,EAEAra,aAAc,WACV96D,KAAKrC,EAAE,8BAA8B2E,KAAKtC,KAAK8zB,MAAM0gC,mBACzD,EAEAh3B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,6BAA6BsH,UAAUjK,EAAOgF,KAAK88B,YAC9D,EAEA+gD,SAAU,SAAUhzE,GAChB7K,KAAK8zB,MAAM+O,iBAAiB,YAChC,EAEAq/B,aAAc,SAAUr3D,GACpB,IAAI6O,EAAQ7O,EAAG4C,OACf,IAAKiM,EAAM8uB,MAAMvmC,OACb,OAEJ,IAAIgF,EAAOyS,EAAM8uB,MAAM,GACvB9uB,EAAM3O,MAAQ,GACV9D,EAAKrC,KAAO,GAAUhO,qBACtB,GAAMmV,QAAQgC,MAAM,aAAiB,4CAE7B9G,EAAKpD,KAAK+jB,WAAW,UAIjC,GAAElO,GAAO8e,SAAS,mBAAmBr4B,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UAC7F,GAAMugB,OAAO1Z,kBAAkBC,GAAMshB,MAAMvtB,IACnCA,IACAiM,EAAK2B,OAAS5N,EACdgF,KAAK8zB,MAAMk4B,UAAU/kD,EAAM,IAAI,WAC3B,GAAEyS,GAAO8e,SAAS,mBAAmBt4B,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,SACvG,IAAG,SAAU6N,GACT,GAAE2L,GAAO8e,SAAS,mBAAmBt4B,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAEnG,IAAI8/C,EAAa,GAAEjyC,GAAOlO,KAAK,QAAQyC,QAAU,aAAiB,8CAClE,GAAMyJ,QAAQgC,MAAMiyC,EACxB,IACJ,KAfA,GAAMj0C,QAAQgC,MAAM,aAAiB,sCAiB7C,EAEAinE,mBAAoB,WAChB,IAAI/D,EAAajxE,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OACjD,GAAM/nB,QAAQiC,IAAI,aAAiB,2BAA4B,aAAiB,4BAA6B,KAAM,CAAEG,eAAgB,aAAiB,YAAYoa,MAAMrgB,IAChKA,GACA+oE,EAAW+D,oBAAmB,EAClC,GAER,IAGJ,uBAA6B,oBAAwB,CACjDxnD,SAAU,GAAUusD,YAAYmH,aAChCjwD,OAAQ,CACJ,qBAAsB,YACtB,yBAA0B,aAG9B1C,YAAa,WACTvuB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKgvB,SACLhvB,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKgvB,OAAQhvB,MAC5CA,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKgvB,OAAQhvB,KACpD,EAEAgvB,OAAQ,WACJ,IAAIu2B,EAAavlD,KAAK8zB,MAAMtxB,IAAI,cAC3B+iD,IAELvlD,KAAKrC,EAAE,WAAW6B,KAAK,cAAe+lD,EAAWh/B,QAAUvmB,KAAK8zB,MAAMtxB,IAAI,WAC1ExC,KAAKrC,EAAE,mBAAmB2E,KAAKijD,EAAWG,YAC9C,EAEA+O,UAAW,YACe,IAAI,2BACVxqD,KAAKjK,KAAK8zB,MAC9B,IAGJ,4BAAkC,oBAAwB,CACtDtG,SAAU,GAAUusD,YAAYoH,mBAChClwD,OAAQ,CACJ,gCAAiC,YACjC,yBAA0B,aAG9B1C,YAAa,WACTvuB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKgvB,SACLhvB,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKgvB,OAAQhvB,MAC5CA,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKgvB,OAAQhvB,KACpD,EAEAgvB,OAAQ,WACJ,IAAIu2B,EAAavlD,KAAK8zB,MAAMtxB,IAAI,cAC3B+iD,IAELvlD,KAAKy7E,aACLz7E,KAAKrC,EAAE,WAAW6B,KAAK,cAAe+lD,EAAWh/B,QAAUvmB,KAAK8zB,MAAMtxB,IAAI,WAC1ExC,KAAKrC,EAAE,mBAAmB2E,KAAKijD,EAAWG,YAC9C,EAEA+1B,WAAY,WACR,IAAIV,EAAU/6E,KAAK8zB,MAAM2+C,UACzBzyE,KAAKrC,EAAE,gBAAgBwC,SAAS,UAC5BH,KAAK8zB,MAAMtxB,IAAI,eAEnBu4E,GAAW/6E,KAAKrC,EAAE,gBAAgBuC,YAAY,UAAU6M,YAAYguE,EAAoB,UAAXA,GAAkC,WAAXA,GAAsBp7E,KAAK,GAAId,UAAUuB,IAAI26E,KACrJ,EAEAtmB,UAAW,YACe,IAAI,2BACVxqD,KAAKjK,KAAK8zB,MAC9B,IAGJ,2BAAiC,oBAAwB,CACrDtG,SAAU,GAAUusD,YAAYgG,sBAEhC9uD,OAAQ,CACJ,6CAA8C,eAGlD1C,YAAa,WACTvuB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKi4B,OAAQj4B,MAChDA,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAKi4B,OAAQj4B,KACvD,EAEAgvB,OAAQ,WACChvB,KAAK8zB,MAAMtxB,IAAI,kBAChBxC,KAAK8zB,MAAM0wB,OAASxkD,KAAK8zB,MAAM0wB,MAAMgD,UACzCxnD,KAAKi4B,QACT,EAEAA,OAAQ,WACJ,IAAItZ,EAAO3e,KAAK8zB,MAAMtxB,IAAI,eAAiB,CAAC,EAC5CxC,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,mBAAqB,aAAiB,oCAAsC,aAAiB,kCACvIxC,KAAKrC,EAAE,qBAAqB2E,KAAKqc,EAAKzG,KACtClY,KAAKrC,EAAE,gBAAgB2E,KAAKqc,EAAK5f,MACjCiB,KAAKrC,EAAE,uBAAuB2E,KAAKqc,EAAKsmC,aACxCjlD,KAAKrC,EAAE,iBAAiB2E,KAAK,GAAMwT,YAAY6I,EAAKmV,QACpD9zB,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAMwT,YAAY6I,EAAK4H,SACrDvmB,KAAKrC,EAAE,sBAAsB2E,KAA0B,SAApBqc,EAAK8mC,WAAyB,aAAiB,6BAA+B,GAAM3vC,YAAY6I,EAAK8mC,aACxIzlD,KAAKrC,EAAE,mBAAmBoP,YAAY,UAAW4R,EAAK5f,MACtDiB,KAAKrC,EAAE,0BAA0BoP,YAAY,UAAW4R,EAAKsmC,aAC7DjlD,KAAKrC,EAAE,oBAAoBoP,YAAY,UAAW4R,EAAKmV,OACvD9zB,KAAKrC,EAAE,qBAAqBoP,YAAY,UAAW4R,EAAK4H,QACxDvmB,KAAKrC,EAAE,yBAAyBoP,YAAY,UAAW4R,EAAK8mC,WAChE,EAEA2B,YAAa,SAAUv8C,GACnB,IAAIu2E,EAAe,GAAEv2E,EAAG4C,QAAQstB,QAAQ,cACpCssB,EAAgB+5B,EAAavhF,KAAK,UAAWynD,EAAc,GAC/DD,EAAcvnD,MAAK,CAAC4C,EAAKxB,KACrB,IACIqmD,EADQ,GAAErmD,GACSoB,OACvB,GAAI8+E,EAAap0E,SAAS,wBAAyB,CAC/C,IAAIq0E,EAAaD,EAAavhF,KAAK,UAAUqyB,QAAQ5vB,OACjDilD,IAAe,aAAiB,+BAChCA,GAAc,IAAM85B,EAAWrrE,cACvC,CACAuxC,GAA8B,IAAfD,IAAuBA,GAAe,MACrDC,IAAeD,GAAeC,GAC9BD,GAAe,GAAMttC,oBAAoBstC,EAAa,aAAiB,8BAA+B,aAAiB,kCAAkC,GAEjK,IAGJ,gCAAsC,oBAAwB,CAC1D95B,SAAU,GAAUusD,YAAYuH,4BAEhCrwD,OAAQ,CACJ,2BAA4B,UAC5B,oBAAqB,cACrB,kBAAmB,aAGvB1C,YAAa,WACTvuB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKi4B,OAAQj4B,MAChDA,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAKi4B,OAAQj4B,MACnDA,KAAK+tB,aAAe/tB,KAAKrC,EAAE,uBACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAGzCjuB,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAK8zB,MAAM/T,IAAI,gBAAgB,EACnC,EAEAiP,OAAQ,WACChvB,KAAK8zB,MAAMtxB,IAAI,kBAChBxC,KAAK8zB,MAAM0wB,OAASxkD,KAAK8zB,MAAM0wB,MAAMgD,UACzCxnD,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,iBAC7CxC,KAAKytB,OAAOM,aAAa9rB,SACrBjC,KAAK8zB,MAAMtxB,IAAI,gBAGfxC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAH5CjuB,KAAKytB,OAAOM,aAAaC,iBAAiB,YAMlDhuB,KAAK8zB,MAAMqJ,aACXn9B,KAAK8zB,MAAM0J,eACXx9B,KAAKuhF,sBACLvhF,KAAK8zB,MAAMizB,UAAS,KAChB/mD,KAAKm9B,aACLn9B,KAAKi4B,SACDj4B,KAAKytB,OAAO+wD,mBACZx+E,KAAKytB,OAAO+wD,kBAAkBvmD,QAAQ,GAElD,EAEAhE,SAAU,WACHj0B,KAAK+tB,aAAa,GAAGiC,WAAa,KACjChwB,KAAKrC,EAAE,uBAAuBwC,SAAS,gBACvCH,KAAKrC,EAAE,uBAAuB6B,KAAK,QAAS,uHAExCQ,KAAK+tB,aAAa,GAAGiC,WAAa,IACtChwB,KAAKrC,EAAE,uBAAuBuC,YAAY,gBAC1CF,KAAKrC,EAAE,uBAAuB6B,KAAK,QAAS,yDAG5CQ,KAAKrC,EAAE,uBAAuBuC,YAAY,gBAC1CF,KAAKrC,EAAE,uBAAuB6B,KAAK,QAAS,qDAGpD,EAEA+hF,oBAAqB,SAAU12E,GACtB7K,KAAKrC,EAAE,iCAAiCqP,SAAS,WAClDhN,KAAKrC,EAAE,iCAAiCwC,SAAS,SACjDH,KAAKrC,EAAE,eAAe4T,QAAO,GAErC,EAGAirE,UAAW,SAAU3xE,GACjB7K,KAAK8zB,MAAM/T,IAAI,gBAAgB,GAC/B/f,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,iBACjDxC,KAAK8zB,MAAMizB,UAAS,KAChB/mD,KAAKm9B,aACLn9B,KAAKi4B,QAAQ,IAEjBj4B,KAAKytB,OAAO9vB,EAAE,8BAA8BwC,SAAS,WACrDH,KAAKrC,EAAE,iBAAiB2H,IAAI,CAACR,MAAO,gCAAoC,wBAAwBA,UAChG9E,KAAKytB,OAAOwC,cACRjwB,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBAAiB,UAElD,EAEAyuD,UAAW,SAAU5xE,GACjB7K,KAAK8zB,MAAM/T,IAAI,gBAAgB,GAC3B/f,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKiwB,cACLjwB,KAAKi0B,WACLj0B,KAAKytB,OAAOwG,WACZj0B,KAAKrC,EAAE,oBAAoB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,gBACrD,EAEA26B,WAAY,WACRn9B,KAAKrC,EAAE,yBAAyB2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SAChDxC,KAAK8zB,MAAMtxB,IAAI,SAAWxC,KAAK8zB,MAAMtxB,IAAI,eACzCxC,KAAKrC,EAAE,yBAAyBwC,SAAS,kBAEzCH,KAAKrC,EAAE,yBAAyBuC,YAAY,iBACpD,EAEA+3B,OAAQ,WACJ,IAAItZ,EAAO3e,KAAK8zB,MAAMtxB,IAAI,eAAiB,CAAC,EAC5CxC,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,mBAAqB,aAAiB,oCAAsC,aAAiB,kCACvIxC,KAAKrC,EAAE,qBAAqB2E,KAAKqc,EAAKzG,KACtClY,KAAKrC,EAAE,gBAAgB2E,KAAKqc,EAAK5f,MACjCiB,KAAKrC,EAAE,uBAAuB2E,KAAKqc,EAAKsmC,aACxCjlD,KAAKrC,EAAE,iBAAiB2E,KAAK,GAAMwT,YAAY6I,EAAKmV,QACpD9zB,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAMwT,YAAY6I,EAAK4H,SACrDvmB,KAAKrC,EAAE,sBAAsB2E,KAA0B,SAApBqc,EAAK8mC,WAAyB,aAAiB,6BAA+B,GAAM3vC,YAAY6I,EAAK8mC,aACxIzlD,KAAKrC,EAAE,mBAAmBoP,YAAY,UAAW4R,EAAK5f,MACtDiB,KAAKrC,EAAE,0BAA0BoP,YAAY,UAAW4R,EAAKsmC,aAC7DjlD,KAAKrC,EAAE,oBAAoBoP,YAAY,UAAW4R,EAAKmV,OACvD9zB,KAAKrC,EAAE,qBAAqBoP,YAAY,UAAW4R,EAAK4H,QACxDvmB,KAAKrC,EAAE,yBAAyBoP,YAAY,UAAW4R,EAAK8mC,WAChE,EAEA2B,YAAa,SAAUv8C,GACnB,IACIw8C,EADe,GAAEx8C,EAAG4C,QACS5N,KAAK,UAAWynD,EAAc,GAC/DD,EAAcvnD,MAAK,CAAC4C,EAAKxB,KACrB,IACIqmD,EADQ,GAAErmD,GACSoB,OACvBilD,GAA8B,IAAfD,IAAuBA,GAAe,MACrDC,IAAeD,GAAeC,GAC9BD,GAAe,GAAMttC,oBAAoBstC,EAAa,aAAiB,8BAA+B,aAAiB,kCAAkC,GAEjK,IAGJ,+BAAqC,oBAAwB,CACzDv2B,UAAW,gDAEXE,OAAQ,CACJ,kBAAmB,cACnB,oBAAqB,QACrB,eAAgB,mBAChB,mCAAoC,oBAGxC1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK8zB,MAAMzQ,GAAG,cAAerjB,KAAKm9B,WAAYn9B,KAClD,EAEAiK,KAAM,SAAUsP,GACZvZ,KAAKuZ,UAAYA,EACjB,IAAIioE,EAAYxhF,KAAKuZ,UAAUE,OAAO9C,QAAOukE,GAAe,SAAVA,EAAEr3E,MAA6B,UAAVq3E,EAAEr3E,OAAkB5B,QAAUjC,KAAKuZ,UAAUE,OAAOxX,OAC3HjC,KAAKD,IAAIJ,KAAK,GAAUo6E,YAAYkG,2BAA2B,CAACuB,UAAWA,EAAW/nE,OAAQF,EAAUE,OAAQ08D,QAASn2E,KAAKi1B,QAAQzyB,IAAI,mBAAoB0V,IAAKlY,KAAK8zB,MAAMtxB,IAAI,UAClLxC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kBAAkB2H,IAAI,SAAUtF,KAAKD,IAAIgF,SAAW,KAAKipB,iBAAiB,CAAC5E,MAAO,cACzFppB,KAAK6uB,iBAAiB,EAE1B1jB,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKrC,EAAE,kBAAkB2H,IAAI,SAAU,QACvCtF,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,EAEA7U,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAChBT,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKrC,EAAE,kBAAkB2H,IAAI,SAAU,QACvCtF,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,EAEAod,WAAY,WACRn9B,KAAKrC,EAAE,mBAAmBkC,KAAK,SAASA,KAAK,UAAUyC,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QAC/E,EAEAi/E,YAAa,WACT,GAAIzhF,KAAKrC,EAAE,aAAaqP,SAAS,cAC7B,OAEJ,IAAI00E,GAAc,EACd3rD,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACvE2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,aACvC3uE,KAAKuZ,UAAUE,OAAOpH,SAASqH,IAC3B,GAAmB,WAAfA,EAAM7V,MAAoC,UAAf6V,EAAM7V,KACjC,OACJ,IAAIkH,EAAQ2O,EAAMG,OAASH,EAAMG,OAAO,GAAK,KACzC8nE,EAAc3hF,KAAKrC,EAAE,IAAM+b,EAAMK,IAAM,wBACvC6nE,EAAW5hF,KAAKrC,EAAE,IAAM+b,EAAMK,IAAM,6BACpC8nE,EAAW7hF,KAAKrC,EAAE,IAAM+b,EAAMK,IAAM,mBACpCge,EAAY,GAIhB,GAHA4pD,EAAY1/E,SAAW81B,EAAY4pD,EAAY,GAAG/3E,IAClDg4E,EAAS3/E,SAAW81B,EAAY6pD,EAASr0E,OACzCs0E,EAAS5/E,SAAW81B,EAAY8pD,EAASt0E,OACrCxC,IAAUgtB,EAAW,CACrB,IAAI+pD,EAAY9hF,KAAKuZ,UAAUE,OAAOrV,QAAQsV,GAC9CA,EAAMG,OAAS,CAACke,GAChB/3B,KAAKuZ,UAAUE,OAAOqoE,GAAapoE,EACnCgoE,GAAc,CAClB,KAGAA,GACA3rD,EAAK/1B,KAAK0sB,QAAQkhC,oBAAoB73B,EAAI/1B,KAAKuZ,WAC/CvZ,KAAK0sB,QAAQiK,WAAWZ,GAAK7tB,IACzB,IAAI65E,EAAW,GAAE75E,GACbq9C,EAAa,GAAEluC,MAAMrX,KAAKi1B,QAAQzyB,IAAI,eACtC4U,EAAQ,CACJrY,KAAMgjF,EAAQliF,KAAK,2BAA2ByC,OAC9CmjD,WAAYs8B,EAAQliF,KAAK,sBAAsB8tB,SAAS,SAASrrB,OACjEwxB,MAAOiuD,EAAQliF,KAAK,2BAA2B8tB,SAAS,SAASrrB,OACjE2iD,YAAa88B,EAAQliF,KAAK,kCAAkCyC,OAC5DikB,OAAQw7D,EAAQliF,KAAK,uBAAuB8tB,SAAS,SAASrrB,QAEtEtC,KAAKrC,EAAE,UAAUwC,SAAS,cAC1BH,KAAKkL,QACL,GAAElB,OAAOu7C,EAAYnuC,GACrBpX,KAAK8zB,MAAM/T,IAAI,aAAcwlC,EAAW,IACxCx3C,IACA/N,KAAKrC,EAAE,UAAUwC,SAAS,cAC1B,IAAI6hF,EAAW,GAAEj0E,GAAOlO,KAAK,cAAcyC,QAAU,aAAiB,8CACtEtC,KAAKkL,QACL,GAAMa,QAAQgC,MAAMi0E,EAAS,KAGjChiF,KAAKrC,EAAE,UAAUuC,YAAY,aACrC,EAEAyoD,iBAAkB,WACd,IAAI+4B,GAAc,EAClB1hF,KAAKuZ,UAAUE,OAAOpH,SAASqH,IAC3B,GAAmB,WAAfA,EAAM7V,MAAoC,UAAf6V,EAAM7V,KACjC,OACJ,IAAIkH,EAAQ2O,EAAMG,OAASH,EAAMG,OAAO,GAAK,KACzC8nE,EAAc3hF,KAAKrC,EAAE,IAAM+b,EAAMK,IAAM,wBACvC6nE,EAAW5hF,KAAKrC,EAAE,IAAM+b,EAAMK,IAAM,6BACpC8nE,EAAW7hF,KAAKrC,EAAE,IAAM+b,EAAMK,IAAM,mBACpCge,EAAY,GAChB4pD,EAAY1/E,SAAW81B,EAAY4pD,EAAY,GAAG/3E,IAClDg4E,EAAS3/E,SAAW81B,EAAY6pD,EAASr0E,OACzCs0E,EAAS5/E,SAAW81B,EAAY8pD,EAASt0E,OACxCxC,IAAUgtB,IAAe2pD,GAAc,EAAK,IAEjD1hF,KAAKrC,EAAE,aAAaoP,YAAY,cAAe20E,EACnD,IAIJ,mBAAyB,oBAAwB,CAC7CzwD,OAAQ,CACR,EACA1K,OAAQ,cACRu5D,mBAAoB,GAAU7oF,aAAaY,sBAE3C02B,YAAa,SAAUvvB,GACnBgB,KAAKi1B,QAAUj2B,EAAQ80B,MACvB9zB,KAAKi1B,QAAQ+9C,aAAa3vD,GAAG,uBAAwBrjB,KAAK2/E,QAAS3/E,MACnEA,KAAKi1B,QAAQ5R,GAAG,mBAAoBrjB,KAAK2/E,QAAS3/E,MAClDA,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAKiiF,OAAS,GAAE,sBACpB,EAEAtC,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,4BAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAKkiF,mBACT,EAEAA,kBAAmB,WACfliF,KAAKytB,OAAO9vB,EAAE,uCAAuCgC,KAAK,aAAiB,0BAC3EK,KAAKytB,OAAOgzD,gBAAgBhtC,IACxBzzC,KAAKD,IAAIJ,KAAK,IACd,GAAE8zC,GAAU5zC,KAAK,SAASA,KAAK,QAAQC,MAAK,CAAC4C,EAAKxB,KAC9C,IAAIihF,EAAO,CAACjqE,IAAK,GAAEhX,GAAM1B,KAAK,OAAQ+mB,OAAQvmB,KAAKumB,QAC/C67D,EAAa,GAAE,GAAUrI,YAAYsI,oBAAoBF,IACzD72C,EAAS,GAAO1lC,iBAAiBu8E,EAAKjqE,KAC1ClY,KAAKD,IAAI8M,OAAOu1E,GAChBA,EAAWviF,KAAK,kBAAkBoF,UAAUqmC,EAAQtrC,KAAK8/E,mBAAmB,IAE3E,GAAErsC,GAAU5zC,KAAK,SAASA,KAAK,QAAQoC,QACxCjC,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,aAAiB,yDAChDtC,KAAKytB,OAAO+wD,mBACZx+E,KAAKytB,OAAO+wD,kBAAkB8D,kBAAkB,IACpDh6D,IAEAtoB,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,GAAEgmB,GAAKzoB,KAAK,QAAQyC,QAAU,aAAiB,+CAA+C,GAErI,EAEAigF,iBAAkB,SAAU13E,GACxB,IAAI23E,EAAe,GAAE33E,EAAG4C,QAAQstB,QAAQ,qBACpC0nD,EAAaD,EAAa9iF,KAAK,OAC/Bq2B,EAAK,GAAI,CAACxf,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAQqB,KAAM,QACxEsP,EAAE,SAAU,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBAClCx7D,EAAE,OAAOgS,EAAEs9D,GACpBziF,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxBysD,EAAatxE,SACTlR,KAAKytB,OAAO+wD,mBACZx+E,KAAKytB,OAAO+wD,kBAAkBkE,iCACjC1iF,KAAKD,IAAI4tB,WAAW1rB,QAAUjC,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,aAAiB,wDAAwD,GAE/I,EAEAqgF,0BAA2B,SAAUH,GACjC,IAAIC,EAAaD,EAAa9iF,KAAK,OAC/Bq2B,EAAK,GAAI,CAACxf,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAQqB,KAAM,QACxEsP,EAAE,SAAU,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBAClCx7D,EAAE,OAAOgS,EAAEs9D,GACpBziF,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxBysD,EAAatxE,UACZlR,KAAKD,IAAI4tB,WAAW1rB,QAAUjC,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,aAAiB,wDAAwD,GAE/I,IAGJ,iBAAuB,oBAAwB,CAC3CikB,OAAQ,OACRu5D,mBAAoB,GAAU7oF,aAAaY,sBAE3C02B,YAAa,SAAUvvB,GACnBgB,KAAKi1B,QAAUj2B,EAAQ80B,MACvB9zB,KAAK4iF,YAAc5jF,EAAQ4jF,YAC3B5iF,KAAKuf,UAAYvgB,EAAQugB,UACzBvf,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAK9L,KAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,QAASj1B,KAAKuf,WAAa,aACvEvf,KAAK6iF,gBAAkB,GACvB7iF,KAAKytB,OAAOM,aAAa1K,GAAG,wDAAyDrjB,KAAKi0B,SAAS3rB,KAAKtI,MAC5G,EAEA2/E,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,qCAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAK8iF,qBAAsB,EAC3B9iF,KAAK6iF,gBAAkB,GACvB7iF,KAAK+iF,oBAAoB,CAAC,GAAG,KACzB/iF,KAAKD,IAAIJ,KAAK,qCACdK,KAAKgjF,aAAa,GAE1B,EAEA/uD,SAAU,WACN,IAAKj0B,KAAKijF,OACN,OACYjjF,KAAKytB,OAAOM,aAAa,GAAGiC,WACzBhwB,KAAKytB,OAAOM,aAAa,GAAG3U,aAC5BpZ,KAAKytB,OAAOM,aAAa,GAAGoC,cAEzB,IAAOnwB,KAAKkjF,mBAAqBljF,KAAK8iF,sBAAwB9iF,KAAKmjF,kBACrFnjF,KAAKojF,eAEb,EAEAC,qBAAsB,WAClBrjF,KAAKsjF,eAAe,CAAC,GACrBtjF,KAAKytB,OAAOM,aAAa1zB,IAAI,6BAA6BA,IAAI,+BAA+BgpB,GAAG,wDAAyDrjB,KAAKi0B,SAAS3rB,KAAKtI,OAC5KA,KAAKrC,EAAE,iBAAiB0lB,GAAG,SAAUxY,IACjC7K,KAAKk+D,YAAYrzD,EAAG,GAE5B,EAEAu4E,cAAe,WACX,GAAE,GAAUvtD,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACzCqC,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,EAAMnwD,OAAQpzB,KAAKkjF,mBAAmB,KAChFljF,KAAKgjF,aAAY,EAAK,GAE9B,EAEAQ,qBAAsB,WAClB,OAAOxjF,KAAK6iF,eAChB,EAEAY,sBAAuB,WACnB,IAAIC,EAAc,EAClB1jF,KAAK6iF,gBAAkB7iF,KAAKwjF,uBAExBxjF,KAAK6iF,gBAAgB5gF,OACrBjC,KAAK6iF,gBAAgBxwE,SAAQ,CAACnR,EAAMwB,KAChC,IAAI++B,EAASvgC,EAAKwgC,QAAQ,GACrBxgC,EAAKmV,IAIVrW,KAAK9L,KAAKq/B,SAASyO,YAAYP,EAAQvgC,EAAKmV,KAAKgE,MAAMnS,IAC9ClI,KAAKijF,SAEV/hF,EAAKwgC,QAAQ,GAAKx5B,EAClBw7E,IACIA,IAAgB1jF,KAAK6iF,gBAAgB5gF,SACrCjC,KAAK2jF,uBACL3jF,KAAKmjF,kBAAmB,GAC5B,IAXAO,GAYF,KAGN1jF,KAAK2jF,uBACL3jF,KAAKmjF,kBAAmB,EACnBnjF,KAAK8iF,qBACN9iF,KAAKojF,gBAGjB,EAEAO,qBAAsB,SAAUC,IAC3B5jF,KAAKrC,EAAE,kBAAkBsE,QAAUjC,KAAKD,IAAIJ,KAAK,qCAClDK,KAAKgjF,aACT,EAEAA,YAAa,SAAUY,GACd5jF,KAAKijF,SAENjjF,KAAK6iF,gBAAgB5gF,SACrBjC,KAAK6iF,gBAAgBn2E,UACrB1M,KAAK6iF,gBAAgBxwE,SAASnR,IACD,iBAArBlB,KAAKujF,cACLriF,EAAK2iF,YAAa,GACF,GAAE,GAAUC,WAAW,CAAC78E,KAAM/F,EAAMo/D,SAAU,GAAMjrD,mBAAmBnU,EAAKq/D,YAAaC,SAAU,GAAMhrD,YAAYtU,EAAK0D,MAAOgR,SAAU,GAAMD,gBAAgBzU,EAAK0U,aAC5KvM,SAASrJ,KAAKrC,EAAE,kBAAkB,KAGxDqC,KAAK6iF,gBAAkB,GACvB7iF,KAAKrC,EAAE,iCAAiCuT,SACxC,GAAE,GAAU6yE,qBAAqB16E,SAASrJ,KAAKrC,EAAE,mBACjDqC,KAAKrC,EAAE,qCAAqCuT,SAChD,EAEA6xE,oBAAqB,SAAU1wD,EAAOrK,GAClC,IAAKhoB,KAAKijF,QAAUjjF,KAAKmjF,iBACrB,OACJ,IAAInkF,EAAUqzB,GAAS,CAAC,EACV,KACdryB,KAAKmjF,kBAAmB,GACvBnkF,EAAQ82B,MAAQ92B,EAAQ82B,IAAM,iCAC9B92B,EAAQo8D,QAAUp8D,EAAQo0B,SAAWp0B,EAAQo0B,OAAS,IACvDpzB,KAAKuf,YAAcvgB,EAAQugB,UAAYvf,KAAKuf,WAC5Cvf,KAAKytB,OAAOm1D,cAAgB5jF,EAAQ+a,IAAM,CAAC,CAACA,IAAK,OAAQhP,MAAO/K,KAAKytB,OAAOm1D,YAAYh5E,MACxF5J,KAAKi1B,QAAQ5B,WAAWr0B,GAAS,CAACiqC,EAAS1V,EAAU4kD,KACjD,IAAI6L,EAAiB,EACjBhkF,KAAKuf,WACL,GAAE,GAAUsW,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBAE7C,GAAE41B,GAAUzzB,MAAK,CAAC4C,EAAKwU,KACnB,IAAI2/D,EAAW,GAAE3/D,GACb+sE,EAAY,GAChB,GAAIjkF,KAAKuf,UAAW,CAChB,IAAIzuB,EAAW,IAAI,GAAEuW,SACrBvW,EAASy3B,MAAMivD,IACXyM,EAAYjkF,KAAKi1B,QAAQojD,mBAAmBb,GACxCyM,EAAUhiF,SACVjC,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBtJ,OAAO0K,IACvDD,IACIA,IAAmBzwD,EAAStxB,SAC5BjC,KAAKkjF,iBAAmB/K,EAAIjmD,MAC5BlyB,KAAKyjF,wBACT,IACDS,MAAK,KACJF,IACIA,IAAmBzwD,EAAStxB,SAC5BjC,KAAKkjF,iBAAmB/K,EAAIjmD,MAC5BlyB,KAAK8iF,qBAAsB,EAC3B9iF,KAAKyjF,wBACT,IAEJzjF,KAAK0sB,QAAQ4mC,MAAM3/B,mBAAmBkjD,EAAU,CAC5CsN,kBAAkB,EAClBC,SAAS,EACT/xD,MAAOA,GACRvhC,EACP,MACImzF,EAAYjkF,KAAKi1B,QAAQojD,mBAAmBxB,GAC5C72E,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAU,CAC5CsN,kBAAkB,EAClB9xD,MAAOA,IAEP4xD,EAAUhiF,SACVjC,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBtJ,OAAO0K,GAC3D,IAECjkF,KAAKuf,YACNvf,KAAKkjF,iBAAmB/K,EAAIjmD,MACvBqB,EAAStxB,SACVjC,KAAK8iF,qBAAsB,GAC/B9iF,KAAKmjF,kBAAmB,EACF,iBAArBnjF,KAAKujF,cAAoCvjF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAO1P,KAAUA,EAAKs5D,aAAet5D,EAAKs5D,WAAWhrD,SAAS,UAAatO,EAAKs5D,WAAWhrD,SAAS,WAAatO,EAAKiyE,yBACtMl5E,KAAK6iF,gBAAgB5gF,QAAU,gCAA4D,iBAArBjC,KAAKujF,aAAmCvjF,KAAK8iF,oBAGrH96D,GAAYA,IAFZhoB,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,EAAMnwD,OAAQpzB,KAAKkjF,kBAAmBl7D,GAG5F,IACD,QAGP,EAEAk2C,YAAa,SAAUrzD,GACnB,IAAI25B,EAAQ,GAAE35B,EAAG4C,QACjB,GAAI+2B,EAAMx3B,SAAS,gBAAkBw3B,EAAMx3B,SAAS,mCAAoC,CACpF,IAAI4zB,EAAc4D,EAAMzJ,QAAQ,iBAC5B0H,EAAQ7B,EAAYphC,KAAK,aAK7B,OAJAohC,EAAY/gC,KAAK,aAAaK,YAAY,mBAC1C0gC,EAAY,GAAGC,cAAgB7gC,KAAKkjC,mBAAmBtC,EAAY/gC,KAAK,iCAAiC,GAAI4iC,GAC7GziC,KAAKm+D,oBAAsBn+D,KAAKm+D,mBAAmBt9B,cAAcyE,aACjEtlC,KAAKm+D,mBAAqBv9B,EAAY,GAE1C,CACK,GAAI4D,EAAMx3B,SAAS,aAAew3B,EAAM7W,SAAS,aAAa1rB,OAAQ,CACvE,IAAI2+B,EAAc4D,EAAMzJ,QAAQ,iBAIhC,OAHA/6B,KAAKm+D,mBAAmBt9B,cAAcyE,QACtCtlC,KAAKm+D,mBAAqBv9B,EAAY,QACtCA,EAAY,GAAGC,cAAckB,MAEjC,CACK,GAAIyC,EAAMx3B,SAAS,cAAgBw3B,EAAM7W,SAAS,cAAc1rB,OACjEjC,KAAKm+D,mBAAmBt9B,cAAcyE,aAGrC,IAAKd,EAAM6/C,QAAQ,iCAAiCpiF,OAAQ,CAC7D,IAAI42E,EAAQr0C,EAAMzJ,QAAQ,iBAC1B/6B,KAAKytB,OAAOmC,sBACZ,iBAAqB,uBAAwB5vB,KAAKytB,QAClDztB,KAAK9L,KAAK6uC,kBAAkB81C,EAAMn5E,KAAK,YAAa,CAAC4kF,mBAAmB,EAAM/kE,UAAWvf,KAAKuf,WAClG,CACJ,EAEA2jB,mBAAoB,SAAUlqB,EAASolD,GACnC,IAAIC,EAAmBrlD,EAAQ5I,UAC3ByjD,EAAY,WAAa,GAAO1qD,MAChCq7B,EAAQ,GAAExrB,GACVslD,EAAe95B,EAAMzJ,QAAQ,iBACjCyJ,EAAMrkC,SAAS,2BAA2BR,KAAK,GAAE,GAAU4+D,oBAAoB,CAACC,YAAa3K,MAC7F,IAAI4K,EAAMz+D,KAAK0+D,YAAYN,EAAUvK,GA2CrC,OAzCA4K,EAAIp7C,GAAG,SAAS,KACZi7C,EAAaz+D,KAAK,6CAA6CK,YAAY,eAC3Eo+D,EAAaz+D,KAAK,wCAAwCK,YAAY,mCACtE,IAAI0V,EAAWtZ,KAAKqiE,MAAMF,EAAIG,eAC9Bp6B,EAAM3kC,KAAK,yBAAyByC,KAAK,GAAMqT,gBAAgBC,IAC/D6oD,EAAI18B,MAAM,IAGd08B,EAAIp7C,GAAG,SAAS,KACZmhB,EAAMtkC,YAAY,2BAClB8Y,EAAQ5I,UAAYiuD,EACpBI,EAAII,QACJr6B,EAAM3kC,KAAK,uBAAuBoC,QAAUuiC,EAAM3kC,KAAK,uBAAuB2C,IAAI,GAAG0O,SACrF,GAAMqJ,uBAAuB,aAAiB,sCAAuC,IAAK,IAG9FkkD,EAAIp7C,GAAG,QAAQ,KACXi7C,EAAaz+D,KAAK,6CAA6CM,SAAS,aAAaD,YAAY,YACjGo+D,EAAan+D,SAAS,WACtB,IAAI2+D,EAAUr7C,aAAY,WACtB,IAAIs7C,EAAWziE,KAAKqiE,MAAMF,EAAIO,kBAC1BP,EAAIQ,YACJz6B,EAAM3kC,KAAK,2BAA2ByC,KAAK,GAAMqT,gBAAgBopD,IAEjEjxB,cAAcgxB,EACtB,GAAG,IAAI,IAGXL,EAAIp7C,GAAG,UAAU,KACbi7C,EAAaz+D,KAAK,6CAA6CK,YAAY,aAAaC,SAAS,YACjGm+D,EAAap+D,YAAY,UAAU,IAGvCu+D,EAAIp7C,GAAG,SAAS,KACZi7C,EAAaz+D,KAAK,6CAA6CK,YAAY,aAAaC,SAAS,YACjGm+D,EAAap+D,YAAY,UAAU,IAGvCskC,EAAM3kC,KAAK,yBAAyB,GAAGq/D,SAAW,KAC9CT,EAAIU,UAAU36B,EAAM3kC,KAAK,yBAAyB0N,MAAM,IAAI,EAEzDkxD,CACX,EAEAC,YAAa,SAASN,EAAUvK,GAC5B,IAAI54D,EAAQ6C,WAAWizC,OAAO,CAC1BquB,UAAW,IAAMvL,EACjBwL,cAAc,EACdC,SAAU,EACVv6D,OAAQ,GACRw6D,UAAW,GACXC,YAAa,sBACbC,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,cAAe,YAInB,OAFA3kE,EAAM4kE,KAAKzB,GACXnjE,EAAMkkE,UAAU,IACTlkE,CACX,IAGJ,mBAAyB,wBAA4B,CACjDg2B,OAAQ,CACJ,4CAA6C,eAEjD1K,OAAQ,QAERo5D,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,qCAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAKijF,QAAS,EACdjjF,KAAKytB,OAAOE,SAASzyB,QAAU8E,KAAKytB,OAAOE,SAASzyB,MAAM+nF,QAAS,GACnEjjF,KAAKytB,OAAOE,SAAS6a,QAAUxoC,KAAKytB,OAAOE,SAAS6a,MAAMy6C,QAAS,GACnEjjF,KAAKytB,OAAOE,SAASuqC,QAAUl4D,KAAKytB,OAAOE,SAASuqC,MAAM+qB,QAAS,GACnEjjF,KAAK8iF,qBAAsB,EAC3B9iF,KAAKujF,YAAc,eACnBvjF,KAAK6iF,gBAAkB,GACvB7iF,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,IAAO,KACjDvjF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,UAA5C,GAAMkU,iBAAiBlU,EAAKq/D,cACvFvgE,KAAKD,IAAIJ,KAAK,iDACdK,KAAKgjF,cACLhjF,KAAK4iF,aAAe5iF,KAAKqjF,sBAAsB,GAEvD,EAEAG,qBAAsB,WAClB,OAAOxjF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,UAA5C,GAAMkU,iBAAiBlU,EAAKq/D,aAC3E,EAEAojB,qBAAsB,SAAUC,IAC3B5jF,KAAKrC,EAAE,8BAA8BsE,QAAUjC,KAAKD,IAAIJ,KAAK,iDAC9DK,KAAKgjF,aACT,EAEAI,cAAe,WACX,GAAE,GAAUvtD,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACzCqC,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,EAAMnwD,OAAQpzB,KAAKkjF,mBAAmB,KAChFljF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,UAA5C,GAAMkU,iBAAiBlU,EAAKq/D,cACvFvgE,KAAKgjF,aAAY,EAAK,GAE9B,IAIJ,mBAAyB,wBAA4B,CACjD/xD,OAAQ,CACJ,4CAA6C,eAEjD1K,OAAQ,QAERo5D,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,qCAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAKijF,QAAS,EACdjjF,KAAKytB,OAAOE,SAAS3yB,QAAUgF,KAAKytB,OAAOE,SAAS3yB,MAAMioF,QAAS,GACnEjjF,KAAKytB,OAAOE,SAAS6a,QAAUxoC,KAAKytB,OAAOE,SAAS6a,MAAMy6C,QAAS,GACnEjjF,KAAKytB,OAAOE,SAASuqC,QAAUl4D,KAAKytB,OAAOE,SAASuqC,MAAM+qB,QAAS,GACnEjjF,KAAK8iF,qBAAsB,EAC3B9iF,KAAKujF,YAAc,eACnBvjF,KAAK6iF,gBAAkB,GACvB7iF,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,IAAO,KACjDvjF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,UAA5C,GAAMkU,iBAAiBlU,EAAKq/D,cACvFvgE,KAAKD,IAAIJ,KAAK,iDACdK,KAAKgjF,cACLhjF,KAAK4iF,aAAe5iF,KAAKqjF,sBAAsB,GAEvD,EAEAG,qBAAsB,WAClB,OAAOxjF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,UAA5C,GAAMkU,iBAAiBlU,EAAKq/D,aAC3E,EAEAojB,qBAAsB,SAAUC,IAC3B5jF,KAAKrC,EAAE,8BAA8BsE,QAAUjC,KAAKD,IAAIJ,KAAK,iDAC9DK,KAAKgjF,aACT,EAEAI,cAAe,WACX,GAAE,GAAUvtD,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACzCqC,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,EAAMnwD,OAAQpzB,KAAKkjF,mBAAmB,KAChFljF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,UAA5C,GAAMkU,iBAAiBlU,EAAKq/D,cACvFvgE,KAAKgjF,aAAY,EAAK,GAE9B,IAGJ,kBAAwB,wBAA4B,CAChD/xD,OAAQ,CACJ,2CAA4C,eAEhD1K,OAAQ,QAERo5D,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,qCAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAKijF,QAAS,EACdjjF,KAAKytB,OAAOE,SAAS3yB,QAAUgF,KAAKytB,OAAOE,SAAS3yB,MAAMioF,QAAS,GACnEjjF,KAAKytB,OAAOE,SAASzyB,QAAU8E,KAAKytB,OAAOE,SAASzyB,MAAM+nF,QAAS,GACnEjjF,KAAKytB,OAAOE,SAASuqC,QAAUl4D,KAAKytB,OAAOE,SAASuqC,MAAM+qB,QAAS,GACnEjjF,KAAK8iF,qBAAsB,EAC3B9iF,KAAKujF,YAAc,eACnBvjF,KAAK6iF,gBAAkB,GACvB7iF,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,IAAO,KACjDvjF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,SAA3C,GAAMkU,iBAAiBlU,EAAKq/D,aAAqE,SAA3C,GAAMnrD,iBAAiBlU,EAAKq/D,cAC9IvgE,KAAKD,IAAIJ,KAAK,2CACdK,KAAKgjF,cACLhjF,KAAK4iF,aAAe5iF,KAAKqjF,sBAAsB,GAEvD,EAEAG,qBAAsB,WAClB,OAAOxjF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,SAA3C,GAAMkU,iBAAiBlU,EAAKq/D,aAAqE,SAA3C,GAAMnrD,iBAAiBlU,EAAKq/D,aAClI,EAEAojB,qBAAsB,SAAUC,IAC3B5jF,KAAKrC,EAAE,wBAAwBsE,QAAUjC,KAAKD,IAAIJ,KAAK,2CACxDK,KAAKgjF,aACT,EAEAI,cAAe,WACX,GAAE,GAAUvtD,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACzCqC,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,EAAMnwD,OAAQpzB,KAAKkjF,mBAAmB,KAChFljF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAoD,SAA3C,GAAMkU,iBAAiBlU,EAAKq/D,aAAqE,SAA3C,GAAMnrD,iBAAiBlU,EAAKq/D,cAC9IvgE,KAAKgjF,aAAY,EAAK,GAE9B,IAGJ,kBAAwB,wBAA4B,CAChD/xD,OAAQ,CACJ,2CAA4C,eAEhD1K,OAAQ,QAERo5D,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,qCAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAKijF,QAAS,EACdjjF,KAAKytB,OAAOE,SAAS3yB,QAAUgF,KAAKytB,OAAOE,SAAS3yB,MAAMioF,QAAS,GACnEjjF,KAAKytB,OAAOE,SAASzyB,QAAU8E,KAAKytB,OAAOE,SAASzyB,MAAM+nF,QAAS,GACnEjjF,KAAKytB,OAAOE,SAAS6a,QAAUxoC,KAAKytB,OAAOE,SAAS6a,MAAMy6C,QAAS,GACnEjjF,KAAK8iF,qBAAsB,EAC3B9iF,KAAKujF,YAAc,eACnBvjF,KAAK6iF,gBAAkB,GACvB7iF,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,IAAO,KACjDvjF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAQA,EAAKg3D,QAChEl4D,KAAKD,IAAIJ,KAAK,2CACdK,KAAKgjF,cACLhjF,KAAK4iF,aAAe5iF,KAAKqjF,sBAAsB,GAEvD,EAEAG,qBAAsB,WAClB,OAAOxjF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAQA,EAAKg3D,OACpD,EAEAyrB,qBAAsB,SAAUC,IAC3B5jF,KAAKrC,EAAE,wBAAwBsE,QAAUjC,KAAKD,IAAIJ,KAAK,2CACxDK,KAAKgjF,aACT,EAEAI,cAAe,WACX,GAAE,GAAUvtD,aAAaxsB,SAASrJ,KAAKrC,EAAE,mBACzCqC,KAAK+iF,oBAAoB,CAAC,CAAC/iF,KAAKujF,cAAc,EAAMnwD,OAAQpzB,KAAKkjF,mBAAmB,KAChFljF,KAAK6iF,gBAAkB7iF,KAAK6iF,gBAAgBlsE,QAAOzV,GAAQA,EAAKg3D,QAChEl4D,KAAKgjF,aAAY,EAAK,GAE9B,IAGJ,eAAqB,oBAAwB,CACzCz8D,OAAQ,UACRu5D,mBAAoB,GAAU7oF,aAAaY,sBAE3C02B,YAAa,SAAUvvB,GACnBgB,KAAKi1B,QAAUj2B,EAAQ80B,MACvB9zB,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAKiiF,OAAS,GAAE,sBACpB,EAEAtC,QAAS,WACD3/E,KAAKD,IAAIkC,QAA6C,GAAnCjC,KAAKD,IAAIg7B,QAAQ,QAAQ94B,SAC5CjC,KAAKD,IAAMC,KAAKytB,OAAO9vB,EAAE,4BAC7BqC,KAAKD,IAAIJ,KAAK,GAAE,GAAUk2B,cAC1B71B,KAAKukF,2BACT,EAEAA,0BAA2B,WACvBvkF,KAAKytB,OAAO9vB,EAAE,uCAAuCgC,KAAK,aAAiB,uCAC3EK,KAAKi1B,QAAQg+C,wBAAwBx/B,IACjCzzC,KAAKD,IAAIJ,KAAK,IACd,GAAE8zC,GAAU5zC,KAAK,SAAS8tB,WAAW7tB,MAAK,CAAC4C,EAAKxB,KAC5C,IACIihF,EAAO,CAACjqE,IADF,GAAEhX,GAAM1B,KAAK,OAAS,GAAE0B,GAAM1B,KAAK,OAAS,GAAE0B,GAAMoB,OACxCikB,OAAQvmB,KAAKumB,QAC/B67D,EAAa,GAAE,GAAUrI,YAAYsI,oBAAoBF,IACzD72C,EAAS,GAAO1lC,iBAAiBu8E,EAAKjqE,KAC1ClY,KAAKD,IAAI8M,OAAOu1E,GAChBA,EAAWviF,KAAK,kBAAkBoF,UAAUqmC,EAAQtrC,KAAK8/E,mBAAmB,IAE3E,GAAErsC,GAAU5zC,KAAK,SAAS8tB,SAAS1rB,QACpCjC,KAAKD,IAAI8M,OAAO7M,KAAKiiF,OAAO3/E,KAAK,aAAiB,+BAClDtC,KAAKytB,OAAO+wD,mBACZx+E,KAAKytB,OAAO+wD,kBAAkBgG,iBAAiB,IACnDl8D,IAEAtoB,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,GAAEgmB,GAAKzoB,KAAK,QAAQyC,QAAU,aAAiB,+CAA+C,GAErI,EAEAmiF,YAAa,SAAU55E,GACnB,IAAI23E,EAAe,GAAE33E,EAAG4C,QAAQstB,QAAQ,iBACpC0nD,EAAaD,EAAa9iF,KAAK,OAC/BglF,EAAMjC,EAAWzgF,WAAWuT,SAAS,KAAO,MAAQ,SACpDwgB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACvE2Q,EAAE,UAAW,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,qBACnCx7D,EAAEuxE,GAAKv/D,EAAEs9D,GAClBziF,KAAK0sB,QAAQm/B,SAAS91B,GAAI,KACtBysD,EAAatxE,SACTlR,KAAKytB,OAAO+wD,mBACZx+E,KAAKytB,OAAO+wD,kBAAkBkE,iCACjC1iF,KAAKD,IAAI4tB,WAAW1rB,QAAUjC,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,aAAiB,8BAA8B,GAErH,EAEAqiF,qBAAsB,SAAUnC,GAC5B,IAAIC,EAAaD,EAAa9iF,KAAK,OAC/BglF,EAAMjC,EAAWzgF,WAAWuT,SAAS,KAAO,MAAQ,SACpDwgB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACvE2Q,EAAE,UAAW,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,qBACnCx7D,EAAEuxE,GAAKv/D,EAAEs9D,GAClBziF,KAAK0sB,QAAQm/B,SAAS91B,GAAI,KACtBysD,EAAatxE,UACZlR,KAAKD,IAAI4tB,WAAW1rB,QAAUjC,KAAKD,IAAIJ,KAAKK,KAAKiiF,OAAO3/E,KAAK,aAAiB,8BAA8B,GAErH,EAEAsiF,QAAS,WACL,GAAM74E,QAAQyC,gBAAgB,aAAiB,qBAAsB,aAAiB,gCAAiC,CAACnB,wBAAyB,aAAiB,8CAA+C,CAAEc,eAAgB,aAAiB,uBAAuBoa,MAAMrgB,IAC7Q,GAAIA,EAAQ,CACR,IAAIw8E,EAAMx8E,EAAOqN,SAAS,KAAO,MAAQ,SACrCwgB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACvE2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,qBACjCx7D,EAAEuxE,GAAKv/D,EAAEjd,GAClBlI,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxB/1B,KAAKukF,2BAA0B,IAChC,SAAUj8D,GACT,GAAMvc,QAAQgC,MAAM,aAAiB,8CACzC,GACJ,IAER,IAGJ,oBAA0B,oBAAwB,CAC9CgjB,UAAW,mBACXjD,YAAa,qBACbG,YAAa,CAAC7E,MAAO,aACrBoE,SAAU,GAAUusD,YAAY/G,aAChC8M,mBAAoB,GAAU7oF,aAAaY,sBAE3Co5B,OAAQ,CACJ,0BAA2B,4BAC3B,kCAAoC,cACpC,2BAA4B,cAC5B,mBAAoB,mBACpB,kBAAmB,mBAGvB1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKgzE,aAAehzE,KAAK8zB,MAAMk/C,aAC/BhzE,KAAKgzE,aAAa3vD,GAAG,uBAAwBrjB,KAAK6kF,sBAAuB7kF,MACzEA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK8kF,uBAAwB9kF,MACpEA,KAAKrC,EAAEqC,KAAK8tB,aAAaE,iBAAiBhuB,KAAKiuB,YACnD,EAEA0xD,QAAS,WAOL,OANA3/E,KAAKD,IAAIJ,KAAKK,KAAKwtB,YAAYrtB,SAAS,mBACxCH,KAAK+kF,6BAA+B,IAAI,6BAAiC,CAACjxD,MAAO9zB,KAAK8zB,QACtF9zB,KAAKglF,qBACLhlF,KAAKrC,EAAE,sBAAsBqwB,iBAAiB,CAAC5E,MAAO,cACjDppB,KAAK8zB,MAAMsjD,YACZp3E,KAAK8zB,MAAMijD,eACR/2E,IACX,EAEAglF,mBAAoB,WAChBhlF,KAAK8zB,MAAMk/C,aAAaM,oBAAoB,CAACjgB,QAASrzD,KAAKgzE,aAAa3f,UAAY5f,IAChF,IACI4f,EADY,GAAE5f,GACM5zC,KAAK,SAASL,KAAK,WAC3C,GAAIQ,KAAK8zB,MAAMtxB,IAAI,gBACgB,IAA9BxC,KAAKgzE,aAAa3f,UAAmBrzD,KAAK8zB,MAAMtxB,IAAI,cAAcmjD,YAAc3lD,KAAKgzE,aAAa/wE,QAC/FjC,KAAKgzE,aAAa/wE,QAAUjC,KAAK8zB,MAAMtxB,IAAI,cAAcmjD,aAIzD,OAHA3lD,KAAK0sB,QAAQu4D,mBAAmBC,sBAAsBllF,KAAK8zB,MAAMtxB,IAAI,QACrExC,KAAKgzE,aAAamS,yBAClBnlF,KAAKglF,qBAIThlF,KAAKgzE,aAAa3f,QAAUA,IAEhCA,GAAWrzD,KAAK0sB,QAAQu4D,mBAAmBG,2BAA2BplF,KAAK8zB,MAAMtxB,IAAI,OAAQ6wD,GAC5FrzD,KAAKgzE,aAAa3f,QAAUA,GAAYrzD,KAAKgzE,aAAaqS,gBAC3DrlF,KAAKslF,qBAAoB,IAC1B,KACCtlF,KAAKD,IAAIG,YAAY,kBAAkB,GAE/C,EAEA4kF,uBAAwB,WACpB9kF,KAAKD,IAAIF,KAAK,4BAA4BF,KAAK,IAC/CK,KAAKglF,qBACAhlF,KAAK8zB,MAAMsjD,YACZp3E,KAAK8zB,MAAMijD,cACnB,EAEA8N,sBAAuB,WACnB7kF,KAAKyuB,aAAezuB,KAAKslF,oBAC7B,EAEAA,mBAAoB,WAChBtlF,KAAKgzE,aAAalzE,MAAM8iF,IACpB5iF,KAAKulF,iBAAiB3C,EAAY,IAEtC5iF,KAAKD,IAAIG,YAAY,kBACzB,EAEAslF,iBAAkB,SAAU36E,GACxB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,qBACnC,GAAMhvB,QAAQiC,IAAI,aAAiB,0CAA2C,aAAiB,0CAA2C,CAAC02B,EAAQ7kC,KAAK,+BAA+ByC,SACnL,KAAM,CAAE6L,eAAgB,aAAiB,qBAAqBoa,MAAMrgB,IACpE,GAAIA,EAAQ,CACR,IAAI06E,EAAc5iF,KAAKgzE,aAAaxwE,IAAIkiC,EAAQllC,KAAK,YACjDojF,GACAA,EAAYhd,OAAM,KACVlhC,EAAQxzB,SACRlR,KAAKytB,OAAOoB,iBAAiB,IAC7B9gB,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEvG,IAER,EAEA03E,gBAAiB,SAAU56E,GACvB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,qBACnC,GAAMhvB,QAAQiC,IAAI,aAAiB,yBAA0B,aAAiB,kDAAmD,CAAC02B,EAAQ7kC,KAAK,+BAA+ByC,SAC1K,KAAM,CAAE6L,eAAgB,aAAiB,oBAAoBoa,MAAMrgB,IACnE,GAAIA,EAAQ,CACR,IAAI06E,EAAc5iF,KAAKgzE,aAAaxwE,IAAIkiC,EAAQllC,KAAK,YACjDojF,GACAA,EAAY8C,MAAK,KACThhD,EAAQxzB,SACRlR,KAAKytB,OAAOoB,iBAAiB,IAC7B9gB,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEvG,IAER,EAEAw3E,iBAAkB,SAAU3C,GACxB,IAAIxrE,EAAQ,GAAEC,MAAMurE,EAAYtrE,YAChCF,EAAMutC,SAAW,GAAE9yC,OAAOuF,EAAMutC,UAChCvtC,EAAMuuE,MAAQ,GAAE9zE,OAAOuF,EAAMuuE,OAC7BvuE,EAAMwuE,MAAQxuE,EAAMc,KAAOlY,KAAK0sB,QAAQlqB,IAAI,OAC5C4U,EAAMyuE,eAAiBzuE,EAAM0uE,QAAW,GAAO1uE,EAAM0uE,SAASC,UAAY,GAAO3uE,EAAM0uE,SAASvrC,UAAY,GAAOnjC,EAAM0uE,QAAQ/vE,OAAO,EAAGqB,EAAM0uE,QAAQ7jF,OAAS,IAAIs4C,UAAa,GACnL,IAAI6nC,EAAa,GAAE,GAAUrI,YAAYiM,kBAAkB5uE,IACvDyW,EAAO7tB,KAAKrC,EAAE,eAAiByZ,EAAMxN,GAAK,MAC9Cw4E,EAAW7gF,QAAQ,SAAU,CAACG,WAAY,KACtCmsB,EAAK5rB,QACL4rB,EAAK7gB,SAAS,WAAao1E,EAAWjiF,SAAS,UAC/CiiF,EAAWruD,aAAalG,GACxBA,EAAK/iB,UAGDsM,EAAMwuE,MACNxD,EAAW6D,UAAUjmF,KAAKrC,EAAE,6BAG5BykF,EAAW/4E,SAASrJ,KAAKrC,EAAE,6BAEnCqC,KAAKkmF,mBAAmB9uE,EAC5B,EAEA8uE,mBAAoB,SAAUC,GAC1B,IAAInrF,EAAQ,GAAO4K,iBAAiBugF,EAAOxhC,UAAYwhC,EAAOjuE,KAAOiuE,EAAOv8E,IACxE4iC,EAAW25C,EAAS,GAAInmF,KAAKrC,EAAE,eAAgBwoF,EAAOv8E,GAAI,qBAAuB5J,KAAKrC,EAAE,wBAAyBwoF,EAAOjuE,IAAK,qBAEjI,GADAs0B,EAAQvnC,UAAUjK,EAAOgF,KAAK8/E,oBAC1BqG,EAAO76C,OAAQ,CACf,IAAIkoC,EAAgBxzE,KAAK0sB,QAAQ8kD,cAAc4U,aAAaD,EAAOv8E,IACnE,GAAI5J,KAAK0sB,QAAQ8kD,cAAc6U,cAAcF,EAAOv8E,KAAOu8E,EAAO76C,QAAUkoC,EACxEhnC,EAAQvnC,UAAUuuE,EAAexzE,KAAK8/E,yBAEtC,GAAIqG,EAAOG,WACPtmF,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoBJ,EAAOv8E,GAAIu8E,EAAO76C,OAAQ66C,EAAOG,YAChFtmF,KAAKrC,EAAE,uBAAwBwoF,EAAOv8E,GAAI,qBAAqB3E,UAAUkhF,EAAOG,WAAYtmF,KAAK8/E,oBAC7F9/E,KAAK0sB,QAAQlqB,IAAI,SAAW2jF,EAAOjuE,MACnClY,KAAK8zB,MAAM6/C,QAAQ5zD,IAAI,CAACurB,OAAQ66C,EAAO76C,OAAQ,WAAc66C,EAAOG,aACpEtmF,KAAK8zB,MAAMvoB,QAAQ,uBAGtB,CACD,IAAI8E,EAAO,GAAG,GAAQ6lB,GAAGy2B,sBAAsBw5B,EAAOv8E,KACtD5J,KAAK8zB,MAAMi5B,UAAUo5B,EAAO76C,OAAQj7B,GAAOi7B,IACvCtrC,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoBJ,EAAOv8E,GAAIu8E,EAAO76C,OAAQA,GACzEtrC,KAAKrC,EAAE,uBAAwBwoF,EAAOv8E,GAAI,qBAAqB3E,UAAUqmC,EAAQtrC,KAAK8/E,oBAClF9/E,KAAK0sB,QAAQlqB,IAAI,SAAW2jF,EAAOjuE,MACnClY,KAAK8zB,MAAM6/C,QAAQ5zD,IAAI,aAAcurB,GACrCtrC,KAAK8zB,MAAMvoB,QAAQ,kBACvB,GAER,CAER,CACJ,EAEAi7E,0BAA2B,SAAU37E,GACjC,IAAI65B,EAAU,GAAE75B,EAAG4C,QACnB,GAAIi3B,EAAQ3J,QAAQ,iBAAiB94B,OACjC,OACJ,IAAIwkF,EAAmB/hD,EAAQ3J,QAAQ,qBACnC2rD,EAAiBD,EAAiBjnF,KAAK,WACvCojF,EAAc5iF,KAAK8zB,MAAMk/C,aAAaxwE,IAAIkkF,GAC7CD,EAAiBjnF,KAAK,aAAeinF,EAAiBjnF,KAAK,cAAgBQ,KAAK0sB,QAAQlqB,IAAI,SAAYkkF,EAAiB,IAC1H1mF,KAAK8zB,MAAMk/C,aAAaM,oBAAoB,CAAC1pE,GAAI88E,IAAkBjzC,IAC/D,IAAIl6B,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE1Z,GAAU5zC,KAAK,YAAY,GAAQq2B,GAAGE,eACnFp2B,KAAK+kF,6BAA6B96E,KAAK24E,EAAarpE,EAAU,GAEtE,EAEAotE,YAAa,SAAU97E,GACfA,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,iBAG/DuN,KAAK4mF,oBAFL5mF,KAAK4xB,YAAY/mB,EAGzB,EAEA+7E,kBAAmB,WACf,IAAIv0D,EAAQryB,KAAKrC,EAAE,mCAAmC4P,MAAMyI,cAC5DhW,KAAKrC,EAAE,wCAAwCmC,MAAK,CAAC4C,EAAKxB,KACtD,IAAI+P,EAAQ,GAAE/P,GACVwlF,EAAiBz1E,EAAMvR,KAAK,MAC5BkjF,EAAc5iF,KAAK8zB,MAAMk/C,aAAanzE,MAAK+iF,GAAeA,EAAYpgF,IAAI,QAAUkkF,IACpFxuE,EAAM0qE,EAAYpgF,IAAI,OAAOwT,cAC7BjX,EAAO6jF,EAAYpgF,IAAI,YAAYwT,cACvC/E,EAAMM,OAAOxS,EAAKqF,QAAQiuB,GAAS,GAAKna,EAAI9T,QAAQiuB,GAAS,EAAE,IAE/DA,EACAryB,KAAKrC,EAAE,sBAAsB+wB,OAE7B1uB,KAAKrC,EAAE,sBAAsBmxB,MACrC,EAEA8C,YAAa,SAAU/mB,GACnBA,GAAMA,EAAGa,iBACT1L,KAAKrC,EAAE,iBAAiB4P,IAAI,IAC5BvN,KAAK4mF,mBACT,IAGJ,yBAA+B,oBAAwB,CACnD71D,UAAW,mBACX9C,YAAa,CAAC7E,MAAO,aACrBoE,SAAU,GAAUusD,YAAY8M,yBAChC/G,mBAAoB,GAAU7oF,aAAaY,sBAE3Co5B,OAAQ,CACJ,0BAA2B,4BAC3B,kCAAoC,cACpC,2BAA4B,cAC5B,kBAAmB,wBACnB,yBAA0B,gCAC1B,kBAAmB,yBAGvB1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKgzE,aAAehzE,KAAK8zB,MAAMk/C,aAC/BhzE,KAAKgzE,aAAa3vD,GAAG,SAAUrjB,KAAK8mF,sBAAuB9mF,MAC3DA,KAAKgzE,aAAa3vD,GAAG,uBAAwBrjB,KAAK6kF,sBAAuB7kF,MACzEA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK8kF,uBAAwB9kF,MACpEA,KAAK+kF,6BAA+B/kF,KAAKkvB,SAAS,+BAAgC,kCAAuC,CAAC4E,MAAO9zB,KAAK8zB,MAAOhlB,GAAI9O,KAAKytB,OAAO9vB,EAAE,0BAA0B,GAAI8vB,OAAQztB,KAAKytB,QAC9M,EAEAkyD,QAAS,WAKL,OAJA3/E,KAAKD,IAAIJ,KAAKK,KAAKwtB,YAAYrtB,SAAS,mBACxCH,KAAKglF,qBACAhlF,KAAK8zB,MAAMsjD,YACZp3E,KAAK8zB,MAAMijD,eACR/2E,IACX,EAEAglF,mBAAoB,WAChBhlF,KAAK8zB,MAAMk/C,aAAaM,oBAAoB,CAACjgB,QAASrzD,KAAKgzE,aAAa3f,UAAY5f,IAChF,IACI4f,EADY,GAAE5f,GACM5zC,KAAK,SAASL,KAAK,WAC3C,GAAIQ,KAAK8zB,MAAMtxB,IAAI,gBACgB,IAA9BxC,KAAKgzE,aAAa3f,UAAmBrzD,KAAK8zB,MAAMtxB,IAAI,cAAcmjD,YAAc3lD,KAAKgzE,aAAa/wE,QAC/FjC,KAAKgzE,aAAa/wE,QAAUjC,KAAK8zB,MAAMtxB,IAAI,cAAcmjD,aAIzD,OAHA3lD,KAAK0sB,QAAQu4D,mBAAmBC,sBAAsBllF,KAAK8zB,MAAMtxB,IAAI,QACrExC,KAAKgzE,aAAamS,yBAClBnlF,KAAKglF,qBAIThlF,KAAKgzE,aAAa3f,QAAUA,IAEhCA,GAAWrzD,KAAK0sB,QAAQu4D,mBAAmBG,2BAA2BplF,KAAK8zB,MAAMtxB,IAAI,OAAQ6wD,GAC5FrzD,KAAKgzE,aAAa3f,QAAUA,GAAYrzD,KAAKgzE,aAAaqS,gBAC3DrlF,KAAKslF,qBAAoB,IAC1B,KACCtlF,KAAKD,IAAIG,YAAY,kBAAkB,GAE/C,EAEA4kF,uBAAwB,WACpB9kF,KAAKglF,qBACAhlF,KAAK8zB,MAAMsjD,YACZp3E,KAAK8zB,MAAMijD,cACnB,EAEA8N,sBAAuB,WACnB7kF,KAAKyuB,aAAezuB,KAAKslF,oBAC7B,EAEAwB,sBAAuB,WACnB9mF,KAAKglF,oBACT,EAEAM,mBAAoB,WAChBtlF,KAAKgzE,aAAalzE,MAAM8iF,IACpB5iF,KAAKulF,iBAAiB3C,EAAY,IAElC5iF,KAAKrC,EAAE,mCAAmC4P,OAC1CvN,KAAK4mF,oBACT5mF,KAAKD,IAAIG,YAAY,kBACzB,EAEAslF,iBAAkB,SAAU36E,GACxB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,qBACnC,GAAMhvB,QAAQiC,IAAI,aAAiB,0CAA2C,aAAiB,0CAA2C,CAAC02B,EAAQ7kC,KAAK,+BAA+ByC,SACnL,KAAM,CAAE6L,eAAgB,aAAiB,qBAAqBoa,MAAMrgB,IACpE,GAAIA,EAAQ,CACR,IAAI06E,EAAc5iF,KAAKgzE,aAAaxwE,IAAIkiC,EAAQllC,KAAK,YACjDojF,GACAA,EAAYhd,OAAM,KACVlhC,EAAQxzB,SACRlR,KAAKytB,OAAOoB,iBAAiB,IAC7B9gB,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAE7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEvG,IAER,EAEA03E,gBAAiB,SAAU56E,GACvB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,qBACnC,GAAMhvB,QAAQiC,IAAI,aAAiB,yBAA0B,aAAiB,kDAAmD,CAAC02B,EAAQ7kC,KAAK,+BAA+ByC,SAC1K,KAAM,CAAE6L,eAAgB,aAAiB,oBAAoBoa,MAAMrgB,IACnE,GAAIA,EAAQ,CACR,IAAI06E,EAAc5iF,KAAKgzE,aAAaxwE,IAAIkiC,EAAQllC,KAAK,YACjDojF,GACAA,EAAY8C,MAAK,KACThhD,EAAQxzB,SACRlR,KAAKytB,OAAOoB,iBAAiB,IAC7B9gB,IAEI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEvG,IAER,EAEAg5E,sBAAuB,SAAUl8E,GAC7B,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,qBACnC,GAAMhvB,QAAQsC,aAAa,aAAiB,yBAA0B,aAAiB,kDAAmD,CAACq2B,EAAQ7kC,KAAK,+BAA+ByC,SAAU,KAAM,CAAE6L,eAAgB,aAAiB,kBAAmBG,gBAAiB,QAASC,qBAAsB,aAAiB,qBAAqBga,MAAMrgB,IACrV,GAAIA,EACA,GAAe,UAAXA,EAAmB,CACnB,IAAI06E,EAAc5iF,KAAKgzE,aAAaxwE,IAAIkiC,EAAQllC,KAAK,YACjDojF,GACAA,EAAYhd,OAAM,KACdlhC,EAAQxzB,SACRlR,KAAKytB,OAAOoB,iBAAiB,IAC7B9gB,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAE7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEnG,KACI,CACkB/N,KAAKgzE,aAAaxwE,IAAIkiC,EAAQllC,KAAK,YACzCkmF,MAAK,KACbhhD,EAAQxzB,SACRlR,KAAKytB,OAAOoB,iBAAiB,IAC7B9gB,IAEI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAE/F,CACJ,GAER,EAEAw3E,iBAAkB,SAAU3C,GACxB,IAAIxrE,EAAQ,GAAEC,MAAMurE,EAAYtrE,YAChCF,EAAMutC,SAAW,GAAE9yC,OAAOuF,EAAMutC,UAChCvtC,EAAMuuE,MAAQ,GAAE9zE,OAAOuF,EAAMuuE,OAC7BvuE,EAAMwuE,MAAQxuE,EAAMc,KAAOlY,KAAK0sB,QAAQlqB,IAAI,OAC5C4U,EAAMyuE,eAAiBzuE,EAAM0uE,QAAW,GAAO1uE,EAAM0uE,SAASC,UAAY,GAAO3uE,EAAM0uE,SAASvrC,UAAY,GAAOnjC,EAAM0uE,QAAQ/vE,OAAO,EAAGqB,EAAM0uE,QAAQ7jF,OAAS,IAAIs4C,UAAa,GACnL,IAAI6nC,EAAa,GAAE,GAAUrI,YAAYiN,wBAAwB5vE,IAC7DyW,EAAO7tB,KAAKrC,EAAE,eAAiByZ,EAAMxN,GAAK,MAC1CikB,EAAK5rB,QACL4rB,EAAK7gB,SAAS,WAAao1E,EAAWjiF,SAAS,UAC/CiiF,EAAWruD,aAAalG,GACxBA,EAAK/iB,UAGDsM,EAAMwuE,MACNxD,EAAW6D,UAAUjmF,KAAKrC,EAAE,6BAG5BykF,EAAW/4E,SAASrJ,KAAKrC,EAAE,6BAEnCqC,KAAKkmF,mBAAmB9uE,EAC5B,EAEA8uE,mBAAoB,SAAUC,GAC1B,IAAInrF,EAAQ,GAAO4K,iBAAiBugF,EAAOxhC,UAAYwhC,EAAOjuE,KAAOiuE,EAAOv8E,IACxE4iC,EAAW25C,EAAS,GAAInmF,KAAKrC,EAAE,eAAgBwoF,EAAOv8E,GAAI,qBAAuB5J,KAAKrC,EAAE,wBAAyBwoF,EAAOjuE,IAAK,qBAEjI,GADAs0B,EAAQvnC,UAAUjK,EAAOgF,KAAK8/E,oBAC1BqG,EAAO76C,OAAQ,CACf,IAAIkoC,EAAgBxzE,KAAK0sB,QAAQ8kD,cAAc4U,aAAaD,EAAOv8E,IACnE,GAAI5J,KAAK0sB,QAAQ8kD,cAAc6U,cAAcF,EAAOv8E,KAAOu8E,EAAO76C,QAAUkoC,EACxEhnC,EAAQvnC,UAAUuuE,EAAexzE,KAAK8/E,yBAEtC,GAAIqG,EAAOG,WACPtmF,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoBJ,EAAOv8E,GAAIu8E,EAAO76C,OAAQ66C,EAAOG,YAChFtmF,KAAKrC,EAAE,uBAAwBwoF,EAAOv8E,GAAI,qBAAqB3E,UAAUkhF,EAAOG,WAAYtmF,KAAK8/E,oBAC7F9/E,KAAK0sB,QAAQlqB,IAAI,SAAW2jF,EAAOjuE,MACnClY,KAAK8zB,MAAM6/C,QAAQ5zD,IAAI,CAACurB,OAAQ66C,EAAO76C,OAAQ,WAAc66C,EAAOG,aACpEtmF,KAAK8zB,MAAMvoB,QAAQ,uBAGtB,CACD,IAAI8E,EAAO,GAAG,GAAQ6lB,GAAGy2B,sBAAsBw5B,EAAOv8E,KACtD5J,KAAK8zB,MAAMi5B,UAAUo5B,EAAO76C,OAAQj7B,GAAOi7B,IACvCtrC,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoBJ,EAAOv8E,GAAIu8E,EAAO76C,OAAQA,GACzEtrC,KAAKrC,EAAE,uBAAwBwoF,EAAOv8E,GAAI,qBAAqB3E,UAAUqmC,EAAQtrC,KAAK8/E,oBAClF9/E,KAAK0sB,QAAQlqB,IAAI,SAAW2jF,EAAOjuE,MACnClY,KAAK8zB,MAAM6/C,QAAQ5zD,IAAI,aAAcurB,GACrCtrC,KAAK8zB,MAAMvoB,QAAQ,kBACvB,GAER,CAER,CACJ,EAEAi7E,0BAA2B,SAAU37E,GACjC,IAAI65B,EAAU,GAAE75B,EAAG4C,QACnB,GAAIi3B,EAAQ3J,QAAQ,iBAAiB94B,OACjC,OACJ,IAAIwkF,EAAmB/hD,EAAQ3J,QAAQ,qBACnC2rD,EAAiBD,EAAiBjnF,KAAK,WACvCojF,EAAc5iF,KAAK8zB,MAAMk/C,aAAaxwE,IAAIkkF,GAC7CD,EAAiBjnF,KAAK,aAAeinF,EAAiBjnF,KAAK,cAAgBQ,KAAK0sB,QAAQlqB,IAAI,SAAYkkF,EAAiB,IAC1H1mF,KAAK8zB,MAAMk/C,aAAaM,oBAAoB,CAAC1pE,GAAI88E,IAAkBjzC,IAC/D,IAAIl6B,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE1Z,GAAU5zC,KAAK,YAAY,GAAQq2B,GAAGE,eACnFp2B,KAAK+kF,6BAA6B96E,KAAK24E,EAAarpE,EAAU,GAEtE,EAEA0tE,8BAA+B,SAAUp8E,GACrC,IACI47E,EADU,GAAE57E,EAAG4C,QACYstB,QAAQ,qBACnC2rD,EAAiBD,EAAiBjnF,KAAK,WACvCojF,EAAc5iF,KAAK8zB,MAAMk/C,aAAaxwE,IAAIkkF,GAC7CD,EAAiBjnF,KAAK,aAAeinF,EAAiBjnF,KAAK,cAAgBQ,KAAK0sB,QAAQlqB,IAAI,SAAYkkF,EAAiB,IAC1H1mF,KAAK8zB,MAAMk/C,aAAaM,oBAAoB,CAAC1pE,GAAI88E,IAAkBjzC,IAC/D,IAAIl6B,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE1Z,GAAU5zC,KAAK,YAAY,GAAQq2B,GAAGE,eACnFp2B,KAAK+kF,6BAA6B96E,KAAK24E,EAAarpE,GACpDvZ,KAAK+kF,6BAA6BmC,gBAClClnF,KAAK+kF,6BAA6BoC,kBAAkB,GAE5D,EAEAR,YAAa,SAAU97E,GACfA,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,iBAG/DuN,KAAK4mF,oBAFL5mF,KAAK4xB,YAAY/mB,EAGzB,EAEA+7E,kBAAmB,WACf,IAAIv0D,EAAQryB,KAAKrC,EAAE,mCAAmC4P,MAAMyI,cAC5DhW,KAAKrC,EAAE,wCAAwCmC,MAAK,CAAC4C,EAAKxB,KACtD,IAAI+P,EAAQ,GAAE/P,GACVwlF,EAAiBz1E,EAAMvR,KAAK,MAC5BkjF,EAAc5iF,KAAK8zB,MAAMk/C,aAAanzE,MAAK+iF,GAAeA,EAAYpgF,IAAI,QAAUkkF,IACpFxuE,EAAM0qE,EAAYpgF,IAAI,OAAOwT,cAC7BjX,EAAO6jF,EAAYpgF,IAAI,YAAYwT,cACvC/E,EAAMM,OAAOxS,EAAKqF,QAAQiuB,GAAS,GAAKna,EAAI9T,QAAQiuB,GAAS,EAAE,IAE/DA,EACAryB,KAAKrC,EAAE,sBAAsB+wB,OAE7B1uB,KAAKrC,EAAE,sBAAsBmxB,MACrC,EAEA8C,YAAa,SAAU/mB,GACnBA,GAAMA,EAAGa,iBACT1L,KAAKrC,EAAE,iBAAiB4P,IAAI,IAC5BvN,KAAK4mF,mBACT,IAGJ,6BAAmC,oBAAwB,CACvD71D,UAAW,iCACXvD,SAAU,GAAUusD,YAAYqN,mBAChC1e,2BAA4B,GAAUzxE,aAAaU,yBACnDm2B,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,4BAA6B,QAC7B,gCAAiC,eACjC,8BAA+B,aAC/B,+DAAgE,eAChE,8BAA+B,eAC/B,+BAAgC,QAChC,8BAA+B,OAC/B,uBAAwB,YACxB,kCAAmC,cACnC,kBAAmB,iBACnB,0BAA2B,mBAC3B,yBAA0B,eAC1B,uBAAwB,cAG5B1C,YAAa,WACTvuB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,OAC9B,EAEAziB,KAAM,SAAU24E,EAAarpE,GACpBqpE,IACL5iF,KAAK4iF,YAAcA,EACnB5iF,KAAK4iF,YAAYv/D,GAAG,eAAgBrjB,KAAKqnF,eAAgBrnF,MACzDA,KAAKuZ,UAAYA,EACjBvZ,KAAKgvB,SACLhvB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKD,IAAIuF,IAAI,SAAU,IACG,GAArB,GAAEvB,QAAQgB,SAAiB/E,KAAKD,IAAIgF,SAAY,GAAEhB,QAAQgB,UAC3D/E,KAAKD,IAAIuF,IAAI,SAA+B,GAArB,GAAEvB,QAAQgB,UACrC/E,KAAKrC,EAAE,kBAAkB2H,IAAI,aAAc,gBAAkB,GAAKtF,KAAKrC,EAAE,WAAWoH,UAAY,OAChG/E,KAAKiwB,cACLjwB,KAAK2oD,mBACL,IAAIsa,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QAEf36B,KAAKrC,EAAE,kCAAkC28B,SAAS2oC,GAClDjjE,KAAKrC,EAAE,8CAA8C28B,SAAS,GAAEtwB,OAAOi5D,EAAmB,CAACtoC,UAAW,UAAU,EAEpHxvB,SAAU,KACNnL,KAAKgvB,SACLhvB,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,IAG3C,EAEA7U,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAChBT,SAAU,KACNnL,KAAKgvB,SACLhvB,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,EAEAiP,OAAQ,WACJhvB,KAAKsnF,WAAa,GAClB,IAQIC,EARAnwE,EAAQ,GAAEC,MAAMrX,KAAK4iF,YAAYtrE,YACrCF,EAAMutC,SAAW,GAAE9yC,OAAOuF,EAAMutC,UAChCvtC,EAAMm6D,QAAUn6D,EAAMm6D,QACtBn6D,EAAMy5D,aAAsC,OAAvBz5D,EAAMy5D,aAAwB,KAAO,OAC1Dz5D,EAAMuuE,MAAQ,GAAE9zE,OAAOuF,EAAMuuE,OAC7BvuE,EAAMowE,UAAYpwE,EAAMc,MAAQlY,KAAK0sB,QAAQlqB,IAAI,OACjD4U,EAAMqwE,mBAAqBznF,KAAK0sB,QAAQq5C,UAAUuL,UAAUl6D,EAAMc,KAClEd,EAAMswE,kBAAkB1nF,KAAKi1B,QAAQzyB,IAAI,eAA4D,cAA3CxC,KAAKi1B,QAAQzyB,IAAI,cAAc2zE,SAErFn2E,KAAKi1B,QAAQzyB,IAAI,iBACjBxC,KAAKD,IAAII,SAAS,uBAClBonF,EAAoB,GAAE,GAAUxN,YAAY4N,4BAA4BvwE,KAGxEmwE,EAAoB,GAAE,GAAUxN,YAAY6N,yBAAyBxwE,IACzEpX,KAAKrC,EAAE,WAAWgC,KAAK4nF,GACvBvnF,KAAKrC,EAAE,sFAAsFoP,YAAY,aAAqC,OAAvBqK,EAAMy5D,cAC7H7wE,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAc/M,KAAK4iF,YAAYpgF,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,QACpGxC,KAAKkmF,mBAAmBlmF,KAAK4iF,aAC7B5iF,KAAK6nF,qBAAuB,GAC5B7nF,KAAK8nF,cAAgB,GAChB9nF,KAAKi1B,QAAQzyB,IAAI,iBAGlBxC,KAAKrC,EAAE,kBAAkBwC,SAAS,UAClCH,KAAKrC,EAAE,iBAAiBoP,YAAY,SAAU/M,KAAK4iF,YAAYpgF,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,SAH/FxC,KAAK+nF,kBAKT/nF,KAAK6uB,kBACL7uB,KAAKrC,EAAE,oCAAoC0lB,GAAG,YAAY,KACtD,IAAI2kE,EAAehoF,KAAKrC,EAAE,kBAAkBmS,0BAA0BtL,OACjD,KAAjBwjF,IACAA,EAAehoF,KAAK4iF,YAAYpgF,IAAI,aACxCxC,KAAKrC,EAAE,oCAAoCmxB,OAC3C9uB,KAAKrC,EAAE,+BAA+B+wB,OACtC1uB,KAAKioF,eAAeD,EAAa,IAErChoF,KAAKrC,EAAE,YAAYqwB,iBAAiB,CAAC5E,MAAO,aAChD,EAEA88D,mBAAoB,SAAUC,GAC1B,IAAIO,EAAiBP,EAAO3jF,IAAI,MAC5BgqC,EAAUxsC,KAAKrC,EAAE,sCAAsC+oF,sBAI3D,GAHAP,EAAOnrF,MAAQ,GAAO4K,iBAAiBugF,EAAO3jF,IAAI,aAAe2jF,EAAO3jF,IAAI,QAAUkkF,GACtFl6C,EAAQvnC,UAAUkhF,EAAOnrF,MAAOgF,KAAK0oE,4BACrC1oE,KAAKrC,EAAE,sCAAuCwoF,EAAOv8E,GAAI,MAAMrI,QAAQ,SAAU,CAACG,WAAY,KAC1FykF,EAAO3jF,IAAI,UACX,GAAIxC,KAAK0sB,QAAQ8kD,cAAc6U,cAAcK,IAAmBP,EAAO3jF,IAAI,WAAcxC,KAAK0sB,QAAQ8kD,cAAc4U,aAAaM,GAC7Hl6C,EAAQvnC,UAAUjF,KAAK0sB,QAAQ8kD,cAAc4U,aAAaM,GAAiB1mF,KAAK0oE,iCAEhF,GAAIyd,EAAO3jF,IAAI,cACXgqC,EAAQvnC,UAAUkhF,EAAO3jF,IAAI,cAAexC,KAAK0oE,gCAEhD,CACD,IAAIr4D,EAAO,GAAQ6lB,GAAGy2B,mBAAqB,IAAM+5B,EACjD1mF,KAAKi1B,QAAQ83B,UAAUo5B,EAAO3jF,IAAI,UAAW6N,GAAOi7B,IAChDtrC,KAAKrC,EAAE,kBAAkBsH,UAAUqmC,EAAQtrC,KAAK0oE,2BAA2B,GAEnF,MAIA1oE,KAAK0sB,QAAQ8kD,cAAc6U,cAAcK,IACzCl6C,EAAQvnC,UAAUjF,KAAK0sB,QAAQ8kD,cAAc4U,aAAaM,GAAiB1mF,KAAK0oE,2BAE5F,EAEAwf,iBAAkB,SAAUr9E,IACvB,GAAEA,EAAG4C,QAAQT,SAAS,eAAiBhN,KAAKgvB,OAAOhvB,KAAK4iF,YAC7D,EAEAuF,YAAa,SAAUnpF,GACnB,IAAI9K,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SAC3C/gC,EAAKk0F,cAAgB,IAAI,2BAA+B,CAAEt0D,MAAO5/B,EAAM+gC,QAASj1B,KAAKi1B,QAAS2tD,YAAa5iF,KAAK4iF,YAAYtrE,aAC5HpjB,EAAKk0F,cAAcC,gBAAgBrpF,GAAS,KACxCgB,KAAKkL,QACL,kBAAsB,YAAa,CAACiuB,MAAO,uBAAwBrF,MAAO5/B,GAAM,GAExF,EAEAguE,aAAc,SAAUr3D,GACpB,IAAI6O,EAAQ7O,EAAG4C,OACf,IAAKiM,EAAM8uB,MAAMvmC,OACb,OACJ,IAAIgF,EAAOyS,EAAM8uB,MAAM,GACvB9uB,EAAM3O,MAAQ,GACV9D,EAAKrC,KAAO,GAAUhO,qBACtB,GAAMmV,QAAQgC,MAAM,aAAiB,4CAE7B9G,EAAKpD,KAAK+jB,WAAW,SAKjC,GAAMlH,OAAO1Z,kBAAkBC,GAAMshB,MAAMvtB,IACnCA,IACAiM,EAAK2B,OAAS5N,EACdgF,KAAKsnF,WAAargF,EAClBjH,KAAKrC,EAAE,kBAAkBwC,SAAS,WAAW8E,UAAUjK,EAAOgF,KAAK0oE,4BACnE1oE,KAAK2oD,mBACT,IAVA,GAAM58C,QAAQgC,MAAM,aAAiB,sCAY7C,EAEAu6E,iBAAkB,SAAUz9E,GACxB,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,iBAAiBl7B,KAAK,mBAC/D0oF,EAAczb,EAAe/xC,QAAQ,eAAel7B,KAAK,SACzDitE,EAAettE,KAAK,gBAAkBotE,EAAgBptE,KAAK,gBAC3DstE,EAAe/xC,QAAQ,eAAe56B,SAAS,yBAC/CH,KAAK2oD,oBAETikB,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgBptE,KAAK,aAAcstE,EAAettE,KAAK,eACb,MAAtCstE,EAAettE,KAAK,cACpBotE,EAAgBzsE,SAAS,iBAAiBmC,KAAK,aAAiB,oCACzDsqE,EAAgB5/D,SAAS,kBAChC4/D,EAAgB1sE,YAAY,iBAC3BqoF,EAAYh+E,KAAK,YAClBg+E,EAAY98E,OAEpB,EAEA47E,eAAgB,SAAUzE,GACtB,IAAI+C,EAAQ,GAAE9zE,OAAO+wE,EAAYpgF,IAAI,UACrCxC,KAAKwoF,YAAY7C,EACrB,EAEA6C,YAAa,SAAU7C,GACnB3lF,KAAKrC,EAAE,UAAUgC,KAAKgmF,GAAO54E,YAAY,UAAW44E,GACpD3lF,KAAKrC,EAAE,qBAAqB4D,QAAQ,SACxC,EAEA07B,cAAe,SAAUykD,GACrB1hF,KAAKrC,EAAE,yBAAyBoP,YAAY,cAAe20E,EAC/D,EAEA/4B,iBAAkB,WACd,IAAI+4B,EAAc1hF,KAAKrC,EAAE,YAAYsE,OACrCjC,KAAKi9B,cAAcykD,EACvB,EAEAuG,eAAgB,SAAUtjC,GACtB,IAAI69B,EAAexiF,KAAKrC,EAAE,sCAAwCqC,KAAK4iF,YAAYpgF,IAAI,MAAQ,MAC3FimF,EAAwBjG,EAAa3iF,KAAK,aAC9C4oF,EAAsB9oF,KAAK,GAAQ+oF,UAAU/jC,IAC7C69B,EAAajhF,QAAQ,aACjBojD,IAAa3kD,KAAK4iF,YAAYpgF,IAAI,YAClCimF,EAAsBtoF,SAAS,WAE/BsoF,EAAsBvoF,YAAY,WACtCF,KAAK2oD,kBACT,EAEAggC,aAAc,WACN3oF,KAAKi1B,QAAQzyB,IAAI,iBAAmBxC,KAAK0sB,QAAQlqB,IAAI,SAAWxC,KAAK4iF,YAAYpgF,IAAI,SAEzFxC,KAAKrC,EAAE,+BAA+BmxB,OACtC9uB,KAAKrC,EAAE,oCAAoC2E,KAAKtC,KAAKrC,EAAE,+BAA+B2E,QAAQosB,OAAO7f,kBACzG,EAEA+5E,UAAW,SAAU/9E,GACb,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,gBAElDhN,KAAK6oF,iBAAmB,IAAI,iBAAqB,CAAC/0D,MAAO9zB,OAC7D,EAEA8oF,aAAc,SAAUj+E,GAChBA,GAAMA,EAAGW,UAAY,GAAUlZ,YAC/BuY,EAAGa,iBACH,GAAEvQ,SAAS+sD,eAAe7+B,OAElC,EAEA0/D,WAAY,SAAUl+E,GAClB,IACIktB,EADgB,GAAEltB,EAAG4C,QACKqC,0BAA0BtL,OACxD,GAAqB,kBAAjBqG,EAAG4C,OAAO7D,GAAwB,CAClC,IAAI83E,EAAe3pD,IAAc/3B,KAAK4iF,YAAYpgF,IAAI,YACtDxC,KAAKi9B,cAAcykD,EACvB,CACJ,EAEAsH,oBAAqB,WACjB,GAAMj9E,QAAQiC,IAAI,aAAiB,uCAAwC,aAAiB,sCAAuC,CAAChO,KAAK4iF,YAAYpgF,IAAI,aAAexC,KAAK4iF,YAAYpgF,IAAI,QAAUxC,KAAK4iF,YAAYpgF,IAAI,QAAS,KAAM,CAAE2L,eAAgB,aAAiB,YAAYoa,MAAMrgB,IAC5R,GAAIA,GACIlI,KAAK4iF,YAAYpgF,IAAI,MAAO,CACXxC,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SACtCg0D,sBAAsBjpF,KAAK4iF,YAAYpgF,IAAI,MAC1D,CACJ,GAER,EAEAojE,MAAO,WACH,GAAM75D,QAAQiC,IAAI,aAAiB,0CAA2C,aAAiB,0CAA2C,CAAChO,KAAK4iF,YAAYpgF,IAAI,cAC5J,KAAM,CAAE2L,eAAgB,aAAiB,qBAAqBoa,MAAMrgB,IAChEA,GACAlI,KAAK4iF,YAAYhd,OAAM,KAAO5lE,KAAKkL,OAAO,IACtC,SAAU6C,GACF,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAC7C,GACR,GAER,EAEA23E,KAAM,SAAU76E,GACR,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAElD,GAAMjB,QAAQiC,IAAI,aAAiB,yBAA0B,aAAiB,kDAAmD,CAAChO,KAAK4iF,YAAYpgF,IAAI,cACnJ,KAAM,CAAE2L,eAAgB,aAAiB,oBAAoBoa,MAAMrgB,IAC/DA,GACAlI,KAAK4iF,YAAY8C,MAAK,KACd1lF,KAAKkL,OAAO,IACZ6C,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEnG,GAER,EAEAg6E,gBAAiB,WACb/nF,KAAKrC,EAAE,gBAAgBgC,KAAK,IAC5BK,KAAKuZ,UAAUE,QAAUzZ,KAAKuZ,UAAUE,OAAOpH,SAASqH,IAEpD,GAAoB,iBADpBA,EAAQ,GAAErC,MAAMqC,IACN7V,OAA2C,UAAhB6V,EAAM7V,MAAuB6V,EAAMG,QAA6B,GAAnBH,EAAMG,OAAO,IA2BpE,UAAhBH,EAAM7V,MACb6V,EAAMG,QAAU7Z,KAAKrC,EAAE,gBAAgBkP,OAAO,GAAE,gCAAgCvK,KAAKoX,EAAMG,OAAO,SA5BG,EACpGH,EAAMG,SAAWH,EAAMG,OAAS,IACjC,IAMIqvE,EANA9xE,EAAQ,CACJtB,YAAa4D,EAAME,MACnB7a,KAAM2a,EAAMK,IACZ09C,QAAS/9C,EAAMG,OAASH,EAAMG,OAAO,QAAKuB,GAE9C+tE,EAAmB,GAAE,GAAUpP,YAAYoP,iBAAiB,CAACpqF,KAAMqY,EAAMrY,KAAM+W,YAAasB,EAAMtB,YAAajS,KAAM6V,EAAM7V,QAU/H,GARI6V,EAAM1a,UACNkqF,EAAqB,GAAE,GAAUnP,YAAYqP,sBAAsB,CAC/DC,WAAa,WAAajyE,EAAMrY,KAChCuqF,eAAgB5vE,EAAM1a,WAE1BmqF,EAAiBt8E,OAAOq8E,IAE5BlpF,KAAKrC,EAAE,gBAAgBkP,OAAOs8E,GAC1B/xE,EAAMqgD,UACNz3D,KAAK8nF,cAAc1mF,KAAK,CAACrC,KAAMqY,EAAMrY,KAAM04D,QAASrgD,EAAMqgD,UAC1Dz3D,KAAKrC,EAAE,gBAAkByZ,EAAMrY,MAAMwL,KAAK,WAAW,GAAMpK,SAASiX,EAAMqgD,SACrD,GAAjBrgD,EAAMqgD,SAAc,CACOz3D,KAAKrC,EAAE,2BAA6ByZ,EAAMrY,MAChDc,KAAK,iCAAiCL,KAAK,aAAc4X,EAAMqgD,SAC/Ev3D,YAAY,iBACZoC,KAAK,GAA6B,IAAtBP,OAAOqV,EAAMqgD,UAAeld,UACjD,CAER,CAC0G,GAElH,EAEAgvC,eAAgB,SAAU1+E,GACtB,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAC9C,OACJ,IAAIw8E,EAAkBxpF,KAAK4iF,YAAYpgF,IAAI,OACvCinF,EAAwBzpF,KAAK0sB,QAAQ4I,SAAS9yB,IAAIgnF,GACtD,IAAKA,GAAmBxpF,KAAKi1B,QAAQzyB,IAAI,kBAAmB,CACxD,IAAIuzB,EAAK,GAAI,CAACxf,GAAIvW,KAAKi1B,QAAQ0oB,OAAQ95C,KAAM,QACxCsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBACjCx7D,EAAE,eAAgB,CAAE+E,IAAKlY,KAAKi1B,QAAQzyB,IAAI,OAASoH,GAAI5J,KAAK4iF,YAAYpgF,IAAI,QACjFxC,KAAK0sB,QAAQiK,WAAWZ,GAAK2zD,IACzB,IAAIC,EAAY,GAAED,GAAa7pF,KAAK,mBAAmByC,OAAS,IAAMtC,KAAKi1B,QAAQ0oB,OAC/E1oB,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa+wB,GACjD10D,EAAQlV,IAAI,cAAc,GAC1BkV,EAAQlV,IAAI,4BAA4B,GACxCkV,EAAQ8+C,KAAK,cACb9+C,EAAQ++C,aAAa,MAAM,KACvB/+C,EAAQ8+C,KAAK,aACb9+C,EAAQo+C,YACRrzE,KAAKkL,QACL+pB,EAAQogD,cACRr1E,KAAK0sB,QAAQgH,MAAMmqD,SAAS5oD,GACjBj1B,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GACjC1B,SAASq2D,oBAAoB,CAC9Bz5B,SAAUw5B,EACVzyE,QAAS,aAAiB,6CAA8C,CAAClX,KAAK4iF,YAAYpgF,IAAI,YAAaxC,KAAKi1B,QAAQzyB,IAAI,UAC9H,GACJ,IACFuL,IACA,IACI87E,EADS,GAAE97E,GACelO,KAAK,YAAY,GAAQq2B,GAAGy4C,oBAAoBrsE,OAC9E,GAAIunF,EAAkB,CAClB,IAAI50D,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAaixB,GAC7C31F,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GAGtC,OAFAj1B,KAAKkL,aACLhX,GAAQA,EAAKqX,QAAQ,QAEzB,CACA,IAAIy2E,EAAW,GAAEj0E,GAAOlO,KAAK,mBAAmByC,QAAU,GAAEyL,GAAOlO,KAAK,QAAQqyB,QAAQ5vB,QAAU,aAAiB,8CACnHtC,KAAKkL,QACL,GAAMa,QAAQgC,MAAMi0E,EAAS,GAErC,KACK,CACD,GAAIyH,GACIA,EAAsBjnF,IAAI,aAG1B,OAFAxC,KAAKkL,aACLu+E,EAAsBl+E,QAAQ,YAAak+E,GAGnDzpF,KAAKkL,QACL,yBAA6B,CACzBwhB,QAAS1sB,KAAK0sB,QACdxU,IAAKsxE,GAEb,CACJ,EAEAM,aAAc,SAAUj/E,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACfs8E,EAAcrlD,EAAQ3J,QAAQ,eAC9BsuD,EAAa3kD,EAAQn6B,KAAK,MAC1Bm6B,EAAQn6B,KAAK,WACRvK,KAAK8nF,cAAcjoF,MAAKs5B,GAASA,EAAMp6B,OAASsqF,IAG7CU,EAAY/8E,SAAS,iBACrB+8E,EAAY5pF,SAAS,WAErB4pF,EAAY7pF,YAAY,WAL5B6pF,EAAY5pF,SAAS,WAQrBH,KAAK8nF,cAAcjoF,MAAKs5B,GAASA,EAAMp6B,OAASsqF,IAChDU,EAAY5pF,SAAS,YAErB4pF,EAAY7pF,YAAY,WACpB6pF,EAAY/8E,SAAS,kBACrB+8E,EAAYlqF,KAAK,oCAAoCM,SAAS,iBAAiBmC,KAAK,aAAiB,oCAAoC9C,KAAK,aAAc,KAGxKQ,KAAK2oD,kBACT,EAEAqhC,WAAY,SAAUn/E,GAClB,GAAI,GAAEA,EAAG4C,QAAQT,SAAS,cACtB,OACJ,IAAImqB,EAAO,GAAEtsB,EAAG4C,QAEZw8E,GADMjqF,KAAK0sB,QAAQlqB,IAAI,OACXxC,KAAK4iF,YAAYpgF,IAAI,OACjC0nF,EAAsBlqF,KAAKrC,EAAE,4CAC7BwsF,EAAiBnqF,KAAKrC,EAAE,+BAA+B2E,OACvD8nF,EAAiBpqF,KAAKsnF,WACtB+C,GAAiB,EACjB3I,GAAc,EACd4I,EAAa,GAAI,CAACzmF,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SAC/E2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,aAC3Cx7D,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAY/kE,GAAIqgF,IAyDtD,GAxDAjqF,KAAKrC,EAAE,uCAAuCwC,SAAS,cACvDiqF,GAAkBF,EAAoBrqF,KAAK,mBAAmBM,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UAClHgqF,GAAkBnqF,KAAK4iF,YAAYpgF,IAAI,cACvCk/E,GAAc,EACd4I,EAAWn3E,EAAE,YAAYgS,EAAEglE,GAAgB9zD,MAE/Cr2B,KAAKrC,EAAE,eAAemC,MAAK,CAAC4C,EAAK6nF,KAC7B,GAAI,GAAEA,GAAYv9E,SAAS,WAAY,CACnC,IAAI+8E,EAAc,GAAEQ,GAChBlB,EAAaU,EAAYlqF,KAAK,gBAAgB,GAAG+J,GACrD,GAAImgF,EAAYlqF,KAAK,wBAAwB0N,MAAO,CAChD,IAAIi9E,EAAeT,EAAYlqF,KAAK,kDAAkDL,KAAK,cACvFka,EAAQ1Z,KAAKuZ,UAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQsvE,IAClDvH,EAAY9hF,KAAKuZ,UAAUE,OAAOrV,QAAQsV,GAC9CA,EAAMG,OAAS,CAAC2wE,GAChBxqF,KAAKuZ,UAAUE,OAAOqoE,GAAapoE,EACnC2wE,GAAiB,CACrB,KACK,CACD,IAAI3wE,EAAQ1Z,KAAKuZ,UAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQsvE,IACtD,GAAI3vE,EAAMG,OAAO5X,OAAQ,CACrB,IAAI6/E,EAAY9hF,KAAKuZ,UAAUE,OAAOrV,QAAQsV,GAC9CA,EAAMG,OAAS,GACf7Z,KAAKuZ,UAAUE,OAAOqoE,GAAapoE,EACnC2wE,GAAiB,CACrB,CACJ,CACJ,KAEAD,GACApqF,KAAKi1B,QAAQ+2B,UAAUo+B,EAAiB,IAAMH,GAAY,KACtDjqF,KAAKrC,EAAE,wBAAwBuC,YAAY,cAC3CgqF,EAAoBrqF,KAAK,mBAAmBK,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAC1GF,KAAKrC,EAAE,sCAAsCssF,sBAA8BhlF,UAAUmlF,EAAexhF,OAAQ5I,KAAK0oE,4BACjH1oE,KAAKkL,OAAO,IACb,SAAU6C,GACT/N,KAAKrC,EAAE,wBAAwBuC,YAAY,cAC3CgqF,EAAoBrqF,KAAK,mBAAmBK,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAE1G,IAAI8/C,EAAa,GAAEjyC,GAAOlO,KAAK,QAAQyC,QAAU,aAAiB,+CACjEo/E,GAAe,GAAM31E,QAAQgC,MAAMiyC,EACxC,IACA0hC,GACA1hF,KAAK0sB,QAAQiK,WAAW2zD,GACpB,KACItqF,KAAKrC,EAAE,wBAAwBuC,YAAY,cAC3CF,KAAK4iF,YAAY7iE,IAAI,WAAYoqE,GACjCnqF,KAAKkL,OAAO,IAEf6C,IACG/N,KAAKrC,EAAE,wBAAwBuC,YAAY,cAC3CF,KAAKkL,QAED,GAAE6C,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,IAE/Fs8E,EAAgB,CAChB,IAAII,EAAoB,GAAI,CAAC5mF,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SAC1F2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,YAChD8b,EAAoBzqF,KAAK0sB,QAAQkhC,oBAAoB68B,EAAmBzqF,KAAKuZ,WAC7EvZ,KAAK0sB,QAAQiK,WAAW8zD,GAAmB,KACnCzqF,KAAKkL,OAAO,IAEf6C,IACG/N,KAAKkL,QACD,GAAE6C,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEnG,CACAopB,EAAK9N,MACT,IAGJ,kCAAwC,oBAAwB,CAC5D0H,UAAW,iCACXvD,SAAU,GAAUusD,YAAY2Q,0BAChChiB,2BAA4B,GAAUzxE,aAAaU,yBAEnDs5B,OAAQ,CACJ,gCAAiC,QACjC,0BAA2B,oBAC3B,8BAA+B,gBAC/B,uBAAwB,YACxB,gCAAiC,eACjC,mBAAoB,SACpB,wBAAyB,aACzB,8BAA+B,aAC/B,8BAA+B,eAC/B,8BAA+B,wBAC/B,iCAAkC,gBAClC,oBAAqB,cACrB,uBAAwB,YACxB,kCAAmC,cACnC,8BAA+B,iBAC/B,0BAA2B,mBAC3B,mCAAoC,mBACpC,yBAA0B,eAC1B,uBAAwB,aACxB,sBAAuB,cAG3B1C,YAAa,WACTvuB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,OAC9B,EAEAziB,KAAM,SAAU24E,EAAarpE,GAOzB,GANAvZ,KAAK8zB,MAAM/T,IAAI,sBAAsB,GACrC/f,KAAKytB,OAAOwC,cACRjwB,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBAAiB,WAE9ChuB,KAAKrC,EAAE,6BAA6B4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,wBACrDogF,EAAa,OAClB5iF,KAAK4iF,YAAcA,EACnB5iF,KAAK4iF,YAAYv/D,GAAG,eAAgBrjB,KAAKqnF,eAAgBrnF,MACzDA,KAAKuZ,UAAYA,EACjBvZ,KAAKgvB,SACLhvB,KAAK2oD,mBACL,IAAIsa,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QAEf36B,KAAKrC,EAAE,kCAAkC28B,SAAS2oC,GAClDjjE,KAAKrC,EAAE,8CAA8C28B,SAAS,GAAEtwB,OAAOi5D,EAAmB,CAACtoC,UAAW,UAC1G,EAEAzvB,MAAO,WACHlL,KAAK8zB,MAAM/T,IAAI,sBAAsB,GACjC/f,KAAKytB,OAAOM,aAAa9rB,SACzBjC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAE5CjuB,KAAKytB,OAAOwG,YAEZj0B,KAAK+tB,cAAgB/tB,KAAK+tB,aAAa9rB,QACvCjC,KAAK+tB,aAAaC,iBAAiB,WAEvChuB,KAAKrC,EAAE,6BAA6B4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,sBAC9D,EAEAwsB,OAAQ,WACJhvB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,GAAExjB,OAAO,CAAC6jB,KAAM7tB,MAAO,MACnDA,KAAKsnF,WAAa,GAClB,IASIC,EATAnwE,EAAQ,GAAEC,MAAMrX,KAAK4iF,YAAYtrE,YACrCF,EAAMutC,SAAW,GAAE9yC,OAAOuF,EAAMutC,UAChCvtC,EAAMm6D,QAAUn6D,EAAMm6D,QACtBn6D,EAAMyuE,eAAiBzuE,EAAM0uE,QAAW,GAAO1uE,EAAM0uE,SAASC,UAAY,GAAO3uE,EAAM0uE,SAASvrC,UAAY,GAAOnjC,EAAM0uE,QAAQ/vE,OAAO,EAAGqB,EAAM0uE,QAAQ7jF,OAAS,IAAIs4C,UAAa,GACnLnjC,EAAMy5D,aAAsC,OAAvBz5D,EAAMy5D,aAAwB,KAAO,OAC1Dz5D,EAAMuuE,MAAQ,GAAE9zE,OAAOuF,EAAMuuE,OAC7BvuE,EAAMowE,UAAYpwE,EAAMc,MAAQlY,KAAK0sB,QAAQlqB,IAAI,OACjD4U,EAAMqwE,mBAAqBznF,KAAK0sB,QAAQq5C,UAAUuL,UAAUl6D,EAAMc,KAClEd,EAAMswE,kBAAkB1nF,KAAKi1B,QAAQzyB,IAAI,eAA4D,cAA3CxC,KAAKi1B,QAAQzyB,IAAI,cAAc2zE,SAErFn2E,KAAKi1B,QAAQzyB,IAAI,iBACjBxC,KAAKD,IAAII,SAAS,uBAClBonF,EAAoB,GAAE,GAAUxN,YAAY4Q,uCAAuCvzE,KAGnFmwE,EAAoB,GAAE,GAAUxN,YAAY6Q,+BAA+BxzE,IAC/EpX,KAAKrC,EAAE,kCAAkCgC,KAAK4nF,GAC9CvnF,KAAKrC,EAAE,sFAAsFoP,YAAY,aAAqC,OAAvBqK,EAAMy5D,cAC7H7wE,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAc/M,KAAK4iF,YAAYpgF,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,QACpGxC,KAAKkmF,mBAAmBlmF,KAAK4iF,aAC7B5iF,KAAK6nF,qBAAuB,GAC5B7nF,KAAK8nF,cAAgB,GAChB9nF,KAAKi1B,QAAQzyB,IAAI,iBAGlBxC,KAAKrC,EAAE,kBAAkBwC,SAAS,UAClCH,KAAKrC,EAAE,iBAAiBoP,YAAY,SAAU/M,KAAK4iF,YAAYpgF,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,SAH/FxC,KAAK+nF,kBAKT/nF,KAAK6uB,kBACL7uB,KAAKrC,EAAE,oCAAoC0lB,GAAG,YAAY,KACtD,IAAI2kE,EAAehoF,KAAKrC,EAAE,kBAAkBmS,0BAA0BtL,OACjD,KAAjBwjF,IACAA,EAAehoF,KAAK4iF,YAAYpgF,IAAI,aACxCxC,KAAKrC,EAAE,oCAAoCmxB,OAC3C9uB,KAAKrC,EAAE,+BAA+B+wB,OACtC1uB,KAAKioF,eAAeD,EAAa,IAErChoF,KAAK+tB,aAAe/tB,KAAKrC,EAAE,6BACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAKi0B,WACLj0B,KAAK6qF,uBAAyB,IAAI,8BAAkC,CAChE/7E,GAAI9O,KAAKrC,EAAE,+BAA+B,GAC1Cm2B,MAAO9zB,KAAK4iF,YACZn1D,OAAQztB,OAEZA,KAAK8qF,wBAA0B,IAAI,+BAAmC,CAClEh8E,GAAI9O,KAAKrC,EAAE,gCAAgC,GAC3Cm2B,MAAO9zB,KAAK4iF,YACZn1D,OAAQztB,OAEZA,KAAKi7D,WAAW,SAChB,QAAY,aAAcj7D,KAAK2+E,gBAAiB3+E,MAChDA,KAAK2+E,kBACL3+E,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,iCAAiC4T,QAAO,EACnD,EAEAotE,gBAAiB,WACb3+E,KAAKrC,EAAE,oBAAoBuT,SAC3BlR,KAAKrC,EAAE,SAAS+/D,OAChB19D,KAAKrC,EAAE,cAAcwC,SAAS,mBAClC,EAEA+mF,cAAe,WACXlnF,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,yBAAyB4T,QAAO,GACvCvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKrC,EAAE,cAAc4T,QAAO,GAC5BvR,KAAKrC,EAAE,iBAAiB6B,KAAK,QAAS,qDACtCQ,KAAKrC,EAAE,2BAA2B2E,KAAK,IACvCtC,KAAKrC,EAAE,iCAAiC2E,KAAK,aAAiB,0BAC9DtC,KAAKrC,EAAE,iCAAiC4T,QAAO,GAC3CvR,KAAK+tB,cAAgB/tB,KAAK+tB,aAAa9rB,QACvCjC,KAAK+tB,aAAaC,iBAAiB,WAEvChuB,KAAK+tB,aAAe/tB,KAAKrC,EAAE,kCACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,gBAGpD,EAEAk5D,iBAAkB,WACdnnF,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKrC,EAAE,cAAc4T,QAAO,EAChC,EAEAw5E,UAAW,WACP/qF,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,yBAAyB4T,QAAO,GACvCvR,KAAKrC,EAAE,eAAe4T,QAAO,GAC7BvR,KAAKrC,EAAE,cAAc4T,QAAO,GAC5BvR,KAAKrC,EAAE,iCAAiC4T,QAAO,GAC/CvR,KAAK+tB,aAAe/tB,KAAKrC,EAAE,6BACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAG5CjuB,KAAK+tB,cAAgB/tB,KAAK+tB,aAAa9rB,QACvCjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKi0B,UACT,EAEA+2D,WAAY,WACRhrF,KAAK6qF,uBAAuBzzD,aAAY,GACxCp3B,KAAK8qF,wBAAwB1zD,aAAY,GACzCp3B,KAAKsnF,WAAa,GAClBtnF,KAAKkmF,mBAAmBlmF,KAAK4iF,aAC7B5iF,KAAK2oD,kBACT,EAEA42B,WAAY,SAAU10E,GAClB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,iBAC/BykD,EAAY96C,EAAQhlC,KAAK,SAC7BM,KAAKrC,EAAE,SAASqhF,QAAQ,CAACS,WAAY/6C,EAAQkI,WAAWxO,MAAO,KAC/Dp+B,KAAKi7D,WAAWukB,EACpB,EAEAvkB,WAAY,SAAUl8D,GAClB,IAAI8uB,EAAO7tB,KAAKivB,MAAMlwB,IACrB8uB,IAASA,EAAO7tB,KAAK0/E,QAAQ3gF,IAC1B8uB,IACA7tB,KAAKrC,EAAE,yBAAyBuC,YAAY,UAC5CF,KAAKrC,EAAE,mCAAqCoB,EAAO,QAAQoB,SAAS,UACpE0tB,EAAK8xD,UAEb,EAEAD,QAAS,SAAU3gF,GACf,IAAI6gF,EACJ,OAAQ7gF,GACJ,IAAK,QACD6gF,EAAmB,mBACnB,MACJ,IAAK,QACDA,EAAmB,mBACnB,MACJ,IAAK,QACDA,EAAmB,kBACnB,MACJ,IAAK,QACDA,EAAmB,kBAG3B,OAAIA,EACO5/E,KAAKkvB,SAASnwB,EAAM6gF,EAAkB,CAAC9rD,MAAO9zB,KAAK8zB,MAAO8uD,aAAa,EAAM9zE,GAAI9O,KAAKrC,EAAE,oCAAoC,UAEnI,CACR,EAEAstF,WAAY,SAAUlgF,GAClB/K,KAAK2oD,kBACT,EAEAuiC,YAAa,SAAUngF,GACnB/K,KAAK2oD,kBACT,EAEAvB,YAAa,SAAUv8C,GACnB,IACIw8C,EADe,GAAEx8C,EAAG4C,QACS5N,KAAK,UAAWynD,EAAc,GAC/DD,EAAcvnD,MAAK,CAAC4C,EAAKxB,KACrB,IACIqmD,EADQ,GAAErmD,GACSoB,OACvBilD,GAA8B,IAAfD,IAAuBA,GAAe,MACrDC,IAAeD,GAAeC,GAC9BD,GAAe,GAAMttC,oBAAoBstC,EAAa,aAAiB,8BAA+B,aAAiB,kCAAkC,GAEjK,EAEAy3B,kBAAmB,WACf/+E,KAAKrC,EAAE,iBAAiB6B,KAAK,QAAS,qDACtCQ,KAAKrC,EAAE,2BAA2B2E,KAAK,IACvCtC,KAAKrC,EAAE,2BAA2BwC,SAAS,YAC3CH,KAAKrC,EAAE,iCAAiCuC,YAAY,YACpDF,KAAKrC,EAAE,aAAauC,YAAY,WAChCF,KAAKrC,EAAE,eAAewC,SAAS,aAAaD,YAAY,mBACxDF,KAAKrC,EAAE,uBAAuBuC,YAAY,gBAC1CF,KAAKrC,EAAE,2CAA2CuC,YAAY,gBAC9DF,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC/BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAK+tB,aAAaixD,QACd,CAAChvD,UAAW,GACZ,KACA,KACIhwB,KAAKi0B,UAAU,GAE3B,EAEAA,SAAU,WAuBN,IAAIgrD,EAtBDj/E,KAAK+tB,aAAa,GAAGiC,WAAa,KACjChwB,KAAKrC,EAAE,iBAAiB6B,KAAK,QAAS,sHACtCQ,KAAKrC,EAAE,2BAA2B2E,KAAKtC,KAAK4iF,YAAYpgF,IAAI,aAC5DxC,KAAKrC,EAAE,2BAA2BuC,YAAY,YAC9CF,KAAKrC,EAAE,iCAAiCwC,SAAS,aAE7CH,KAAK+tB,aAAa,GAAGiC,WAAa,KACtChwB,KAAKrC,EAAE,iBAAiB6B,KAAK,QAAS,sHACtCQ,KAAKrC,EAAE,2BAA2BwC,SAAS,YAC3CH,KAAKrC,EAAE,iCAAiCuC,YAAY,aAEhDF,KAAK+tB,aAAa,GAAGiC,WAAa,GACtChwB,KAAKrC,EAAE,iBAAiB6B,KAAK,QAAS,uDACtCQ,KAAKrC,EAAE,2BAA2BwC,SAAS,YAC3CH,KAAKrC,EAAE,iCAAiCuC,YAAY,cAGpDF,KAAKrC,EAAE,iBAAiB6B,KAAK,QAAS,qDACtCQ,KAAKrC,EAAE,2BAA2B2E,KAAK,IACvCtC,KAAKrC,EAAE,2BAA2BwC,SAAS,YAC3CH,KAAKrC,EAAE,iCAAiCuC,YAAY,aAGpDF,KAAKrC,EAAE,mBACPshF,EAAsBj/E,KAAKrC,EAAE,iBAAiB6E,IAAI,GAAG6pC,wBAAwBlO,KAC7E8gD,GAAuBA,EAAsB,KAC7Cj/E,KAAKrC,EAAE,uBAAuBwC,SAAS,gBACvCH,KAAKrC,EAAE,aAAawC,SAAS,WAC7BH,KAAKrC,EAAE,eAAewC,SAAS,mBAAmBD,YAAY,aAC9DF,KAAKrC,EAAE,2CAA2CwC,SAAS,gBAC3DH,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC/BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,iDAAiDwC,SAAS,YACjEH,KAAKrC,EAAE,2CAA2CuC,YAAY,YAC9DF,KAAKrC,EAAE,2CAA2C2E,KAAKtC,KAAKrC,EAAE,sDAAsD2E,UAGpHtC,KAAKrC,EAAE,aAAauC,YAAY,WAChCF,KAAKrC,EAAE,eAAewC,SAAS,aAAaD,YAAY,mBACxDF,KAAKrC,EAAE,uBAAuBuC,YAAY,gBAC1CF,KAAKrC,EAAE,2CAA2CuC,YAAY,gBAC9DF,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC/BvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAEtC,EAEA45E,iBAAkB,SAAUtgF,GACxB7K,KAAKrC,EAAE,wBAAwB8N,OACnC,EAEAy6E,mBAAoB,SAAUC,GAC1B,IAAIO,EAAiBP,EAAO3jF,IAAI,MAC5BgqC,EAAUxsC,KAAKrC,EAAE,kBAIrB,GAHAwoF,EAAOnrF,MAAQ,GAAO4K,iBAAiBugF,EAAO3jF,IAAI,aAAe2jF,EAAO3jF,IAAI,QAAUkkF,GACtFl6C,EAAQvnC,UAAUkhF,EAAOnrF,MAAOgF,KAAK0oE,4BACrCl8B,EAAQtsC,YAAY,WAChBimF,EAAO3jF,IAAI,UACX,GAAIxC,KAAK0sB,QAAQ8kD,cAAc6U,cAAcK,IAAmBP,EAAO3jF,IAAI,WAAcxC,KAAK0sB,QAAQ8kD,cAAc4U,aAAaM,GAC7Hl6C,EAAQvnC,UAAUjF,KAAK0sB,QAAQ8kD,cAAc4U,aAAaM,GAAiB1mF,KAAK0oE,iCAEhF,GAAIyd,EAAO3jF,IAAI,cACXgqC,EAAQvnC,UAAUkhF,EAAO3jF,IAAI,cAAexC,KAAK0oE,gCAEhD,CACD,IAAIr4D,EAAO,GAAQ6lB,GAAGy2B,mBAAqB,IAAM+5B,EACjD1mF,KAAKi1B,QAAQ83B,UAAUo5B,EAAO3jF,IAAI,UAAW6N,GAAOi7B,IAChDtrC,KAAKrC,EAAE,kBAAkBsH,UAAUqmC,EAAQtrC,KAAK0oE,2BAA2B,GAEnF,MAIA1oE,KAAK0sB,QAAQ8kD,cAAc6U,cAAcK,IACzCl6C,EAAQvnC,UAAUjF,KAAK0sB,QAAQ8kD,cAAc4U,aAAaM,GAAiB1mF,KAAK0oE,2BAE5F,EAEAwf,iBAAkB,SAAUr9E,IACvB,GAAEA,EAAG4C,QAAQT,SAAS,eAAiBhN,KAAKgvB,OAAOhvB,KAAK4iF,YAC7D,EAEAuF,YAAa,SAAUnpF,GACnB,IAAI9K,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SAC3C/gC,EAAKk0F,cAAgB,IAAI,2BAA+B,CAAEt0D,MAAO5/B,EAAM+gC,QAASj1B,KAAKi1B,QAAS2tD,YAAa5iF,KAAK4iF,YAAYtrE,aAC5HpjB,EAAKk0F,cAAcC,gBAAgBrpF,GAAS,KACxC,kBAAsB,YAAa,CAACm6B,MAAO,uBAAwBrF,MAAO5/B,IAC1E8L,KAAKiK,KAAKjK,KAAK4iF,YAAa5iF,KAAKuZ,UAAU,GAEnD,EAEA2oD,aAAc,SAAUr3D,GACpB,IAAI6O,EAAQ7O,EAAG4C,OACf,IAAKiM,EAAM8uB,MAAMvmC,OACb,OACJ,IAAIgF,EAAOyS,EAAM8uB,MAAM,GACvB9uB,EAAM3O,MAAQ,GACV9D,EAAKrC,KAAO,GAAUhO,qBACtB,GAAMmV,QAAQgC,MAAM,aAAiB,4CAE7B9G,EAAKpD,KAAK+jB,WAAW,SAKjC,GAAMlH,OAAO1Z,kBAAkBC,GAAMshB,MAAMvtB,IACnCA,IACAiM,EAAK2B,OAAS5N,EACdgF,KAAKsnF,WAAargF,EAClBjH,KAAKrC,EAAE,iDAAiDwC,SAAS,WACjEH,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK0oE,4BAC/C1oE,KAAK2oD,mBACT,IAXA,GAAM58C,QAAQgC,MAAM,aAAiB,sCAa7C,EAEAu6E,iBAAkB,SAAUz9E,GACxB,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,iBAAiBl7B,KAAK,mBAC/D0oF,EAAczb,EAAe/xC,QAAQ,eAAel7B,KAAK,SACzDitE,EAAettE,KAAK,gBAAkBotE,EAAgBptE,KAAK,gBAC3DstE,EAAe/xC,QAAQ,eAAe56B,SAAS,yBAC/CH,KAAK2oD,oBAETikB,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgBptE,KAAK,aAAcstE,EAAettE,KAAK,eACb,MAAtCstE,EAAettE,KAAK,cACpBotE,EAAgBzsE,SAAS,iBAAiBmC,KAAK,aAAiB,oCACzDsqE,EAAgB5/D,SAAS,kBAChC4/D,EAAgB1sE,YAAY,iBAC3BqoF,EAAYh+E,KAAK,YAClBg+E,EAAY98E,OAEpB,EAEA47E,eAAgB,SAAUzE,GACtB,IAAI+C,EAAQ,GAAE9zE,OAAO+wE,EAAYpgF,IAAI,UACrCxC,KAAKwoF,YAAY7C,EACrB,EAEA6C,YAAa,SAAU7C,GACnB3lF,KAAKrC,EAAE,UAAUgC,KAAKgmF,GAAO54E,YAAY,UAAW44E,GACpD3lF,KAAKrC,EAAE,qBAAqB4D,QAAQ,UACpCvB,KAAKrC,EAAE,qBAAqB4D,QAAQ,0BACxC,EAEA07B,cAAe,SAAUykD,GACrB1hF,KAAKrC,EAAE,yBAAyBoP,YAAY,cAAe20E,GAC3D1hF,KAAKrC,EAAE,yBAAyBoP,YAAY,YAAa20E,GACzD1hF,KAAKrC,EAAE,yBAAyBoP,YAAY,WAAY20E,GACpDA,GACA1hF,KAAKrC,EAAE,2BAA2BgC,KAAK,aAAiB,eACxDK,KAAKrC,EAAE,+BAA+BuC,YAAY,mBAAmBC,SAAS,aAC9EH,KAAKrC,EAAE,0CAA0CuC,YAAY,YAAYC,SAAS,aAClFH,KAAKrC,EAAE,yCAAyCuC,YAAY,iBAAiBC,SAAS,kBACtFH,KAAKrC,EAAE,+CAA+CwC,SAAS,YAC/DH,KAAKrC,EAAE,yCAAyCuC,YAAY,cAG5DF,KAAKrC,EAAE,+BAA+BwC,SAAS,mBAAmBD,YAAY,aAC9EF,KAAKrC,EAAE,0CAA0CwC,SAAS,YAAYD,YAAY,aAClFF,KAAKrC,EAAE,yCAAyCwC,SAAS,iBAAiBD,YAAY,kBACtFF,KAAKrC,EAAE,+CAA+CuC,YAAY,YAClEF,KAAKrC,EAAE,yCAAyCwC,SAAS,YAEjE,EAEAwoD,iBAAkB,WACd,IAAI+4B,EAAc1hF,KAAKrC,EAAE,YAAYsE,OACrCjC,KAAKi9B,cAAcykD,EACvB,EAEAuG,eAAgB,SAAUtjC,GACtB,IAAI69B,EAAexiF,KAAKrC,EAAE,sCAAwCqC,KAAK4iF,YAAYpgF,IAAI,MAAQ,MAC3FimF,EAAwBjG,EAAa3iF,KAAK,aAC9C4oF,EAAsB9oF,KAAK,GAAQ+oF,UAAU/jC,IAC7C69B,EAAajhF,QAAQ,aACjBojD,IAAa3kD,KAAK4iF,YAAYpgF,IAAI,YAClCimF,EAAsBtoF,SAAS,WAE/BsoF,EAAsBvoF,YAAY,WACtCF,KAAK2oD,kBACT,EAEAggC,aAAc,WACN3oF,KAAKi1B,QAAQzyB,IAAI,iBAAmBxC,KAAK0sB,QAAQlqB,IAAI,SAAWxC,KAAK4iF,YAAYpgF,IAAI,SAEzFxC,KAAKrC,EAAE,+BAA+BmxB,OACtC9uB,KAAKrC,EAAE,oCAAoC2E,KAAKtC,KAAKrC,EAAE,+BAA+B2E,QAAQosB,OAAO7f,kBACzG,EAEA+5E,UAAW,SAAU/9E,GACb,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,gBAElDhN,KAAK6oF,iBAAmB,IAAI,iBAAqB,CAAC/0D,MAAO9zB,OAC7D,EAEA8oF,aAAc,SAAUj+E,GAChBA,GAAMA,EAAGW,UAAY,GAAUlZ,YAC/BuY,EAAGa,iBACH,GAAEvQ,SAAS+sD,eAAe7+B,OAElC,EAEA0/D,WAAY,SAAUl+E,GAClB,IACIktB,EADgB,GAAEltB,EAAG4C,QACKqC,0BAA0BtL,OACxD,GAAqB,kBAAjBqG,EAAG4C,OAAO7D,GAAwB,CAClC,IAAI83E,EAAe3pD,IAAc/3B,KAAK4iF,YAAYpgF,IAAI,YACtDxC,KAAKi9B,cAAcykD,EACvB,CACJ,EAEAsH,oBAAqB,WACjB,GAAMj9E,QAAQiC,IAAI,aAAiB,uCAAwC,aAAiB,sCAAuC,CAAChO,KAAK4iF,YAAYpgF,IAAI,aAAexC,KAAK4iF,YAAYpgF,IAAI,QAAUxC,KAAK4iF,YAAYpgF,IAAI,QAAS,KAAM,CAAE2L,eAAgB,aAAiB,YAAYoa,MAAMrgB,IAC5R,GAAIA,GACIlI,KAAK4iF,YAAYpgF,IAAI,MAAO,CACXxC,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SACtCg0D,sBAAsBjpF,KAAK4iF,YAAYpgF,IAAI,MAC1D,CACJ,GAER,EAEAojE,MAAO,WACH,GAAM75D,QAAQiC,IAAI,aAAiB,0CAA2C,aAAiB,0CAA2C,CAAChO,KAAK4iF,YAAYpgF,IAAI,cAC5J,KAAM,CAAE2L,eAAgB,aAAiB,qBAAqBoa,MAAMrgB,IAChEA,GACAlI,KAAK4iF,YAAYhd,OAAM,KAAO5lE,KAAKkL,OAAO,IACtC,SAAU6C,GAEF,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAC7C,GACR,GAER,EAEA23E,KAAM,SAAU76E,GACR,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAElD,GAAMjB,QAAQiC,IAAI,aAAiB,yBAA0B,aAAiB,kDAAmD,CAAChO,KAAK4iF,YAAYpgF,IAAI,cACnJ,KAAM,CAAE2L,eAAgB,aAAiB,oBAAoBoa,MAAMrgB,IAC/DA,GACAlI,KAAK4iF,YAAY8C,MAAK,KACd1lF,KAAKkL,OAAO,IACZ6C,IAEI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEnG,GAER,EAEAg5E,sBAAuB,SAAUl8E,GACzB,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,eAElD,GAAMjB,QAAQsC,aAAa,aAAiB,yBAA0B,aAAiB,kDAAmD,CAACrO,KAAK4iF,YAAYpgF,IAAI,cAAe,KAAM,CAAE2L,eAAgB,aAAiB,kBAAmBG,gBAAiB,QAASC,qBAAsB,aAAiB,qBAAqBga,MAAMrgB,IAC/TA,IACe,UAAXA,EACAlI,KAAK4iF,YAAYhd,OAAM,KACf5lE,KAAKkL,QACLlL,KAAKytB,OAAOulD,aAAa2M,SAAS,IAErC5xE,IACO,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,IAI/F/N,KAAK4iF,YAAY8C,MAAK,KAClB1lF,KAAKkL,QACLlL,KAAKytB,OAAOulD,aAAa2M,SAAS,IAClC5xE,IAEI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,IAGnG,GAER,EAEAq9E,cAAe,SAAUvgF,GACjB,GAAMkB,QAAQgC,MAAM,8BAC5B,EAEAg6E,gBAAiB,WACb/nF,KAAKrC,EAAE,gBAAgBgC,KAAK,IAC5BK,KAAKuZ,UAAUE,QAAUzZ,KAAKuZ,UAAUE,OAAOpH,SAASqH,IAEpD,GAAoB,iBADpBA,EAAQ,GAAErC,MAAMqC,IACN7V,MAA2C,UAAhB6V,EAAM7V,QAAuB6V,EAAMG,QAA6B,GAAnBH,EAAMG,OAAO,IAAWH,EAAMG,QAAUH,EAAME,OAAQ,EACnIF,EAAMG,SAAWH,EAAMG,OAAS,IACjC,IAMIqvE,EANA9xE,EAAQ,CACJtB,YAAa4D,EAAME,MACnB7a,KAAM2a,EAAMK,IACZ09C,QAAS/9C,EAAMG,OAASH,EAAMG,OAAO,QAAKuB,GAE9C+tE,EAAmB,GAAE,GAAUpP,YAAYoP,iBAAiB,CAACpqF,KAAMqY,EAAMrY,KAAM+W,YAAasB,EAAMtB,YAAajS,KAAM6V,EAAM7V,QAU/H,GARI6V,EAAM1a,UACNkqF,EAAqB,GAAE,GAAUnP,YAAYqP,sBAAsB,CAC/DC,WAAa,WAAajyE,EAAMrY,KAChCuqF,eAAgB5vE,EAAM1a,WAE1BmqF,EAAiBt8E,OAAOq8E,IAE5BlpF,KAAKrC,EAAE,gBAAgBkP,OAAOs8E,GAC1B/xE,EAAMqgD,UACNz3D,KAAK8nF,cAAc1mF,KAAK,CAACrC,KAAMqY,EAAMrY,KAAM04D,QAASrgD,EAAMqgD,UAC1Dz3D,KAAKrC,EAAE,gBAAkByZ,EAAMrY,MAAMwL,KAAK,WAAW,GAAMpK,SAASiX,EAAMqgD,SACrD,GAAjBrgD,EAAMqgD,SAAc,CACpB,IAAI4zB,EAAuBrrF,KAAKrC,EAAE,2BAA6ByZ,EAAMrY,MACjEssF,EAAqBxrF,KAAK,iCAAiCoC,OAC3DopF,EAAqBxrF,KAAK,iCAAiCL,KAAK,aAAc4X,EAAMqgD,SAC/Ev3D,YAAY,iBACZoC,KAAK,GAA6B,IAAtBP,OAAOqV,EAAMqgD,UAAeld,YAE7C8wC,EAAqBx+E,OAAO,GAAE,gCAC9Bw+E,EAAqBxrF,KAAK,iBAAiBL,KAAK,aAAc4X,EAAMqgD,SAC/Dn1D,KAAK,GAA6B,IAAtBP,OAAOqV,EAAMqgD,UAAeld,WAErD,CAER,KAA2B,UAAhB7gC,EAAM7V,MACb6V,EAAMG,QAAU7Z,KAAKrC,EAAE,gBAAgBkP,OAAO,GAAE,gCAAgCvK,KAAKoX,EAAMG,OAAO,IAAI,GAElH,EAEA0vE,eAAgB,SAAU1+E,GACtB,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAC9C,OACJ,IAAIw8E,EAAkBxpF,KAAK4iF,YAAYpgF,IAAI,OACvCinF,EAAwBzpF,KAAK0sB,QAAQ4I,SAAS9yB,IAAIgnF,GACtD,IAAKA,GAAmBxpF,KAAKi1B,QAAQzyB,IAAI,kBAAmB,CACxD,IAAIuzB,EAAK,GAAI,CAACxf,GAAIvW,KAAKi1B,QAAQ0oB,OAAQ95C,KAAM,QACxCsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBACjCx7D,EAAE,eAAgB,CAAE+E,IAAKlY,KAAKi1B,QAAQzyB,IAAI,OAASoH,GAAI5J,KAAK4iF,YAAYpgF,IAAI,QACjFxC,KAAK0sB,QAAQiK,WAAWZ,GAAK2zD,IACzB,IAAIC,EAAY,GAAED,GAAa7pF,KAAK,mBAAmByC,OAAS,IAAMtC,KAAKi1B,QAAQ0oB,OAC/E1oB,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa+wB,GACjD10D,EAAQlV,IAAI,cAAc,GAC1BkV,EAAQlV,IAAI,4BAA4B,GACxCkV,EAAQ8+C,KAAK,cACb9+C,EAAQ++C,aAAa,MAAM,KACvB/+C,EAAQ8+C,KAAK,aACb9+C,EAAQo+C,YACRrzE,KAAKkL,QACL+pB,EAAQogD,cACRr1E,KAAK0sB,QAAQgH,MAAMmqD,SAAS5oD,GACjBj1B,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GACjC1B,SAASq2D,oBAAoB,CAC9Bz5B,SAAUw5B,EACVzyE,QAAS,aAAiB,6CAA8C,CAAClX,KAAK4iF,YAAYpgF,IAAI,YAAaxC,KAAKi1B,QAAQzyB,IAAI,UAC9H,GACJ,IACFuL,IACA,IACI87E,EADS,GAAE97E,GACelO,KAAK,YAAY,GAAQq2B,GAAGy4C,oBAAoBrsE,OAC9E,GAAIunF,EAAkB,CAClB,IAAI50D,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAaixB,GAC7C31F,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GAGtC,OAFAj1B,KAAKkL,aACLhX,GAAQA,EAAKqX,QAAQ,QAEzB,CACA,IAAIy2E,EAAW,GAAEj0E,GAAOlO,KAAK,mBAAmByC,QAAU,GAAEyL,GAAOlO,KAAK,QAAQqyB,QAAQ5vB,QAAU,aAAiB,8CACnHtC,KAAKkL,QACL,GAAMa,QAAQgC,MAAMi0E,EAAS,GAErC,KACK,CACD,GAAIyH,GACIA,EAAsBjnF,IAAI,aAG1B,OAFAxC,KAAKkL,aACLu+E,EAAsBl+E,QAAQ,YAAak+E,GAGnDzpF,KAAKkL,QACL,yBAA6B,CACzBwhB,QAAS1sB,KAAK0sB,QACdxU,IAAKsxE,GAEb,CACJ,EAEAM,aAAc,SAAUj/E,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACfs8E,EAAcrlD,EAAQ3J,QAAQ,eAC9BsuD,EAAa3kD,EAAQn6B,KAAK,MAC1Bm6B,EAAQn6B,KAAK,WACTvK,KAAK8nF,gBAAkB9nF,KAAK8nF,cAAcjoF,MAAKs5B,GAASA,EAAMp6B,OAASsqF,KAGnEU,EAAY/8E,SAAS,iBAFzB+8E,EAAY5pF,SAAS,WAKjB4pF,EAAY7pF,YAAY,WAG5BF,KAAK8nF,eAAiB9nF,KAAK8nF,cAAcjoF,MAAKs5B,GAASA,EAAMp6B,OAASsqF,IACtEU,EAAY5pF,SAAS,YAErB4pF,EAAY7pF,YAAY,WACpB6pF,EAAY/8E,SAAS,kBACrB+8E,EAAYlqF,KAAK,oCAAoCM,SAAS,iBAAiBmC,KAAK,aAAiB,oCAAoC9C,KAAK,aAAc,KAGxKQ,KAAK2oD,kBACT,EAEAqhC,WAAY,SAAUn/E,GAClB,GAAI,GAAEA,EAAG4C,QAAQT,SAAS,cACtB,OACJ,IAAImqB,EAAO,GAAEtsB,EAAG4C,QAEZw8E,GADMjqF,KAAK0sB,QAAQlqB,IAAI,OACXxC,KAAK4iF,YAAYpgF,IAAI,OACjC0nF,EAAsBlqF,KAAKrC,EAAE,4CAC7BwsF,EAAiBnqF,KAAKrC,EAAE,2BAA2B4P,MACnD+9E,EAAYtrF,KAAKrC,EAAE,4BAA4B4P,MAC/C68E,EAAiBpqF,KAAKsnF,WACtB+C,GAAiB,EACjB3I,GAAc,EACd4I,EAAa,GAAI,CAACzmF,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SAC/E2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,aAC3Cx7D,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAY/kE,GAAIqgF,IAgEtD,GA/DAjqF,KAAKrC,EAAE,uCAAuCwC,SAAS,cACvDiqF,GAAkBF,EAAoBrqF,KAAK,mBAAmBM,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UAClHgqF,GAAkBnqF,KAAK4iF,YAAYpgF,IAAI,cACvCk/E,GAAc,EACd4I,EAAWn3E,EAAE,YAAYgS,EAAEglE,GAAgB9zD,MAE3C9yB,MAAMqP,KAAK04E,GAAWrpF,OAAS,GAC/B,GAAM8J,QAAQgC,MAAM,aAAiB,uCAEjCu9E,GAAatrF,KAAK4iF,YAAYpgF,IAAI,WAClCk/E,GAAc,EACd4I,EAAWn3E,EAAE,SAASgS,EAAEmmE,GAAWj1D,MAG3Cr2B,KAAKrC,EAAE,eAAemC,MAAK,CAAC4C,EAAK6nF,KAC7B,GAAI,GAAEA,GAAYv9E,SAAS,WAAY,CACnC,IAAI+8E,EAAc,GAAEQ,GAChBlB,EAAaU,EAAYlqF,KAAK,gBAAgB,GAAG+J,GACrD,GAAImgF,EAAYlqF,KAAK,wBAAwB0N,MAAO,CAChD,IAAIi9E,EAAeT,EAAYlqF,KAAK,kDAAkDL,KAAK,cACvFka,EAAQ1Z,KAAKuZ,UAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQsvE,IAClDvH,EAAY9hF,KAAKuZ,UAAUE,OAAOrV,QAAQsV,GAC9CA,EAAMG,OAAS,CAAC2wE,GAChBxqF,KAAKuZ,UAAUE,OAAOqoE,GAAapoE,EACnC2wE,GAAiB,CACrB,KACK,CACD,IAAI3wE,EAAQ1Z,KAAKuZ,UAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQsvE,IACtD,GAAI3vE,EAAMG,OAAO5X,OAAQ,CACrB,IAAI6/E,EAAY9hF,KAAKuZ,UAAUE,OAAOrV,QAAQsV,GAC9CA,EAAMG,OAAS,GACf7Z,KAAKuZ,UAAUE,OAAOqoE,GAAapoE,EACnC2wE,GAAiB,CACrB,CACJ,CACJ,KAEAD,GACApqF,KAAKi1B,QAAQ+2B,UAAUo+B,EAAiB,IAAMH,GAAY,KACtDC,EAAoBrqF,KAAK,mBAAmBK,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAE1GF,KAAKrC,EAAE,kBAAkBsH,UAAUmlF,EAAexhF,OAAQ5I,KAAK0oE,4BAC/D1oE,KAAKkL,OAAO,IACb,SAAU6C,GACTm8E,EAAoBrqF,KAAK,mBAAmBK,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAE1G,IAAI8/C,EAAa,GAAEjyC,GAAOlO,KAAK,QAAQyC,QAAU,aAAiB,+CACjEo/E,GAAe,GAAM31E,QAAQgC,MAAMiyC,GACpChgD,KAAKkL,OACT,IACAw2E,GACA1hF,KAAK0sB,QAAQiK,WAAW2zD,GACpB,KACItqF,KAAKrC,EAAE,wBAAwBuC,YAAY,cAC3CF,KAAK4iF,YAAY7iE,IAAI,WAAYoqE,GACjCnqF,KAAKkL,OAAO,IAEf6C,IACG/N,KAAKrC,EAAE,wBAAwBuC,YAAY,cAC3CF,KAAKkL,QACD,GAAE6C,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,IAE/Fs8E,EAAgB,CAChB,IAAII,EAAoB,GAAI,CAAC5mF,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SAC1F2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,YAChD8b,EAAoBzqF,KAAK0sB,QAAQkhC,oBAAoB68B,EAAmBzqF,KAAKuZ,WAC7EvZ,KAAK0sB,QAAQiK,WAAW8zD,GAAmB,KACnCzqF,KAAKkL,OAAO,IAEf6C,IACG/N,KAAKkL,QACD,GAAE6C,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEnG,CACAopB,EAAK9N,MACT,IAGJ,iBAAuB,oBAAwB,CAC3C0H,UAAW,mBACXvD,SAAU,GAAUusD,YAAYwR,gBAEhCt6D,OAAQ,CACJ,oBAAqB,QACrB,kBAAmB,eACnB,sBAAuB,YAG3B1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKi1B,QAAUj1B,KAAK8zB,MAAMmB,QAC1Bj1B,KAAK4iF,YAAc5iF,KAAK8zB,MAAM8uD,YAC9B5iF,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACCv9B,KAAK4iF,YAAYpgF,IAAI,SACrBxC,KAAKwrF,aAAaxrF,KAAK4iF,YAAYpgF,IAAI,UAEvCxC,KAAKrC,EAAE,eAAeoR,OAAO,EAErC5D,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,IAGvC,IAGI0rE,EAHAC,EAAmB1rF,KAAKrC,EAAE,oBAC1BguF,EAAoB3rF,KAAKrC,EAAE,yBAC3BiuF,EAAe5rF,KAAKrC,EAAE,oBAG1B,IAAK,IAAInD,KAAco2E,GAAMruE,IAAK,CAC9B,IAAIspF,EAAmB,GAAE,kCACrBrM,EAAYhlF,EAAWqH,QAAQ,KAAM,KACzC,GAAE,WAAW29E,+BAAuC,aAAiB,GAAUjlF,gBAAgBC,aAAsB6O,SAASwiF,GAC9H,GAAE/rF,KAAK8wE,GAAMruE,IAAI/H,IAAa,SAAU2G,GACpC,GAAE,6BAA6BxB,KAC3BwB,EAAMI,QAAQ,CAACG,WAAY,GAAIF,OAAQg+E,KACzCn2E,SAASwiF,EACf,IACAA,EAAiBxiF,SAASuiF,GAC1BA,EAAapzD,SAAS,eAAe3rB,OAAO+jE,GAAMruE,IAAI/H,GAAY,GAAG+G,QAAQ,CAACI,KAAM69E,EAAW59E,MAAO,GAAUrH,gBAAgBC,GAAaiH,SAAU,IAAKC,WAAY,KAC5K,CACAkqF,EAAa59D,iBACT,GAAEhkB,OAAO,CAACof,MAAO,aAAc,iBACnCppB,KAAKrC,EAAE,sBAAsB8N,OAAOZ,IAChC+gF,EAAa,GAAG57D,UAAYhwB,KAAKrC,EAAE,oBAAsBkN,EAAG4C,OAAO6J,WAAW3V,KAAKoJ,OAAO,GAAGonB,UAAY,CAAC,IAE9Gu5D,EAAiBhxD,OAAO7vB,IAChBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAClCigF,EAAkBxrF,SAAS,UACvBsrF,GACAl3D,aAAak3D,GAEjBG,EAAa59D,iBAAiB,SAAS,IACvCnjB,IACIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WACbuhF,EAAkB5/B,GAAG,WACtB4/B,EAAkBzrF,YAAY,SAEtC,GAAG,IAAI,IAEXyrF,EAAkBjxD,MAAM,MAAO7vB,IACvBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WAClBuhF,EAAkBzrF,YAAY,SAClC,GAAG,IAAI,IAEXyrF,EAAkB9tD,WAAWhzB,IAEzB,GADIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9Bb,EAAGqyE,OACH,OACJ,IAAIx4C,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAAel7B,KAAK,UACvD6kC,EAAQziC,QAAUjC,KAAKwrF,aAAa9mD,EAAQhlC,KAAK,SAAS,GAElE,EAEAwL,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAE3C,EAEA+rE,aAAc,WACV,IAAIR,EAAYtrF,KAAKrC,EAAE,eAAemS,0BACtC,GAAIvM,MAAMqP,KAAK04E,GAAWrpF,OAAS,GAC/BjC,KAAKrC,EAAE,yBAAyB2E,KAAK,aAAiB,4CAEtD,GAAIgpF,GAAatrF,KAAK4iF,YAAYpgF,IAAI,SAAU,CAC5C,IAAI8nF,EAAa,GAAI,CAACzmF,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACnF2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,uBACjCx7D,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAY/kE,GAAI5J,KAAK4iF,YAAYpgF,IAAI,QAClE2Q,EAAE,SAASgS,EAAEmmE,GAClBtrF,KAAK0sB,QAAQiK,WAAW2zD,GAAY,KAChCtqF,KAAK8zB,MAAM00D,YAAY8C,GACvBtrF,KAAKkL,OAAO,IACb,KACClL,KAAKrC,EAAE,yBAAyB2E,KAAK,aAAiB,8CAA8C,GAE5G,CAER,EAEAkpF,aAAc,SAAUrqF,GACpB,IAAI4qF,EAAa5qF,EAAMI,QAAQ,CAACE,SAAU,SAC1BzB,KAAKrC,EAAE,eACboR,QAAQiB,iBAAiB+7E,EACvC,EAEAC,SAAU,SAAUnhF,GACZA,EAAGW,UAAY,GAAUlZ,YACzBuY,EAAGa,iBACH1L,KAAK8rF,eAEb,IAIJ,2BAAiC,oBAAwB,CACrD/6D,UAAW,+CACXvD,SAAU,GAAUusD,YAAYkS,qBAChCh7D,OAAQ,CACJ,uCAAwC,cACxC,yCAA0C,QAC1C,sCAAuC,oBACvC,6CAA8C,sBAC9C,wCAAyC,mBACzC,+BAAgC,oBAChC,+BAAgC,aAChC,gCAAiC,oBAGrC1C,YAAa,WACTvuB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,OAChC,EAEAziB,KAAM,WACFjK,KAAKi4B,QAAO,KACRj4B,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kCAAkC28B,SAAS,CAC9CC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAEf36B,KAAK6uB,iBAAiB,EAE1B1jB,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAErC,GAEV,EAEA7U,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAChBT,SAAU,KACNnL,KAAK8uB,KAAKxmB,KAAKtI,KAAK,GAGhC,EAEAi4B,OAAQ,SAAUjQ,GACdhoB,KAAKrC,EAAE,kCAAkCwC,SAAS,cAClDH,KAAKisF,qBAAuB,GAC5BjsF,KAAKksF,4BAA8B,GACnClsF,KAAKrC,EAAE,UAAU0rB,OACjB,IAAI2tD,EAAgB,GAAI,CAACnzE,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACtF2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,8BACtC3uE,KAAK0sB,QAAQm/B,SAASmrB,GAAgBC,IAClCj3E,KAAKmsF,wBAAwBlV,GAC7BjvD,GAAYA,GAAU,IACvB,KACC,GAAMzN,uBAAuB,aAAiB,8CAA+C,IAAK,GAE1G,EAEAouC,iBAAkB,WACd,IAAI+4B,GAAc,EAClB1hF,KAAKrC,EAAE,+CAA+CmC,MAAK,CAAC4C,EAAKxB,KAC7D,IAAI0M,EAAQ,GAAE1M,GACVkrF,EAAmBx+E,EAAM/N,KAAK,SAASL,KAAK,MAC5C6sF,EAAsBz+E,EAAM/N,KAAK,iCAAiCL,KAAK,cAC3E4sF,EAAmBA,EAAiB/oF,MAAM,EAAG+oF,EAAiBnqF,QACzDjC,KAAKksF,4BAA4BrsF,MAAKysF,GAAiBA,EAAYvtF,MAAQqtF,GAAsBE,EAAY70B,SAAW40B,MACrHz+E,EAAM/N,KAAK,SAAS0K,KAAK,YAEpBvK,KAAKksF,4BAA4BrsF,MAAKysF,GAAeA,EAAYvtF,MAAQqtF,OAD9E1K,GAAc,EAGtB,IAEJ1hF,KAAKrC,EAAE,kCAAkCoP,YAAY,cAAe20E,EACxE,EAEA6K,kBAAmB,SAAU1hF,GACzB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACdi3B,EAAQn6B,KAAK,YACdm6B,EAAQ3J,QAAQ,eAAel7B,KAAK,iCAAiCL,KAAK,aAAc,IAAIW,SAAS,iBAChGmC,KAAK,aAAiB,mCAEnC,EAEAolC,WAAY,SAAU78B,GACdA,GAAMA,EAAGW,UAAY,GAAUlZ,WAC/B,GAAEuY,EAAG4C,QAAQhC,OACrB,EAEA+gF,oBAAqB,SAAU3hF,GAC3B,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,mBAAmBl7B,KAAK,mBACrE+sE,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgBptE,KAAK,aAAcstE,EAAettE,KAAK,cAC3D,EAEA8oF,iBAAkB,SAAUz9E,GACxB,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,iBAAiBl7B,KAAK,mBAC/D0oF,EAAczb,EAAe/xC,QAAQ,eAAel7B,KAAK,SAC7D+sE,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgBptE,KAAK,aAAcstE,EAAettE,KAAK,eACd,GAArCstE,EAAettE,KAAK,eACpBotE,EAAgBzsE,SAAS,iBACzBysE,EAAgBtqE,KAAK,aAAiB,qCAC/BsqE,EAAgB5/D,SAAS,kBAChC4/D,EAAgB1sE,YAAY,iBAC3BqoF,EAAYh+E,KAAK,YAClBg+E,EAAYh+E,KAAK,WAAW,GAChCvK,KAAK2oD,kBACT,EAEAwjC,wBAAyB,SAAUlV,GAC/B,IAAI19D,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE8pB,GAAep3E,KAAK,YAAY,GAAQq2B,GAAGE,eACxF7c,IAAcvZ,KAAKisF,qBAAuB,GAAE50E,MAAMkC,IAClDA,EAAUE,OAAOpH,SAASqH,IACtB,GAAmB,UAAfA,EAAM7V,MAAmC,WAAf6V,EAAM7V,KAChC,OACJ,IAAIuT,EAAQ,CACJtB,YAAa4D,EAAME,MACnB7a,KAAM2a,EAAMK,IACZ09C,QAAS/9C,EAAMG,OAASH,EAAMG,OAAO,QAAKuB,GAE9CyS,EAAO7tB,KAAKrC,EAAE,mEAAqEyZ,EAAMrY,MACzFoqF,EAAmB,GAAE,GAAUpP,YAAYoP,iBAAiB,CAACpqF,KAAO,WAAaqY,EAAMrY,KAAO+W,YAAasB,EAAMtB,YAAajS,KAAM6V,EAAM7V,QAC1IqlF,EAAqB,GAAE,GAAUnP,YAAYqP,sBAAsB,CAACC,WAAa,WAAajyE,EAAMrY,KAAOuqF,eAAgB5vE,EAAM1a,WAKrI,GAJI6uB,EAAK5rB,QACL4rB,EAAK/iB,SACTq+E,EAAiBt8E,OAAOq8E,GACxBlpF,KAAKrC,EAAE,mCAAmCkP,OAAOs8E,GAC7C/xE,EAAMqgD,UACNz3D,KAAKksF,4BAA4B9qF,KAAK,CAACrC,KAAMqY,EAAMrY,KAAM04D,QAASrgD,EAAMqgD,UACxEz3D,KAAKrC,EAAE,wBAA0ByZ,EAAMrY,MAAMwL,KAAK,WAAW,GAAMpK,SAASiX,EAAMqgD,SAC7D,GAAjBrgD,EAAMqgD,SAAc,CACOz3D,KAAKrC,EAAE,mCAAqCyZ,EAAMrY,MACxDc,KAAK,iCAAiCL,KAAK,aAAc4X,EAAMqgD,SAC/Ev3D,YAAY,iBACZoC,KAAKoX,EAAM1a,QAAQa,MAAKc,GAAKA,EAAEoK,QAAUqM,EAAMqgD,UAAS79C,MACjE,CACJ,GAER,EAEA6nE,YAAa,WACT,GAAIzhF,KAAKrC,EAAE,kCAAkCqP,SAAS,cAClD,OACJhN,KAAKrC,EAAE,UAAU0rB,OACjB,IAAIojE,EAA2B,GAAI,CAACl2E,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAQqB,KAAM,QAC9FsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,8BACtC+d,GAA+B,EAC/BnzE,EAAY,GAAElC,MAAMrX,KAAKisF,sBAC7BjsF,KAAKrC,EAAE,+CAA+CmC,MAAK,CAAC4C,EAAKxB,KAC7D,IAAI0M,EAAQ,GAAE1M,GACVkrF,EAAmBx+E,EAAM/N,KAAK,SAASL,KAAK,MAC5C6sF,EAAsBz+E,EAAM/N,KAAK,iCAAiCL,KAAK,cAE3E,GADA4sF,EAAmBA,EAAiB/oF,MAAM,EAAG+oF,EAAiBnqF,SACzDjC,KAAKksF,4BAA4BrsF,MAAKysF,GAAiBA,EAAYvtF,MAAQqtF,GAAsBE,EAAY70B,SAAW40B,IACzH,GAAIz+E,EAAM/N,KAAK,SAAS0K,KAAK,WAAY,CACrC,IAAImP,EAAQH,EAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQqyE,IAC7CtK,EAAYvoE,EAAUE,OAAOrV,QAAQsV,GACzCA,EAAMG,OAAS,CAACwyE,GAChB9yE,EAAUE,OAAOqoE,GAAapoE,EAC9BgzE,GAA+B,CACnC,MACK,GAAI1sF,KAAKksF,4BAA4BrsF,MAAKysF,GAAeA,EAAYvtF,MAAQqtF,IAAmB,CACjG,IAAI1yE,EAAQH,EAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQqyE,IAC7CtK,EAAYvoE,EAAUE,OAAOrV,QAAQsV,GACzCA,EAAMG,OAAS,CAAC,IAChBN,EAAUE,OAAOqoE,GAAapoE,EAC9BgzE,GAA+B,CACnC,CACJ,IAGAA,IACA1sF,KAAK0sB,QAAQkhC,oBAAoB6+B,EAA0BlzE,GAC3DvZ,KAAK0sB,QAAQiK,WAAW81D,GAA0B,KAC9CzsF,KAAKkL,OAAO,IACZ6C,IACA,IAAIi0E,EAAW,GAAEj0E,GAAOlO,KAAK,cAAcyC,QAAU,aAAiB,8CACtE,GAAMyJ,QAAQgC,MAAMi0E,GACpBhiF,KAAKkL,OAAO,IAGxB,EAEAyhF,kBAAmB,SAAU9hF,GACzB,IAAI+hF,EAAmB,GAAE/hF,EAAG4C,QACxBo/E,EAAkBD,EAAiBr/E,MACnCu/E,EAAoBF,EAAiBjP,OACX,KAA1BiP,EAAiBr/E,MACjBu/E,EAAmBjtF,KAAK,4BAA4ByC,KAAK,aAAiB,0CAE1EwqF,EAAmBjtF,KAAK,4BAA4ByC,KAAK,aAAiB,uCAAwC,CAACP,OAAO8qF,MAC9HC,EAAmBjtF,KAAK,SAASK,cAAcC,SAAS0sF,GACxDD,EAAiB17E,QACrB,IAGJ,gCAAsC,oBAAwB,CAC1D6f,UAAW,+CACXvD,SAAU,GAAUusD,YAAYgT,2BAChC97D,OAAQ,CACJ,uCAAwC,cACxC,yCAA0C,mBAC1C,kBAAmB,mBACnB,mBAAoB,mBACpB,sCAAuC,oBACvC,6CAA8C,sBAC9C,wCAAyC,mBACzC,+BAAgC,oBAChC,+BAAgC,aAChC,gCAAiC,oBAGrC1C,YAAa,WACTvuB,KAAKi1B,QAAUj1B,KAAK8zB,MACpB9zB,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAK8zB,MAAM/T,IAAI,uBAAuB,EAC1C,EAEAiP,OAAQ,WACJhvB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,GAAExjB,OAAO,CAAC6jB,KAAM7tB,MAAO,MACnDA,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,uBACvD,EAEAs+E,iBAAkB,SAAUj2E,GACxB7K,KAAK8zB,MAAM/T,IAAI,uBAAuB,GACtC/f,KAAKi4B,QAAO,KACRj4B,KAAKrC,EAAE,kCAAkC28B,SAAS,CAC9CC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAEf36B,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,wBACnDxC,KAAK2oD,kBAAiB,GAE9B,EAEAk4B,iBAAkB,SAAUh2E,GACxB7K,KAAKytB,OAAOozD,kBAChB,EAEA52E,KAAM,WACFjK,KAAKi4B,QAAO,KACRj4B,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kCAAkC28B,SAAS,CAC9CC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAEf36B,KAAK6uB,iBAAiB,EAE1B1jB,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAErC,GAEV,EAEAkY,OAAQ,SAAUjQ,GACdhoB,KAAKrC,EAAE,kCAAkCwC,SAAS,YAClDH,KAAKisF,qBAAuB,GAC5BjsF,KAAKksF,4BAA8B,GACnClsF,KAAKrC,EAAE,UAAU0rB,OACjB,IAAI2tD,EAAgB,GAAI,CAACnzE,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACtF2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,8BACtC3uE,KAAK0sB,QAAQm/B,SAASmrB,GAAgBC,IAClCj3E,KAAKmsF,wBAAwBlV,GAC7BjvD,GAAYA,GAAU,IACvB,KAEC,GAAMzN,uBAAuB,aAAiB,8CAA+C,IAAK,GAE1G,EAEAouC,iBAAkB,WACd,IAAI+4B,GAAc,EAClB1hF,KAAKrC,EAAE,+CAA+CmC,MAAK,CAAC4C,EAAKxB,KAC7D,IAAI0M,EAAQ,GAAE1M,GACVkrF,EAAmBx+E,EAAM/N,KAAK,SAASL,KAAK,MAC5C6sF,EAAsBz+E,EAAM/N,KAAK,iCAAiCL,KAAK,cAC3E4sF,EAAmBA,EAAiB/oF,MAAM,EAAG+oF,EAAiBnqF,QACzDjC,KAAKksF,4BAA4BrsF,MAAKysF,GAAiBA,EAAYvtF,MAAQqtF,GAAsBE,EAAY70B,SAAW40B,MACrHz+E,EAAM/N,KAAK,SAAS0K,KAAK,YAEpBvK,KAAKksF,4BAA4BrsF,MAAKysF,GAAeA,EAAYvtF,MAAQqtF,OAD9E1K,GAAc,EAGtB,IAEJ1hF,KAAKrC,EAAE,kCAAkCoP,YAAY,YAAa20E,GAC9DA,GACA1hF,KAAKrC,EAAE,2BAA2BgC,KAAK,aAAiB,eACxDK,KAAKrC,EAAE,sCAAsCuC,YAAY,mBAAmBC,SAAS,aACrFH,KAAKrC,EAAE,sCAAsCuC,YAAY,YAAYC,SAAS,aAC9EH,KAAKrC,EAAE,sDAAsDwC,SAAS,YACtEH,KAAKrC,EAAE,gDAAgDuC,YAAY,cAGnEF,KAAKrC,EAAE,sCAAsCwC,SAAS,mBAAmBD,YAAY,aACrFF,KAAKrC,EAAE,sCAAsCwC,SAAS,YAAYD,YAAY,aAC9EF,KAAKrC,EAAE,sDAAsDuC,YAAY,YACzEF,KAAKrC,EAAE,gDAAgDwC,SAAS,YAExE,EAEAosF,kBAAmB,SAAU1hF,GACzB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACdi3B,EAAQn6B,KAAK,YACdm6B,EAAQ3J,QAAQ,eAAel7B,KAAK,iCAAiCL,KAAK,aAAc,IAAIW,SAAS,iBAChGmC,KAAK,aAAiB,mCAEnC,EAEAolC,WAAY,SAAU78B,GACdA,GAAMA,EAAGW,UAAY,GAAUlZ,WAC/B,GAAEuY,EAAG4C,QAAQhC,OACrB,EAEA+gF,oBAAqB,SAAU3hF,GAC3B,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,mBAAmBl7B,KAAK,mBACrE+sE,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgBptE,KAAK,aAAcstE,EAAettE,KAAK,cAC3D,EAEA8oF,iBAAkB,SAAUz9E,GACxB,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,iBAAiBl7B,KAAK,mBAC/D0oF,EAAczb,EAAe/xC,QAAQ,eAAel7B,KAAK,SAC7D+sE,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgBptE,KAAK,aAAcstE,EAAettE,KAAK,eACd,GAArCstE,EAAettE,KAAK,eACpBotE,EAAgBzsE,SAAS,iBACzBysE,EAAgBtqE,KAAK,aAAiB,qCAC/BsqE,EAAgB5/D,SAAS,kBAChC4/D,EAAgB1sE,YAAY,iBAC3BqoF,EAAYh+E,KAAK,YAClBg+E,EAAYh+E,KAAK,WAAW,GAChCvK,KAAK2oD,kBACT,EAEAwjC,wBAAyB,SAAUlV,GAC/B,IAAI19D,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE8pB,GAAep3E,KAAK,YAAY,GAAQq2B,GAAGE,eACxF7c,IAAcvZ,KAAKisF,qBAAuB,GAAE50E,MAAMkC,IAClDA,EAAUE,OAAOpH,SAASqH,IACtB,GAAmB,UAAfA,EAAM7V,MAAmC,WAAf6V,EAAM7V,KAChC,OACJ,IAAIuT,EAAQ,CACJtB,YAAa4D,EAAME,MACnB7a,KAAM2a,EAAMK,IACZ09C,QAAS/9C,EAAMG,OAASH,EAAMG,OAAO,QAAKuB,GAE9CyS,EAAO7tB,KAAKrC,EAAE,mEAAqEyZ,EAAMrY,MACzFoqF,EAAmB,GAAE,GAAUpP,YAAYoP,iBAAiB,CAACpqF,KAAO,WAAaqY,EAAMrY,KAAO+W,YAAasB,EAAMtB,YAAajS,KAAM6V,EAAM7V,QAC1IqlF,EAAqB,GAAE,GAAUnP,YAAYqP,sBAAsB,CAACC,WAAa,WAAajyE,EAAMrY,KAAOuqF,eAAgB5vE,EAAM1a,WAKrI,GAJI6uB,EAAK5rB,QACL4rB,EAAK/iB,SACTq+E,EAAiBt8E,OAAOq8E,GACxBlpF,KAAKrC,EAAE,mCAAmCkP,OAAOs8E,GAC7C/xE,EAAMqgD,UACNz3D,KAAKksF,4BAA4B9qF,KAAK,CAACrC,KAAMqY,EAAMrY,KAAM04D,QAASrgD,EAAMqgD,UACxEz3D,KAAKrC,EAAE,wBAA0ByZ,EAAMrY,MAAMwL,KAAK,WAAW,GAAMpK,SAASiX,EAAMqgD,SAC7D,GAAjBrgD,EAAMqgD,SAAc,CACOz3D,KAAKrC,EAAE,mCAAqCyZ,EAAMrY,MACxDc,KAAK,iCAAiCL,KAAK,aAAc4X,EAAMqgD,SAC/Ev3D,YAAY,iBACZoC,KAAKoX,EAAM1a,QAAQa,MAAKc,GAAKA,EAAEoK,QAAUqM,EAAMqgD,UAAS79C,MACjE,CACJ,GAER,EAEA6nE,YAAa,WACT,GAAIzhF,KAAKrC,EAAE,kCAAkCqP,SAAS,YAClD,OACJhN,KAAKrC,EAAE,kCAAkCwC,SAAS,YAClDH,KAAKrC,EAAE,uCAAuCwC,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UACtGH,KAAKrC,EAAE,UAAU0rB,OACjB,IAAIojE,EAA2B,GAAI,CAACl2E,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAQqB,KAAM,QAC9FsP,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,8BACtC+d,GAA+B,EAC/BnzE,EAAY,GAAElC,MAAMrX,KAAKisF,sBAC7BjsF,KAAKrC,EAAE,+CAA+CmC,MAAK,CAAC4C,EAAKxB,KAC7D,IAAI0M,EAAQ,GAAE1M,GACVkrF,EAAmBx+E,EAAM/N,KAAK,SAASL,KAAK,MAC5C6sF,EAAsBz+E,EAAM/N,KAAK,iCAAiCL,KAAK,cAE3E,GADA4sF,EAAmBA,EAAiB/oF,MAAM,EAAG+oF,EAAiBnqF,SACzDjC,KAAKksF,4BAA4BrsF,MAAKysF,GAAiBA,EAAYvtF,MAAQqtF,GAAsBE,EAAY70B,SAAW40B,IACzH,GAAIz+E,EAAM/N,KAAK,SAAS0K,KAAK,WAAY,CACrC,IAAImP,EAAQH,EAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQqyE,IAC7CtK,EAAYvoE,EAAUE,OAAOrV,QAAQsV,GACzCA,EAAMG,OAAS,CAACwyE,GAChB9yE,EAAUE,OAAOqoE,GAAapoE,EAC9BgzE,GAA+B,CACnC,MACK,GAAI1sF,KAAKksF,4BAA4BrsF,MAAKysF,GAAeA,EAAYvtF,MAAQqtF,IAAmB,CACjG,IAAI1yE,EAAQH,EAAUE,OAAO5Z,MAAKq7E,GAAKA,EAAEnhE,MAAQqyE,IAC7CtK,EAAYvoE,EAAUE,OAAOrV,QAAQsV,GACzCA,EAAMG,OAAS,CAAC,IAChBN,EAAUE,OAAOqoE,GAAapoE,EAC9BgzE,GAA+B,CACnC,CACJ,IAGAA,IACA1sF,KAAK0sB,QAAQkhC,oBAAoB6+B,EAA0BlzE,GAC3DvZ,KAAK0sB,QAAQiK,WAAW81D,GAA0B,KAC9CzsF,KAAKrC,EAAE,uCAAuCuC,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAC5GF,KAAK6gF,kBAAkB,IACvB9yE,IAEA,IAAIi0E,EAAW,GAAEj0E,GAAOlO,KAAK,cAAcyC,QAAU,aAAiB,8CACtE,GAAMyJ,QAAQgC,MAAMi0E,GACpBhiF,KAAKrC,EAAE,uCAAuCuC,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAC5GF,KAAK6gF,kBAAkB,IAGnC,EAEA8L,kBAAmB,SAAU9hF,GACzB,IAAI+hF,EAAmB,GAAE/hF,EAAG4C,QACxBo/E,EAAkBD,EAAiBr/E,MACnCu/E,EAAoBF,EAAiBjP,OACX,KAA1BiP,EAAiBr/E,MACjBu/E,EAAmBjtF,KAAK,4BAA4ByC,KAAK,aAAiB,0CAE1EwqF,EAAmBjtF,KAAK,4BAA4ByC,KAAK,aAAiB,uCAAwC,CAACP,OAAO8qF,MAC9HC,EAAmBjtF,KAAK,SAASK,cAAcC,SAAS0sF,GACxDD,EAAiB17E,QACrB,IAGJ,eAAqBiQ,SAASC,MAAMpX,OAAO,CACvCqmC,YAAa,KAEb1uB,WAAY,SAAUuvB,EAAQlyC,GAC1B,IAAIoY,EAAQ,GAAEC,MAAM65B,GACpBlxC,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKi1B,QAAUj2B,EAAQi2B,QAAUj2B,EAAQi2B,QAAUj1B,KAAK8zB,MAAMmB,QAC9Dj1B,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAKqjB,GAAG,gBAAiBrjB,KAAKgtF,gBAAiBhtF,MAC/CA,KAAK+f,IAAI3I,GACTpX,KAAKgtF,iBACT,EAEAA,gBAAiB,WACb,GAAKhtF,KAAKwC,IAAI,OAEVxC,KAAKwC,IAAI,UAAW,CACpB,IAAImwE,EAAc3yE,KAAK0sB,QAAQ8kD,cAAciC,kBAAkBzzE,KAAKwC,IAAI,OACxE,GAAImwE,GACIA,EAAYxmB,aAAensD,KAAKwC,IAAI,UAGpC,OAFAxC,KAAK+f,IAAI,aAAc4yD,EAAYiB,iBAClC5zE,KAAKwC,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,QAAWxC,KAAKi1B,QAAQ1pB,QAAQ,mBAI9E,GAAIvL,KAAKwC,IAAI,cACTxC,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoBvmF,KAAKwC,IAAI,MAAOxC,KAAKwC,IAAI,UAAWxC,KAAKwC,IAAI,eAC5FxC,KAAK+f,IAAI,aAAc/f,KAAKwC,IAAI,eAC/BxC,KAAKwC,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,QAAWxC,KAAKi1B,QAAQ1pB,QAAQ,sBAEnE,CACH,IAAI8E,EAAO,GAAQ6lB,GAAGy2B,mBAAqB,IAAM3sD,KAAKwC,IAAI,MAC1DxC,KAAKi1B,QAAQ83B,UAAU/sD,KAAKwC,IAAI,UAAW6N,GAAOi7B,IAC9CtrC,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoBvmF,KAAKwC,IAAI,MAAOxC,KAAKwC,IAAI,UAAW8oC,GACnFtrC,KAAK+f,IAAI,aAAcurB,GACtBtrC,KAAKwC,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,QAAWxC,KAAKi1B,QAAQ1pB,QAAQ,iBAAiB,GAG/F,CACJ,CACJ,EAEAm6E,KAAM,SAAU19D,EAAUnN,GACtB,IAAIjR,EAAK5J,KAAKwC,IAAI,MACd0V,EAAMlY,KAAKwC,IAAI,OACfuzB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACvE2Q,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy4C,aAClCz2D,EACA6d,EAAG5iB,EAAE,OAAOgS,EAAEjN,GAEd6d,EAAG5iB,EAAE,MAAMgS,EAAEvb,GACjB5J,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxB/N,GAAYA,GAAU,IACtBM,IACAzN,GAAWA,EAAQyN,EAAI,GAE/B,EAEAs9C,MAAO,SAAU59C,EAAUnN,GACvB,IAAIjR,EAAK5J,KAAKwC,IAAI,MACduzB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACvE2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,qBACjCx7D,EAAE,MAAMgS,EAAEvb,GACnB5J,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxB/N,GAAYA,GAAU,IACvB,SAAUM,GACTzN,GAAWA,EAAQyN,EACvB,GACJ,IAGJ,gBAAsBnH,SAASm6C,WAAWtxD,OAAO,CAC7C8pB,MAAO,eACPiB,WAAY,WAEZpT,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAKqzD,QAAUrzD,KAAK0sB,QAAQu4D,mBAAmBgI,2BAA2BjtF,KAAKi1B,QAAQzyB,IAAI,QAC3FxC,KAAKktF,wBACLltF,KAAKi1B,QAAQ5R,GAAG,sBAAuBrjB,KAAKglF,mBAAoBhlF,MAChEA,KAAKqjB,GAAG,kBAAmBrjB,KAAKg1B,KAAMh1B,KAC1C,EAEAqlF,cAAe,WACXrlF,KAAKqzD,QAAUrzD,KAAK0sB,QAAQu4D,mBAAmBgI,2BAA2BjtF,KAAKi1B,QAAQzyB,IAAI,SAAWxC,KAAKqzD,OAC/G,EAEA65B,sBAAuB,WACnBltF,KAAK0sB,QAAQu4D,mBAAmBkI,oBAAoBntF,KAAKi1B,QAAQzyB,IAAI,QAAQ6P,SAASuwE,IAClF5iF,KAAKotF,iBAAiBxK,EAAY,GAE1C,EAEAwK,iBAAkB,SAAUh2E,GACH,iBAAVA,IACPA,EAAQ,CAACxN,GAAIwN,IACjB,IAAIwrE,EAAc5iF,KAAKwC,IAAI4U,EAAMxN,IAMjC,OALIg5E,EACAA,EAAY7iE,IAAI3I,GAEhBwrE,EAAc5iF,KAAK+wC,OAAO35B,EAAO,CAAC0c,MAAO9zB,OAEtC4iF,CACX,EAEAuC,kBAAmB,WACfnlF,KAAKqzD,QAAU,EACf,GAAEvzD,KAAK,GAAEuX,MAAMrX,KAAKw5D,SAAS,SAAUopB,GACnCA,EAAYpxB,SAChB,GACJ,EAEA67B,UAAW,SAAUC,GACjB,IAAIC,EAAgB,GAapB,OAZA,GAAED,GAAQxtF,MAAK,CAAC4C,EAAK0pB,KACjB,IAAIrtB,EAAO,GAAEqtB,GAAY5sB,KAAK,QAC1BsW,EAAc,GAAEsW,GAAY5sB,KAAK,eACjCguF,EAAc,GAAEphE,GAAY5sB,KAAK,aACjCiuF,EAAe,GAAErhE,GAAY5sB,KAAK,WACtC+tF,EAAcnsF,KAAK,CACfrC,KAAMA,EACN+W,YAAaA,EACb03E,YAAaA,EACbC,aAAcA,GAChB,IAECF,CACX,EAEIvI,mBAAoB,WAChBhlF,KAAKszE,oBAAoB,CAACjgB,QAASrzD,KAAKqzD,UAAU,KAC9CrzD,KAAKuL,QAAQ,wBACb,IAAIrX,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SACvC/gC,EAAK0gC,YACA1gC,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQyqD,sBAC3B,GAER,EAEJpa,oBAAqB,SAAUt0E,EAASgpB,EAAUnN,GAE9C,IAAI6rE,GADJ1nF,EAAUA,GAAW,CAAC,GACO4K,GACzBypD,EAAUr0D,EAAQq0D,SAAW,EAC7Bt9B,EAAK,GAAI,CAACxf,GAAIvW,KAAKi1B,QAAQzyB,IAAI,YAAaqB,KAAM,QAChCuX,MAAlBsrE,EACI1nF,EAAQu0E,WACRx9C,EAAG5iB,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,qBAAsB/kE,GAAI88E,IAE9D3wD,EAAG5iB,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBAAsBx7D,EAAE,OAAQ,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAY/kE,GAAI88E,IAG3G3wD,EAAG5iB,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,qBAAsBtb,QAASA,IACvErzD,KAAK0sB,QAAQm/B,SAAS91B,GAAK0d,IACvB,IAAIk6C,EAAY,GAAEl6C,GACd4f,EAAUs6B,EAAU9tF,KAAK,SAASL,KAAK,WAC3C6zD,IAAYrzD,KAAKqzD,QAAUtxD,OAAOsxD,IAClCs6B,EAAU9tF,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACpC,IAAI0M,EAAQ,GAAE1M,GACV2vE,EAAejjE,EAAM/N,KAAK,gBAAgByC,OAC1CsH,EAAKgE,EAAM/N,KAAK,MAAMyC,OACL,SAAjBuuE,GACA7wE,KAAKwC,IAAIoH,IAAO5J,KAAKwC,IAAIoH,GAAI4nD,UAC7BxxD,KAAK0sB,QAAQu4D,mBAAmB2I,0BAA0B5tF,KAAKwC,IAAI,OAAQoH,IAG3E5J,KAAK0zE,iBAAiB9lE,EAAM,IAEpCoa,GAAYA,EAASyrB,EAAS,IAC9B1lC,IACA8M,GAAWA,EAAQ9M,EAAM,GAEjC,EAEAukB,OAAQ,SAAUD,GACd,IAAI3f,EAAO,GAWX,OAVA1S,KAAKw5D,OAAOnnD,SAASuwE,IACjB,IAAI1qE,EAAM0qE,EAAYpgF,IAAI,OAC1B,GAAI6vB,EAAO,CACPA,EAAQA,EAAMrc,cACd,IAAI2uC,EAAWi+B,EAAYpgF,IAAI,aAC3B0V,GAAOA,EAAIlC,cAAc5R,QAAQiuB,IAAU,GAAKsyB,GAAYA,EAAS3uC,cAAc5R,QAAQiuB,IAAU,IACrG3f,EAAKtR,KAAKwhF,EAClB,MACIlwE,EAAKtR,KAAKwhF,EAAY,IAEvBlwE,CACX,EAEAghE,iBAAkB,SAAU9lE,GACxB,IAAIsK,EAAMtK,EAAM/N,KAAK,OAAOyC,OACxBqiD,EAAW/2C,EAAM/N,KAAK,YAAYyC,OAClCsH,EAAKgE,EAAMpO,KAAK,MAChBmmF,EAAQ/3E,EAAM/N,KAAK,SAASyC,OAC5BwjF,EAAUl4E,EAAM/N,KAAK,WAAWyC,OAChC8iD,EAAQx3C,EAAM/N,KAAK,mBAAmB,GAAQq2B,GAAGo2B,4BAA4BzsD,KAAK,QAAQL,KAAK,MAC/FquF,EAAYjgF,EAAM/N,KAAK,mBAAmB,GAAQq2B,GAAGo2B,4BAA4BzsD,KAAK,QAAQL,KAAK,OACnGwlD,EAAOp3C,EAAM/N,KAAK,QAAQyC,QAC7BqiD,EAASngD,OAAOvC,SAAW0iD,EAAWzsC,GAAOtO,GAE9C,IAAIwN,EAAQ,CACRc,IAAKA,EACLtO,GAAIA,EACJ0hC,OAAQ8Z,EACRkhC,WAAYuH,EACZlpC,SAAUA,EACVghC,MAAOA,EACPG,QAASA,EACT9gC,KAAMA,GAGN49B,EAAc5iF,KAAKotF,iBAAiBh2E,GAGxC,OAFCpX,KAAK0sB,QAAQlqB,IAAI,SAAWogF,EAAYpgF,IAAI,SAAYxC,KAAKi1B,QAAQ0+C,QAAUiP,IAAgB5iF,KAAKi1B,QAAQ1pB,QAAQ,kBACrHvL,KAAK0sB,QAAQu4D,mBAAmB6I,kBAAkB9tF,KAAKi1B,QAAQzyB,IAAI,OAAQ4U,GACpEwrE,CACX,IAGJ,qBAA2BzhE,SAAS0B,iBAAiB7Y,OAAO,CACxDqX,SAAU,CACN0sE,mBAAoB,IAGxBd,2BAA4B,SAAU/0E,GAClC,IACIhQ,EADyB,GAAEmP,MAAMrX,KAAKwC,IAAI,uBACV3C,MAAK6S,GAAQA,EAAKwF,MAAQA,IAC9D,OAAIhQ,EACOA,EAAOmrD,QAEP,CACf,EAEA+xB,2BAA4B,SAAUltE,EAAKm7C,GACvC,IAAI26B,EAAyB,GAAE32E,MAAMrX,KAAKwC,IAAI,uBAC1C23E,EAAoB6T,EAAuBnuF,MAAK6S,GAAQA,EAAKwF,MAAQA,IACrE+1E,EAAwBD,EAAuB5pF,QAAQ+1E,IAC7B,GAA1B8T,GACAD,EAAuB/zC,OAAOg0C,EAAuB,GAEpD9T,EAIDA,EAAkB9mB,QAAUA,EAH5B8mB,EAAoB,CAACjiE,IAAKA,EAAKiiE,kBAAmB,GAAI9mB,QAAS,GAInE26B,EAAuB5sF,KAAK+4E,GAC5Bn6E,KAAK+iB,KAAK,qBAAsBirE,EACpC,EAEAb,oBAAqB,SAAUj1E,GAC3B,IACIhQ,EADyB,GAAEmP,MAAMrX,KAAKwC,IAAI,uBACV3C,MAAK6S,GAAQA,EAAKwF,MAAQA,IAC9D,OAAIhQ,GAAUA,EAAOiyE,kBACVjyE,EAAOiyE,kBAEP,EACf,EAEA2T,kBAAmB,SAAU51E,EAAKg2E,GAC9B,IAAIF,EAAyB,GAAE32E,MAAMrX,KAAKwC,IAAI,uBAC1C2rF,EAAoBH,EAAuBnuF,MAAK6S,GAAQA,EAAKwF,MAAQA,IACrEm7C,EAAU86B,GAAqBA,EAAkB96B,SAAW,EAC5D8mB,EAAoBgU,GAAqBA,EAAkBhU,mBAAqB,GAChF8T,EAAwBD,EAAuB5pF,QAAQ+pF,GAC3D,GAAIhU,EAAkBl4E,OAAQ,CAC1B,IAAI2gF,EAAczI,EAAkBt6E,MAAK4mF,GAAoBA,EAAiB78E,KAAOskF,EAAiBtkF,KAClGwkF,EAAkBjU,EAAkB/1E,QAAQw+E,IACxB,GAApBwL,EACAjU,EAAkBiU,GAAmBF,EAErC/T,EAAkB/4E,KAAK8sF,EAC/B,MAEI/T,EAAkB/4E,KAAK8sF,IACG,GAA1BD,GACAD,EAAuB/zC,OAAOg0C,EAAuB,GAEzDD,EAAuB5sF,KAAK,CAAC8W,IAAKA,EAAKiiE,kBAAmBA,EAAmB9mB,QAASA,IACtFrzD,KAAK+iB,KAAK,qBAAsBirE,EACpC,EAEAK,oBAAqB,SAAUn2E,EAAKo2E,GAChC,IAAIN,EAAyB,GAAE32E,MAAMrX,KAAKwC,IAAI,uBAC1C23E,EAAoB6T,EAAuBnuF,MAAK6S,GAAQA,EAAKwF,MAAQA,KAAQ,GAC7E+1E,EAAwBD,EAAuB5pF,QAAQ+1E,IAC7B,GAA1B8T,GACAD,EAAuB/zC,OAAOg0C,EAAuB,GACzDD,EAAuB5sF,KAAK,CAAC8W,IAAKA,EAAKiiE,kBAAmBmU,EAA2Bj7B,QAAS8mB,EAAkB9mB,UAChHrzD,KAAK+iB,KAAK,qBAAsBirE,EACpC,EAEAJ,0BAA2B,SAAU11E,EAAKwuE,GACtC,IAAIvM,EAAoBn6E,KAAKmtF,oBAAoBj1E,GACjD,GAAIiiE,EAAkBl4E,OAAQ,CAC1B,IAAImsF,EAAkBjU,EAAkB/1E,QAAQ+1E,EAAkBt6E,MAAK+iF,GAAeA,EAAYh5E,KAAO88E,MACjF,GAApB0H,GACAjU,EAAkBlgC,OAAOm0C,EAAiB,GAC9CpuF,KAAKquF,oBAAoBn2E,EAAKiiE,EAClC,CACJ,EAEA+K,sBAAuB,SAAUhtE,GAC7B,IAAI81E,EAAyB,GAAE32E,MAAMrX,KAAKwC,IAAI,uBAC1CyrF,EAAwBD,EAAuB5pF,QAAQ4pF,EAAuBnuF,MAAK6S,GAAQA,EAAKwF,MAAQA,MAC9E,GAA1B+1E,GACAD,EAAuB/zC,OAAOg0C,EAAuB,GACzDD,EAAuB5sF,KAAK,CAAC8W,IAAKA,EAAKiiE,kBAAmB,GAAI9mB,QAAS,IACvErzD,KAAK+iB,KAAK,qBAAsBirE,EACpC,IAGJ,2BAAiC,oBAAwB,CACrDj9D,UAAW,gCACXvD,SAAU,GAAUusD,YAAYwU,WAChCzgE,YAAa,iBACbgP,YAAa,GAAU7lC,aAAae,gBAEpCi5B,OAAQ,CACJ,kBAAmB,OACnB,qBAAsB,SACtB,mBAAoB,gBAGxB1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKrC,EAAE,aAAa2E,KAAKtD,EAAQkY,SAAWlY,EAAQkY,QAAQ1U,IAAI,WAAaxD,EAAQkY,QAAQ1U,IAAI,WAAa,aAAiB,2CAA4C,CAACxC,KAAK0sB,QAAQlqB,IAAI,UAC7LxC,KAAKkX,QAAUlY,EAAQkY,QACvBlX,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAKi4B,OAAQj4B,KACzC,EAEAgvB,OAAQ,WACJhvB,KAAK8zB,MAAM/T,IAAI,WAAW,GAC1B/f,KAAKw9B,eACLx9B,KAAKm9B,YACT,EAEArO,KAAM,WACF9uB,KAAKuL,QAAQ,cAAevL,MAC5BA,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAK8zB,MAAM/T,IAAI,WAAW,GAC1B/f,KAAK+uB,OAAOH,MAAM5uB,KAAMqR,UAC5B,EAEA4mB,OAAQ,WACJ,IAAIqB,EAAUt5B,KAAK8zB,MAAMwF,QACrB,GAAExI,IAAIwI,EAAS,SAASt5B,KAAKm9B,aAC7B,GAAErM,IAAIwI,EAAS,UAAUt5B,KAAKw9B,cACtC,EAEAqgD,SAAU,WACN79E,KAAK8zB,MAAM/T,IAAI,aAAa,GAC5B/f,KAAK8zB,MAAMvoB,QAAQ,YAAavL,KAAK8zB,MACzC,EAEA06D,UAAW,WACP,IAAIt6F,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK8zB,OAC3C5/B,EAAK6rB,IAAI,CAAC,QAAU,EAAO,SAAW,EAAO,QAAU,EAAO,iBAAe3E,IAC7E,kBAAsB,YAAa,CAAE+d,WAAO/d,IAC5ClnB,EAAK0gC,UAAUqO,QAAQwrD,cAC3B,EAEAjxD,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAK,WAAY,WACRn9B,KAAKrC,EAAE,0BAA0B2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SACjDxC,KAAK8zB,MAAMtxB,IAAI,cAAgBxC,KAAK8zB,MAAMtxB,IAAI,QAC9CxC,KAAKrC,EAAE,yBAAyBwC,SAAS,eACzCH,KAAKrC,EAAE,oBAAoB2E,KAAK,MAGhCtC,KAAKrC,EAAE,yBAAyBuC,YAAY,eAC5CF,KAAKrC,EAAE,oBAAoB2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QAEvD,EAEAksF,gBAAiB,WACb,GAAI1uF,KAAK0sB,QAAQK,YAAc/sB,KAAK0sB,QAAQK,WAAW01B,mBACnD,OACJ,IAAIksC,EAAc3uF,KAAK8zB,MAAMtxB,IAAI,OAC7BosF,EAAkB,GAAI,CAAC/qF,KAAM,QAAQsP,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGo4C,WACvEugB,EAAgB,GAAI,CAAChrF,KAAM,QAAQsP,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAGo4C,WACnEwgB,EAAkB,GAAI,CAACjrF,KAAM,QAAQsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGo4C,WAClEn7D,EAAE,OAAQ,CAAC+E,IAAKlY,KAAK8zB,MAAMtxB,IAAI,OAAS,IAAM,GAAO2G,QAC1DnJ,KAAK0sB,QAAQiK,WAAWi4D,GAAkBG,IACtC,IAAIxyC,EAAQ,GAAEwyC,GAAmBlvF,KAAK,QAClC08C,EAAMt6C,OAAS,GACfs6C,EAAMz8C,MAAK,SAAU4C,EAAKxB,GACtB,IAAI8tF,EAAW,GAAE9tF,GAAM1B,KAAK,OACxBwvF,EAAS5qF,QAAQuqF,IAAgB,GACjCE,EAAc17E,EAAE,OAAQ,CAAC+E,IAAK82E,IAAW34D,IACjD,IAEA,GAAEw4D,EAAc/iC,UAAUjsD,KAAK,QAAQoC,OACvCjC,KAAK0sB,QAAQiK,WAAWk4D,GAAe,KACnC7uF,KAAK0sB,QAAQiK,WAAWm4D,EAAgB,IAG5C9uF,KAAK0sB,QAAQiK,WAAWm4D,EAAgB,GAEpD,EAEA1vF,KAAM,WACF,IAAI61B,EAAUj1B,KAAK8zB,MACnBmB,EAAQlV,IAAI,4BAA4B,GACxCkV,EAAQm/C,gBACRn/C,EAAQ++C,aAAa,MAAM,KACvB/+C,EAAQo/C,aACRr0E,KAAK0uF,kBACLz5D,EAAQo+C,YACRp+C,EAAQogD,cACRr1E,KAAK69E,UAAU,IAEnB5oD,EAAQ1pB,QAAQ,gBAAiB0pB,EACrC,EAEAhR,OAAQ,WACJ,IAAIgR,EAAUj1B,KAAK8zB,MACnB9zB,KAAKwuF,YACL,IAAIz4D,EAAK,GAAI,CAACxf,GAAI0e,EAAQzyB,IAAI,aAAeyyB,EAAQzyB,IAAI,OAAQqB,KAAM,QAClEsP,EAAE,UAAW,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBACxC3uE,KAAK0sB,QAAQm/B,SAAS91B,GAAI,SAAU,KAChCd,EAAQs/C,iBACRv0E,KAAK0uF,iBAAiB,GAE9B,EAEA7oB,aAAc,WACV,IAAI5wC,EAAUj1B,KAAK8zB,MACnB,GAAM/nB,QAAQiC,IAAI,aAAiB,iBAAkB,aAAiB,wBAAyB,CAACinB,EAAQzyB,IAAI,QAASxC,KAAK0sB,QAAQlqB,IAAI,SAAU,KAAM,CAAE2L,eAAgB,aAAiB,uBAAuBoa,MAAK,SAAUrgB,GACvNA,IACA+sB,EAAQ1pB,QAAQ,gBAAiB0pB,GACjCA,EAAQ2wC,QACR,WAAe,gBAEvB,IACA5lE,KAAK0uF,kBACL1uF,KAAKwuF,WACT,IAGJ,qBAA2B,sBAA0B,CACjDx3D,WAAY,eACZC,YAAa,GACbO,YAAa,OAEbM,SAAU,SAAU/sB,GAChB,GAAa,KAAThM,KAAa,CACbiB,KAAK8zB,MAAM/T,IAAI,cAAe,MAC9B,IAAIhhB,EAAOiB,KAAKivF,iBAChBjvF,KAAK8zB,MAAM/T,IAAI,OAAQhhB,EAC3B,CACAiB,KAAK8zB,MAAMkgD,aAAa,CAACj1E,KAAMgM,GACnC,EAEA0sB,UAAW,WACHz3B,KAAK8Z,OAAOvP,KAAK,cAErBvK,KAAKN,KAAKqgB,IAAI,cAAc,GAC5B/f,KAAKo3B,cACT,EAEA63D,eAAgB,WACZ,IAAIlwF,EAAO,KACX,GAAIiB,KAAK8zB,MAAMtxB,IAAI,cAEXzD,EADAiB,KAAK8zB,MAAMtxB,IAAI,cACRxC,KAAK8zB,MAAMtxB,IAAI,cAAczD,KAE7BiB,KAAK8zB,MAAMtxB,IAAI,WAEzB,CACD,IAAIgiD,EAAQxkD,KAAK8zB,MAAMtxB,IAAI,SAC3BzD,EAAOylD,EAAMG,WAAaH,EAAMz+C,WAAa,IAAMy+C,EAAMx+C,WAAWxB,QAAUggD,EAAMI,UAAY5kD,KAAK8zB,MAAMtxB,IAAI,MACnH,CACA,OAAOzD,CACX,EAEA84B,MAAO,WACH,IAAI9sB,EAAQ/K,KAAK23B,WACjB33B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,GACpD/K,KAAK8Z,OAAOvM,OACbvN,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,mCAClF,IAGJ,0BAAgC,sBAA0B,CACtDj4D,WAAY,eACZC,YAAa,GACbO,YAAa,OACbhK,SAAU,GAAUusD,YAAYmV,wBAEhCp3D,SAAU,SAAU/sB,GAChB,GAAa,KAAThM,KAAa,CACbiB,KAAK8zB,MAAM/T,IAAI,cAAe,MAC9B,IAAIhhB,EAAOiB,KAAKivF,iBAChBjvF,KAAK8zB,MAAM/T,IAAI,OAAQhhB,EAC3B,CACAiB,KAAK8zB,MAAMkgD,aAAa,CAACj1E,KAAMgM,GACnC,EAEAkkF,eAAgB,WACZ,IAAIlwF,EAAO,KACX,GAAIiB,KAAK8zB,MAAMtxB,IAAI,cAEXzD,EADAiB,KAAK8zB,MAAMtxB,IAAI,cACRxC,KAAK8zB,MAAMtxB,IAAI,cAAczD,KAE7BiB,KAAK8zB,MAAMtxB,IAAI,WAEzB,CACD,IAAIgiD,EAAQxkD,KAAK8zB,MAAMtxB,IAAI,SAC3BzD,EAAOylD,EAAMG,WAAaH,EAAMz+C,WAAa,IAAMy+C,EAAMx+C,WAAWxB,QAAUggD,EAAMI,UAAY5kD,KAAK8zB,MAAMtxB,IAAI,MACnH,CACA,OAAOzD,CACX,EAEAq4B,YAAa,WACT,IAAIrsB,EAAQ/K,KAAK23B,WACjB33B,KAAKk3B,OAAO50B,KAAKyI,GACZ/K,KAAK8Z,OAAOvM,QACbvN,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,oCACtEjvF,KAAK8zB,MAAMtxB,IAAI,gBACfxC,KAAK8Z,OAAOvM,IAAIvN,KAAK8zB,MAAMtxB,IAAI,iBAElCxC,KAAK8zB,MAAMtxB,IAAI,eAGhBxC,KAAKk3B,OAAOh3B,YAAY,mBAFxBF,KAAKk3B,OAAO/2B,SAAS,kBAG7B,EAEA03B,MAAO,WACH,IAAI9sB,EAAQ/K,KAAK23B,WACjB33B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,GACpD/K,KAAK8Z,OAAOvM,OACbvN,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,mCAClF,IAGJ,wBAA8B,sBAA0B,CACpDj4D,WAAY,aACZC,YAAa,GACbzJ,SAAU,GAAUusD,YAAYmV,wBAEhCvtE,WAAY,SAAU3iB,GAClBgB,KAAKytB,OAASzuB,EAAQyuB,OACtBztB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,CACxBwJ,WAAYh3B,KAAKg3B,WACjBF,WAAY92B,KAAK82B,WACjBG,YAAaj3B,KAAKi3B,eAEtBj3B,KAAKk3B,OAASl3B,KAAKrC,EAAE,eACrBqC,KAAKm3B,KAAOn3B,KAAKrC,EAAE,eACnBqC,KAAK8Z,OAAS9Z,KAAKrC,EAAE,gBACrB,IAGI8tF,EAHAC,EAAmB1rF,KAAKrC,EAAE,oBAC1BguF,EAAoB3rF,KAAKrC,EAAE,yBAC3BiuF,EAAe5rF,KAAKrC,EAAE,oBAG1B,IAAK,IAAInD,KAAco2E,GAAMruE,IAAK,CAC9B,IAAIspF,EAAmB,GAAE,kCACrBrM,EAAYhlF,EAAWqH,QAAQ,KAAM,KACzC,GAAE,WAAW29E,+BAAuC,aAAiB,GAAUjlF,gBAAgBC,aAAsB6O,SAASwiF,GAC9H,GAAE/rF,KAAK8wE,GAAMruE,IAAI/H,IAAa,SAAU2G,GACpC,GAAE,6BAA6BxB,KAC3BwB,EAAMI,QAAQ,CAACG,WAAY,GAAIF,OAAQg+E,KACzCn2E,SAASwiF,EACf,IACAA,EAAiBxiF,SAASuiF,GAC1BA,EAAapzD,SAAS,eAAe3rB,OAAO+jE,GAAMruE,IAAI/H,GAAY,GAAG+G,QAAQ,CAACI,KAAM69E,EAAW59E,MAAO,GAAUrH,gBAAgBC,GAAaiH,SAAU,IAAKC,WAAY,KAC5K,CACAkqF,EAAa59D,iBACT,GAAEhkB,OAAO,CAACof,MAAO,aAAc,iBACnCppB,KAAKrC,EAAE,sBAAsB8N,OAAOZ,IAChC+gF,EAAa,GAAG57D,UAAYhwB,KAAKrC,EAAE,oBAAsBkN,EAAG4C,OAAO6J,WAAW3V,KAAKoJ,OAAO,GAAGonB,UAAY,CAAC,IAE9Gu5D,EAAiBhxD,OAAO7vB,IAChBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAClCigF,EAAkBxrF,SAAS,UACvBsrF,GACAl3D,aAAak3D,GAEjBG,EAAa59D,iBAAiB,SAAS,IACvCnjB,IACIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WACbuhF,EAAkB5/B,GAAG,WACtB4/B,EAAkBzrF,YAAY,SAEtC,GAAG,IAAI,IAEXyrF,EAAkBjxD,MAAM,MAAO7vB,IACvBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WAClBuhF,EAAkBzrF,YAAY,SAClC,GAAG,IAAI,IAEXyrF,EAAkB9tD,WAAWhzB,IAEzB,GADIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9Bb,EAAGqyE,OACH,OACJ,IAAIx4C,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAAel7B,KAAK,UACnD6kC,EAAQziC,SACRjC,KAAK8Z,OAAOvM,KAAI,WACZ,OAAOvN,KAAK+K,MAAQ25B,EAAQhlC,KAAK,QACrC,IACAM,KAAK8Z,OAAO2lE,WAAW,KACvBz/E,KAAK43B,cACT,IAEJ53B,KAAKo3B,cACLp3B,KAAKN,KAAO,IAAIyhB,SAASC,MAAM,CAACiW,YAAY,GAChD,EAEAO,YAAa,WACT53B,KAAK83B,SAAS93B,KAAK8Z,OAAOvM,MAC9B,EAEAuqB,SAAU,SAAU/sB,GACZ/K,KAAK8Z,OAAOvM,MACZvN,KAAKytB,OAAOw9D,WAAWlgF,GAEvB/K,KAAKytB,OAAOw9D,WAAWjrF,KAAKivF,kBAChCjvF,KAAKo3B,aACT,EAEA63D,eAAgB,WACZ,IAAIlwF,EAAO,KAOX,OANIiB,KAAK8zB,MAAMtxB,IAAI,gBAEXzD,EADAiB,KAAK8zB,MAAMtxB,IAAI,eAAiBxC,KAAK8zB,MAAMtxB,IAAI,cAAczD,KACtDiB,KAAK8zB,MAAMtxB,IAAI,cAAczD,KAE7BiB,KAAK8zB,MAAMtxB,IAAI,QAEvBzD,CACX,EAEAq4B,YAAa,SAAU+3D,GACnB,IAAIpkF,EAAQ/K,KAAK23B,WACjB33B,KAAKk3B,OAAO50B,KAAKyI,GACZ/K,KAAK8Z,OAAOvM,QAAS4hF,IACtBnvF,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,oCACtEjvF,KAAK8zB,MAAMtxB,IAAI,eAAiBxC,KAAK8zB,MAAMtxB,IAAI,cAAczD,MAC7DiB,KAAK8Z,OAAOvM,IAAIvN,KAAK8zB,MAAMtxB,IAAI,cAAczD,MAC7CowF,GACAnvF,KAAK43B,cAEjB,EAEAD,SAAU,WACN,GAAI33B,KAAK8zB,MAAMtxB,IAAI,cACf,OAAOxC,KAAK8zB,MAAMtxB,IAAI,cAAczD,IAC5C,EAEA84B,MAAO,WACH,IAAI9sB,EAAQ/K,KAAK23B,WACjB33B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,GACpD/K,KAAK8Z,OAAOvM,MAGbvN,KAAK43B,cAFL53B,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,mCAIlF,IAGJ,8BAAoC,sBAA0B,CAC1Dj4D,WAAY,mBACZC,YAAa,GACbzJ,SAAU,GAAUusD,YAAYmV,wBAEhCvtE,WAAY,SAAU3iB,GAClBgB,KAAKytB,OAASzuB,EAAQyuB,OACtBztB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,CACxBwJ,WAAYh3B,KAAKg3B,WACjBF,WAAY92B,KAAK82B,WACjBG,YAAaj3B,KAAKi3B,eAEtBj3B,KAAKk3B,OAASl3B,KAAKrC,EAAE,eACrBqC,KAAKm3B,KAAOn3B,KAAKrC,EAAE,eACnBqC,KAAK8Z,OAAS9Z,KAAKrC,EAAE,gBACrB,IAGI8tF,EAHAC,EAAmB1rF,KAAKrC,EAAE,oBAC1BguF,EAAoB3rF,KAAKrC,EAAE,yBAC3BiuF,EAAe5rF,KAAKrC,EAAE,oBAG1B,IAAK,IAAInD,KAAco2E,GAAMruE,IAAK,CAC9B,IAAIspF,EAAmB,GAAE,kCACrBrM,EAAYhlF,EAAWqH,QAAQ,KAAM,KACzC,GAAE,WAAW29E,+BAAuC,aAAiB,GAAUjlF,gBAAgBC,aAAsB6O,SAASwiF,GAC9H,GAAE/rF,KAAK8wE,GAAMruE,IAAI/H,IAAa,SAAU2G,GACpC,GAAE,6BAA6BxB,KAC3BwB,EAAMI,QAAQ,CAACG,WAAY,GAAIF,OAAQg+E,KACzCn2E,SAASwiF,EACf,IACAA,EAAiBxiF,SAASuiF,GAC1BA,EAAapzD,SAAS,eAAe3rB,OAAO+jE,GAAMruE,IAAI/H,GAAY,GAAG+G,QAAQ,CAACI,KAAM69E,EAAW59E,MAAO,GAAUrH,gBAAgBC,GAAaiH,SAAU,IAAKC,WAAY,KAC5K,CACAkqF,EAAa59D,iBACT,GAAEhkB,OAAO,CAACof,MAAO,aAAc,iBACnCppB,KAAKrC,EAAE,sBAAsB8N,OAAOZ,IAChC+gF,EAAa,GAAG57D,UAAYhwB,KAAKrC,EAAE,oBAAsBkN,EAAG4C,OAAO6J,WAAW3V,KAAKoJ,OAAO,GAAGonB,UAAY,CAAC,IAE9Gu5D,EAAiBhxD,OAAO7vB,IAChBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAClCigF,EAAkBxrF,SAAS,UACvBsrF,GACAl3D,aAAak3D,GAEjBG,EAAa59D,iBAAiB,SAAS,IACvCnjB,IACIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WACbuhF,EAAkB5/B,GAAG,WACtB4/B,EAAkBzrF,YAAY,SAEtC,GAAG,IAAI,IAEXyrF,EAAkBjxD,MAAM,MAAO7vB,IACvBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WAClBuhF,EAAkBzrF,YAAY,SAClC,GAAG,IAAI,IAEXyrF,EAAkB9tD,WAAWhzB,IAEzB,GADIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9Bb,EAAGqyE,OACH,OACJ,IAAIx4C,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAAel7B,KAAK,UACnD6kC,EAAQziC,SACRjC,KAAK8Z,OAAOvM,KAAI,WACZ,OAAOvN,KAAK+K,MAAQ25B,EAAQhlC,KAAK,QACrC,IACAM,KAAK8Z,OAAO2lE,WAAW,KACvBz/E,KAAK43B,cACT,IAEJ53B,KAAKo3B,cACLp3B,KAAKN,KAAO,IAAIyhB,SAASC,MAAM,CAACiW,YAAY,GAChD,EAEAO,YAAa,WACT53B,KAAK83B,SAAS93B,KAAK8Z,OAAOvM,MAC9B,EAEAuqB,SAAU,SAAU/sB,GAChB/K,KAAKo3B,cACDp3B,KAAK8Z,OAAOvM,MACZvN,KAAKytB,OAAOw9D,WAAWlgF,GAEvB/K,KAAKytB,OAAOw9D,WAAWjrF,KAAKivF,iBACpC,EAEAA,eAAgB,WACZ,IAAIlwF,EAAO,KAKX,OAHIA,EADAiB,KAAK8zB,MAAMtxB,IAAI,YACRxC,KAAK8zB,MAAMtxB,IAAI,YAEfxC,KAAK8zB,MAAMtxB,IAAI,OACnBzD,CACX,EAEAq4B,YAAa,SAAU+3D,GACnB,IAAIpkF,EAAQ/K,KAAK23B,WACjB33B,KAAKk3B,OAAO50B,KAAKyI,GACZ/K,KAAK8Z,OAAOvM,QAAS4hF,IACtBnvF,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,oCACtEjvF,KAAK8zB,MAAMtxB,IAAI,aACfxC,KAAK8Z,OAAOvM,IAAIvN,KAAK8zB,MAAMtxB,IAAI,aAC/B2sF,GACAnvF,KAAK43B,eAEb53B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,EAC7D,EAEA4sB,SAAU,WACN,GAAI33B,KAAK8zB,MAAMtxB,IAAI,YACf,OAAOxC,KAAK8zB,MAAMtxB,IAAI,WAC9B,EAEAq1B,MAAO,WACS73B,KAAK23B,WACZ33B,KAAK8Z,OAAOvM,MAGbvN,KAAK43B,cAFL53B,KAAK8Z,OAAOvP,KAAK,cAAevK,KAAKivF,kBAAoB,aAAiB,mCAIlF,IAGJ,+BAAqC,sBAA0B,CAC3Dj4D,WAAY,oBACZC,YAAa,GACbzJ,SAAU,GAAUusD,YAAYmV,wBAEhCvtE,WAAY,SAAU3iB,GAClBgB,KAAKytB,OAASzuB,EAAQyuB,OACtBztB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,CACxBwJ,WAAYh3B,KAAKg3B,WACjBF,WAAY92B,KAAK82B,WACjBG,YAAaj3B,KAAKi3B,eAEtBj3B,KAAKk3B,OAASl3B,KAAKrC,EAAE,eACrBqC,KAAKm3B,KAAOn3B,KAAKrC,EAAE,eACnBqC,KAAK8Z,OAAS9Z,KAAKrC,EAAE,gBACrB,IAGI8tF,EAHAC,EAAmB1rF,KAAKrC,EAAE,oBAC1BguF,EAAoB3rF,KAAKrC,EAAE,yBAC3BiuF,EAAe5rF,KAAKrC,EAAE,oBAG1B,IAAK,IAAInD,KAAco2E,GAAMruE,IAAK,CAC9B,IAAIspF,EAAmB,GAAE,kCACrBrM,EAAYhlF,EAAWqH,QAAQ,KAAM,KACzC,GAAE,WAAW29E,+BAAuC,aAAiB,GAAUjlF,gBAAgBC,aAAsB6O,SAASwiF,GAC9H,GAAE/rF,KAAK8wE,GAAMruE,IAAI/H,IAAa,SAAU2G,GACpC,GAAE,6BAA6BxB,KAC3BwB,EAAMI,QAAQ,CAACG,WAAY,GAAIF,OAAQg+E,KACzCn2E,SAASwiF,EACf,IACAA,EAAiBxiF,SAASuiF,GAC1BA,EAAapzD,SAAS,eAAe3rB,OAAO+jE,GAAMruE,IAAI/H,GAAY,GAAG+G,QAAQ,CAACI,KAAM69E,EAAW59E,MAAO,GAAUrH,gBAAgBC,GAAaiH,SAAU,IAAKC,WAAY,KAC5K,CACAkqF,EAAa59D,iBACT,GAAEhkB,OAAO,CAACof,MAAO,aAAc,iBACnCppB,KAAKrC,EAAE,sBAAsB8N,OAAOZ,IAChC+gF,EAAa,GAAG57D,UAAYhwB,KAAKrC,EAAE,oBAAsBkN,EAAG4C,OAAO6J,WAAW3V,KAAKoJ,OAAO,GAAGonB,UAAY,CAAC,IAE9Gu5D,EAAiBhxD,OAAO7vB,IAChBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAClCigF,EAAkBxrF,SAAS,UACvBsrF,GACAl3D,aAAak3D,GAEjBG,EAAa59D,iBAAiB,SAAS,IACvCnjB,IACIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WACbuhF,EAAkB5/B,GAAG,WACtB4/B,EAAkBzrF,YAAY,SAEtC,GAAG,IAAI,IAEXyrF,EAAkBjxD,MAAM,MAAO7vB,IACvBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,WAClBuhF,EAAkBzrF,YAAY,SAClC,GAAG,IAAI,IAEXyrF,EAAkB9tD,WAAWhzB,IAEzB,GADIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9Bb,EAAGqyE,OACH,OACJ,IAAIx4C,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAAel7B,KAAK,UACnD6kC,EAAQziC,SACRjC,KAAK8Z,OAAOvM,KAAI,WACZ,OAAOvN,KAAK+K,MAAQ25B,EAAQhlC,KAAK,QACrC,IACAM,KAAK8Z,OAAO2lE,WAAW,KACvBz/E,KAAK43B,cACT,IAEJ53B,KAAKo3B,aAAY,EACrB,EAEAQ,YAAa,WACT53B,KAAK83B,SAAS93B,KAAK8Z,OAAOvM,MAC9B,EAEAuqB,SAAU,SAAU/sB,GAChB/K,KAAKo3B,cACLp3B,KAAKytB,OAAOy9D,YAAYngF,EAC5B,EAEAqsB,YAAa,SAAU+3D,GACnB,IAAIpkF,EAAQ/K,KAAK23B,WACZ33B,KAAK8Z,OAAOvM,OACbvN,KAAK8Z,OAAOvP,KAAK,cAAe,aAAiB,2BACjD4kF,IACAnvF,KAAK8Z,OAAOvM,IAAIxC,GAChB/K,KAAK43B,eAET53B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,EAC7D,EAEA4sB,SAAU,WAEN,OADY,GAAE9lB,OAAO7R,KAAK8zB,MAAMtxB,IAAI,SAExC,EAEAq1B,MAAO,WACE73B,KAAK8Z,OAAOvM,OACbvN,KAAK8Z,OAAOvP,KAAK,cAAe,aAAiB,2BACrDvK,KAAK43B,aACT,IAGJ,+BAAqC,sBAA0B,CAC3DZ,WAAY,oBACZxJ,SAAU,GAAUusD,YAAYqV,yBAChCn4D,YAAa,GAEbtV,WAAY,SAAU3iB,GAClBgB,KAAKytB,OAASzuB,EAAQyuB,OACtBztB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,CACxBwJ,WAAYh3B,KAAKg3B,WACjBF,WAAY92B,KAAK82B,WACjBG,YAAaj3B,KAAKi3B,eAEtBj3B,KAAKk3B,OAASl3B,KAAKrC,EAAE,eACrBqC,KAAKm3B,KAAOn3B,KAAKrC,EAAE,eACnBqC,KAAK8Z,OAAS9Z,KAAKrC,EAAE,gBACrBqC,KAAKo3B,cACLp3B,KAAKN,KAAO,IAAIyhB,SAASC,MAAM,CAACiW,YAAY,GAChD,EAEAO,YAAa,WACT53B,KAAK83B,SAAS93B,KAAK8Z,OAAOvM,MAC9B,EAEAuqB,SAAU,SAAU/sB,GAChB/K,KAAKytB,OAAO4hE,kBAAkBtkF,GAC9B/K,KAAKo3B,aACT,EAEA63D,eAAgB,WACZ,IAAIlwF,EAAO,KAKX,OAJIiB,KAAK8zB,MAAMtxB,IAAI,eACXxC,KAAK8zB,MAAMtxB,IAAI,eAAiBxC,KAAK8zB,MAAMtxB,IAAI,cAAcyiD,cAC7DlmD,EAAOiB,KAAK8zB,MAAMtxB,IAAI,cAAcyiD,aAErClmD,CACX,EAEAq4B,YAAa,SAAU+3D,GACPnvF,KAAK23B,WACZ33B,KAAK8Z,OAAOvM,QAAS4hF,IACtBnvF,KAAK8Z,OAAOvP,KAAK,cAAe,aAAiB,kCAC7C4kF,GAAenvF,KAAK8zB,MAAMtxB,IAAI,eAC9BxC,KAAK8Z,OAAOvM,IAAIvN,KAAK8zB,MAAMtxB,IAAI,cAAcyiD,aAC7CkqC,GACAnvF,KAAK43B,cAEjB,EAEAF,QAAS,SAAU7sB,GACfA,EAAGsmB,kBACH,IAAIpmB,EAAQ/K,KAAK23B,WACb9sB,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,mBAC/DuN,KAAK8Z,OAAO5Z,YAAY,WAAWqN,IAAIxC,GACvC/K,KAAKN,KAAKqgB,IAAI,cAAc,GAEpC,EAEA4X,SAAU,WACN,GAAI33B,KAAK8zB,MAAMtxB,IAAI,cACf,OAAOxC,KAAK8zB,MAAMtxB,IAAI,cAAcyiD,WAC5C,EAEAptB,MAAO,WACH,IAAI9sB,EAAQ/K,KAAK23B,WACjB33B,KAAK8Z,OAAO/M,YAAY,UAAW/M,KAAK8Z,OAAOvM,QAAUxC,GACpD/K,KAAK8Z,OAAOvM,OACbvN,KAAK8Z,OAAOvP,KAAK,cAAe,aAAiB,kCACrDvK,KAAK43B,aACT,IAGJ,yBAA+B,oBAAwB,CACnDpK,SAAU,GAAUwjD,OACpB//C,OAAQ,CACJ,eAAgB,cAChB,oCAAqC,YACrC,+BAAgC,gBAChC,8BAA+B,gBAC/B,4BAA6B,cAC7B,wBAAyB,mBACzB,0BAA2B,qBAC3B,2BAA4B,sBAC5B,0BAA2B,sBAG/B1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1sB,KAAKytB,OAAOf,QAC3B1sB,KAAK8zB,MAAQ9zB,KAAKytB,OAAOqG,MACzB9zB,KAAK8zB,MAAM/T,IAAI,iBAAiB,GAChC/f,KAAK8zB,MAAMzQ,GAAG,iCAAkCrjB,KAAKsvF,SAAUtvF,KACnE,EAEAgvB,OAAQ,SAAUnB,EAAM0hE,GAEpB,GADAvvF,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACfxtB,KAAK8zB,MAAMtxB,IAAI,aAAc,CAC7B,IAAIwuE,EAAS,GAAE35D,MAAMrX,KAAK8zB,MAAMtxB,IAAI,WAChCgtF,EAAa,GAAEn+D,IAAIrxB,KAAK0sB,QAAQskD,OAAOye,cAAc,SAAUvb,GAC3D,IAAIn1E,EAAOm1E,EAAM1xE,IAAI,QACrB,MAAO,CAACzD,KAAMA,EAAMqkC,QAAS,GAAEvI,SAASm2C,EAAQjyE,GAAO6K,GAAI,KAC/D,IACuB4lF,EAAW74E,QAAO,SAASu9D,GAC9C,OAAIA,EAAM9wC,OAGd,IAAGnhC,OAEHjC,KAAKrC,EAAE,gBAAgBuC,YAAY,qBAEnCF,KAAKrC,EAAE,gBAAgBwC,SAAS,qBAEpCH,KAAKrC,EAAE,kBAAkBgC,KAAK,GAAU+vF,qBAAqB,CACzD1e,OAAQwe,KACRnmF,SAASrJ,KAAKrC,EAAE,iBACpBqC,KAAK+tB,aAAe/tB,KAAKrC,EAAE,kBACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAGzCjuB,KAAKiwB,cACD+gD,EAAO/uE,OACPjC,KAAKrC,EAAE,WAAWgC,KAAK,GAAUgwF,YAAY,CACzC3e,OAAQwe,KACRnmF,SAASrJ,KAAKrC,EAAE,sBAEpBqC,KAAKrC,EAAE,WAAWgC,KAAK,6BAA8B,aAAiB,yBAA2B,UACrGK,KAAKrC,EAAE,WAAWkP,OAAO,GAAU+iF,mBAEvC,CACA5vF,KAAKD,IAAIuR,OAAOtR,KAAK8zB,MAAMtxB,IAAI,cAC3B+sF,GAAQA,EAAKM,OACb7vF,KAAKrC,EAAE,gBAAgB4T,QAAO,GAE9BvR,KAAKrC,EAAE,gBAAgB4T,QAAO,GAClCvR,KAAKytB,OAAOoB,iBAChB,EAEAygE,SAAU,SAAUzkF,GACZ7K,KAAK8vF,kBACL9vF,KAAKgvB,OAAOhvB,KAAM,CAAC6vF,QAAQ,IAC3B7vF,KAAKrC,EAAE,yBAAyBwC,SAAS,WACzCH,KAAKrC,EAAE,yBAAyBoR,UAGhC/O,KAAKgvB,SACLhvB,KAAKrC,EAAE,yBAAyBwC,SAAS,WAGjD,EAEA4vF,YAAa,SAAUllF,GACnB,IACImlF,EADU,GAAEnlF,EAAG4C,QAAQstB,QAAQ,UACVv7B,KAAK,kBAC1BwxE,EAAS,GAAE35D,MAAMrX,KAAK8zB,MAAMtxB,IAAI,WAChCE,EAAMsuE,EAAO5sE,QAAQ4rF,GACrBttF,GAAO,GACPsuE,EAAO/2B,OAAOv3C,EAAK,GAEvB1C,KAAK8vF,kBAAmB,EACxB9vF,KAAK8zB,MAAMkgD,aAAa,CAAChD,OAAQA,GACrC,EAEAif,gBAAiB,SAAUplF,GACvB,IAAImmE,EAAS,GAAE35D,MAAMrX,KAAK8zB,MAAMtxB,IAAI,WAChCwuE,EAAO/uE,SACP+uE,EAAO53E,MACP4G,KAAK8vF,kBAAmB,EACxB9vF,KAAK8zB,MAAMkgD,aAAa,CAAChD,OAAQA,IAEzC,EAEAkf,UAAW,SAAUrlF,GACjB0pB,aAAav0B,KAAKmwF,eAClB,IACIr2E,EADU,GAAEjP,EAAG4C,QACE+qB,SAAS,SAC1B4K,GAAWtpB,EAAOvP,KAAK,WACvBylF,EAAal2E,EAAOta,KAAK,kBACzBwxE,EAAS,GAAE35D,MAAMrX,KAAK8zB,MAAMtxB,IAAI,WAChCE,EAAMsuE,EAAO5sE,QAAQ4rF,GACzBl2E,EAAOvP,KAAK,UAAW64B,GACnBA,EACA4tC,EAAO5vE,KAAK4uF,GACLttF,GAAO,GACdsuE,EAAO/2B,OAAOv3C,EAAK,GAEvB1C,KAAK8vF,kBAAmB,EACxB9vF,KAAK8zB,MAAMkgD,aAAa,CAAChD,OAAQA,GACrC,EAEAof,cAAe,SAAUvlF,GACrB,IAAI9L,EAAO,GAAE8L,EAAG4C,QAAQF,MACRvN,KAAKrC,EAAE,uBACb2T,OAAOvS,IAASiB,KAAK0sB,QAAQskD,OAAOxuE,IAAIzD,GACtD,EAEAsxF,iBAAkB,SAAUxlF,GACxB,IACI9L,EADSiB,KAAKrC,EAAE,yBACF4P,MACd1C,EAAGW,UAAY,GAAUlZ,WAAayM,GACtCiB,KAAKswF,aAEb,EAEAC,mBAAoB,SAAU1lF,GAC1B,IACI9L,EADSiB,KAAKrC,EAAE,yBACF4P,MACd1C,EAAGW,UAAY,GAAUpZ,eAAkB2M,GAC3CiB,KAAKiwF,iBAEb,EAEAO,mBAAoB,SAAU3lF,GAC1B0pB,aAAav0B,KAAKmwF,eAClBnwF,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,iBAAiB4T,QAAO,EACnC,EAEAk/E,oBAAqB,SAAU5lF,GAC3B7K,KAAKrC,EAAE,iBAAiB4T,QAAO,GAC3BvR,KAAKrC,EAAE,yBAAyB4P,OAChCvN,KAAKswF,cACTtwF,KAAKmwF,cAAgB/lF,YAAW,KAC5BpK,KAAKrC,EAAE,yBAAyBuC,YAAY,WAC5CF,KAAKrC,EAAE,gBAAgB4T,QAAO,GAC9BvR,KAAKrC,EAAE,yBAAyB4P,IAAI,GAAE,GACvC,IACP,EAEA+iF,YAAa,WACT,IACIvxF,EADSiB,KAAKrC,EAAE,yBACF4P,MACdyjE,EAAS,GAAE35D,MAAMrX,KAAK8zB,MAAMtxB,IAAI,WAC1BwuE,EAAO5sE,QAAQrF,GACf,GACNiyE,EAAO5vE,KAAKrC,GAEhBiB,KAAK8zB,MAAMkgD,aAAa,CAAChD,OAAQA,GACrC,IAGJ,mBAAyB,oBAAwB,CAC7CxjD,SAAU,GAAUkjE,aACpBz/D,OAAQ,CACJ,kBAAmB,WACnB,qBAAsB,sBACtB,mBAAoB,oBACpB,4BAA6B,4BAC7B,2BAA4B,4BAC5B,8BAA+B,uBAC/B,kCAAmC,uBACnC,qCAAsC,wBACtC,oCAAqC,wBAGzC1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1sB,KAAKytB,OAAOf,QAC3B1sB,KAAK8zB,MAAQ9zB,KAAKytB,OAAOqG,MACzB9zB,KAAK8zB,MAAM/T,IAAI,eAAe,GAC9B/f,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAK2wF,eAAgB3wF,MAC5DA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAK2wF,eAAgB3wF,MAC1DA,KAAK8zB,MAAMzQ,GAAG,kCAAmCrjB,KAAK2wF,eAAgB3wF,MACtEA,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAK2wF,eAAgB3wF,MACrDA,KAAK8zB,MAAMzQ,GAAG,iCAAkCrjB,KAAK2wF,eAAgB3wF,MACrEA,KAAK8zB,MAAMzQ,GAAG,kCAAmCrjB,KAAK2wF,eAAgB3wF,KAC1E,EAEAgvB,OAAQ,WACJhvB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,GAAExjB,OAAO,CAAC6jB,KAAM7tB,MAAO,MACnDA,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,gBAC3CxC,KAAK28E,WAAa,IAAI,0BAA8B,CAChD7tE,GAAI9O,KAAKrC,EAAE,cAAc,GACzBm2B,MAAO9zB,KAAK8zB,QAEhB9zB,KAAKrC,EAAE,+BAA+B28B,SAAS,CAC3CC,WAAY,IACZC,YAAa,IACbE,OAAO,IAEX16B,KAAKrC,EAAE,8BAA8B28B,SAAS,CAC1CC,WAAY,IACZC,YAAa,IACbE,OAAO,IAEX16B,KAAK2wF,gBACT,EAEAzR,SAAU,WACNl/E,KAAK8zB,MAAM/T,IAAI,eAAe,GAC9B/f,KAAKytB,OAAOwC,cACRjwB,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBAAiB,WAE9ChuB,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,eAC/C,EAEAmuF,eAAgB,WACZ,IAAIC,EAAW5wF,KAAK8zB,MAAMi+C,0BACtBC,EAA2BhyE,KAAK8zB,MAAMtxB,IAAI,4BAC1CouF,IACA5wF,KAAKrC,EAAE,eAAewC,SAASywF,EAASC,kBACxC7wF,KAAKrC,EAAE,sBAAsB2E,KAAKsuF,EAASre,YAC3CvyE,KAAKrC,EAAE,eAAe2T,OAAOs/E,EAASre,YACtCvyE,KAAKrC,EAAE,cAAcwC,SAASywF,EAASE,iBACvC9wF,KAAKrC,EAAE,sBAAsB2E,KAAKsuF,EAASpe,WAC3CxyE,KAAKrC,EAAE,cAAc2T,OAAOs/E,EAASpe,WACrCxyE,KAAKrC,EAAE,8BAA8BgC,KAAKixF,EAAS1e,oBACnDlyE,KAAKrC,EAAE,uBAAuB2T,OAAOs/E,EAAS1e,oBAC9ClyE,KAAKrC,EAAE,eAAe4T,QAAQvR,KAAK8zB,MAAMtxB,IAAI,cACX,YAA9BouF,EAASze,mBACTnyE,KAAKrC,EAAE,eAAewC,SAAS,kBAAkBA,SAAS,WAAWD,YAAY,UACjFF,KAAKrC,EAAE,eAAewC,SAAS,8BAEF,YAA7BywF,EAASxe,kBACTpyE,KAAKrC,EAAE,cAAcwC,SAAS,kBAAkBA,SAAS,WAAWD,YAAY,UAChFF,KAAKrC,EAAE,cAAcwC,SAAS,8BAEA,WAA9BywF,EAASze,mBACTnyE,KAAKrC,EAAE,eAAewC,SAAS,kBAAkBA,SAAS,UAAUD,YAAY,WAChFF,KAAKrC,EAAE,eAAewC,SAAS,8BAEF,WAA7BywF,EAASxe,kBACTpyE,KAAKrC,EAAE,cAAcwC,SAAS,kBAAkBA,SAAS,UAAUD,YAAY,WAC/EF,KAAKrC,EAAE,cAAcwC,SAAS,8BAEA,KAA9BywF,EAASze,mBACTnyE,KAAKrC,EAAE,eAAeuC,YAAY,kBAAkBA,YAAY,WAAWA,YAAY,UACvFF,KAAKrC,EAAE,eAAeuC,YAAY,8BAEL,KAA7B0wF,EAASxe,kBACTpyE,KAAKrC,EAAE,cAAcuC,YAAY,kBAAkBA,YAAY,WAAWA,YAAY,UACtFF,KAAKrC,EAAE,cAAcuC,YAAY,8BAErCF,KAAKrC,EAAE,gBAAgB4T,SAAuC,KAA9Bq/E,EAASze,mBACzCnyE,KAAKrC,EAAE,cAAc4T,SAAsC,KAA7Bq/E,EAASxe,kBAA2BJ,IAClEhyE,KAAKrC,EAAE,6BAA6B4T,SAAsC,KAA7Bq/E,EAASxe,iBAA0BJ,IAChFhyE,KAAKrC,EAAE,uBAAuB4T,SAAuC,YAA9Bq/E,EAASze,mBAChDnyE,KAAKrC,EAAE,sBAAsB4T,SAAsC,YAA7Bq/E,EAASxe,kBAC/CpyE,KAAKrC,EAAE,yBAAyB4T,SAAsC,YAA7Bq/E,EAASxe,kBAClDpyE,KAAKrC,EAAE,gCAAgC4T,SAAuC,WAA9Bq/E,EAASze,mBACzDnyE,KAAKrC,EAAE,+BAA+B4T,SAAsC,WAA7Bq/E,EAASxe,kBAEhE,EAEA2e,oBAAqB,WACjB/wF,KAAK8zB,MAAMugD,YACf,EAEA2c,kBAAmB,WACfhxF,KAAK8zB,MAAMsgD,iBACVp0E,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGwsB,2BAA6B1iD,KAAK+f,IAAI,4BAA4B,EACnH,EAEAkxE,0BAA2B,WACvBjxF,KAAK8zB,MAAM0gD,qBACf,EAEA0c,0BAA2B,WACvBlxF,KAAK8zB,MAAMsgD,eACf,EAEA+c,sBAAuB,WACnBnxF,KAAK8zB,MAAM0gD,qBACf,EAEA4c,qBAAsB,WAClBpxF,KAAK8zB,MAAM2gD,mBACXz0E,KAAK8zB,MAAM/T,IAAI,2BAA2B,EAC9C,EAEA8+D,SAAU,SAAUh0E,GAChB7K,KAAK8zB,MAAM/T,IAAI,eAAe,GAC1B/f,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,eAC/C,IAGJ,iBAAuB,oBAAwB,CAC3CgrB,SAAU,GAAU6jE,WACpBpgE,OAAQ,CACJ,kBAAmB,cACnB,qDAAsD,WACtD,mBAAoB,aACpB,kBAAmB,0BACnB,wBAAyB,YACzB,gDAAiD,mBACjD,4CAA6C,cAC7C,gDAAiD,oBACjD,qDAAsD,yBACtD,oCAAqC,eACrC,sBAAuB,YACvB,2BAA4B,mBAC5B,yBAA0B,uBAC1B,6BAA8B,6BAC9B,2CAA4C,oBAC5C,sBAAuB,cACvB,mCAAoC,mBACpC,uBAAwB,UACxB,uBAAwB,cACxB,qBAAsB,QACtB,wBAAyB,eAG7B1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1sB,KAAKytB,OAAOf,QAC3B1sB,KAAK8zB,MAAQ9zB,KAAKytB,OAAOqG,MACzB9zB,KAAK8zB,MAAM/T,IAAI,eAAe,GAC9B/f,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKi4B,OAAQj4B,KACpD,EAEAgvB,OAAQ,WACJhvB,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAAS,GAAExjB,OAAO,CAAC6jB,KAAM7tB,MAAO,MACnDA,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,gBAC3CxC,KAAKrC,EAAE,6BAA6B4T,QAAO,GAC3CvR,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,0BAA0B4T,QAAO,GAQxCvR,KAAKrC,EAAE,sBAAsB28B,SAPL,CACpBC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,UAOf36B,KAAKsxF,iBAAmB,IAAI,wBAA4B,CACpDxiF,GAAI9O,KAAKrC,EAAE,yBAAyB,GACpCm2B,MAAO9zB,KAAK8zB,MACZrG,OAAQztB,OAEZA,KAAKuxF,wBAA0B,IAAI,+BAAmC,CAClEziF,GAAI9O,KAAKrC,EAAE,gCAAgC,GAC3Cm2B,MAAO9zB,KAAK8zB,MACZrG,OAAQztB,OAEZA,KAAKi4B,QACT,EAEAA,OAAQ,WACJ,IACInE,EAAO2xB,EAAY0wB,EADnBx3D,EAAO3e,KAAK8zB,MAAMtxB,IAAI,eAAiB,CAAC,EAqC5C,GAnCImc,IACqB,WAAjBA,EAAKw3D,UACLA,EAAU,aAAiB,2BACV,cAAjBx3D,EAAKw3D,UACLA,EAAU,aAAiB,8BACP,SAApBx3D,EAAK8mC,aACLA,EAAa,aAAiB,6BAC9BzlD,KAAKrC,EAAE,wBAAwB4M,KAAK,WAAW,IAE3B,UAApBoU,EAAK8mC,aACLA,EAAa,aAAiB,8BAC9BzlD,KAAKrC,EAAE,yBAAyB4M,KAAK,WAAW,IAE5B,WAApBoU,EAAK8mC,aACLA,EAAa,aAAiB,+BAC9BzlD,KAAKrC,EAAE,0BAA0B4M,KAAK,WAAW,IAElC,SAAfoU,EAAKmV,QACLA,EAAQ,aAAiB,kCACzB9zB,KAAKrC,EAAE,wBAAwB4M,KAAK,WAAW,IAEhC,gBAAfoU,EAAKmV,QACLA,EAAQ,aAAiB,0CACzB9zB,KAAKrC,EAAE,+BAA+B4M,KAAK,WAAW,KAG9DvK,KAAKrC,EAAE,mDAAmD2E,KAAK6zE,GAC/Dn2E,KAAKrC,EAAE,6BAA6B2E,KAAKwxB,GACzC9zB,KAAKrC,EAAE,wBAAwB2E,KAAKmjD,GACpCzlD,KAAKrC,EAAE,oBAAoB2E,KAAKqc,EAAK5f,MACrCiB,KAAKrC,EAAE,2BAA2B2E,KAAKqc,EAAKsmC,aAC5CjlD,KAAKsxF,iBAAiBl6D,aAAY,GAClCp3B,KAAKuxF,wBAAwBn6D,aAAY,GACzCp3B,KAAKrC,EAAE,aAAaoP,YAAY,YAAY,GAC7B/M,KAAK8zB,MAAM+/C,WAAa7zE,KAAK8zB,MAAM+/C,UAAUp6D,OAAO5Z,MAAKusB,GAAgC,SAAlBA,EAAWrS,KAAkBqS,EAAWvS,SACjH,CACT,IAAIm9D,EAAgB,GAAI,CAACnzE,KAAM,MAAO0S,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,SAClF2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,8BACtC3uE,KAAK0sB,QAAQm/B,SAASmrB,GAAgBC,IAClC,IAAI19D,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE8pB,GAAep3E,KAAK,YAAY,GAAQq2B,GAAGE,eACpFo7D,EAAqB,EACzBj4E,EAAUE,OAAOpH,SAASqH,IACtB,GAAmB,UAAfA,EAAM7V,MAAmC,WAAf6V,EAAM7V,KAChC,QACU6V,EAAMG,OAASH,EAAMG,OAAO,QAAKuB,IAE3Co2E,GACJ,IAEJxxF,KAAKrC,EAAE,gDAAgD2E,KAAKkvF,EAAmB,IAChF,KACC,GAAMj3E,uBAAuB,aAAiB,8CAA+C,IAAK,GAE1G,CACAva,KAAKw9B,cAET,EAEAA,aAAc,WACV,IAAIxiC,EAAQgF,KAAK8zB,MAAM3uB,aACvBnF,KAAKrC,EAAE,6BAA6BsH,UAAUjK,EAAOgF,KAAK88B,YAC9D,EAEA20D,uBAAwB,WACpBzxF,KAAKrC,EAAE,kCAAkC4T,QAAO,GAC5CvR,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,UAE3C,EAEA0jE,kBAAmB,WACf1xF,KAAKrC,EAAE,6BAA6B4T,QAAO,GACvCvR,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,UAE3C,EAEA2jE,wBAAyB,WACrB3xF,KAAKrC,EAAE,0BAA0B4T,QAAO,GACxCvR,KAAKuxF,wBAAwBz3E,OAAO/U,OAAO/E,KAAKuxF,wBAAwBz3E,OAAO,GAAGV,aAAe,GAC7FpZ,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,UAE3C,EAEA4jE,aAAc,WACV5xF,KAAKrC,EAAE,6BAA6B4T,QAAO,GAC3CvR,KAAKrC,EAAE,0BAA0B4T,QAAO,GACxCvR,KAAKrC,EAAE,kCAAkC4T,QAAO,GAC5CvR,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,gBAGpD,EAEAs0D,iBAAkB,SAAU13E,GACL,GAAEA,EAAG4C,QAAQstB,QAAQ,qBACpC/6B,KAAKytB,OAAOE,UAAY3tB,KAAKytB,OAAOE,SAASkkE,aAC7C7xF,KAAKytB,OAAOE,SAASkkE,YAAYtP,iBAAiB13E,EAC1D,EAEA25E,gBAAiB,SAAU35E,GACvB7K,KAAKrC,EAAE,qCAAqC4T,QAAO,EACvD,EAEA+wE,iBAAkB,SAAUz3E,GACxB7K,KAAKrC,EAAE,kCAAkC4T,QAAO,EACpD,EAEAkzE,YAAa,SAAU55E,GACf7K,KAAKytB,OAAOE,UAAY3tB,KAAKytB,OAAOE,SAAS4jD,SAC7CvxE,KAAKytB,OAAOE,SAAS4jD,QAAQkT,YAAY55E,EACjD,EAEAinF,2BAA4B,SAAUjnF,GACnB7K,KAAKrC,EAAE,uBACbmC,MAAK,CAAC46D,EAAOx5D,KACd,GAAEA,GAAM8L,SAAS,qBAAuBhN,KAAKytB,OAAOE,UAAY3tB,KAAKytB,OAAOE,SAASkkE,aACrF7xF,KAAKytB,OAAOE,SAASkkE,YAAYlP,0BAA0B,GAAEzhF,IAC7D,GAAEA,GAAM8L,SAAS,iBAAmBhN,KAAKytB,OAAOE,UAAY3tB,KAAKytB,OAAOE,SAAS4jD,SACjFvxE,KAAKytB,OAAOE,SAAS4jD,QAAQoT,qBAAqB,GAAEzjF,KACpD,GAAEA,GAAM8L,SAAS,iBAAmB,GAAE9L,GAAM8L,SAAS,sBACrD,GAAE9L,GAAMhB,YAAY,WAAU,IAEtCF,KAAK0iF,+BACT,EAEAkC,QAAS,WACD5kF,KAAKytB,OAAOE,UAAY3tB,KAAKytB,OAAOE,SAAS4jD,SAC7CvxE,KAAKytB,OAAOE,SAAS4jD,QAAQqT,SACrC,EAEAmN,qBAAsB,SAAUlnF,GAC5B7K,KAAKrC,EAAE,uBAAuBuC,YAAY,YAC1CF,KAAK0iF,+BACT,EAEAsP,kBAAmB,SAAUnnF,GACzB,GAAI,GAAEA,EAAG4C,QAAQggB,SAASzgB,SAAS,sBAAwB,GAAEnC,EAAG4C,QAAQggB,SAASzgB,SAAS,iBACtF,GAAEnC,EAAG4C,QAAQT,SAAS,sBAAwB,GAAEnC,EAAG4C,QAAQT,SAAS,gBACpE,OACJ,IAAIw1E,EAAe,GAAE33E,EAAG4C,QAAQstB,QAAQ,cACpCk3D,EAAczP,EAAax1E,SAAS,YACxCw1E,EAAaz1E,YAAY,YAAaklF,GACtCjyF,KAAK0iF,+BACT,EAEAA,8BAA+B,WAC3B,IAAIhB,EAAc1hF,KAAKrC,EAAE,uBAAuBsE,OAChDjC,KAAKrC,EAAE,sCAAsCgC,KAAK+hF,GAC9CA,GACA1hF,KAAKrC,EAAE,2BAA2BuC,YAAY,mBAAmBC,SAAS,aAC1EH,KAAKrC,EAAE,2BAA2BuC,YAAY,kBAAkBC,SAAS,mBACzEH,KAAKrC,EAAE,uCAAuCwC,SAAS,YACvDH,KAAKrC,EAAE,kCAAkCwC,SAAS,YAClDH,KAAKrC,EAAE,qCAAqCwC,SAAS,YACrDH,KAAKrC,EAAE,iCAAiCuC,YAAY,YACpDF,KAAKrC,EAAE,wBAAwBuC,YAAY,cAG3CF,KAAKrC,EAAE,2BAA2BwC,SAAS,mBAAmBD,YAAY,aAC1EF,KAAKrC,EAAE,2BAA2BwC,SAAS,kBAAkBD,YAAY,mBACzEF,KAAKrC,EAAE,uCAAuCuC,YAAY,YAC1DF,KAAKrC,EAAE,kCAAkCuC,YAAY,YACrDF,KAAKrC,EAAE,qCAAqCuC,YAAY,YACxDF,KAAKrC,EAAE,iCAAiCwC,SAAS,YACjDH,KAAKrC,EAAE,wBAAwBwC,SAAS,YAEhD,EAEAgrF,iBAAkB,SAAUtgF,GACxB7K,KAAKrC,EAAE,wBAAwB8N,OACnC,EAEAs/E,UAAW,WACP/qF,KAAKytB,OAAOgzD,gBAAgBhtC,IACxBzzC,KAAKrC,EAAE,iCAAiCgC,KAAK,GAAE8zC,GAAU5zC,KAAK,SAASA,KAAK,QAAQoC,OAAO,IAE/FjC,KAAK8zB,MAAMm/C,wBAAwBx/B,IAC/BzzC,KAAKrC,EAAE,6BAA6BgC,KAAK,GAAE8zC,GAAU5zC,KAAK,SAAS8tB,WAAW1rB,OAAO,IAEzFjC,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,qCAAqC4T,QAAO,GACnDvR,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,EAW7C,EAEA2gF,UAAW,WACPlyF,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAK0iF,gCACD1iF,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,WAEvChuB,KAAK+tB,aAAe/tB,KAAKrC,EAAE,2BACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,gBAGpD,EAEA+8D,WAAY,WACRhrF,KAAK2oD,mBACL3oD,KAAKk/E,UACT,EAEAv2B,iBAAkB,WACd,IAAI+4B,GAAc,EAClB1hF,KAAKuZ,UAAUE,OAAOpH,SAASqH,IAC3B,GAAmB,WAAfA,EAAM7V,MAAoC,UAAf6V,EAAM7V,KACjC,OACJ,IAAIkH,EAAQ2O,EAAMG,OAASH,EAAMG,OAAO,GAAK,KACxCH,EAAMK,OAAO/Z,KAAKmyF,2BAA8BnyF,KAAKmyF,0BAA0Bz4E,EAAMK,MAAQhP,IAC9F22E,GAAc,EAClB,IAEJ1hF,KAAKrC,EAAE,aAAaoP,YAAY,YAAa20E,GAC7C1hF,KAAKrC,EAAE,gBAAgB4T,OAAOmwE,GAC1BA,GACA1hF,KAAKrC,EAAE,2BAA2BgC,KAAK,aAAiB,eACxDK,KAAKrC,EAAE,qDAAqDuC,YAAY,mBAAmBC,SAAS,aACpGH,KAAKrC,EAAE,qDAAqDuC,YAAY,YAAYC,SAAS,aAC7FH,KAAKrC,EAAE,qEAAqEwC,SAAS,YACrFH,KAAKrC,EAAE,+DAA+DuC,YAAY,cAGlFF,KAAKrC,EAAE,qDAAqDwC,SAAS,mBAAmBD,YAAY,aACpGF,KAAKrC,EAAE,qDAAqDwC,SAAS,YAAYD,YAAY,aAC7FF,KAAKrC,EAAE,qEAAqEuC,YAAY,YACxFF,KAAKrC,EAAE,+DAA+DwC,SAAS,aAEnF,IAAIwe,EAAO3e,KAAK8zB,MAAMtxB,IAAI,eAAiB,CAAC,EACxCmc,IACqB,WAAjBA,EAAKw3D,SACLn2E,KAAKrC,EAAE,mDAAmDgC,KAAK,aAAiB,2BAC/D,cAAjBgf,EAAKw3D,SACLn2E,KAAKrC,EAAE,mDAAmDgC,KAAK,aAAiB,8BAE5F,EAEAsrF,WAAY,SAAUlgF,GAClB,GAAI/K,KAAKuZ,WAAaxO,EAAM,CACxB,IAAIqnF,EAAkBpyF,KAAKuZ,UAAUE,OAAO44E,WAAU1xF,GAAc,QAATA,EAAEoZ,MACxD/Z,KAAKmyF,0BAA0BpzF,OAChCiB,KAAKmyF,0BAA0BpzF,KAAOiB,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAO,IACxF7Z,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAS,CAAC9O,GACjD/K,KAAK2oD,kBACT,CACJ,EAEA0mC,kBAAmB,SAAUtkF,GACzB,GAAI/K,KAAKuZ,UAAU,CACf,IAAI64E,EAAkBpyF,KAAKuZ,UAAUE,OAAO44E,WAAU1xF,GAAc,eAATA,EAAEoZ,MACxD/Z,KAAKmyF,0BAA0BltC,cAChCjlD,KAAKmyF,0BAA0BltC,YAAcjlD,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAO,IAC/F7Z,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAS,CAAC9O,GACjD/K,KAAK2oD,kBACT,CACJ,EAEA2pC,iBAAkB,SAAUznF,GACxB,IACI0nF,EADAC,EAAa,GAAE3nF,EAAG4C,QAAQjO,KAAK,MAEnC,GAAIQ,KAAKuZ,WAAai5E,EAAW,CAC7B,IAAIJ,EAAkBpyF,KAAKuZ,UAAUE,OAAO44E,WAAU1xF,GAAc,cAATA,EAAEoZ,MACxD/Z,KAAKmyF,0BAA0BK,aAChCxyF,KAAKmyF,0BAA0BK,WAAaxyF,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAO,IAC9F7Z,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAS,CAAC24E,GAC9B,SAAfA,IACAD,EAAkB,aAAiB,mCACpB,gBAAfC,IACAD,EAAkB,aAAiB,2CACvCvyF,KAAKrC,EAAE,6BAA6B2E,KAAKiwF,GACzCvyF,KAAK2oD,kBACT,CACJ,EAEA8pC,YAAa,SAAU5nF,GACnB,IACI6nF,EADAh4B,EAAQ,GAAE7vD,EAAG4C,QAAQjO,KAAK,MAE9B,GAAIQ,KAAKuZ,WAAamhD,EAAM,CACxB,IAAI03B,EAAkBpyF,KAAKuZ,UAAUE,OAAO44E,WAAU1xF,GAAc,SAATA,EAAEoZ,MACxD/Z,KAAKmyF,0BAA0Bz3B,QAChC16D,KAAKmyF,0BAA0Bz3B,MAAQ16D,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAO,IACzF7Z,KAAKuZ,UAAUE,OAAO24E,GAAiBv4E,OAAS,CAAC6gD,GACnC,SAAVA,IACAg4B,EAAa,aAAiB,8BACpB,UAAVh4B,IACAg4B,EAAa,aAAiB,+BACpB,WAAVh4B,IACAg4B,EAAa,aAAiB,gCAClC1yF,KAAKrC,EAAE,wBAAwB2E,KAAKowF,GACpC1yF,KAAK2oD,kBACT,CACJ,EAGA84B,YAAa,WACT,GAAIzhF,KAAKrC,EAAE,aAAaqP,SAAS,YAC7B,OACJhN,KAAKrC,EAAE,aAAawC,SAAS,YAC7BH,KAAKsxF,iBAAiBx3E,OAAOvP,KAAK,YAAY,GAC9CvK,KAAKuxF,wBAAwBz3E,OAAOvP,KAAK,YAAY,GACrDvK,KAAKrC,EAAE,uCAAuCwC,SAAS,WAAWN,KAAK,sBAAsBM,SAAS,UACtG,IAAI41B,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,SACnE2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,aACvC54C,EAAK/1B,KAAK0sB,QAAQkhC,oBAAoB73B,EAAI/1B,KAAKuZ,WAC/CvZ,KAAK0sB,QAAQiK,WAAWZ,GAAK7tB,IACzB,IAAI65E,EAAW,GAAE75E,GACbq9C,EAAa,GAAEluC,MAAMrX,KAAK8zB,MAAMtxB,IAAI,eACpC4U,EAAQ,CACJrY,KAAMgjF,EAAQliF,KAAK,2BAA2ByC,OAC9CmjD,WAAYs8B,EAAQliF,KAAK,sBAAsB8tB,SAAS,SAASrrB,OACjEwxB,MAAOiuD,EAAQliF,KAAK,2BAA2B8tB,SAAS,SAASrrB,OACjE2iD,YAAa88B,EAAQliF,KAAK,kCAAkCyC,OAC5DikB,OAAQw7D,EAAQliF,KAAK,uBAAuB8tB,SAAS,SAASrrB,QAEtE,GAAE0H,OAAOu7C,EAAYnuC,GACrBpX,KAAK8zB,MAAM/T,IAAI,aAAcwlC,GAC7BvlD,KAAKsxF,iBAAiBx3E,OAAOvP,KAAK,YAAY,GAC9CvK,KAAKuxF,wBAAwBz3E,OAAOvP,KAAK,YAAY,GACrDvK,KAAK4xF,eACL5xF,KAAKrC,EAAE,uCAAuCuC,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,UAC5GF,KAAKgrF,YAAW,IAChBj9E,IAEA,IAAIi0E,EAAW,GAAEj0E,GAAOlO,KAAK,cAAcyC,QAAU,aAAiB,8CACtE,GAAMyJ,QAAQgC,MAAMi0E,GACpBhiF,KAAKsxF,iBAAiBx3E,OAAOvP,KAAK,YAAY,GAC9CvK,KAAKuxF,wBAAwBz3E,OAAOvP,KAAK,YAAY,GACrDvK,KAAK4xF,eACL5xF,KAAKrC,EAAE,uCAAuCuC,YAAY,WAAWL,KAAK,sBAAsBK,YAAY,SAAS,GAE7H,EAEAg/E,SAAU,SAAUr0E,GAChB,IAAImwE,EAAoB,GAAI,CAACzkE,GAAIvW,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,OAAQqB,KAAM,QACvFsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,aACnC3uE,KAAKytB,OAAO9vB,EAAE,yBAAyBgC,KAAK,GAAId,UAAUy2B,SAASO,aACnE71B,KAAK0sB,QAAQiK,WAAWqkD,GAAoBzH,IACxCvzE,KAAKuZ,UAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAEomB,GAAY1zE,KAAK,YAAY,GAAQq2B,GAAGE,eACtFp2B,KAAKmyF,0BAA4B,CAAC,EAClCnyF,KAAK8zB,MAAM/T,IAAI,eAAe,GAC9B/f,KAAKytB,OAAOwC,cACRjwB,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBAAiB,WAE9ChuB,KAAK+tB,aAAe/tB,KAAKrC,EAAE,cACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKi4B,SACLj4B,KAAKrC,EAAE,0CAA0CuC,YAAY,YAC7DF,KAAKsxF,iBAAiBx3E,OAAOvI,QAAO,GACpCvR,KAAKuxF,wBAAwBz3E,OAAOvI,QAAO,GAC3CvR,KAAKsxF,iBAAiBx3E,OAAOvP,KAAK,YAAY,GAC9CvK,KAAKuxF,wBAAwBz3E,OAAOvP,KAAK,YAAY,GACrDvK,KAAKrC,EAAE,wBAAwB4M,KAAK,YAAY,GAChDvK,KAAKrC,EAAE,8BAA8B4T,QAAO,GAC5CvR,KAAKrC,EAAE,mBAAmBuC,YAAY,qBACtCF,KAAKrC,EAAE,4CAA4C4T,QAAO,GAC1DvR,KAAKrC,EAAE,uCAAuC4T,QAAO,GACrDvR,KAAKrC,EAAE,wCAAwC4T,QAAO,GACtDvR,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,6BAA6B4T,QAAO,GAC3CvR,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,qCAAqC4T,QAAO,GACnDvR,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKytB,OAAOgzD,gBAAgBhtC,IACxBzzC,KAAKrC,EAAE,iCAAiCgC,KAAK,GAAE8zC,GAAU5zC,KAAK,SAASA,KAAK,QAAQoC,OAAO,IAE/FjC,KAAK8zB,MAAMm/C,wBAAwBx/B,IAC/BzzC,KAAKrC,EAAE,6BAA6BgC,KAAK,GAAE8zC,GAAU5zC,KAAK,SAAS8tB,WAAW1rB,OAAO,IAEzFjC,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,gBAC3CxC,KAAKytB,OAAO9vB,EAAE,yBAAyBgC,KAAK,IAC5CK,KAAKuxF,wBAAwBz3E,OAAO/U,OAAO/E,KAAKuxF,wBAAwBz3E,OAAO,GAAGV,aAAe,GACjGpZ,KAAKrC,EAAE,oBAAoBuT,QAAQ,IACpC,KACClR,KAAK8zB,MAAM/T,IAAI,eAAe,GAC9B/f,KAAKytB,OAAOwC,cACRjwB,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBAAiB,WAE9ChuB,KAAK+tB,aAAe/tB,KAAKrC,EAAE,cACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKi4B,SACLj4B,KAAKsxF,iBAAiBx3E,OAAOvP,KAAK,YAAY,GAC9CvK,KAAKuxF,wBAAwBz3E,OAAOvP,KAAK,YAAY,GAChDvK,KAAKuxF,wBAAwBz3E,OAAOvM,OACrCvN,KAAKuxF,wBAAwBz3E,OAAOvI,QAAO,GAC/CvR,KAAKrC,EAAE,wBAAwB4M,KAAK,YAAY,GAChDvK,KAAKrC,EAAE,8BAA8B4T,QAAO,GAC5CvR,KAAKrC,EAAE,mBAAmBwC,SAAS,qBACnCH,KAAKrC,EAAE,4CAA4C4T,QAAO,GAC1DvR,KAAKrC,EAAE,uCAAuC4T,QAAO,GACrDvR,KAAKrC,EAAE,wCAAwC4T,QAAO,GACtDvR,KAAKrC,EAAE,0CAA0CwC,SAAS,YAC1DH,KAAKrC,EAAE,aAAa4T,QAAO,GAC3BvR,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,6BAA6B4T,QAAO,GAC3CvR,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GACzCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,qBAAqB4T,QAAO,GACnCvR,KAAKrC,EAAE,qCAAqC4T,QAAO,GACnDvR,KAAKrC,EAAE,kCAAkC4T,QAAO,GAChDvR,KAAKrC,EAAE,wBAAwB4T,QAAO,GACtCvR,KAAKrC,EAAE,2BAA2B4T,QAAO,GAC9BvR,KAAK8zB,MAAMtxB,IAAI,cAC1BxC,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,gBAC3CxC,KAAKytB,OAAO9vB,EAAE,yBAAyBgC,KAAK,IAC5CK,KAAKuxF,wBAAwBz3E,OAAO/U,OAAO/E,KAAKuxF,wBAAwBz3E,OAAO,GAAGV,aAAe,GACjGpZ,KAAKrC,EAAE,oBAAoBuT,QAAQ,GAE3C,EAEA2tE,SAAU,SAAUh0E,GAChB7K,KAAK8zB,MAAM/T,IAAI,eAAe,GAC1B/f,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAG5CjuB,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBAAiB,WAEvChuB,KAAKrC,EAAE,cAAc4T,OAAOvR,KAAK8zB,MAAMtxB,IAAI,eAC/C,IAGJ,gBAAsB2e,SAASm6C,WAAWtxD,OAAO,CAC7C8pB,MAAO,aAGX,iBAAuB,uBAA2B,CAC9CnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKk0E,MAAQl1E,EAAQk1E,MACrBl0E,KAAKqjB,GAAG,SAAUrjB,KAAK2yF,iBAAkB3yF,KAC7C,EAEA+0B,WAAY,SAAU69D,EAAUC,GAC5B,GAAuC,iBAAnC,2BAAmD,CACnD,IAAIC,EAAKF,EAASpwF,IAAI,UAClBuwF,EAAKF,EAASrwF,IAAI,UAClBwwF,EAAM,GAAU/+F,eAAe6+F,GAC/BG,EAAM,GAAUh/F,eAAe8+F,GAC/BG,EAAcF,GAAO,GAAU/+F,eAAeM,QAElD,GAAI2+F,EADcD,GAAO,GAAUh/F,eAAeM,QAE9C,OAAO2+F,EAAc,GAAK,CAElC,CACA,IAAIC,EAAOC,EAGX,OAFAD,EAAQP,EAASpwF,IAAI,QAAQwT,cAC7Bo9E,EAAQP,EAASrwF,IAAI,QAAQwT,cACtBm9E,EAAQC,GAAS,EAAKD,EAAQC,EAAQ,EAAI,CACrD,EAEAT,iBAAkB,SAAU19D,GACxB,IAAIqE,EAAUrE,EAAQqE,SAClB,GAAExI,IAAIwI,EAAS,SAAW,GAAExI,IAAIwI,EAAS,qBACzCt5B,KAAKg1B,OACLh1B,KAAKuL,QAAQ,sBAAuB0pB,GAE5C,IAGJ,SAAe9T,SAASC,MAAMpX,OAAO,CACjCqX,SAAU,CACNhF,QAAS,CAAC9Z,IAAK,EAAGpO,OAAQ,IAG9BwtB,WAAY,SAAUvK,EAAOpY,GACzBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvBtV,EAAMrY,OAASqY,EAAMrY,KAAOqY,EAAMxN,IAClC5J,KAAK+f,IAAI3I,GACTpX,KAAKmiB,UAAYniB,KAAK0sB,QAAQ2mE,gBAAgB7wF,IAAI4U,EAAMrY,MACnDiB,KAAKmiB,YACNniB,KAAKmiB,UAAYniB,KAAK0sB,QAAQ2mE,gBAAgBtiD,OAAO,CAAChyC,KAAMqY,EAAMrY,QACtEiB,KAAKwiB,SAAWxiB,KAAKmiB,UAAU7K,WAC/BtX,KAAKs1B,SAAW,IAAI,iBAAqB,KAAM,CAAC4+C,MAAOl0E,OACvDA,KAAKkwC,cAAgB,IAAI,qBAAyB,CAACpc,MAAO9zB,OAC1DA,KAAKs1B,SAASjS,GAAG,0BAA2BrjB,KAAKszF,cAAetzF,MAChEA,KAAKs1B,SAASjS,GAAG,UAAWrjB,KAAKuzF,iBAAkBvzF,MACnD,uBAA2B,SAAUA,KAAKwzF,wBAAyBxzF,KACvE,EAEAyzF,UAAW,WACP,OAAO,GAAEj9E,SAASxW,KAAKwC,IAAI,MAC/B,EAEA8wF,cAAe,WACX,IAAI/wF,EAAMvC,KAAKs1B,SAASrzB,OACpB9N,EAASoO,EAAMvC,KAAKs1B,SAASwd,MAAM,CAACvsB,OAAQ,YAAYtkB,OAC5DjC,KAAK+f,IAAI,UAAW,CAACxd,IAAKA,EAAKpO,OAAQA,GAC3C,EAEAu/F,YAAa,SAAUC,GACnB,IAAI50F,EAAOiB,KAAKwC,IAAI,QAChB4U,EAAQ,GAAEC,MAAMrX,KAAKwiB,UACzBpL,EAAMrY,KAAO40F,EACb3zF,KAAKmiB,UAAUqvC,UACfxxD,KAAKmiB,UAAYniB,KAAK0sB,QAAQ2mE,gBAAgBtiD,OAAO35B,GACrDpX,KAAKwiB,SAAWxiB,KAAKmiB,UAAU7K,WAC/BtX,KAAK+f,IAAI,CAACnW,GAAI+pF,EAAU50F,KAAM40F,IAC9B3zF,KAAKuL,QAAQ,SAAUvL,KAAMjB,GAC7B,GAAEe,KAAK,GAAEuX,MAAMrX,KAAKs1B,SAASkkC,SAAS,SAAUvkC,GAC5C,IAAI+7C,EAAS,GAAE35D,MAAM4d,EAAQzyB,IAAI,WAC7Bk4D,EAAQsW,EAAO5sE,QAAQrF,GACvB27D,GAAS,GACTsW,EAAO/2B,OAAOygB,EAAO,GAEzBA,EAAQsW,EAAO5sE,QAAQuvF,GACnBj5B,EAAQ,GACRsW,EAAO5vE,KAAKuyF,GAEhB1+D,EAAQ++C,aAAa,CAAChD,OAAQA,GAClC,GACJ,EAEA0P,YAAa,WACT,IAAI3hF,EAAOiB,KAAKwC,IAAI,QACpBxC,KAAKmiB,UAAUqvC,UACf,GAAE1xD,KAAK,GAAEuX,MAAMrX,KAAKs1B,SAASkkC,SAAS,SAAUvkC,GAC5C,IAAI+7C,EAAS,GAAE35D,MAAM4d,EAAQzyB,IAAI,WAC7Bk4D,EAAQsW,EAAO5sE,QAAQrF,GACvB27D,GAAS,GACTsW,EAAO/2B,OAAOygB,EAAO,GAEzBzlC,EAAQ++C,aAAa,CAAChD,OAAQA,GAClC,GACJ,EAEA4iB,cAAe,SAAU3+D,GACjBj1B,KAAKs1B,SAAS9yB,IAAIyyB,KAClBj1B,KAAKs1B,SAASpkB,OAAO+jB,GACrBj1B,KAAKuzF,iBAAiBt+D,GAE9B,EAEAs+D,iBAAkB,SAAUt+D,GACxBj1B,KAAKszF,gBACLtzF,KAAKuL,QAAQ,iBAAkB0pB,GAC/Bj1B,KAAKs1B,SAASrzB,QAAUjC,KAAKwxD,SACjC,EAEAgiC,wBAAyB,WACrB,IAAIl6D,EAAU,4BACV,GAAExI,IAAIwI,EAAS,iBACft5B,KAAKmiB,UAAU5W,QAAQ,uBAEvB,GAAEulB,IAAIwI,EAAS,aACft5B,KAAKs1B,SAASN,OACdh1B,KAAKmiB,UAAU5W,QAAQ,kBAE/B,EAEAkwB,aAAc,WACVz7B,KAAKkwC,cAAcxhB,MACvB,IAGJ,aAAmB,oBAAwB,CACvCqC,UAAW,eACXE,OAAQ,CACJ,oBAAqB,SACrB,gCAAiC,oBACjC,wBAAyB,mBACzB,yBAA0B,mBAG9B1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKm9B,aACLn9B,KAAK6zF,kBACL7zF,KAAK8zF,uBACL9zF,KAAK8zB,MAAMwB,SAASjS,GAAG,MAAOrjB,KAAK+zF,eAAgB/zF,MACnDA,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAKuzF,iBAAkBvzF,MACvDA,KAAK8zB,MAAMwB,SAASjS,GAAG,sBAAuBrjB,KAAKg0F,kBAAmBh0F,MACtEA,KAAK8zB,MAAMzQ,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MAC9CA,KAAK8zB,MAAMzQ,GAAG,iBAAkBrjB,KAAK8zF,qBAAsB9zF,MAC3DA,KAAK8zB,MAAM3R,UAAUkB,GAAG,sBAAuBrjB,KAAKi0F,wBAAyBj0F,MAC7EA,KAAK8zB,MAAM3R,UAAUkB,GAAG,iBAAkBrjB,KAAKk0F,wBAAyBl0F,MACxEA,KAAKN,KAAK2jB,GAAG,kBAAmBrjB,KAAK24C,eAAgB34C,KACzD,EAEA24C,eAAgB,WACZ,IAAIE,EAAW74C,KAAKN,KAAK8C,IAAI,YAC7BxC,KAAKD,IAAIgN,YAAY,UAAW8rC,GAChC74C,KAAKrC,EAAE,UAAUoP,YAAY,mBAAoB8rC,GACjD74C,KAAKrC,EAAE,UAAUoP,YAAY,qBAAsB8rC,GACnD74C,KAAKrC,EAAE,mBAAmB2T,OAAOunC,GACjC74C,KAAKytB,OAAOA,OAAOosC,eACvB,EAEAg6B,gBAAiB,WACb,IAAIM,EAAUC,EAAep0F,KAAK8zB,MAAMtR,SAAS4xE,aAC5B,YAAjBA,EACAD,EAAW,WACa,QAAjBC,EACPD,EAAW,eACa,OAAjBC,IACPD,EAAW,iBAEfn0F,KAAKrC,EAAE,eAAe6B,KAAK,WAAY20F,GAAU5iF,OAAoB,aAAb4iF,EAC5D,EAEAh3D,WAAY,WACRn9B,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,QAC9C,EAEAsxF,qBAAsB,WAClB,IAAIz3E,EAAUrc,KAAK8zB,MAAMtxB,IAAI,WAC7BxC,KAAKrC,EAAE,wBAAwB2E,KAAK,IAAI+Z,EAAQloB,OAAO,IAAIkoB,EAAQ9Z,IAAI,IAC3E,EAEAwxF,eAAgB,SAAU9+D,GACXj1B,KAAKkvB,SAAS+F,EAAQzyB,IAAI,OAAQxC,KAAK40B,UAAW,CAACd,MAAOmB,IACrEj1B,KAAKg0F,kBAAkB/+D,EAC3B,EAEAs+D,iBAAkB,SAAUt+D,GACxBj1B,KAAKovB,YAAY6F,EAAQzyB,IAAI,QAC7BxC,KAAKytB,OAAOA,OAAOosC,eACvB,EAEAm6B,kBAAmB,SAAU/+D,GACzB,IAAIpH,EAAO7tB,KAAKivB,MAAMgG,EAAQzyB,IAAI,QAClC,IAAKqrB,EAAM,OACX,IAAIwmE,EAAkB,mBAClBC,EAAiBt0F,KAAK8zB,MAAMtR,SAC5B+xE,EAA0D,YAAhCD,EAAeF,aACzCA,EAA+C,QAAhCE,EAAeF,cACzBG,GAA4D,QAAjCF,EAAgBD,aAChDI,EAAa,GAAUvgG,eAAeghC,EAAQzyB,IAAI,YAAc,EAEpEqrB,EAAK9tB,IAAIgN,YAAY,YAAaynF,IAAeJ,GAActpF,SAC/D,IAAI4vD,EAAQ16D,KAAK8zB,MAAMwB,SAASlxB,QAAQ6wB,GAQxC,OAPc,IAAVylC,EACA16D,KAAKrC,EAAE,eAAey9D,MAAMvtC,EAAK9tB,KAEjCC,KAAKrC,EAAE,mBAAmBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,KAEvD8tB,EAAK9tB,IAAIuR,OAAOtR,KAAKN,KAAK8C,IAAI,aAC9BxC,KAAKytB,OAAOA,OAAOosC,gBACZhsC,CACX,EAEA4mE,iBAAkB,WACdz0F,KAAKrC,EAAE,eAAe6B,KAAK,WAAY,YAAYU,YAAY,SACnE,EAEAw0F,kBAAmB,SAAU7pF,GACzBA,EAAGsmB,kBACHnxB,KAAK8zB,MAAM2H,cACf,EAEAw4D,wBAAyB,WACrBj0F,KAAK6zF,kBACL,IAAIQ,EAAkB,mBAClBC,EAAiBt0F,KAAK8zB,MAAMtR,SAC5B+xE,EAA0D,YAAhCD,EAAeF,aACzCA,EAA+C,QAAhCE,EAAeF,cACzBG,GAA4D,QAAjCF,EAAgBD,aACpD,GAAEt0F,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5B,IAAI2mE,EAAa,GAAUvgG,eAAe45B,EAAKiG,MAAMtxB,IAAI,YAAc,EACvEqrB,EAAK9tB,IAAIgN,YAAY,YAAaynF,IAAeJ,EACrD,IACAp0F,KAAKytB,OAAOA,OAAOosC,eACvB,EAEAq6B,wBAAyB,WACrB,GAAEp0F,KAAKE,KAAK2tB,UAAU,SAAUE,GAAQA,EAAK9tB,IAAI+K,QAAU,IAC3D9K,KAAK8zB,MAAMwB,SAASx1B,MAAMqT,IAAQnT,KAAKg0F,kBAAkB7gF,EAAE,IAC3DnT,KAAKytB,OAAOA,OAAOosC,eACvB,IAGJ,kBAAwB,oBAAwB,CAC5CrsC,SAAU,GAAUmnE,YACpB//D,UAAW,wBAEXpG,aAAc,WACVxuB,KAAKN,KAAKqgB,IAAI,WAAY/f,KAAK8zB,MAAMtR,SAASq2B,SAClD,EAEAnZ,OAAQ,WACJ,IAAImZ,GAAY74C,KAAKN,KAAK8C,IAAI,YAC9BxC,KAAKN,KAAKqgB,IAAI,WAAY84B,GAC1B74C,KAAK8zB,MAAM3R,UAAUY,KAAK,WAAY81B,EAC1C,IAGJ,iBAAuB,oBAAwB,CAC3CrrB,SAAU,GAAUonE,WACpBhgE,UAAW,uBAEXpG,aAAc,WACVxuB,KAAKN,KAAKqgB,IAAI,YAAY,EAC9B,EAEA2f,OAAQ,SAAU70B,GACdA,EAAGsmB,kBACHnxB,KAAKN,KAAKqgB,IAAI,YAAa/f,KAAKN,KAAK8C,IAAI,YAC7C,IAGJ,qBAA2B,oBAAwB,CAC/CuuB,UAAW,kCACXvD,SAAU,GAAU8mE,eACpBxmE,YAAa,iBACbgP,YAAa,GAAU7lC,aAAagB,eAEpCg5B,OAAQ,CACJ,kDAAmD,aACnD,mBAAoB,gBACpB,oBAAqB,cACrB,oBAAqB,SAGzB1C,YAAa,WACTvuB,KAAKmiB,UAAYniB,KAAK8zB,MAAM3R,UACjBniB,KAAK8zB,MAAMtxB,IAAI,QACtBxC,KAAK8zB,MAAM2/D,cACXzzF,KAAKrC,EAAE,qBAAqB6B,KAAK,YAAY,GAC7CQ,KAAKrC,EAAE,eAAewC,SAAS,WAEnCH,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAK+8B,UAAW/8B,KAC7C,EAEAgvB,OAAQ,WACJhvB,KAAKrC,EAAE,qBAAqB4P,IAAIvN,KAAK8zB,MAAMtxB,IAAI,SAC/CxC,KAAKrC,EAAE,uBAAuBwC,SAAS,UACvCH,KAAKrC,EAAE,kDACFqC,KAAK8zB,MAAMtR,SAAqB,aAAE,KAAKjY,KAAK,WAAW,GAC5DvK,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,WACH2R,YAAYsG,kBAChB,EACArqC,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OAEjC,EAEA60F,WAAY,SAAUhqF,GAClB7K,KAAK8zB,MAAM3R,UAAUY,KAAK,eAAgBlY,EAAG4C,OAAO1C,MACxD,EAEA+pF,aAAc,SAAU/1F,GACpB,OAAKA,EAGDiB,KAAK8zB,MAAM+1B,WAAWrnD,IAAIzD,GACnB,aAAiB,kDAD5B,EAFW,aAAiB,4CAKhC,EAEAg2F,cAAe,WACX,IAAIpB,EAAW3zF,KAAKrC,EAAE,qBAAqB4P,MAC3C,GAAIomF,IAAa3zF,KAAK8zB,MAAMtxB,IAAI,QAAS,CACrC,IAAIwyF,EAAah1F,KAAK80F,aAAanB,GACnC,GAAIqB,EAEA,YADAh1F,KAAKrC,EAAE,uBAAuB2E,KAAK0yF,GAAY90F,YAAY,UAG3DF,KAAK8zB,MAAM4/D,YAAYC,EAE/B,CACA3zF,KAAKkL,OACT,EAEAw1E,YAAa,WACT,IAAI3hF,EAAOiB,KAAK8zB,MAAMtxB,IAAI,QAC1B,GAAMuJ,QAAQiC,IAAI,aAAiB,iBAAkB,aAAiB,wBAAyB,CAACjP,IAAQ,KAAM,CAAEoP,eAAgB,aAAiB,YAC5Ioa,MAAMrgB,IACHA,GAAUlI,KAAK8zB,MAAM4sD,aAAa,GAE9C,EAEA3xD,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEA+8B,UAAW,WACP/8B,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAKkR,OAAO5I,KAAKtI,OACrD,IAGJ,UAAgBmhB,SAASm6C,WAAWtxD,OAAO,CACvC8pB,MAAO,SAEPnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKqjB,GAAG,YAAarjB,KAAKg1B,KAAMh1B,MAChCA,KAAK0sB,QAAQrJ,GAAG,kBAAmBrjB,KAAKgvB,OAAQhvB,KACpD,EAEA+0B,WAAY,SAAUlgB,EAAG8+C,GACrB,OAAI9+C,EAAE4+E,cAAgB9/B,EAAE8/B,YACb5+E,EAAErS,IAAI,MAAQmxD,EAAEnxD,IAAI,OAAS,EAAI,EAErCqS,EAAE4+E,YAAc,GAAK,CAChC,EAEAhE,WAAY,WACR,OAAOzvF,KAAK2W,QAAO,SAAUu9D,GAAS,OAAQA,EAAMuf,WAAa,GACrE,EAEAwB,aAAc,SAAU/gB,GACpBA,EAAMghB,SAAW,IAAI,oBAAwB,CAACphE,MAAOogD,GACzD,EAEAllD,OAAQ,WACJhvB,KAAKqjB,GAAG,MAAOrjB,KAAKi1F,aAAcj1F,MAClCA,KAAKw5D,OAAOnnD,SAAS6hE,IACjBA,EAAMghB,SAAW,IAAI,oBAAwB,CAACphE,MAAOogD,GAAO,GAEpE,IAGJ,YAAkB,uBAA2B,CACzCvyD,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK0sB,QAAQrJ,GAAG,qBAAsBrjB,KAAKm1F,kBAAmBn1F,MAC9DA,KAAKo1F,YAAc,GACnBp1F,KAAKqjB,GAAG,MAAO,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,QACtDA,KAAKqjB,GAAG,SAAU,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,UAC7D,EAEAs1F,cAAe,SAAUzrC,GACrB7pD,KAAKo1F,YAAYh0F,KAAKyoD,EAC1B,EAEAwrC,oBAAqB,SAAUr0E,EAAOiU,GAClC,GAAEn1B,KAAKE,KAAKo1F,aAAa,SAAUvrC,GAC/BA,EAAW5xB,OAAOhD,EAASjU,EAC/B,GACJ,EAEA43C,aAAc,SAAUxhD,GACC,iBAAVA,IACPA,EAAQ,CAACc,IAAKd,IAElB,IAAI6d,EAAUj1B,KAAKwC,IAAI4U,EAAMc,KAW7B,OAVI+c,GACI7d,EAAMk0B,SACNl0B,EAAMpc,MAAQoc,EAAMk0B,cACbl0B,EAAMk0B,OACbrW,EAAQ9vB,aAAe,GAAOjB,eAAekT,EAAMpc,QAEvDi6B,EAAQlV,IAAI3I,IAEZ6d,EAAUj1B,KAAK+wC,OAAO35B,EAAO,CAACsV,QAAS1sB,KAAK0sB,UAEzCuI,CACX,EAEA4wC,aAAc,SAAU3tD,EAAK8P,EAAUnN,GACnC,IAAIkb,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGo4C,WACrDn7D,EAAE,OAAQ,CAAC+E,IAAKA,IACrBlY,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAAUnN,EAC1C,EAEAqjE,eAAgB,SAAUhmE,EAAK8P,EAAUnN,GACrC,IAAIkb,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAGo4C,WACvDn7D,EAAE,OAAQ,CAAC+E,IAAKA,IACrBlY,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAAUnN,EAC1C,EAEAs6E,kBAAmB,WACf,GAAEr1F,KAAK,GAAEuX,MAAMrX,KAAKw5D,SAAS,SAAUvkC,GACnCA,EAAQu8B,SACZ,IACAxxD,KAAK0sB,QAAQnhB,QAAQ,oBACzB,EAEAiqE,eAAgB,SAAUpf,EAAUl+C,GAClBlY,KAAK44D,aAAa1gD,GACxBs9D,eAAepf,EAC3B,IAGJ,aAAmBj1C,SAASC,MAAMpX,OAAO,CACrC2X,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK0S,KAAO,CAAC,EACb1S,KAAKs1B,SAAWt1B,KAAK0sB,QAAQ4I,SAC7Bt1B,KAAKs1B,SAASjS,GAAG,mBAAoBrjB,KAAK+zF,eAAgB/zF,MAC1DA,KAAKs1B,SAASjS,GAAG,wBAAyBrjB,KAAKuzF,iBAAkBvzF,KACrE,EAEAiC,OAAQ,WACJ,OAAOkU,OAAOC,KAAKpW,KAAK0S,MAAMzQ,MAClC,EAEAqvE,UAAW,SAAUp5D,GACjB,OAAOlY,KAAK0S,KAAK6iF,eAAer9E,EACpC,EAEAq7E,iBAAkB,SAAUr7E,UACjBlY,KAAK0S,KAAKwF,EACrB,EAEA67E,eAAgB,SAAU38E,GACtBpX,KAAK0S,KAAK0E,EAAMc,KAAOd,CAC3B,EAEAo+E,gBAAiB,WACbx1F,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAK81D,iBAC3C91D,KAAK81D,gBAAkB91D,KAAK0sB,QAAQK,WAAW2J,WAC3C12B,KAAKy1F,aAAantF,KAAKtI,MACvB,GAAQk2B,GAAGo4C,SAAU,KAAM,MAAO,KAAMtuE,KAAK0sB,QAAQlqB,IAAI,OAEjE,EAEAkzF,cAAe,WACX,IAAI3/D,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGo4C,WAC9DtuE,KAAK0sB,QAAQiK,WAAWZ,EAAI/1B,KAAKy1F,aAAantF,KAAKtI,MACvD,EAEAy1F,aAAc,SAAU1/D,GACpB,IAAIyO,EAAQ,GAAEzO,GAAIl2B,KAAK,WAAW,GAAQq2B,GAAGo4C,cAEzCiD,EADM/sC,EAAM,GAAGhyB,QAAQwD,cACT4R,WAAW,SAiB7B,OAhBA4c,EAAM3kC,KAAK,QAAQC,MAAK,CAAC4C,EAAKxB,KAC1B,IAAIgX,EAAMhX,EAAKy4B,aAAa,OACxBwpB,EAAW,GAAQC,mBAAmBlrC,GACtCylC,EAAS,GAAQW,iBAAiBpmC,GAClCd,EAAQ,CAACc,OACT+c,EAAUj1B,KAAKs1B,SAAS9yB,IAAI0V,GAChCirC,IAAa/rC,EAAM+rC,UAAW,GAC7BxF,IAAWzlC,IAASd,EAAMumC,QAAS,GAChC4zB,EACAvxE,KAAKs1B,SAAS/pB,QAAQ,mBAAoB6L,IAE1CpX,KAAKs1B,SAAS/pB,QAAQ,wBAAyB2M,GAC/C+c,GAAWA,EAAQ1pB,QAAQ,wBAAyB0pB,IAExDA,GAAWA,EAAQlV,IAAI,UAAWwxD,EAAQ,KAEvC,CACX,IAGJ,UAAgB,uBAA2B,CACvC5vD,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK21F,eAAiB32F,EAAQ22F,gBAAkB,EAChD31F,KAAKgxE,OAAShxE,KAAK0sB,QAAQskD,OAC3BhxE,KAAKs1B,SAAWt1B,KAAK0sB,QAAQ4I,SAC7Bt1B,KAAKs1B,SAASjS,GAAG,gBAAiBrjB,KAAK+zF,eAAgB/zF,MACvDA,KAAKs1B,SAASjS,GAAG,mBAAoBrjB,KAAK2yF,iBAAkB3yF,MAC5DA,KAAKs1B,SAASjS,GAAG,qBAAsBrjB,KAAKuzF,iBAAkBvzF,KAClE,EAEAi4B,OAAQ,SAAUhD,EAASjU,GACRiU,EAAQzyB,IAAI,cAAgByyB,EAAQzyB,IAAI,SAE9CxC,KAAKwC,IAAIyyB,GAGO,WAAVjU,GACPiU,EAAQ1pB,QAAQ,mBAAoB0pB,IAHpCj1B,KAAK41F,IAAI3gE,GACTA,EAAQ1pB,QAAQ,gBAAiB0pB,IAI9Bj1B,KAAKwC,IAAIyyB,KAChBj1B,KAAKkR,OAAO+jB,GACZA,EAAQ1pB,QAAQ,qBAAsB0pB,GAE9C,EAEA8+D,eAAgB,SAAU9+D,GACtB,IAAKA,EAAQzyB,IAAI,aACb,OACJ,IAAIwuE,EAAS/7C,EAAQzyB,IAAI,UACpBwuE,EAAO/uE,OAGR,GAAEnC,KAAKkxE,EAAQ,GAAE1oE,KAAKtI,KAAK61F,kBAAmB71F,KAAMi1B,IAFpDj1B,KAAK61F,kBAAkB5gE,EAAS,GAAUx+B,iBAIlD,EAEAk8F,iBAAkB,SAAU19D,GACxB,IAAIqE,EAAUrE,EAAQqE,QAClBw8D,EAAgB,GAAEhlE,IAAIwI,EAAS,SAC/By8D,EAAoB,GAAEjlE,IAAIwI,EAAS,aACnC08D,EAAiB,GAAEllE,IAAIwI,EAAS,UACpC,GAAIy8D,GAAqBD,GAAiBE,EAAgB,CACtD,IAAIhlB,EACA/7C,EAAQzyB,IAAI,cACZwuE,EAAS,GAAE35D,MAAM4d,EAAQzyB,IAAI,WACxBwuE,EAAO/uE,QACR+uE,EAAO5vE,KAAK,GAAU3K,mBAEnBw+B,EAAQzyB,IAAI,WACnBwuE,EAAS,IAGb,IAAIilB,EAAmBj2F,KAAKgxE,OAAOr6D,QAAO,SAAUu9D,GAChD,OAAQ,GAAEr5C,SAASm2C,EAAQkD,EAAM1xE,IAAI,MACzC,IACA,GAAE1C,KAAKm2F,GAAkB,SAAU/hB,GAC/BA,EAAM0f,cAAc3+D,EACxB,IACA,GAAEn1B,KAAKkxE,EAAQ,GAAE1oE,KAAKtI,KAAK61F,kBAAmB71F,KAAMi1B,IACpDA,EAAQ1pB,QAAQ,gBACpB,CACJ,EAEAgoF,iBAAkB,SAAUt+D,GACxB,GAAEn1B,KAAKE,KAAKgxE,OAAOr6D,UAAU,SAAUu9D,GACnCA,EAAM0f,cAAc3+D,EACxB,GACJ,EAEAihE,SAAU,SAAUn3F,GAChB,IAAIm1E,EAAQl0E,KAAKgxE,OAAOxuE,IAAIzD,GAC5B,GAAIm1E,EACA,OAAOA,EACX,IAAI98D,EAAQ,CAACxN,GAAI7K,GAMjB,OALIA,IAAS,GAAUtI,iBACnB2gB,EAAMrY,KAAO,sCACNA,IAAS,GAAUrI,sBAC1B0gB,EAAMrY,KAAO,0CAEViB,KAAKgxE,OAAOjgC,OAAO35B,EAAO,CAACsV,QAAS1sB,KAAK0sB,SACpD,EAEAmpE,kBAAmB,SAAU5gE,EAASl2B,GACtBiB,KAAKk2F,SAASn3F,GACpBu2B,SAASsgE,IAAI3gE,EACvB,EAEAugE,gBAAiB,WACbx1F,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAK81D,iBAC3C91D,KAAK81D,gBAAkB91D,KAAK0sB,QAAQK,WAAW2J,WAC3C12B,KAAKm2F,WAAW7tF,KAAKtI,MACrB,GAAQk2B,GAAG+9C,OAAQ,KAAM,MAAO,KAAMj0E,KAAK0sB,QAAQlqB,IAAI,OAE/D,EAEA4zF,eAAgB,SAAUp3F,EAASq3F,EAA4BC,GAC3Dt3F,EAAUA,GAAW,CAAC,EACtB,IAAIu3F,EAAgB,CAACtgE,MAAO,GAAQC,GAAGqsB,iBAClCvjD,EAAQo8D,QACLp8D,EAAQg6B,MACRu9D,EAAcv9D,MAAQh6B,EAAQg6B,MACzBh5B,KAAK0sB,QAAQk9B,qBAAuB0sC,IACzCC,EAAcv9D,MAA0C,IAAlCh5B,KAAK0sB,QAAQk9B,4BAEpC5qD,EAAa,MACpB,IAAI+2B,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,QAASojF,GAAejgE,MAAM,IAAI,GAAQC,IAAIv3B,GAASw3B,SACrFx2B,KAAK0sB,QAAQm/B,SAAS91B,GAAK0d,IACvBzzC,KAAKw2F,SAAS/iD,EAAU8iD,EAAcv9D,MAAOq9D,EAA4BC,EAAet3F,EAAQy3F,kBAAkB,GAE1H,EAEAC,wBAAyB,SAAU3gE,EAAI4gE,EAAoBL,EAAeM,GACtE,GAAEA,GAAsB92F,MAAK,CAAC4C,EAAKxB,KAC/BlB,KAAK62F,iBAAiB,KAAM,KAAM31F,EAAK41F,aAAcR,EAAc,GAE3E,EAEA9/B,kBAAmB,SAAUzgC,EAAI4gE,EAAoBL,EAAeM,GAChE,GAAE7gE,GAAIl2B,KAAK,gBAAgBC,MAAK,CAAC4C,EAAKxB,KAClClB,KAAK62F,iBAAiB9gE,EAAI4gE,EAAoBz1F,EAAMo1F,EAAeM,EAAqB,GAEhG,EAEAC,iBAAkB,SAAU9gE,EAAI4gE,EAAoBz1F,EAAMo1F,EAAeM,GACrE,IAAK,GAAE11F,GAAMe,OACT,OAEC8zB,IACD70B,EAAO,GAAE,GAAE61F,SAAS71F,IAAOrB,KAAK,gBAAgB,IACpD,IAAI+N,EAAQ,GAAE1M,GACVgX,EAAMtK,EAAMpO,KAAK,OAAQw3F,GAAQ,EAYrC,GAXIJ,GACA,GAAEA,GAAsB92F,MAAK,CAAC4C,EAAKu0F,KAC3BA,EAAKC,0BAA0B3hF,SAAS2C,IAAS++E,EAAKC,4BAA+B,GAAEh2F,GAAM1B,KAAK,OAAU,IAAM,GAAE0B,GAAM1B,KAAK,UAC3HoO,EAAMpO,KAAK,UAAY,GAAQ02B,GAAGy4C,YAAcsoB,EAAKC,0BAA0B3hF,SAAS,GAAQ2gB,GAAGy4C,cACnG3uE,KAAK0sB,QAAQlF,0BAA0B2vE,8BAA8BF,EAAKC,0BAEjF,IAGLh/E,IAAQlY,KAAK0sB,QAAQlqB,IAAI,SACzBw0F,GAAQ,GACRppF,EAAMpO,KAAK,UAAY,GAAQ02B,GAAGkhE,0BAClC,OAAO,EACX,IAoBIxxE,EApBAyxE,EAAiBzpF,EAAM+f,SAAS,kBAAoB,GAAQuI,GAAGqsB,gBAAkB,MACjF1+C,EAAO+J,EAAMpO,KAAK,QAClB42D,EAAWxoD,EAAM+f,SAAS,YAC1B2pE,EAAkB1pF,EAAM+f,SAAS,kBAAoB,GAAQuI,GAAGy4C,WAAa,MAC7E4oB,EAAgB1zF,IAAS,GAAQqyB,GAAGy4C,YAAkH,cAApG2oB,EAAgB3pE,SAAS,YAAc,GAAQuI,GAAGy4C,WAAa,MAAMhhD,SAAS,WAAWrrB,OAC3Ik1F,EAAaD,GAAgBD,EAAgB3pE,SAAS,YAAc,GAAQuI,GAAGy4C,WAAa,MAAMhhD,SAAS,UAAUrrB,OACrHw5E,EAAiBj4E,IAAS,GAAQqyB,GAAGy4C,YAAc6oB,GAAcD,EACjEh4E,EAAY1b,IAAS,GAAQqyB,GAAGuhE,sBAChCxiE,GAAW+hE,GAASh3F,KAAKs1B,SAASsjC,aAAa,CAAC1gD,IAAKA,EAAK+4D,WAAY6K,EAAetF,aAAcghB,EAAY9P,eAAgB6P,EAAc5lB,WAAqC,YAAzB/jE,EAAMpO,KAAK,YACpKtL,EAAO8iG,EAAQh3F,KAAK0sB,QAAQgH,MAAMiB,eAAiB30B,KAAK0sB,QAAQgH,MAAMgC,QAAQT,EAAS1V,GAAa,aAAa,GACjHrI,EAAUmgF,EAAe1pE,SAAS,gBAAgBA,SAAS,WAC3D+pE,EAAe9pF,EAAM+f,SAAS,kBAAoB,GAAQuI,GAAG4gC,WAAa,MAAMnpC,SAAS,QACzFgqE,EAAmBN,EAAe1pE,SAAS,UAC3CiqE,EAAiBt7F,KAAKuZ,MAAM9T,OAAO6L,EAAMpO,KAAK,UAAU,KACxDq4F,EAAgBF,EAAiBn4F,KAAK,SACtCs4F,EAAqBT,EAAe1pE,SAAS,aAAanuB,KAAK,MAC/Du4F,EAAqBV,EAAe1pE,SAAS,aAAanuB,KAAK,MAC/Dw4F,EAAoBj2F,OAAO41F,EAAiBn4F,KAAK,WAAa,EAC9Dy4F,EAAa/gF,EAAQrX,KAAK,UAAUoC,OACpCi2F,EAAyBtqF,EAAM+f,SAAS,kBAAoB,GAAQuI,GAAGk9B,QAAU,MAAMzlC,SAAS,WAAWnuB,KAAK,WAC3GR,EAAU,CAACm5F,YAAY,GAChC,KAAIjhF,EAAQyW,SAAS,aAAa1rB,QAC3BiV,EAAQyW,SAAS,aAAanuB,KAAK,OACnCtL,EAAKkkG,sBAAsB7iF,SAAS2B,EAAQyW,SAAS,aAAanuB,KAAK,QAF9E,CA2DA,GAtDCu2B,GAAiC,YAAzBnoB,EAAMpO,KAAK,WAA6BQ,KAAK0sB,QAAQlF,0BAA0B6wE,yBAAyB,CAC7GnB,0BAA2B,GAAEh2F,GAAM1B,KAAK,OAAU,IAAM,GAAE0B,GAAM1B,KAAK,QACrEs3F,aAAc51F,EAAKqR,aAElBre,EAAK0gC,UAAUqO,UAAYg1D,GAAa14E,GAAavf,KAAK0sB,QAAQ4mC,SACnEp/D,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,cAErEhnB,EAAMpO,KAAK,WAAsC,MAAzBoO,EAAMpO,KAAK,YACnCtL,EAAK6rB,IAAI,SAAUnS,EAAMpO,KAAK,WAE9B+f,GAAavf,KAAK0sB,QAAQ4mC,QAC1Bp/D,EAAK6rB,IAAI,YAAa63E,GACtB1jG,EAAK6rB,IAAI,UAAU,GACnB7rB,EAAK0gC,UAAU0jE,uBAEdtB,IACGppF,EAAMpO,KAAK,SAAkC,MAAvBoO,EAAMpO,KAAK,SAC7BoO,EAAMpO,KAAK,QAAW0J,KAAKC,MAAQ,IACnCjV,EAAK6rB,IAAI,SAAS,GAElB7rB,EAAK6rB,IAAI,QAASnS,EAAMpO,KAAK,SACjCQ,KAAK0sB,QAAQ8kD,cAAc+mB,gBAAgBtjE,EAAQzyB,IAAI,OAAQoL,EAAMpO,KAAK,SACtEy1B,EAAQslD,oBACRtlD,EAAQslD,mBAAmBkE,uBAE/BvqF,EAAK6rB,IAAI,SAAS,IAGG,aAAzBnS,EAAMpO,KAAK,UACXtL,EAAK6rB,IAAI,YAAY,GACS,WAAzBnS,EAAMpO,KAAK,WAA2Bw3F,GAC3C9iG,EAAK6rB,IAAI,YAAY,GACI,YAAzBnS,EAAMpO,KAAK,WACXy1B,GAAWA,EAAQ0gD,cAAgB1gD,EAAQ0gD,aAAalnD,aAAe,kBAAsB,mBAAuB,QAAS,CAAC0K,WAAO/d,IACrIlnB,EAAKsO,IAAI,YAAc,kBAAsB,mBAAuB,QAAS,CAAC62B,cAAe,GAAIF,WAAO/d,IACxGlnB,EAAK6rB,IAAI,UAAU,GACnB7rB,EAAK6rB,IAAI,eAAgB,GACzB/f,KAAK0sB,QAAQlF,0BAA0B2vE,8BAA8B,GAAEj2F,GAAM1B,KAAK,OAAU,IAAM,GAAE0B,GAAM1B,KAAK,SAC/GQ,KAAK0sB,QAAQ8kD,cAAckE,qBAAqBzgD,EAAQzyB,IAAI,QAAQ,GACpE,2CACA,4BACAyyB,GAAWA,EAAQlV,IAAI,gBAAgB,GACnC+7D,IACA7mD,GAAWA,EAAQlV,IAAI,aAAa,GACpCkV,GAAWA,EAAQlV,IAAI,SAAS,GAChCkV,GAAWA,EAAQlV,IAAI,WAAW,GAClC/f,KAAK0sB,QAAQpF,cAAc6sD,iBAAiBj8D,KAIhD+c,GAAWA,EAAQlV,IAAI,gBAAgB,GACvCu3E,EAAgBr1F,QAChBgzB,EAAQ+9C,cAAgB/9C,EAAQ+9C,aAAaU,iBAAiB4jB,EAAgB3pE,SAAS,eAAe,GAAQuI,GAAGy4C,iBAEjH+oB,EAAaz1F,OAAQ,CACrB,IAAIu2F,EAAkBd,EAAa/pE,SAAS,WACxCwjD,EAAWqnB,EAAgBh5F,KAAK,QAChCy3D,EAAauhC,EAAgB7qE,SAAS,WAAWnuB,KAAK,MAC1DtL,EAAKukG,uBAAuBtnB,EAAUla,GAAY,KAC9C,GAAI,qBAA0B,CAC1B,IAAItjB,EAAS,GAAQkK,kBAAkBszB,KAAc,GAAQtzB,kBAAkB,yBAA6B,qBAAuB,cAAgB,OACnJ3pD,EAAKwkG,WAAW,CAACzhC,WAAYA,EAAYtjB,OAAQA,IACjDz/C,EAAKq/B,SAASq2D,oBAAoB,CAC9Bz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B0U,QAAS,aAAiB,2CAElC,MACIhjB,EAAKykG,iBAAiBxnB,EAAUla,EACpC,GAER,CACA/iE,EAAK6rB,IAAI,oBAAqB+3E,GAC9B5jG,EAAK6rB,IAAI,oBAAqBg4E,GAC9B7jG,EAAK6rB,IAAI,gBAAiB83E,GAC1B3jG,EAAK6rB,IAAI,YAAalc,GACjBqT,EAAQjV,SACT/N,EAAK6rB,IAAI,YAAa63E,GAChB71F,OAAO+1F,IAAuB/1F,OAAOg2F,IAAuBh2F,OAAO81F,IACjE3jG,EAAK0gC,UAAUqO,SAAY/uC,EAAKsO,IAAI,gBACxCtO,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aAEzE1gC,EAAK0gC,UAAUgkE,mBAEf9c,IACI6a,IAAuBL,EACnBpiG,EAAKs1D,mBAAqB0uC,GAC1BhkG,EAAKqX,QAAQ,wBAEjBrX,EAAKs1D,mBAAqB0uC,GAE9BvB,GAAsBziG,EAAK0gC,WAAa1gC,EAAK0gC,UAAUqO,UAAYg1D,GACnE/jG,EAAKqX,QAAQ,qBAAsBorF,EAAmB,KAE1DqB,IAAsBh5F,EAAQ65F,WAAY,GAC1C75F,EAAQ85F,MAAQ5hF,EAAQyW,SAAS,QACjCzW,EAAQjV,SAAW2jB,EAAM5lB,KAAK0sB,QAAQgH,MAAMC,mBAAmBzc,EAASlY,IAClEugB,IAAcvf,KAAK0sB,QAAQ4mC,QAC7Bp/D,EAAK6kG,gBAAgBv8C,QACrBtoD,EAAK6rB,IAAI,SAAU,GACnB7rB,EAAK6rB,IAAI,eAAgBi4E,IAEzBpyE,KACKA,EAAIpjB,IAAI,cAAgBm1F,EAAiBn4F,KAAK,SAAW,IAAMomB,EAAIozE,eAAiBrB,EAAiBn4F,KAAK,SAAWomB,EAAIpjB,IAAI,cAAgBm1F,EAAiBn4F,KAAK,SAAWomB,EAAIpjB,IAAI,uBACvLojB,EAAI7F,IAAI,aAAa,GACpBk4E,GAAa14E,GAAavf,KAAK0sB,QAAQ4mC,QACpC1tC,EAAIozE,cAAgBpzE,EAAIpjB,IAAI,cAAgBu1F,EAC5CnyE,EAAI7F,IAAI,QAAS,GAAU3pB,eACtBwvB,EAAIozE,cAAgBpzE,EAAIpjB,IAAI,cAAgBs1F,GACjDlyE,EAAI7F,IAAI,QAAS,GAAU5pB,eAC/B6J,KAAK0sB,QAAQ6G,SAASqiE,IAAIhwE,IACrB1xB,EAAK+kG,cAAiBrzE,EAAIpjB,IAAI,aAAetO,EAAK+kG,aAAaz2F,IAAI,eAAmBtO,EAAK+kG,gBAC5F/kG,EAAK+kG,aAAerzE,EACpB1xB,EAAK0gC,UAAUC,kBAAkBjP,KAGzC1xB,EAAK6rB,IAAI,mBAAoB6F,EAAIpjB,IAAI,eAErC4zD,EAASn0D,OACTgzB,GAAWA,EAAQugD,eAAepf,EAAS,IAE3CnhC,GAAWA,EAAQlV,IAAI,2BAA2B,GAEtD,0CA3HA,CA4HJ,EAEAy2E,SAAU,SAAUzgE,EAAI4gE,EAAoBN,EAA4BC,EAAe4C,GACnF,IAAIC,EAAiBp3F,OAAO,GAAEg0B,GAAIpI,SAAS,gBAAgB,GAAQuI,GAAGqsB,qBAAqB/iD,KAAK,UAC5F45F,EAAiB,GAAErjE,GAAIl2B,KAAK,oBAAoB,GAAQq2B,GAAGK,SAAS5I,SAAS,QAAQrrB,OACzFtC,KAAK0sB,QAAQk9B,mBAAqBttD,KAAKqiE,MAAMw6B,EAAe,KAC5D,IAAIE,EAAmB,GAAEtjE,GAAIl2B,KAAK,YAC9By5F,EAA4B,GAAEvjE,GAAIl2B,KAAK,wCAAwCqyB,QAAQvE,SAAS,kBAAoB,GAAQuI,GAAGk9B,QAAU,MAAMzlC,SAAS,WAAWnuB,KAAK,WACxK+5F,EAAkB,GAAExjE,GAAIl2B,KAAK,mCAAmCqyB,QAAQvE,SAAS,kBAAkB,GAAQuI,GAAGk9B,aAAazlC,SAAS,WAAWnuB,KAAK,WACnJm3F,IACD0C,EAAiBp3F,OAAUjC,KAAKq5F,iBAAmBA,EAAiB/2F,OAAWtC,KAAKw5F,sBAAuB,IAC1G,GAAEpuF,YAAYkuF,IAA8Bt5F,KAAK0sB,QAAQ4mC,OAAStzD,KAAK0sB,QAAQ4mC,MAAMC,oBAAsB+lC,GAC5Gt5F,KAAK0sB,QAAQwmC,0BAAyB,GACtCyjC,EACI32F,KAAK0sB,QAAQ88B,mBAAqB+vC,GAClCv5F,KAAK0sB,QAAQwmC,2BAEjBlzD,KAAK0sB,QAAQ88B,mBAAqB+vC,EAEtCv5F,KAAK0sB,QAAQ3M,IAAI,YAAao5E,GAC9Bn5F,KAAK0sB,QAAQlK,SAASkuB,gBAAgB,CAAC+oD,oBAAqBN,IAC5D,IAAIj4D,EAAM,IAAI,GAAE75B,SAChB65B,EAAI3Y,MAAM0mD,IACNjvE,KAAK0sB,QAAQlF,0BAA0B6wE,yBAAyB,CAC5DnB,0BAA2B,sBAC3BpjF,UAAWqlF,IAEf,kCACKxC,GACD32F,KAAK0sB,QAAQgH,MAAMiB,eACnB2hE,GACAt2F,KAAK0sB,QAAQ3M,IAAI,aAAco5E,IAC9B,GAAEpjE,GAAIl2B,KAAK,gBAAgBoC,QAAU,GAAE8zB,GAAIl2B,KAAK,gBAAgBoC,OAAS,GAAUlN,yBAG/E,GAAEghC,GAAIl2B,KAAK,gBAAgBoC,SAC3Bo0F,EAIDr2F,KAAK0sB,QAAQlqB,IAAI,cAAgBxC,KAAKo2F,eAAe,CAACp9D,MAAOh5B,KAAK0sB,QAAQlqB,IAAI,aAAcszB,IAAK,GAAU/gC,0BAA0B,GAHrIiL,KAAKo2F,eAAe,CAACtgE,IAAK,GAAU/gC,wBAAyBqmE,MAAOg+B,IAK5E,IAEA9C,EACAt2F,KAAK0sB,QAAQlF,0BAA0BkyE,+BAA+Bn6F,IAClE,IAAIo6F,EAAuB,GAAE5jE,GAAIl2B,KAAK,gBAAgBwxB,KAAI,WACtD,OAAO,GAAErxB,MAAMR,KAAK,OAAU,IAAM,GAAEQ,MAAMR,KAAK,OACrD,IAAG8xB,UACH/xB,EAAMA,EAAIoX,QAAOzV,IAASy4F,EAAqBpkF,SAASrU,EAAKg2F,6BAC7Dl3F,KAAK02F,wBAAwB,KAAMC,EAAoBL,EAAe/2F,GACtES,KAAKw2D,kBAAkBzgC,EAAI4gE,EAAoBL,EAAe/2F,GAC9D2hC,EAAI74B,SAAQ,EAAK,KAGrBrI,KAAKw2D,kBAAkBzgC,EAAI4gE,GAC3Bz1D,EAAI74B,UAEZ,EAEAuxF,UAAW,WACP,IAAIC,EAAc75F,KAAK21F,eACvB31F,KAAK0sB,QAAQpF,cAAcwyE,kBAAkBC,IAIpCA,EAAa93F,QAAyB,GAAf43F,IACxB75F,KAAK21F,eAAiB,GAE1B31F,KAAK01F,eAAe,GAE5B,EAEAA,cAAe,WACX,IAAI3/D,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG+9C,OAAQ+lB,IAAKh6F,KAAK21F,iBAC5E31F,KAAK0sB,QAAQiK,WAAWZ,GAAKA,IACzB/1B,KAAKm2F,WAAWpgE,GAChB/1B,KAAK0sB,QAAQlqB,IAAI,eAAiBxC,KAAKo2F,eAAe,CAACp9D,MAAOh5B,KAAK0sB,QAAQlqB,IAAI,cAAeszB,IAAK,GAAU/gC,wBAAyB0hG,mBAAmB,IAAO,GAChKz2F,KAAK0sB,QAAQo+B,aAAaziD,SAAS,GAE3C,EAEA8tF,WAAY,SAAUpgE,GAClB,IAAIkkE,EAAqB,GAAElkE,GAAIpI,SAAS,SAASnuB,KAAK,OAiBtD,OAhBA,GAAEu2B,GAAIpI,SAAS,SAAS9tB,KAAK,QAAQC,MAAK,CAAC4C,EAAKxB,KAC5ClB,KAAKk6F,aAAah5F,EAAK,IAEK,QAA5B60B,EAAG4D,aAAa,QAChB35B,KAAK0sB,QAAQ4pC,cAAcvgC,GAGK,WAA5BA,EAAG4D,aAAa,UAChBsgE,IAAuBj6F,KAAK21F,eAAiBsE,GAC7Cj6F,KAAK0sB,QAAQpF,cAAcwrD,YAAY,CACnC56D,IAAK,iBACLiiF,YAAY,EACZ9mC,QAASrzD,KAAK21F,mBAInB,CACX,EAEAuE,aAAc,SAAUh5F,GACpB,IAAIgX,EAAMhX,EAAKy4B,aAAa,OAC5B,GAAIzhB,IAAQlY,KAAK0sB,QAAQlqB,IAAI,OACzB,OACJ,IAAIyyB,EAAUj1B,KAAKs1B,SAASsjC,aAAa1gD,GACrC24D,EAAe3vE,EAAKy4B,aAAa,gBACjCq4C,EAA2B9wE,EAAKy4B,aAAa,YAC7C3rB,EAAM9M,EAAKy4B,aAAa,OAK5B,IAJI1E,EAAQzyB,IAAI,eAAmC,SAAjBquE,GAA4C,OAAjBA,IACzD57C,EAAQlV,IAAI,cAAc,GAC1BkV,EAAQ1pB,QAAQ,kBAEC,WAAjBslE,EAUA,OATA57C,EAAQlV,IAAI,CACR8yD,WAAW,EACXunB,OAAO,EACPr7F,KAAMk2B,EAAQzyB,IAAI,OAClBquE,kBAAcz1D,EACd21D,0BAA0B,IAE9B97C,EAAQlV,IAAI,4BAA4B,QACxC/f,KAAK0sB,QAAQpF,cAAc6sD,iBAAiBj8D,GAGhD,IAAI84D,EAAS,GACb,GAAE9vE,GAAMrB,KAAK,SAASC,MAAK,WACvB,IAAIo0E,EAAQ,GAAEl0E,MAAMsC,OACpB0uE,EAAO5sE,QAAQ8vE,GAAS,GAAKlD,EAAO5vE,KAAK8yE,EAC7C,IACA,IAAI98D,EAAQ,CACRy5D,aAAcA,GAAgB,OAC9BgC,WAAW,EACXxB,YAAanwE,EAAKy4B,aAAa,QAC/Bq3C,OAAQA,GAES,SAAjBH,IACAz5D,EAAM25D,0BAA2B,EACjC35D,EAAM05D,yBAA0B,GAEf,SAAjBD,IACAz5D,EAAM05D,yBAA0B,GACf,OAAjBD,IACAz5D,EAAM25D,0BAA2B,GAEjC35D,EAAM25D,yBADE,cAAR/iE,EAIJoJ,EAAMi6D,cAAgBj6D,EAAMrY,KAAOqY,EAAMi6D,aACzCrxE,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGwsB,4BAA8BtrC,EAAM46D,2BAA2BA,GAAkCA,GAC7I/8C,EAAQlV,IAAI3I,GACZ6d,EAAQy8C,kBACZ,IAGJ,qBAA2B,oBAAwB,CAC/C3gD,UAAW,sBAEXE,OAAQ,CACJ,iDAAkD,mBAClD,6BAA8B,UAGlC1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKgxE,OAAShxE,KAAK0sB,QAAQskD,OAC3BhxE,KAAKu2D,OAASv2D,KAAK0sB,QAAQ6pC,OAC3Bv2D,KAAKs1B,SAAWt1B,KAAK0sB,QAAQ4I,SAC7Bt1B,KAAKD,IAAIP,KAAK,WAAYQ,KAAK0sB,QAAQlqB,IAAI,QAC3CxC,KAAKD,IAAIsJ,SAASrJ,KAAKytB,OAAO9vB,EAAE,kBAChCqC,KAAKgnD,MAAQhnD,KAAKrC,EAAE,6BACpBqC,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAK0sB,QAAQrJ,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MAChDA,KAAK0sB,QAAQrJ,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACnDA,KAAK0sB,QAAQrJ,GAAG,wBAAyBrjB,KAAK86D,aAAc96D,MAC5DA,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAKgxE,OAAO3tD,GAAG,MAAOrjB,KAAKi1F,aAAcj1F,MACzCA,KAAKgxE,OAAO3tD,GAAG,SAAUrjB,KAAKq6F,eAAgBr6F,MAC9CA,KAAKgxE,OAAO3tD,GAAG,UAAWrjB,KAAKs6F,eAAgBt6F,MAC/CA,KAAKN,KAAK2jB,GAAG,kBAAmBrjB,KAAK24C,eAAgB34C,MACrDA,KAAKN,KAAKqgB,IAAI,YAAY,EAC9B,EAEAod,WAAY,WACRn9B,KAAKgnD,MAAMnnD,KAAK,SAASyC,KAAKtC,KAAK0sB,QAAQlqB,IAAI,QACnD,EAEAs4D,aAAc,WACV96D,KAAKgnD,MAAMnnD,KAAK,WAAWL,KAAK,cAAeQ,KAAK0sB,QAAQlqB,IAAI,WAChExC,KAAKgnD,MAAMnnD,KAAK,mBAAmByC,KAAKtC,KAAK0sB,QAAQ8nC,mBACzD,EAEAh3B,aAAc,WACV,IAAIxiC,EAAQgF,KAAK0sB,QAAQvnB,aACzBnF,KAAKgnD,MAAMnnD,KAAK,kBAAkBoF,UAAUjK,EAAOgF,KAAK88B,YAC5D,EAEAsE,kBAAmB,WACfphC,KAAKD,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,SAC1D,EAEAm2C,eAAgB,WACZ,IAAIE,EAAW74C,KAAKN,KAAK8C,IAAI,YAC7BxC,KAAKD,IAAIgN,YAAY,UAAW8rC,GAChC74C,KAAKytB,OAAOoB,iBAChB,EAEA0rE,oBAAqB,SAAU1sE,GAC3BA,EAAK9tB,IAAI+K,SACT,IAAI4vD,EAAQ16D,KAAKgxE,OAAO5sE,QAAQypB,EAAKiG,OACvB,IAAV4mC,EACA16D,KAAKgnD,MAAMoU,MAAMvtC,EAAK9tB,KAEtBC,KAAKrC,EAAE,iBAAiBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,KAErDC,KAAKytB,OAAOoB,iBAChB,EAEAomE,aAAc,SAAU/gB,GACpB,IAAIrmD,EAAO7tB,KAAKkvB,SAASglD,EAAM1xE,IAAI,MAAOxC,KAAKw6F,WAAY,CAAC1mE,MAAOogD,IACnEl0E,KAAKu6F,oBAAoB1sE,EAC7B,EAEAwsE,eAAgB,SAAUnmB,EAAOumB,GAC7B,IAAI5sE,EAAO7tB,KAAKivB,MAAMwrE,UACfz6F,KAAK2tB,SAAS8sE,GACrBz6F,KAAK2tB,SAASumD,EAAM1xE,IAAI,SAAWqrB,EACnCA,GAAQ7tB,KAAKu6F,oBAAoB1sE,EACrC,EAEAysE,eAAgB,SAAUpmB,GACtBl0E,KAAKovB,YAAY8kD,EAAM1xE,IAAI,MAC/B,EAEAk9B,OAAQ,SAAU70B,GACd7K,KAAKN,KAAKqgB,IAAI,YAAa/f,KAAKN,KAAK8C,IAAI,YAC7C,EAEA2/D,iBAAkB,SAAUt3D,GACnB,wBACD,sBAA4B,IAAI,qBACpC,2BAA+B7K,KAAK0sB,QACxC,IAGJ,0BAAgC,4BAAgC,CAC5Dc,SAAU,GAAUktE,qBACpBF,WAAY,kBACZ19D,YAAa,GAAU7lC,aAAaQ,0BAEpC+2B,aAAc,WACVxuB,KAAKs1B,SAASjS,GAAG,oDACbrjB,KAAKszF,cAAetzF,MACxBA,KAAKs1B,SAASjS,GAAG,mCACbrjB,KAAK26F,oBAAqB36F,KAClC,EAEAszF,cAAe,WACX,IAAI/wF,EAAMvC,KAAKu2D,OAAOt0D,OAClB9N,EAASoO,EAAMvC,KAAKu2D,OAAOzjB,MAAM,CAACvsB,OAAQ,YAAYtkB,OAC1DjC,KAAKgnD,MAAMnnD,KAAK,YAAYyC,KAAKnO,EAAS,IAAMoO,EACpD,EAEAo4F,oBAAqB,WACjB36F,KAAKytB,OAAO6lE,eAChB,IAGJ,yBAA+B,4BAAgC,CAC3D9lE,SAAU,GAAUotE,oBACpBJ,WAAY,iBACZ19D,YAAa,GAAU7lC,aAAaS,yBAEpC82B,aAAc,WACVxuB,KAAKgnD,MAAMnnD,KAAK,QAAQyC,KAAKtC,KAAK0sB,QAAQlqB,IAAI,OAClD,EAEA8vB,OAAQ,SAAUD,GACdryB,KAAKD,IAAIG,YAAY,UACrBF,KAAKrC,EAAE,eAAewC,SAAS,UAC/B,IAAIwa,EAAQ,EAAGkgF,EAAS,CAAC,EACzB76F,KAAKrC,EAAE,mBAAmBmC,MAAK,CAAC4C,EAAKxB,KACjC,IAAI0M,EAAQ,GAAE1M,GACVgX,EAAMtK,EAAMlO,KAAK,OACjBu1B,EAAUj1B,KAAKu2D,OAAO/zD,IAAI0V,GAC9B,IAAK+c,EAAS,OACd,GAAI4lE,EAAO5lE,EAAQM,SAEf,YADA3nB,EAAMzN,SAAS,UAGnB06F,EAAO5lE,EAAQM,UAAW,EAC1B,IACIzG,EADOmG,EAAQzyB,IAAI,QAAQwT,cACf5R,QAAQiuB,GAAS,GAAKna,EAAI9T,QAAQiuB,GAAS,EAC3DzkB,EAAM2D,OAAOud,GACbA,GAAQnU,GAAO,IAEnB3a,KAAKrC,EAAE,6BAA6B2T,OAAOqJ,EAC/C,EAEA6X,UAAW,WACPxyB,KAAKD,IAAIgN,YAAY,UAAW/M,KAAKN,KAAK8C,IAAI,aAC9CxC,KAAKrC,EAAE,6BAA6BuC,YAAY,UAChDF,KAAKrC,EAAE,eAAeuC,YAAY,UAClCF,KAAKrC,EAAE,cAAcuC,YAAY,SACrC,IAGJ,iBAAuB,oBAAwB,CAC3C48B,YAAa,GAAU7lC,aAAac,qBACpCk5B,OAAQ,CACJ,sBAAuB,aACvB,yBAA0B,uBAC1B,6BAA8B,6BAC9B,+BAAgC,gBAChC,8BAA+B,mBAGnC1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB,IAAK,IAAIxU,KAAOlY,KAAK0sB,QAAQq5C,UAAUrzD,KACnC1S,KAAK+zF,eAAe/zF,KAAK0sB,QAAQq5C,UAAUrzD,KAAKwF,IAAM,GAE1DlY,KAAKrC,EAAE,8BAA8Bu0B,QAAQzmB,QAAQ5L,KAAK,KAAKM,SAAS,UACxEH,KAAK86F,WACL96F,KAAK0sB,QAAQ4I,SAASjS,GAAG,mBAAoBrjB,KAAK+zF,eAAgB/zF,MAClEA,KAAK0sB,QAAQ4I,SAASjS,GAAG,wBAAyBrjB,KAAKuzF,iBAAkBvzF,KAC7E,EAEAgvB,OAAQ,SAAUhwB,GACdgB,KAAKgmE,kBACLhmE,KAAK2+E,kBACL,QAAY,aAAc3+E,KAAK2+E,gBAAiB3+E,KACpD,EAEA2+E,gBAAiB,WACb3+E,KAAKrC,EAAE,oBAAoBuT,SAC3BlR,KAAKrC,EAAE,SAAS+/D,OAChB19D,KAAKrC,EAAE,cAAcwC,SAAS,mBAClC,EAEA46F,cAAe,SAAUlwF,GACrB7K,KAAKg7F,qBACT,EAEAh1B,gBAAiB,SAAUn7D,GACvB7K,KAAKrC,EAAE,0BAA0B4M,KAAK,WAAW,GACjDvK,KAAKg7F,qBACT,EAEAA,oBAAqB,WACjB,IAAItZ,EAAc1hF,KAAKrC,EAAE,kCAAkCsE,OAC3DjC,KAAKytB,OAAO9vB,EAAE,yBAAyB4T,QAAQmwE,GAC/C1hF,KAAKytB,OAAO9vB,EAAE,yBAAyB4T,QAAQmwE,GAC/C1hF,KAAKytB,OAAO9vB,EAAE,cAAc4T,OAAOmwE,EACvC,EAEA5b,gBAAiB,SAAUj7D,GACR7K,KAAKrC,EAAE,kCAAkCo9B,QAAQ,oBACvDj7B,MAAK,CAAC46D,EAAOx5D,KAClBlB,KAAKi7F,oBAAoB,GAAE/5F,GAAM1B,KAAK,YAAW,GAEzD,EAEAy7F,oBAAqB,SAAU/iF,GAC3B,IAAI+c,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAI0V,GACpC+c,EACAA,EAAQmgD,UAERp1E,KAAK0sB,QAAQ4I,SAAS4oD,eAAehmE,EAE7C,EAEA6lD,WAAY,SAAUlzD,GAClB,IAAIs1D,EAAM,GAAEt1D,EAAG4C,QAAQstB,QAAQ,iBAC3BmgE,EAAW,GAAErwF,EAAG4C,QAAQstB,QAAQ,iBAAiBv7B,KAAK,iBAC1DQ,KAAKrC,EAAE,mBAAmBuC,YAAY,UACtCigE,EAAItgE,KAAK,KAAKM,SAAS,UACvBH,KAAKrC,EAAE,4BAA4BwC,SAAS,UAC5CH,KAAKrC,EAAE,IAAMu9F,GAAUh7F,YAAY,UACnCF,KAAKrC,EAAE,0BAA0B4M,KAAK,WAAW,GACjDvK,KAAKg7F,qBACT,EAEAF,SAAU,WACN96F,KAAKrC,EAAE,SAAS4T,OAAuD,IAAhDvR,KAAKrC,EAAE,8BAA8BsE,OAChE,EAEAk5F,oBAAqB,WACNn7F,KAAKrC,EAAE,uBACbmC,MAAK,CAAC4C,EAAKxB,KACZ,IAAIg6F,EAAW,GAAEh6F,GAAM65B,QAAQ,4BAA4B56B,SAAS,UAAUX,KAAK,iBACnFQ,KAAKrC,EAAE,IAAMu9F,GAAU/6F,SAAS,UAAUD,YAAY,MAAM,IAE5DF,KAAKrC,EAAE,gCAAgCsE,QACvCjC,KAAKrC,EAAE,8BAA8Bu0B,QAAQzmB,QAAQ5L,KAAK,KAAKM,SAAS,UAG5EH,KAAK86F,WACL96F,KAAKg7F,sBACLh7F,KAAK2+E,iBACT,EAEAoV,eAAgB,SAAU38E,GACtB,IAAIgkF,EAAM,GAAUC,qBAAqB,CAACnjF,IAAKd,EAAMc,MACrD,GAAId,EAAM+rC,SACNnjD,KAAKrC,EAAE,qBAAqBuC,YAAY,UAAUC,SAAS,OAC3DH,KAAKrC,EAAE,6BAA6BkC,KAAK,wBAAwBgN,OAAOuuF,QAEvE,GAAIhkF,EAAMumC,OAAQ,CACnB39C,KAAKrC,EAAE,iBAAiBuC,YAAY,UAAUC,SAAS,OACvD,IAAIm7F,EAAet7F,KAAKrC,EAAE,yBACtB49F,EAAQD,EAAaz7F,KAAK,6BAC9By7F,EAAaz7F,KAAK,oBAAoBgN,OAAOuuF,GAC7CG,EAAMj5F,KAAKi5F,EAAMj5F,QAAUi5F,EAAMj5F,OAAS,KAAO,IAAM8U,EAAMc,IACjE,KACK,CACDlY,KAAKrC,EAAE,kBAAkBuC,YAAY,UAAUC,SAAS,OACxDH,KAAKrC,EAAE,0BAA0BkC,KAAK,qBAAqBgN,OAAOuuF,GAClE,IAAIG,EAAQv7F,KAAKrC,EAAE,oDACnB49F,EAAMj5F,KAAKi5F,EAAMj5F,QAAUi5F,EAAMj5F,OAAS,KAAO,IAAM8U,EAAMc,IACjE,CACAlY,KAAKrC,EAAE,gBAAgBwC,SAAS,UAChCH,KAAK86F,WACL96F,KAAK2+E,kBACoD,IAArD3+E,KAAKrC,EAAE,mCAAmCsE,QAC1CjC,KAAKrC,EAAE,6BAA6Bo9B,QAAQ,4BAA4B76B,YAAY,UACxFF,KAAKyuB,aAAezuB,KAAKytB,OAAOoB,iBACpC,EAEA0kE,iBAAkB,SAAUr7E,GACxB,IAAIssB,EAAQxkC,KAAKrC,EAAE,8BAA8Bua,OAC7CsjF,EAAeh3D,EAAMzJ,QAAQ,iBAC7B0gE,EAAM,IAAIzoF,OAAQ,SAAWkF,EAAM,IAAMA,EAAvB,UAA8CA,GAChEwjF,EAAwBl3D,EAAMzJ,QAAQ,0BAA0BzpB,OAAOkqF,EAAa7tE,WAAW1rB,OAAS,GAAGpC,KAAK,6BAChH87F,EAAuBn3D,EAAMzJ,QAAQ,yBAAyBzpB,OAAOkqF,EAAa7tE,WAAW1rB,OAAS,GAAGpC,KAAK,6BAClH2kC,EAAMzJ,QAAQ,6BAA6BzpB,OAAOkqF,EAAa7tE,WAAW1rB,OAAS,GACnFy5F,EAAsBp5F,KAAKo5F,EAAsBp5F,OAAOT,QAAQ45F,EAAK,KACrEE,EAAqBr5F,KAAKq5F,EAAqBr5F,OAAOT,QAAQ45F,EAAK,KACnEj3D,EAAM15B,SACN9K,KAAKrC,EAAE,gBAAgB4T,OAAOvR,KAAK0sB,QAAQq5C,UAAU9jE,UACrDjC,KAAKytB,OAAOoB,kBACZ7uB,KAAKm7F,qBACT,IAGJ,cAAoB,0BAA8B,CAC9CrtE,YAAa,qBAEbS,YAAa,WACTvuB,KAAKmiB,UAAY,oBACjBniB,KAAK8zB,MAAMzQ,GAAG,WAAYrjB,KAAK47F,oBAAqB57F,MACpDA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAK67F,kBAAmB77F,MACtDA,KAAK8zB,MAAMzQ,GAAG,qBAAsBrjB,KAAK87F,iBAAkB97F,MAC3DA,KAAKqjB,GAAG,cAAerjB,KAAK4vB,oBAAqB5vB,MACjDA,KAAKrC,EAAE,SAAS0lB,GAAG,QAASrjB,KAAK6xB,aAAavpB,KAAKtI,MACvD,EAEA47F,oBAAqB,SAAUlvE,GAC3B,IAAIxU,EAAMwU,EAAQlqB,IAAI,OAClBqrB,EAAO7tB,KAAKivB,MAAM/W,GACtB,GAAI2V,EACAA,EAAK9tB,IAAI+K,aACN,KAAI4hB,EAAQC,cAGf,OAFAkB,EAAO7tB,KAAKkvB,SAAShX,EAAKlY,KAAK+7F,oBAAqB,CAACrvE,QAASA,GAGlE,CACA,IAAIguC,EAAQ16D,KAAK8zB,MAAMsd,UAAUhtC,QAAQsoB,GAC3B,IAAVguC,EACA16D,KAAKrC,EAAE,iBAAiBy3B,QAAQvH,EAAK9tB,KAErCC,KAAKrC,EAAE,iBAAiBgwB,WAAWqG,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,KAEhEC,KAAK6uB,iBACT,EAEAgtE,kBAAmB,WACf,GAAE/7F,KAAKE,KAAK2tB,UAAU,SAAUE,GAAQA,EAAK/iB,QAAU,IACvD9K,KAAK8zB,MAAMh0B,MAAM4sB,IACb,IAAIxU,EAAMwU,EAAQlqB,IAAI,OAAQqrB,EAAO7tB,KAAKivB,MAAM/W,GAChD2V,GAAQ7tB,KAAKrC,EAAE,iBAAiBkP,OAAOghB,EAAK9tB,IAAI,IAEpDC,KAAK6uB,iBACT,EAEAitE,iBAAkB,SAAUpvE,GACxB1sB,KAAKovB,YAAY1C,EAAQlqB,IAAI,QAC7BxC,KAAK6uB,iBACT,IAGJ,mBAAyB,qBAAyB,CAC9CkC,UAAW,mCACXvD,SAAU,GAAUwuE,aACpB/tE,YAAa,CAAC7E,MAAO,gBACrB2yE,oBAAqB,0BAErB9qE,OAAQ,CACJ,wBAAyB,SACzB,4BAA6B,WAGjCzC,aAAc,WACVxuB,KAAKszF,gBACLtzF,KAAKi8F,cACLj8F,KAAK44B,aACL54B,KAAKk8F,qBACLl8F,KAAK8zB,MAAMzQ,GAAG,8BAA+BrjB,KAAKszF,cAAetzF,MACjEA,KAAKN,KAAK2jB,GAAG,SAAUrjB,KAAKm8F,aAAcn8F,MAC7BA,KAAKmiB,UAAU3f,IAAI,UAChCxC,KAAKN,KAAKqgB,IAAI,CAAC84B,UAAU,EAAOujD,QAAQ,GAC5C,EAEAH,YAAa,SAAU7yE,GACnBA,EAAQA,GAAS,6BACjBppB,KAAKD,IAAIP,KAAK,aAAc4pB,GAC5BppB,KAAKk8F,oBACT,EAEAA,mBAAoB,SAAU5yE,GAC1BA,EAAeA,GAAgB,oCACS,QAApC,6BACAtpB,KAAKD,IAAIuF,IAAI,mBAAoB,iBAAiB,EAAIgkB,EAAa,QAEnEtpB,KAAKD,IAAIuF,IAAI,mBAAoB,uBAAuB,EAAIgkB,EAAa,OACjF,EAEAsP,WAAY,SAAUvP,GAClBA,EAAO,GAAEje,YAAYie,GAAQ,4BAAkCA,EAC/DrpB,KAAKD,IAAIgN,YAAY,YAAasc,EACtC,EAEAgzE,OAAQ,WACJr8F,KAAKN,KAAKqgB,IAAI,YAAY,EAC9B,EAEAu8E,QAAS,WACAt8F,KAAKN,KAAK8C,IAAI,WACfxC,KAAKN,KAAKqgB,IAAI,YAAY,EAClC,EAEAo8E,aAAc,WACV,IAAI7iE,EAAUt5B,KAAKN,KAAK45B,SACpB,GAAExI,IAAIwI,EAAS,aAAe,GAAExI,IAAIwI,EAAS,YAC7C,WAAe,gBAAiB,CAACijE,sBAAsB,GAE/D,EAEAjJ,cAAe,WACXtzF,KAAKrC,EAAE,yBAAyB2E,KAC5B,GAAE4qB,OAAOltB,KAAK2tB,UAAU,SAAUtR,EAASwR,GACvC,OAAOxR,EAAUwR,EAAK0oC,OAAOt0D,MACjC,GAAG,GAEX,EAEA43D,cAAe,WACX75D,KAAK6uB,iBACT,IAGJ,kBAAwB,qBAAyB,CAC7CkC,UAAW,kCACXvD,SAAU,GAAUgvE,YACpBvuE,YAAa,CAAC7E,MAAO,aACrBkL,eAAgB,gBAChBynE,oBAAqB,yBAErBvtE,aAAc,WACVxuB,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKy8F,oBAAqBz8F,MACxDA,KAAK+tB,aAAa1K,GAAG,cAAerjB,KAAK6yB,UAAUvqB,KAAKtI,MAC5D,EAEAy8F,oBAAqB,WACjBz8F,KAAKD,IAAIP,KAAK,iBAAkBQ,KAAK8zB,MAAMsd,UAAUnvC,OAAS,EAClE,EAEAy6F,kBAAmB,SAAUx7F,GACzB,IAAI0M,EAAQ,GAAE1M,GACVy7F,EAAc/uF,EAAM6f,SAASA,SAAS/tB,KAAK,OAC3CwY,EAAMtK,EAAMlO,KAAK,OACjBk9F,EAAc58F,KAAKivB,MAAM0tE,GAC7B,OAAOC,GAAeA,EAAYrmC,OAAO/zD,IAAI0V,EACjD,EAEA8W,OAAQ,SAAUhwB,IACK,SAAlBA,EAAQm6B,OAAsC,oBAAlBn6B,EAAQm6B,OAAiD,oBAAlBn6B,EAAQm6B,OAAiD,yBAAlBn6B,EAAQm6B,OAAoCn6B,EAAQ22B,cAAkC,SAAlB32B,EAAQm6B,QAAqBn5B,KAAK4xB,aACrN,EAEAY,UAAW,WACP,GAAE1yB,KAAKE,KAAK2tB,UAAU,SAAUE,GAC5BA,EAAK2E,WACT,GACJ,EAEAT,WAAY,SAAUnoB,EAAIooB,GACtB,IAAKpoB,EAED,YADW,OAAVooB,IAAoBhyB,KAAK+tB,aAAa,GAAGiC,UAAY,IAG1DhwB,KAAKiyB,uBACL,IAAIV,EAAavxB,KAAKrC,EAAE,uBAAuBiM,EAAG,MAC9C2nB,EAAWtvB,OACXjC,KAAK8xB,aAAeloB,GAEpB5J,KAAK+tB,aAAa,GAAGiC,UAAY,EACjCuB,EAAavxB,KAAKrC,EAAE,sBAAsBu0B,QAC1ClyB,KAAK8xB,aAAeP,EAAW7xB,KAAK,OAEpC6xB,EAAWtvB,QAAoB,SAAV+vB,IAAqBT,EAAW,GAAGlY,aAAekY,EAAW,GAAGY,UAAYZ,EAAW9D,SAAS,GAAG0E,UAAYZ,EAAWwJ,QAAQ,wBAAwB,GAAG5I,WAAanyB,KAAK+tB,aAAa,GAAG1U,aAAerZ,KAAK+tB,aAAa,GAAGiC,WACzPuB,EAAW,GAAGlY,aAAekY,EAAW,GAAGY,UAAYZ,EAAW9D,SAAS,GAAG0E,UAAYZ,EAAWwJ,QAAQ,wBAAwB,GAAG5I,UAAYnyB,KAAK+tB,aAAa,GAAGiC,aACxKhwB,KAAK+tB,aAAa,GAAGiC,UAAYuB,EAAW,GAAGY,UAAYZ,EAAW9D,SAAS,GAAG0E,UAAYZ,EAAWwJ,QAAQ,wBAAwB,GAAG5I,WAC5IZ,EAAWtvB,QAAoB,OAAV+vB,IAAmBT,EAAW,GAAGY,UAAYZ,EAAW9D,SAAS,GAAG0E,UAAYZ,EAAWwJ,QAAQ,wBAAwB,GAAG5I,WAAanyB,KAAK+tB,aAAa,GAAGiC,WACtLuB,EAAW,GAAGY,UAAYZ,EAAW9D,SAAS,GAAG0E,UAAYZ,EAAWwJ,QAAQ,wBAAwB,GAAG5I,UAAYnyB,KAAK+tB,aAAa,GAAGiC,UAAYhwB,KAAK+tB,aAAa,GAAG1U,gBAC5KrZ,KAAK+tB,aAAa,GAAGiC,UAAYuB,EAAW,GAAGY,UAAYZ,EAAW9D,SAAS,GAAG0E,UAAYZ,EAAWwJ,QAAQ,wBAAwB,GAAG5I,WAChJZ,EAAWpxB,SAAS,WACxB,EAEAwxB,eAAgB,SAAU9gB,GACtB,IAAIgd,EACJ,GAAIhd,EAAUkqB,QAAQ,wBAAwB94B,OAC1CjC,KAAK4xB,cACL5xB,KAAKrC,EAAE,qBAAqBuC,YAAY,UACpC2Q,EAAU7D,SAAS,eACnB6gB,EAAO,oBAAwBhd,EAAUnR,KAAK,OAC9CmuB,GAAQA,EAAK5jB,KAAK,CAACorB,OAAQ,mBAAuB,QAASM,cAAc,IACzE9kB,EAAU1Q,SAAS,WAEnB0Q,EAAU7D,SAAS,oBACnB6gB,EAAO,gBAAoBhd,EAAUnR,KAAK,YAAYg0B,MAAMlxB,IAAI,gBAAoBqO,EAAUnR,KAAK,YAAY41B,SAAS9yB,IAAIqO,EAAUnR,KAAK,QAAQ61B,SACnJ1H,IAASA,EAAOA,EAAK+G,WACrB/G,GAAQ,uBAA2BA,EAAM,CAAC8H,cAAc,EAAON,OAAQ,mBAAuB,UAC9FxkB,EAAU1Q,SAAS,WAEnB0Q,EAAU7D,SAAS,iBACnB6D,EAAUpF,YAGb,CACD,IAAIwpB,EAAUj1B,KAAK08F,kBAAkB7rF,GACrCokB,GAAWA,EAAQmlD,aACvB,CACJ,EAEAvgB,cAAe,WACX75D,KAAK6xB,cACT,IAGJ,sBAA4B,oBAAwB,CAChDd,UAAW,uBACXvD,SAAU,GAAU6mE,gBAEpBpjE,OAAQ,CACJ,iCAAkC,oBAClC,iCAAkC,qBAGtC1C,YAAa,WACTvuB,KAAKD,IAAIsJ,SAASrJ,KAAKytB,OAAO9vB,EAAE,wCACpC,EAEAqxB,OAAQ,WACJhvB,KAAKrC,EAAE,oEACFqC,KAAK8zB,MAAMtxB,IAAI,gBAAiB,KAAK+H,KAAK,WAAW,GAC1DvK,KAAKrC,EAAE,oEACFqC,KAAK8zB,MAAMtxB,IAAI,WAAY,KAAK+H,KAAK,WAAW,EACzD,EAEAsyF,kBAAmB,WACf78F,KAAK8zB,MAAM/Q,KAAK,eACZ/iB,KAAKrC,EAAE,sEAAsE4P,MACrF,EAEAuvF,kBAAmB,WACf98F,KAAK8zB,MAAM/Q,KAAK,UACZ/iB,KAAKrC,EAAE,sEAAsE4P,MACrF,IAGJ,oBAA0B,oBAAwB,CAC9CwjB,UAAW,QACXvD,SAAU,WACNxtB,KAAKD,IAAI8M,OAAO,wEACpB,EAEAokB,OAAQ,CACJ,MAAS,qBAGb1C,YAAa,SAAUvvB,GACnBgB,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,SAC1CxC,KAAKrC,EAAE,wBAAwB2E,KAAKtC,KAAK8zB,MAAMtxB,IAAI,WAAWD,KAC9D,IAAIm4D,EAAQ16D,KAAK8zB,MAAM+1B,WAAWzlD,QAAQpE,KAAK8zB,OAC3CipE,EAAa/8F,KAAK8zB,MAAMpH,QAAQikC,eAAehzD,EAAE,WACvC,IAAV+8D,EACAqiC,EAAW3nE,QAAQp1B,KAAKD,KAExBg9F,EAAWpvE,WAAWqG,GAAG0mC,EAAQ,GAAGU,MAAMp7D,KAAKD,KAEnDC,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKkR,OAAQlR,KAC1C,EAEA00F,kBAAmB,WACf10F,KAAK8zB,MAAM2H,cACf,IAGJ,0BAAgC,oBAAwB,CACpD1K,UAAW,qDACXvD,SAAU,GAAUwvE,sBAGxB,kBAAwB,oBAAwB,CAC5CjsE,UAAW,qCACXvD,SAAU,GAAUyvE,YACpBngE,YAAa,GAAU7lC,aAAaI,yBAEpC45B,OAAQ,CACJ,yDAA0D,gBAC1D,oCAAqC,YACrC,+BAAgC,gBAChC,8BAA+B,gBAC/B,0CAA2C,WAC3C,6CAA8C,qBAC9C,2CAA4C,cAC5C,iBAAkB,cAClB,oBAAqB,SAGzB1C,YAAa,WACTvuB,KAAKk9F,WAAa,IAAI/7E,SAASC,MAC/BphB,KAAKk9F,WAAW75E,GAAG,SAAUrjB,KAAKm9F,aAAcn9F,KACpD,EAEAgvB,OAAQ,SAAUhwB,GACd,IAAK,6BAED,YADA,GAAM+M,QAAQgC,MAAM,aAAiB,gDAGzC/O,IAAYA,EAAU,CAAC,GACvB,IAAIooB,EAAWpoB,EAAQ0tB,QAAU,CAAC1tB,EAAQ0tB,SAAW,sBACjDxU,EAAMlZ,EAAQkZ,KAAO,GA2BzB,OA1BAlY,KAAKrC,EAAE,0BAA0B4P,IAAI2K,GAAK1Y,KAAK,aAAc0Y,GACxDhY,YAAY,WACjBF,KAAKrC,EAAE,eAAe2T,OAA2B,IAApB8V,EAASnlB,QACtCjC,KAAKrC,EAAE,iBAAiB4T,OAA2B,IAApB6V,EAASnlB,QACxCjC,KAAKrC,EAAE,oDAAoDqd,QAC3D,GAAElb,KAAKsnB,GAAWsF,IACd1sB,KAAKrC,EAAE,oDAAoDkP,OACvD7M,KAAKs2C,kBAAkB5pB,GAAS,IAExC1sB,KAAKrC,EAAE,0BAA0B4T,OAAO6V,EAASnlB,OAAS,GAC1DjC,KAAKu2C,YAAYnvB,EAAS,IAC1BpnB,KAAKrC,EAAE,eAAe2E,KAAK,IAC3BtC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACH2R,YAAYsG,mBACZx1C,KAAKrC,EAAE,0BAA0B28B,SAAS,CACtCC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAEf36B,KAAKrC,EAAE,0BAA0BoR,OAAO,EAE5C5D,SAAUnL,KAAKkL,MAAM5C,KAAKtI,QAEvBA,IACX,EAEAu2C,YAAa,SAAU7pB,GACnB1sB,KAAK0sB,QAAUA,EACf1sB,KAAKrC,EAAE,8DACFqT,YAAYhR,KAAKs2C,kBAAkB5pB,IACxC1sB,KAAKo9F,uBAAuB1wE,EAChC,EAEA2wE,YAAa,WACT,IAAInlF,EAAMlY,KAAKrC,EAAE,wBAAwB4P,MAAM/I,OAC/CxE,KAAKD,IAAI8M,OAAO,GAAE,GAAUgpB,cAC5B71B,KAAKrC,EAAE,YAAYwC,SAAS,mBAC5BH,KAAKrC,EAAE,4BAA4B4P,IAAI,IACnCvN,KAAK0sB,QAAQK,YAAc/sB,KAAK0sB,QAAQK,WAAWqkB,WACnDpxC,KAAK0sB,QAAQi/B,qBAAqBnH,MAAMhiD,IAAI0V,GAAMssC,IAC1C,IAAI9uD,EAAW8uD,EAAM9uD,SAAW8uD,EAAM9uD,SAAW8uD,EAAMI,SAAWJ,EAAMI,SAAW,GACnFlvD,GAAYsK,KAAKrC,EAAE,4BAA4B4P,IAAI7X,GACnDsK,KAAKrC,EAAE,sBAAsBuT,SAC7BlR,KAAKrC,EAAE,YAAYuC,YAAY,mBAC/BF,KAAKq+E,YAAW,IAEnB/1D,IACGtoB,KAAKrC,EAAE,sBAAsBuT,SAC7BlR,KAAKrC,EAAE,YAAYuC,YAAY,mBAC/BF,KAAKrC,EAAE,wBAAwBwC,SAAS,WACnCq4B,SAAS,WAAWl2B,KAAK,GAAEgmB,GAAKzoB,KAAK,cAAcyC,OAAO,GAG/E,EAEAg0C,kBAAmB,SAAU5pB,GACzB,IAAI9e,EAAQ,GAAE,GAAU4oC,yBAAyB,CAACt+B,IAAKwU,EAAQlqB,IAAI,OAAQzD,KAAM2tB,EAAQlqB,IAAI,WAE7F,OADAoL,EAAM/N,KAAK,kBAAkBoF,UAAUynB,EAAQvnB,aAAcnF,KAAK88B,aAC3DlvB,CACX,EAEAwvF,uBAAwB,SAAU1wE,GAC9B1sB,KAAKk9F,WAAWn9E,IAAI,CAChBwoC,SAAU,GACVyoB,OAAQ,GAAE3/C,IAAI3E,EAAQskD,OAAOye,cAAc,SAAUvb,GACjD,OAAOA,EAAM1xE,IAAI,OACrB,KACD,CAAC86F,QAAQ,IACZt9F,KAAKm9F,cACT,EAEAA,aAAc,WACV,IAAI50C,EAAWvoD,KAAKk9F,WAAW16F,IAAI,YACnCxC,KAAKrC,EAAE,WAAWgC,KAAK,GAAU49F,6BAA6B,CAC1DvsB,OAAQ,GAAE3/C,IAAIrxB,KAAKk9F,WAAW16F,IAAI,WAAW,SAAUzD,GACnD,MAAO,CAAEA,KAAMA,EAAM6K,GAAI,KAAQw5B,QAAS,GAAEvI,SAAS0tB,EAAUxpD,GACnE,MAER,EAEA03C,cAAe,SAAU5rC,GACrB,IAAI+C,EAAQ,GAAE/C,EAAG4C,QAAQstB,QAAQ,sBAC7BrO,EAAU,gBAAoB9e,EAAMlO,KAAK,QAC7CM,KAAKu2C,YAAY7pB,EACrB,EAEAwjE,UAAW,SAAUrlF,GACjBA,EAAGa,iBACH,IACIoO,EADU,GAAEjP,EAAG4C,QACE+qB,SAAS,SAC1B4K,GAAWtpB,EAAOvP,KAAK,WACvBylF,EAAal2E,EAAOta,KAAK,kBACzB+oD,EAAW,GAAElxC,MAAMrX,KAAKk9F,WAAW16F,IAAI,aACvCE,EAAM6lD,EAASnkD,QAAQ4rF,GAC3Bl2E,EAAOvP,KAAK,UAAW64B,GACnBA,EACA1gC,EAAM,GAAK6lD,EAASnnD,KAAK4uF,GAClBttF,GAAO,GACd6lD,EAAStO,OAAOv3C,EAAK,GAEzB1C,KAAKk9F,WAAWn9E,IAAI,WAAYwoC,EACpC,EAEA6nC,cAAe,SAAUvlF,GACrB,IAAI9L,EAAO,GAAE8L,EAAG4C,QAAQF,MACRvN,KAAKrC,EAAE,2CACb4M,KAAK,aAAcxL,IAAS,GAAE87B,SAAS76B,KAAKk9F,WAAW16F,IAAI,UAAWzD,KAC5E8L,EAAGW,UAAY,GAAUlZ,WACzB0N,KAAKswF,aACb,EAEAA,YAAa,SAAUzlF,GAEnB,GADAA,GAAMA,EAAGa,iBACL1L,KAAKrC,EAAE,2CAA2C4M,KAAK,YACvD,OACJ,IACIxL,EADSiB,KAAKrC,EAAE,yBACF4P,MACdyjE,EAAS,GAAE35D,MAAMrX,KAAKk9F,WAAW16F,IAAI,WAEzC,GADUwuE,EAAO5sE,QAAQrF,GACf,EAAG,CACT,IAAIwpD,EAAW,GAAElxC,MAAMrX,KAAKk9F,WAAW16F,IAAI,aAC3C+lD,EAASnnD,KAAKrC,GACdiyE,EAAO5vE,KAAKrC,GACZiB,KAAKk9F,WAAWn9E,IAAI,CAACixD,OAAQA,EAAQzoB,SAAUA,GACnD,CACJ,EAEA5gB,mBAAoB,WACX3nC,KAAKrC,EAAE,wBAAwB4P,MAAM/I,SACtCxE,KAAKrC,EAAE,wBAAwBuC,YAAY,WAC3CF,KAAKrC,EAAE,eAAe2E,KAAK,IAAInC,SAAS,UAEhD,EAEAq9F,SAAU,SAAU3yF,GAChB,IACIm1C,EADA9nC,EAAMlY,KAAKrC,EAAE,wBAAwB4P,MAAM/I,QAEzB,6PACDsQ,KAAKoD,IAAQA,IAC9B8nC,EAAa,aAAiB,gDAE9BA,EACAhgD,KAAKrC,EAAE,wBAAwBwC,SAAS,WACnCq4B,SAAS,WAAWl2B,KAAK09C,IAG9BhgD,KAAKrC,EAAE,wBAAwBuC,YAAY,WAC3CF,KAAKrC,EAAE,eAAe2E,KAAK,IAAInC,SAAS,UACpC0K,EAAGW,UAAY,GAAUlZ,WACzB0N,KAAKq9F,cAEjB,EAEAhf,WAAY,WACRr+E,KAAKrC,EAAE,eAAe2E,KAAK,IAAInC,SAAS,UACxC,IAGI80B,EAAS+qB,EAHT9nC,EAAMlY,KAAKrC,EAAE,wBAAwBuC,YAAY,WAAWqN,MAAM/I,OAClEzF,EAAOiB,KAAKrC,EAAE,4BAA4BuC,YAAY,WAAWqN,MACjEyjE,EAAShxE,KAAKk9F,WAAW16F,IAAI,YAG7B0V,IACAA,EAAMA,EAAIlC,eACdkC,EAAM,GAAQ2lC,kBAAkB3lC,GAC3BA,EAEMA,IAAQlY,KAAK0sB,QAAQlqB,IAAI,OAChCw9C,EAAa,aAAiB,uDAPrB,8JAQMlrC,KAAKoD,IAIpB+c,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa1gD,GACzC+c,EAAQzyB,IAAI,eACZw9C,EAAa,aAAiB,uDALlCA,EAAa,aAAiB,+CAJ9BA,EAAa,aAAiB,kDAY9BA,EACAhgD,KAAKrC,EAAE,wBAAwBwC,SAAS,WACnCq4B,SAAS,WAAWl2B,KAAK09C,KAE7BhgD,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGwsB,2BAA6BztB,EAAQlV,IAAI,4BAA4B,GAClHkV,EAAQ8+C,KAAK,cACb9+C,EAAQ++C,aAAa,CAACj1E,KAAMA,EAAMiyE,OAAQA,IAAS,KAC/C/7C,EAAQ8+C,KAAK,aACb9+C,EAAQ1pB,QAAQ,WAAY0pB,EAAS,kBACrCA,EAAQ1pB,QAAQ,YAAa0pB,EAAS,CAACmE,mBAAmB,GAAM,IACjE,WACCnE,EAAQu8B,SACZ,IACAxxD,KAAKkL,QAEb,EAEA6jB,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,IAGJ,iBAAuBmhB,SAASC,MAAMpX,OAAO,CACzCqmC,YAAa,OACbhvB,SAAU,CACNw3B,UAAU,EACVu7C,aAAc,UACdx2B,QAAS,UACT6/B,sBAAsB,EACtB/0E,eAAe,EACfg1E,iBAAiB,KAIzB,kBAAwBv8E,SAASyvB,sBAAsB5mC,OAAO,CAC1D8pB,MAAO,iBAEPvF,YAAa,SAAUirC,EAAQx6D,GAC3BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK0sB,QAAQrJ,GAAG,UAAWrjB,KAAK29F,aAAc39F,MAC9CA,KAAKuiB,OACT,IAGJ,kBAAwBpB,SAAS0B,iBAAiB7Y,OAAO,CAErDqX,SAAU,WAGN,MAAO,CACH+6E,QAAQ,EACRhI,aAAc,MACdx2B,QAAS,eACTggC,mBANqB,aAAiB,gCAOtCC,sBANwB,aAAiB,mCAQjD,IAGJ,gBAAsB18E,SAAS28E,kBAAkB9zF,OAAO,CACpD8oE,YAAa,SAAU/nE,EAAOid,GAC1BhoB,KAAKunB,SAASw2E,IAAI,eAAgBhzF,GAAO,SAAUizF,GAC/Ch2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAtrB,cAAe,SAAU3nE,EAAOid,GAC5BhoB,KAAKunB,SAAS/kB,IAAI,eAAgBuI,GAAO,SAAUizF,GAC/Ch2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAlE,iBAAkB,SAAU9xE,GACxBhoB,KAAKunB,SAAS02E,QAAQ,eAAgB,MAAM,SAAUD,GAClDh2E,GAAYA,EAASg2E,GAAkB,GAC3C,GACJ,EAEA7pB,iBAAkB,SAAUppE,EAAOid,GAC/BhoB,KAAKunB,SAASrW,OAAO,eAAgBnG,GAAO,SAAUizF,GAClDh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAE,cAAe,WACXl+F,KAAKunB,SAAS42E,eAAe,eACjC,EAEAvoC,eAAgB,WACZ51D,KAAKunB,SAAS62E,gBAAgB,eAClC,IAGJ,8BAAiCj9E,SAAS28E,kBAAkB9zF,OAAO,CAC/DquF,yBAA0B,SAAUttF,EAAOid,GACvChoB,KAAKunB,SAASw2E,IAAI,qBAAsBhzF,GAAO,SAAUizF,GACrDh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAK,2BAA4B,SAAUtzF,EAAOid,GACzChoB,KAAKunB,SAAS/kB,IAAI,qBAAsBuI,GAAO,SAAUizF,GACrDh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAtE,8BAA+B,SAAU1xE,GACrChoB,KAAKunB,SAAS02E,QAAQ,qBAAsB,MAAM,SAAUD,GACxDh2E,GAAYA,EAASg2E,GAAkB,GAC3C,GACJ,EAEA7G,8BAA+B,SAAUpsF,EAAOid,GAC5ChoB,KAAKunB,SAASrW,OAAO,qBAAsBnG,GAAO,SAAUizF,GACxDh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAE,cAAe,WACXl+F,KAAKunB,SAAS42E,eAAe,qBACjC,EAEAvoC,eAAgB,WACZ51D,KAAKunB,SAAS62E,gBAAgB,qBAClC,IAGJ,wBAA8Bj9E,SAAS28E,kBAAkB9zF,OAAO,CAC5D4lE,oBAAqB,SAAU7kE,EAAOid,GAClChoB,KAAKunB,SAASw2E,IAAI,wBAAyBhzF,GAAO,SAAUizF,GACxDh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAM,sBAAuB,SAAUvzF,EAAOid,GACpChoB,KAAKunB,SAAS/kB,IAAI,wBAAyBuI,GAAO,SAAUizF,GACxDh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAhvB,yBAA0B,SAAUhnD,GAChChoB,KAAKunB,SAAS02E,QAAQ,wBAAyB,MAAM,SAAUD,GAC3Dh2E,GAAYA,EAASg2E,GAAkB,GAC3C,GACJ,EAEAO,yBAA0B,SAAUxzF,EAAOid,GACvChoB,KAAKunB,SAASrW,OAAO,wBAAyBnG,GAAO,SAAUizF,GAC3Dh2E,GAAYA,EAASg2E,EACzB,GACJ,EAEAE,cAAe,WACXl+F,KAAKunB,SAAS42E,eAAe,wBACjC,EAEAvoC,eAAgB,WACZ51D,KAAKunB,SAAS62E,gBAAgB,wBAClC,IAGJ,0BAA6B,WACzBp+F,KAAKqzF,gBAAkB,IAAI,kBAAsB,KAAM,CACnD3mE,QAAS1sB,KACTqiB,aAAc,oBAA0B,oBAAsBriB,KAAKwC,IAAI,SAE3ExC,KAAKsnB,cAAgB,IAAI,gBAAoB,KAAM,CAC/CvoB,KAAK,sBAAwBiB,KAAKwC,IAAI,OAAS,IAAMxC,KAAKwC,IAAI,qBAC9Dg8F,aAAc,eACdC,QAAS,QAEbz+F,KAAKwnB,0BAA4B,IAAI,8BAA+B,KAAM,CACtEzoB,KAAK,4BAA8BiB,KAAKwC,IAAI,OAAS,IAAMxC,KAAKwC,IAAI,qBACpEg8F,aAAc,qBACdC,QAAS,8BAEbz+F,KAAKynB,uBAAyB,IAAI,wBAA4B,KAAM,CAChE1oB,KAAK,wBAA0BiB,KAAKwC,IAAI,OAAS,IAAMxC,KAAKwC,IAAI,qBAChEg8F,aAAc,wBACdC,QAAS,QAGbz+F,KAAKilF,mBAAqB,IAAI,qBAAyB,CAACr7E,GAAI,uBAAwB,CAChF8iB,QAAS1sB,KACTqiB,aAAc,oBAA0B,wBAA0BriB,KAAKwC,IAAI,OAC3E+f,MAAO,UAEXviB,KAAKgxE,OAAS,IAAI,UAAc,KAAM,CAACtkD,QAAS1sB,OAChDA,KAAKs1B,SAAW,IAAI,YAAgB,KAAM,CAAC5I,QAAS1sB,OAEpDA,KAAKsnB,cAAcjE,GAAG,wBAAwB,KAC1CrjB,KAAKs1B,SAASggE,cAAct1F,KAAKu2D,OAAS,IAAI,UAAc,KAAM,CAAC7pC,QAAS1sB,KAAM21F,eAAgB,IAAI,IAG1G31F,KAAKsnB,cAAcjE,GAAG,mBAAmB,KACrCrjB,KAAKsnB,cAAcorD,cAAc,kBAAmBnzE,IAChD,IAAIo2F,EAAiBp2F,GAAOA,EAAI8zD,QAAU9zD,EAAI8zD,QAAU,EACxDrzD,KAAKs1B,SAASggE,cAAct1F,KAAKu2D,OAAS,IAAI,UAAc,KAAM,CAAC7pC,QAAS1sB,KAAM21F,eAAgBA,IAAiB,GACrH,IAGN31F,KAAK+lE,UAAY,IAAI,aAAiB,KAAM,CAACr5C,QAAS1sB,OAEtDA,KAAK4qD,qBAAqBxpD,KAAKpB,KAAKs1B,SAASkgD,eAAeltE,KAAKtI,KAAKs1B,WAEtEt1B,KAAKqjB,GAAG,uBAAuB,WAC3BrjB,KAAK6kB,UAAU23B,QACfx8C,KAAKs1B,SAASx1B,MAAK,SAAUm1B,GACzBA,EAAQpQ,UAAU23B,QAClBvnB,EAAQglD,aACZ,IACAj6E,KAAKsnB,cAAcwyE,kBAAkBC,IAOjC,GANA,GAAEA,GAAcj6F,MAAK,CAAC4C,EAAKg8F,KACC,mBAApBA,EAAYxmF,KAGhBlY,KAAKs1B,SAASsjC,aAAa8lC,EAAY,IAEvC1+F,KAAK+sB,YAAc/sB,KAAK+sB,WAAW01B,oBAAsB,cAAmB,CAC5E,IAAIzjD,EAAU,CAAC,EACfgB,KAAKwnB,0BAA0B62E,2BAA2B,uBAAwB9+F,IAC9E,IAAIk6F,EAAsBl6F,GAAOA,EAAIuU,UAAYvU,EAAIuU,UAAY,MAChE9T,KAAKu2D,OAAO8iC,mBAAqBr6F,EAAQ82B,IAAM,GAAU/gC,yBAC1D0kG,IAAwBz6F,EAAQg6B,MAAQygE,GACxCz5F,KAAKu2D,OAAO6/B,eAAep3F,EAAS2/F,QAAQlF,IAAsB,GAClEz5F,KAAKu2D,OAAOqjC,WAAW,GAE/B,MAEI55F,KAAKu2D,OAAOqjC,YAEhB55F,KAAK+lE,UAAU2vB,eAAe,GAEtC,GAAG11F,KACP,IAEA,0BAA6B,WACzBA,KAAK61D,oBACL71D,KAAKg2D,0BACLh2D,KAAKu2D,OAAOi/B,kBACZx1F,KAAK+lE,UAAUyvB,iBACnB,IAAG,GAAM,GAET,QAAY,SAAS,WACjBx1F,KAAK4+F,iBAAmB,IAAI5+F,KAAK6+F,eAAe,CAACj1F,GAAI,mBACjD,CAACyY,aAAcriB,KAAKsiB,iBAAkBC,MAAO,UACjDviB,KAAKwiB,SAAS+zC,OAASv2D,KAAK4+F,iBAAiBtnF,WAC7CtX,KAAK8+F,qBAAuB,0BACxB,kBAAmB9+F,KAAK++F,mBAAoB,CAACjrE,MAAO9zB,KAAK4+F,mBAC7D5+F,KAAKg/F,cAAgBh/F,KAAK6vC,WAAW3gB,SAAS,WAAYlvB,KAAKi/F,eAC3D,CAACnrE,MAAO9zB,KAAKonB,WACjBpnB,KAAK48F,YAAc58F,KAAKkP,KAAKggB,SAAS,SAAUlvB,KAAKk/F,gBACjD,CAACprE,MAAO9zB,KAAKonB,WACjBpnB,KAAKm/F,kBAAoBn/F,KAAK8vC,YAAY5gB,SAAS,UAAWlvB,KAAKytE,WACnEztE,KAAKo/F,kBAAoBp/F,KAAK+vC,oBAAoB7gB,SAAS,UAAWlvB,KAAKytE,WAC3EztE,KAAKg9F,oBAAsBh9F,KAAK+vC,oBAAoB7gB,SAAS,sBACzDlvB,KAAKq/F,wBACTr/F,KAAKs/F,iBAAmB,IAAIt/F,KAAKu/F,eACjCv/F,KAAKqjB,GAAG,eAAe,WACnBrjB,KAAKs/F,iBAAiB5wE,MAC1B,GAAG1uB,KACP,GAAG,IAEH,Y,gBC12TA,IAAI,GAAM,OACN,GAAY,GAAI7O,UAChB,GAAY,GAAI0N,UAAU60B,MAC1B,GAAQ,GAAIzgB,MACZ,GAAI,GAAItV,EACR,GAAM,GAAIq4B,IACVwhD,GAAO,GAAIA,KACX,GAAU,GAAI94E,QACd,GAAI,GAAId,EACR,GAAS,GAAIC,OACb,GAAO,GAAIqV,KACX,GAAS,GAAMwN,OACf,GAAQ,GAAMvf,MACd6S,GAAeF,GAAuB,GAAME,YAAYF,GAAwC,SAA5B,sBAAmE,WAA5B,sBAA2E,SAAlC,OAAW,sBAAmC,qBAClM,GAAmBA,GAAuB,GAAMG,gBAAgBH,GAAwC,SAA5B,sBAAmE,WAA5B,sBAA2E,SAAlC,OAAW,sBAAmC,wBAE9M,WAAiBqN,SAASC,MAAMpX,OAAO,CACnCqmC,YAAa,YAEbhvB,SAAU,WACN,IAAIm+E,EAAQ,KACZ,MAAO,CACHA,MAAOA,EACP3rC,UAAW2rC,EACX37F,KAAM,OACN41B,MAAO,GAAUxjC,YAEzB,EAEA0rB,WAAY,WACR,IAAInH,EAAOxa,KAAKwC,IAAI,QAAS4U,EAAQ,CAAC,EAClCoD,EACApD,EAAMtD,UAAY/R,OAAO,GAAOyY,KAEhCpD,EAAMtD,UAAY,GAAO3K,MACzBiO,EAAMoD,KAAO,GAAOpD,EAAMtD,WAAWC,UAEpC/T,KAAKwC,IAAI,cACTxC,KAAKg5F,eAAiBh5F,KAAKwC,IAAI,wBAA0BxC,KAAKwC,IAAI,mBAAqBxC,KAAKwC,IAAI,gBAAmBxC,KAAK+f,IAAI,YAAa/f,KAAKwC,IAAI,UACvJxC,KAAKy/F,iBACLz/F,KAAK+f,IAAI3I,GACTpX,KAAKqjB,GAAG,uDAAwDrjB,KAAKy/F,eAAgBz/F,KACzF,EAEAy/F,eAAgB,WACZz/F,KAAK+f,IAAI,YAAc/f,KAAKwC,IAAI,cAAgBxC,KAAKwC,IAAI,gBAAkBxC,KAAKwC,IAAI,cAAgBxC,KAAKwC,IAAI,SACjH,EAEAk9F,cAAe,WACP1/F,KAAK6pD,YAAc7pD,KAAK6pD,WAAW31D,MAAQ8L,KAAK6pD,WAAW31D,KAAK0gC,WAAa50B,KAAK6pD,WAAW31D,KAAK0gC,UAAUqO,QAC5GjjC,KAAK6pD,WAAW31D,KAAK0gC,UAAUqO,QAAQ08D,cAAc3/F,MAErDA,KAAKwxD,SACb,EAEA1R,QAAS,WACL,IAAI8/C,EAAoB5/F,KAAKwC,IAAI,qBACjC,OAAIo9F,GAAqBA,EAAkB39F,OAChC29F,EAAkB,GAAGp9F,IAAI,WAE7BxC,KAAKwC,IAAI,UACpB,EAEAq9F,SAAU,WACN,OAAO,GAAUpiG,UAAUuC,KAAKwC,IAAI,SACxC,EAEAs9F,gBAAiB,WACb,IAAIrmE,EAAQ,aAAiB,GAAU/7B,kBAAkBsC,KAAKwC,IAAI,WAOlE,OANIxC,KAAK0sB,QACA1sB,KAAK0sB,QAAQy+B,aACd1xB,EAAQ,aAAiB,uBAEvBz5B,KAAK6pD,WAAWn9B,QAAQy+B,aAC9B1xB,EAAQ,aAAiB,uBACtBA,CACX,EAEAu/D,WAAY,WACR,OAAIh5F,KAAK0sB,QACE1sB,KAAK0sB,QAAQlqB,IAAI,SAAWxC,KAAKwC,IAAI,YACvCxC,KAAK6pD,WAAWn9B,QACd1sB,KAAK6pD,WAAWn9B,QAAQlqB,IAAI,SAAWxC,KAAKwC,IAAI,iBADtD,CAIT,IAGJ,gBAAsB2e,SAASm6C,WAAWtxD,OAAO,CAC7C8pB,MAAO,aAGT,oBAA0B,uBAA2B,CACjDiB,WAAY,YAEZpT,WAAY,WACR3hB,KAAKo1F,YAAc,GACnBp1F,KAAKqjB,GAAG,MAAO,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,QACtDA,KAAKqjB,GAAG,SAAU,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,UAC7D,EAEAs1F,cAAe,SAAUzrC,GACrB7pD,KAAKo1F,YAAYh0F,KAAKyoD,EAC1B,EAEAwrC,oBAAqB,SAAUr0E,EAAOiU,GAClC,GAAEn1B,KAAKE,KAAKo1F,aAAa,SAAUvrC,GAC/BA,EAAW5xB,OAAOhD,EAASjU,EAC/B,GACJ,IAGJ,YAAkBG,SAASm6C,WAAWtxD,OAAO,CAC3C8pB,MAAO,WACPiB,WAAY,YAEZpT,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK9L,KAAO8K,EAAQ9K,KACpB8L,KAAK0sB,QAAU1tB,EAAQ0tB,OAC3B,EAEAqzE,2BAA4B,SAAUlpB,EAAU73E,GAC5CA,EAAUA,GAAW,CAAC,EACtB,IAYIghG,EAXA7uB,EADe0F,EAASh3E,KAAK,UACLL,KAAK,QAAUq3E,EAASr3E,KAAK,QACrDygG,EAASjhG,EAAQ85F,OAASjiB,EAASlpD,SAAS,SAC5CwiC,EAAW,GAAQtS,kBAAkBszB,GACrCjiE,EAAO2nE,EAASlpD,SAAS,QAAQrrB,OACjC49F,EAAWrpB,EAASh3E,KAAK,YAAYoC,OAAS,EAC9Cu9F,EAAQ3oB,EAASr3E,KAAK,MACtB2gG,EAAatpB,EAASlpD,SAAS,YAAYnuB,KAAK,MAChD4gG,EAAYvpB,EAASlpD,SAAS,aAAanuB,KAAK,MAChDq0D,EAAY70D,EAAQu4E,WAAa4oB,GAAcC,GAAaZ,EAC5DtoF,EAAU28C,GAAa7zD,KAAKwC,IAAIqxD,GAChCwsC,EAAcxpB,EAASlpD,SAAS,YAAc,GAAQuI,GAAGy4C,WAAa,MAEtE2xB,EAAwB,CAAC,EAQ7B,IALKppF,GAAW28C,IACZA,EAAYusC,GAAaphG,EAAQu4E,WAAa4oB,GAAcX,EAC5DtoF,EAAUlX,KAAKwC,IAAIqxD,IAGnB38C,EACA,OAAOA,EAEX,IAAKi5C,EACD,OAEJ,IAAI/4C,EAAQ,CACR8zC,IAAKlsD,EAAQksD,KAAO2rB,EAAS,GAC7B0pB,cAAevhG,EAAQuhG,gBAAkBvhG,EAAQoxD,YACjD8vC,SAAUA,EACVV,MAAOA,EACPgB,aAAcxhG,EAAQwhG,aACtBZ,kBAAmB5gG,EAAQ4gG,mBAAqB,KAChDzvC,SAAUA,EACViwC,UAAWA,EACX7oB,UAAWv4E,EAAQu4E,UACnB4oB,WAAYA,EACZM,kBAAmBzhG,EAAQyhG,kBAC3BrwC,YAAapxD,EAAQoxD,aAGzB6vC,EAAOh+F,SAAWmV,EAAMoD,KAAOylF,EAAOzgG,KAAK,UAC3CR,EAAQm5F,aAAe/gF,EAAMspF,+BAAgC,GAC7DxxF,IAASkI,EAAMF,QAAUhI,GAEzB,IAAI+lB,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa,CAAC1gD,IAAK,GAAQ2lC,kBAAkBsS,GAAW8gB,YAAY,IACpG/8E,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GAKtC,IAHC/gC,EAAK0gC,UAAUqO,UAAY/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aAEjGK,EAAQlV,IAAI,aAAa,GACrBsgF,EAAYp+F,OAAQ,CACpB,IAAIlD,EAAOshG,EAAYxgG,KAAK,QAAQyC,OAChCwxB,EAAQusE,EAAYxgG,KAAK,cAAcyC,OACvC6zE,EAAUkqB,EAAYxgG,KAAK,WAAWyC,OACtCmjD,EAAa46C,EAAYxgG,KAAK,SAASyC,OACvCq+F,EAAcN,EAAYxgG,KAAK,eAAeyC,OAC9C2iD,EAAco7C,EAAYxgG,KAAK,eAAeyC,OAClDvD,IAASuhG,EAAsBvhG,KAAOA,GACtC+0B,IAAUwsE,EAAsBxsE,MAAQ/0B,GACxCo3E,IAAYmqB,EAAsBnqB,QAAUA,GAC5C1wB,IAAe66C,EAAsB76C,WAAaA,GAClDR,IAAgBq7C,EAAsBr7C,YAAcA,GACpD07C,EAAY1+F,SAAW+9F,GAAwB,GAC/CA,GAAyB/qE,EAAQlV,IAAI,gBAAgB,GACzC,cAAZo2D,GAA2BlhD,EAAQlV,IAAI,kBAAkB,GACzD,IAAI+1D,EAAkB7gD,EAAQzyB,IAAI,eAAiB,CAAC,EACpD,GAAEwH,OAAO8rE,EAAiBwqB,GAC1BrrE,EAAQlV,IAAI,aAAc+1D,EAC9B,CAWA,OATiB5hF,EAAKq/B,SAASq2D,oBAAoB,GAAE5/E,OAAOoN,EAAO,CAC/D+4C,SAAUA,EACVywC,cAAc,EACdC,QAAQ,EACRC,eAAgBd,IAAyB,EACzCe,aAAa,EACbzD,QAAQ,EACRpmF,QAAS2/D,EAASh3E,KAAK,UAAUyC,SAGzC,EAEAoxE,iBAAkB,SAAUmD,EAAU73E,GAClCA,IAAYA,EAAU,CAAC,GACvB,IAAIihG,EAASjhG,EAAQ85F,OAASjiB,EAASlpD,SAAS,SAC5CwjD,EAAW0F,EAASr3E,KAAK,SAAWR,EAAQmxD,SAC5CA,EAAW,GAAQtS,kBAAkBszB,GACrCjiE,EAAO2nE,EAASlpD,SAAS,QAAQ1rB,OAAS40E,EAASlpD,SAAS,QAAQrrB,OAASu0E,EAASlpD,SAAS,YAAYA,SAAS,WAAWA,SAAS,QAAQrrB,OAChJ49F,EAAWrpB,EAASh3E,KAAK,YAAYoC,OAAS,EAC9Ck+F,EAAatpB,EAASlpD,SAAS,YAAYnuB,KAAK,MAChD4gG,EAAYvpB,EAASlpD,SAAS,aAAanuB,KAAK,MAChDggG,EAAQ3oB,EAASr3E,KAAK,MACtBq0D,EAAY70D,EAAQu4E,WAAa4oB,GAAcC,GAAaZ,EAC5DtoF,EAAU28C,GAAa7zD,KAAKwC,IAAIqxD,GASpC,IAPK38C,GAAW28C,IACZA,EAAYusC,GAAaphG,EAAQu4E,WAAa4oB,GAAcX,EAC5DtoF,EAAUlX,KAAKwC,IAAIqxD,IAElB38C,IACDA,EAAUlX,KAAK6jE,UAAU,CAAC,UAAau8B,KAEvCphG,EAAQgiG,SAAU,CAClB,IAAIlK,EAAejgB,EAASlpD,SAAS,WAAWnuB,KAAK,gBACrD,GAAIq3E,EAASlpD,SAAS,WAAWA,SAAS,WAAWA,SAAS,oBAAoB,GAAQuI,GAAGkhE,+BAA+Bn1F,OACxH,OACJ,GAAI40E,EAASlpD,SAAS,WAAWA,SAAS,WAAWA,SAAS,oBAAoB,GAAQuI,GAAGmvC,WAAWpjE,QAAUjC,KAAK0sB,QAAQ4mC,QAAUt0D,EAAQiiG,UAE7I,YADAjhG,KAAK0sB,QAAQ4mC,MAAM3/B,mBAAmBkjD,EAAU,GAAE7sE,OAAOhL,EAAS,CAACmxD,SAAU2mC,EAAcA,aAAcA,KAI7G5nF,GADA2nE,EAAWA,EAASlpD,SAAS,WAAWA,SAAS,YACjCA,SAAS,QAAQ1rB,OAAS40E,EAASlpD,SAAS,QAAQrrB,OAASu0E,EAASlpD,SAAS,YAAYA,SAAS,WAAWA,SAAS,QAAQrrB,OAChJ,IAAI4+F,EAAMrqB,EAASlpD,SAAS,aAAauE,QAAQ1yB,KAAK,MAEtD,GADA0X,EAAUlX,KAAKH,MAAK+W,GAAKA,EAAEpU,IAAI,eAAiB0+F,GAAOtqF,EAAEpU,IAAI,uBAAyB0+F,KACjFhqF,EACD,OACJi5C,EAAWj5C,EAAQ1U,IAAI,YACvBg9F,EAAQtoF,EAAQ1U,IAAI,SACpB,IAAI0oD,EAAMh0C,EAAQ1U,IAAI,OACtB0oD,EAAI96C,UAAYymE,EAAS,GAAGzmE,UAC5BpR,EAAQksD,IAAMA,EACdlsD,EAAQ4gG,kBAAoB1oF,EAAQ1U,IAAI,oBAC5C,CAEA,GAAI0U,IAAYlY,EAAQgiG,WAAahiG,EAAQmiG,kBAAoBniG,EAAQmlF,mBAAqBnlF,EAAQs3E,iBAAmBt3E,EAAQoiG,sBAAwBpiG,EAAQqiG,WAAariG,EAAQ40B,YAClL,OAAO1c,EAEX,IAAIE,EAAQ,CACJ8zC,IAAKlsD,EAAQksD,KAAO2rB,EAAS,GAC7Bj/D,iBAAkB1I,EAClBqxF,cAAevhG,EAAQuhG,gBAAkBvhG,EAAQoxD,YACjD8vC,SAAUA,EACVV,MAAOA,EACPgB,aAAcxhG,EAAQwhG,aACtBZ,kBAAmB5gG,EAAQ4gG,mBAAqB,KAChDzvC,SAAUA,EACVswC,kBAAmBzhG,EAAQyhG,kBAC3BrwC,YAAapxD,EAAQoxD,aAEzB74C,EAAW,GAAIG,EAAc,GAAIF,EAAU,GAAIC,EAAkB,GAAI+wB,EAAQ,GAAI9nB,EAAS,GAAI88C,EAAS,GAAI4b,EAAY,GAAIkoB,EAAkB,GA8JjJ,GA5JAtiG,EAAQugB,WAAa,GAAEvV,OAAOoN,EAAO,CAACmI,WAAW,IACjDvgB,EAAQu2F,eAAe,eAAiB,GAAEvrF,OAAOoN,EAAO,CAACmqF,WAAYviG,EAAQuiG,cAC5D1qB,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAGqiD,eAAet2E,OAC7E40E,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAGqiD,eACjD1B,EAASlpD,SAAS,YAAYA,SAAS,WAAWA,SAAS,oBAAoB,GAAQuI,GAAGqiD,gBAEnFz4E,MAAK,CAAC4C,EAAK81E,KAClB,IAAIC,EAAa,GAAED,GACf30E,EAAO40E,EAAWj5E,KAAK,QACvBgiG,EAAQrkF,SAASs7D,EAAWj5E,KAAK,UACjCwX,EAAMmG,SAASs7D,EAAWj5E,KAAK,QACnC,GAAa,eAATqE,EACA,GAAI40E,EAAW9qD,SAAS,kBAAkB,GAAQuI,GAAGurE,YAAYx/F,OAAQ,CACrE,IAAIy/F,EAAWjpB,EAAW9qD,SAAS,kBAAkB,GAAQuI,GAAGurE,YAC5Dh0F,EAASi0F,EAASp/F,OAClB2V,EAAQypF,EAASliG,KAAK,UAAY,GAAQ02B,GAAGy4C,WACjDp3D,EAASnW,KAAK,CAAC2V,MAAOyqF,EAAOxqF,IAAKA,EAAKvJ,OAAQA,EAAQwK,MAAOA,GAClE,KAAO,CACH,IAAIG,EAAS,GACbqgE,EAAW9qD,WAAW7tB,MAAK,CAAC0D,EAAGm+F,KACvB,GAAUjnG,YAAY0J,QAAQu9F,EAAUnvF,UAAY,GAAK,GAAEmvF,GAAWniG,KAAK,WAAa,GAAQ02B,GAAGurE,SACzE,SAAtBE,EAAUnvF,QACV4F,EAAOhX,KAAK,CAACyC,KAAM89F,EAAUnvF,QAASgG,IAAK,GAAEmpF,GAAWr/F,SAC7B,UAAtBq/F,EAAUnvF,QACfkF,EAAYtW,KAAK,CAAC2V,MAAOyqF,EAAOxqF,IAAKA,IAErCoB,EAAOhX,KAAKugG,EAAUnvF,SAC9B,IAEJ4F,EAAOnW,QAAUuV,EAAQpW,KAAK,CAAC2V,MAAOyqF,EAAOxqF,IAAKA,EAAKoB,OAAQA,GACnE,MACG,GAAa,YAATvU,EAAoB,CAC3B,IAAI+9F,EAAenpB,EAAW9qD,SAAS,iBAAiB,GAAQuI,GAAGu4C,YAAYv8C,QAC3E2vE,EAAY,CAAC,EASjB,GARID,EAAaj0E,SAAS,OAAOrrB,QAAUs/F,EAAaj0E,SAAS,OAAOrrB,SACpEu/F,EAAY,CACRC,IAAKF,EAAaj0E,SAAS,OAAOrrB,OAClCy/F,IAAKH,EAAaj0E,SAAS,OAAOrrB,QAEtC82E,EAAUh4E,KAAKygG,GACfpqF,EAAgBrW,KAAK,CAAE2V,MAAOyqF,EAAOxqF,IAAKA,EAAKnT,KAAM,iBAErD40E,EAAW9qD,SAAS,cAAc,GAAQuI,GAAG8rE,SAAS//F,OAAQ,CAC9D,IAAIggG,EAAOxpB,EAAW9qD,SAAS,cAAc,GAAQuI,GAAG8rE,SAAS9vE,QAC7DgwE,EAAuB,CAAC,EACxBD,EAAKhgG,SACLigG,EAAuB,CACnB3pC,KAAM0pC,EAAKt0E,SAAS,iCAAiCnuB,KAAK,WAC1DqE,KAAMo+F,EAAKt0E,SAAS,4BAA4BnuB,KAAK,WACrDhK,IAAKysG,EAAKt0E,SAAS,2BAA2BnuB,KAAK,WACnDylD,YAAag9C,EAAKt0E,SAAS,mCAAmCnuB,KAAK,WACnEoC,MAAOqgG,EAAKt0E,SAAS,6BAA6BnuB,KAAK,WACvDxE,MAAOinG,EAAKt0E,SAAS,6BAA6BnuB,KAAK,WACvDk5D,YAAaupC,EAAKt0E,SAAS,mCAAmCnuB,KAAK,WACnEi5D,aAAcwpC,EAAKt0E,SAAS,oCAAoCnuB,KAAK,WACrEm5D,UAAWspC,EAAKt0E,SAAS,iCAAiCnuB,KAAK,WAC/D2iG,cAAeF,EAAKziG,KAAK,OACzBuX,MAAOyqF,EACPxqF,IAAKA,GAETsqF,EAAgBlgG,KAAK8gG,GACrBzqF,EAAgBrW,KAAK,CAAC2V,MAAOyqF,EAAOxqF,IAAKA,EAAKnT,KAAM,mBAE5D,CACA,IAAI60E,EAAgBD,EAAW54E,KAAK,uBAAuB,GAAQq2B,GAAGyiD,WAAWzmD,QACjF,GAAIumD,EAAW9qD,SAAS,aAAa1rB,OACjCwV,EAAgBrW,KAAK,CAAE2V,MAAOyqF,EAAOxqF,IAAKA,EAAKnT,KAAM,iBACpD,GAAI60E,EAAcz2E,OAAQ,CAC3B,IAAI4B,EAAO60E,EAAcjrD,OAAO,wBAAwB,GAAQyI,GAAG0iD,mBAAmB32E,OAAS,QAAU,OACrG42E,EAAQH,EAAc/qD,SAAS,QAASmrD,EAAa,CAAC,EAAGp3C,EAAU,GAiBvE,GAhBAjqB,EAAgBrW,KAAK,CAAE2V,MAAOyqF,EAAOxqF,IAAKA,EAAKnT,KAAMA,IACrD60E,EAAc/qD,SAAS,WAAWA,SAAS,OAAO7tB,MAAK,CAAC0D,EAAGgV,KAASkpB,EAAQtgC,KAAK,GAAEoX,GAAKlW,OAAO,IAC/Fw2E,EAAa,CACT/5E,KAAM85E,EAAMlrD,SAAS,QAAQrrB,OAC7BkF,KAAMqxE,EAAMlrD,SAAS,eAAe,GAAQuI,GAAG6iD,UAAUz2E,OACzDsC,KAAMi0E,EAAMlrD,SAAS,QAAQrrB,OAC7BuB,KAAMg1E,EAAMlrD,SAAS,cAAcrrB,OACnCsT,SAAUijE,EAAMlrD,SAAS,YAAYrrB,OACrC2iD,YAAa4zB,EAAMlrD,SAAS,QAAQrrB,OACpCyC,OAAQ8zE,EAAMlrD,SAAS,UAAUrrB,OACjCwC,MAAO+zE,EAAMlrD,SAAS,SAASrrB,OAC/BgnC,UAAWuvC,EAAMlrD,SAAS,iBAAiBrrB,OAC3CsH,GAAIivE,EAAMlrD,SAAS,cAAcrrB,OACjC41D,MAAgB,UAATr0D,EACP69B,QAASA,GAEuB,GAAhCA,EAAQ,GAAGt9B,QAAQ,UAAgB,CACnC,IAAIoU,EAAMkpB,EAAQ,GAAG7/B,QAAQ,UAAW,SACpCwU,EAAM,GAAMwF,wBAAwBrD,EAAInV,MAAMmV,EAAIvW,OAAS,KAC/DuW,EAAMA,EAAInV,MAAM,EAAGmV,EAAIvW,OAAS,GAAK,GACrC,GAAE+H,OAAO8uE,EAAY,CAACp3C,QAAS,CAAClpB,GAAMnC,IAAKA,IAC3Ce,EAAM8hE,qBAAsB,CAChC,CAC8D,UAA1Dl5E,KAAKoiG,YAAYvpB,EAAMlrD,SAAS,cAAcrrB,QAC9Coe,EAAOtf,KAAK03E,GACmD,UAA1D94E,KAAKoiG,YAAYvpB,EAAMlrD,SAAS,cAAcrrB,QACnDk7D,EAAOp8D,KAAK03E,GAEZtwC,EAAMpnC,KAAK03E,EACnB,CACJ,CAA6B,IAGjCjC,EAASlpD,SAAS,YAAc,GAAQuI,GAAGy4C,WAAa,MAAM7uE,MAAK,CAAC4C,EAAK2/F,KACrE,IAAI5pB,EAAa,GAAE4pB,GAAQ10E,SAAS,oCAAoC,GAAQuI,GAAGqiD,eAC/E+pB,EAAQ7pB,EAAW9qD,SAAS,eAAe,GAAQuI,GAAGy4C,gBAAgBz8C,QACtE,GAAIumD,EAAWx2E,OAAQ,CACnB,IAAIu/F,EAAQrkF,SAASs7D,EAAWj5E,KAAK,UACjCwX,EAAMmG,SAASs7D,EAAWj5E,KAAK,QACnCiY,EAAgBrW,KAAK,CAAC2V,MAAOyqF,EAAOxqF,IAAKA,EAAKnT,KAAM,cACpD,IAAI0+F,EAAUD,EAAM9iG,KAAK,MACrBgjG,EAAWF,EAAM30E,SAAS,OAAOrrB,OACrC,GAAE0H,OAAOoN,EAAO,CACZoiE,UAAW,CACP5vE,GAAI24F,EACJrqF,IAAKsqF,EACL79C,SAAU29C,EAAM30E,SAAS,YAAYrrB,QAAUkgG,GAAYD,EAC3Dv9C,KAAMs9C,EAAM30E,SAAS,QAAQrrB,OAC7BgpC,OAAQg3D,EAAM30E,SAAS,mBAAmB,GAAQuI,GAAGo2B,4BAA4B3+B,SAAS,QAAQnuB,KAAK,MACvG8mF,WAAYgc,EAAM30E,SAAS,mBAAmB,GAAQuI,GAAGo2B,4BAA4B3+B,SAAS,QAAQnuB,KAAK,OAC3GmmF,MAAO2c,EAAM30E,SAAS,SAASrrB,QAEnC6tD,SAAUqyC,GAAYD,EACtBE,cAAe,GAAQ5kD,kBAAkB7+C,EAAQ0jG,UAAY7rB,EAASr3E,KAAK,MAAQq3E,EAASr3E,KAAK,UAEzG,KAGRkY,EAAYzV,SAAWmV,EAAMM,YAAcA,GAC3CH,EAAStV,SAAWmV,EAAMG,SAAWA,GACrCC,EAAQvV,SAAWmV,EAAMI,QAAUA,GACnCkJ,EAAOze,SAAWmV,EAAMsJ,OAASA,GACjC88C,EAAOv7D,SAAWmV,EAAMomD,OAASA,GACjCh1B,EAAMvmC,SAAWmV,EAAMoxB,MAAQA,GAC/B4wC,EAAUn3E,SAAWmV,EAAMgiE,UAAYA,GACvCkoB,EAAgBr/F,SAAWmV,EAAMkqF,gBAAkBA,GACnDlqF,EAAMK,gBAAkBA,EACnBL,EAAMK,gBAAgBxV,SACvBmV,EAAMwoF,kBAAoB,MAE9B5gG,EAAQu4E,YAAcngE,EAAMmgE,UAAYv4E,EAAQu4E,WAChD6oB,IAAchpF,EAAMgpF,UAAYA,GAChCD,IAAe/oF,EAAM+oF,WAAaA,IAEjCnhG,EAAQgiG,UAAYzpF,EAAStV,UAAYmV,EAAMG,SAAWA,IAC1DvY,EAAQgiG,UAAYxpF,EAAQvV,UAAYmV,EAAMI,QAAUA,IACxDxY,EAAQgiG,UAAYx4D,EAAMvmC,UAAYmV,EAAMoxB,MAAQA,IACpDxpC,EAAQgiG,UAAYtgF,EAAOze,UAAYmV,EAAMsJ,OAASA,IACtD1hB,EAAQgiG,UAAYxjC,EAAOv7D,UAAYmV,EAAMomD,OAASA,IACtDx+D,EAAQgiG,UAAYM,EAAgBr/F,UAAYmV,EAAMkqF,gBAAkBA,GAErEzqB,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+B1sE,SACxEmV,EAAMvT,KAAO,SACbuT,EAAMurF,qBAAuB9rB,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+BnvE,KAAK,YAG1Gq3E,EAASlpD,SAAS,YAAY,GAAQuI,GAAGE,cAAcn0B,QACvD40E,EAASlpD,SAAS,YAAY,GAAQuI,GAAGE,cAAcv2B,KAAK,+CAA+CyC,SAAW,GAAQ4zB,GAAG0sE,QAAS,CAC1I,IAAIC,EAAY,GAChBhsB,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAG4sE,aAAan1E,SAAS,WAAW7tB,MAAK,CAAC4C,EAAK4iD,KACzF,IAAIy9C,EAAW,GAAEz9C,GACjBu9C,EAAUzhG,KAAK,CAACyC,KAAMk/F,EAASvjG,KAAK,QAAS0Y,IAAK6qF,EAASvjG,KAAK,QAAQ,IAE5E4X,EAAMmC,UAAY,GAAEvP,OAAOhK,KAAK0sB,QAAQygC,cAAc0pB,EAASlpD,SAAS,YAAY,GAAQuI,GAAGE,eAAgB,CAACysE,UAAWA,GAC/H,CAwBA,GAtBA3zF,IAASA,EAAO,GAAMuH,kBAAkBvH,EAAMuI,IAEzCL,EAAMwoF,mBAA4C,KAAvB1wF,EAAK/M,gBACjCiV,EAAM4rF,WAAaz/F,MAAMqP,KAAK1D,GAAMjN,QAExCmV,EAAMF,QAAUhI,EAEhBlQ,EAAQqiG,WAAapB,EAASppB,EAASlpD,SAAS,SAChDsyE,EAAOh+F,SAAWmV,EAAMoD,KAAOylF,EAAOzgG,KAAK,WAC1C4X,EAAMmpF,eAAiBpwC,GAAYnwD,KAAK0sB,QAAQlqB,IAAI,SAAWxD,EAAQoxD,aAAepxD,EAAQm5F,eAAiB/gF,EAAMqiB,MAAQ,GAAUvjC,UACxI8I,EAAQm5F,aAAe/gF,EAAM6rF,oBAAqB,GAClDjkG,EAAQkkG,iBAAmB9rF,EAAM+rF,YAAa,GAC1CnkG,EAAQqiG,WACRjqF,EAAMqiB,MAAQ,GAAUtjC,cACxBihB,EAAMtD,UAAY/R,OAAO,GAAOqV,EAAMoD,OACtCpD,EAAM+4C,SAAWnwD,KAAK0sB,QAAQlqB,IAAI,SAErCxD,EAAQmiG,iBAAmBniG,EAAQoiG,qBAAuBpiG,EAAQmlF,kBAAoBnlF,EAAQ40B,eAAiBxc,EAAMqiB,MAAQ,GAAUpjC,cAEpI2J,KAAK9L,MAAQ8L,KAAK9L,KAAK0gC,YAAc50B,KAAK9L,KAAK0gC,UAAUqO,UACzDjjC,KAAK9L,KAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWn1B,KAAK9L,KAAK0gC,aAE/E51B,EAAQs3E,eACR,OAAOt2E,KAAK0sB,QAAQ02E,gBAAgBryD,OAAO35B,GAE/C,GAAIpY,EAAQoiG,oBACR,OAAOphG,KAAK0sB,QAAQm7D,qBAAqB92C,OAAO35B,GAEpD,GAAIpY,EAAQmlF,iBAGR,OAFAnlF,EAAQqzB,QAAUjb,EAAMib,MAAQrzB,EAAQqzB,OACxCrzB,EAAQqkG,+BAAiCjsF,EAAMisF,6BAA+BrkG,EAAQqkG,8BAC/ErjG,KAAK0sB,QAAQ43D,kBAAkBvzC,OAAO35B,GAGjD,GAAIpY,EAAQmiG,gBACR,OAAOnhG,KAAK0sB,QAAQ42E,iBAAiBvyD,OAAO35B,GAKhD,GAHIpY,EAAQqiG,UAAYnqF,GACpBA,EAAQwoF,iBAER1gG,EAAQgiG,WAAY9pF,EAAxB,CAKA,GAAIlY,EAAQ40B,YAAa,CACrB,IAAI2vE,EAAc,GAAQ1lD,kBAAkBg5B,EAASr3E,KAAK,SAK1D,OAJC+jG,IAAgBvjG,KAAK0sB,QAAQlqB,IAAI,SAAY+gG,EAAc,GAAQ1lD,kBAAkBg5B,EAASr3E,KAAK,QACpG0X,EAAU,gCAAoCE,GAC9CF,EAAQ+d,QAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa2qC,GACrDrsF,EAAQwV,QAAU1sB,KAAK0sB,QAChBxV,CACX,CAMA,OAJAA,EAAUlX,KAAK+wC,OAAO35B,GAErBpY,EAAQugB,WAAavgB,EAAQ65F,WAAc3hF,EAAQ6I,IAAI,aAAa,GAE9D7I,CAfP,CAFIA,EAAQ6I,IAAI3I,EAkBpB,EAEE4qB,YAAa7lB,eAAgB3D,EAAKnC,GAC9B,OAAO,IAAI2N,SAAQ,CAAC3b,EAAS4b,KACzB1B,MAAM/J,GAAK6B,MAAMjH,IACbA,EAAErL,OAAOsS,MAAMtS,IACX,IAAIy7F,EAAa,IAAIv7F,WACrBu7F,EAAW7rC,UAAY,KACnB,IAAI17C,EAAcunF,EAAWt7F,OACzBu7F,EAAoBptF,EAAIhT,MAAM,EAAG,IACjCib,EAAWjI,EAAIhT,MAAM,IACzB,GAAMya,IAAIM,QAAQqlF,EAAmBnlF,EAAUrC,GAAa5B,MAAMqpF,IAC9Dr7F,EAAQq7F,EAAS,GACnB,EAENF,EAAWG,kBAAkB57F,EAAK,GACpC,IACHsgB,OAAM,KACLhgB,EAAQ,KAAI,GACd,GAEV,EAEFu7F,YAAa,SAAUC,GACnB,IAAInhG,EAAMmhG,EAAUC,YAAY,KAChC,OAAOD,EAAU9tF,OAAOrT,EAAM,EAAGmhG,EAAU5hG,OAAS,EACxD,EAEAmgG,YAAa,SAAS2B,GAClB,IAAI/rF,EAAW+rF,EAAU3/F,QAAQ,MAAQ,EAAK2/F,EAAU3/F,QAAQ,KAAO2/F,EAAU9hG,OAEjF,OADW8hG,EAAU1gG,MAAM,EAAG2U,EAElC,EAEA4xE,oBAAqB,SAAUxyE,GAC3B,OAAOpX,KAAK+wC,OAAO,GAAE/mC,OAAO,CACxBnG,KAAM,SACNy5F,QAAQ,EACR7jE,MAAO,GAAUrjC,eAClBghB,GACP,IAGF,iBAAuB+J,SAASC,MAAMpX,OAAO,CACzCqX,SAAU,CACNzL,SAAU,EACVouF,iBAAkB,GAClB/sC,WAAY,EACZh8D,OAAO,EACPgpG,WAAW,EACXC,UAAU,EACVC,cAAc,EACd1qE,MAAO,GAGX9X,WAAY,SAAUvK,EAAOpY,IACzBoY,EAAQA,GAAS,CAAC,GACZgtF,WAAahtF,EAAMgtF,aAAc,EACvChtF,EAAMlc,MAAQkc,EAAMgtF,WACpBpkG,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAKqkG,oBACLrkG,KAAKskG,kBAAoB,aAAiBltF,EAAMmtF,eAAiB,0BAAgC,+BAAmC,GACpIvkG,KAAKwkG,WAAa,IAAI,qBAAyB,CAAC1wE,MAAO9zB,OACvDA,KAAK47C,KAAO,IAAI6oD,kBAAkB,CAC9BC,WAAY,CACR,CACI/uG,KAAM,gCAEV,CACIA,KAAM,wCAEZ4jF,OAAO,GAAUhkF,mBACnBovG,aAAc,iBAElB3kG,KAAK4kG,iBAAmB,GAAE,iDAC1B5kG,KAAK6kG,iBAAmB,GAAE,wDAC1B7kG,KAAK8kG,aAAe9kG,KAAKwkG,WAAWzkG,IAAIF,KAAK,uBAC7CG,KAAK+kG,cAAgB,EACrB/kG,KAAK47C,KAAKopD,wBAA0BhlG,KAAKilG,wBAAwB38F,KAAKtI,MACtEA,KAAK+f,IAAI3I,GACTpX,KAAKwC,IAAI,OAASxC,KAAK86D,aAAa,aAAiB,0CACrD96D,KAAKklG,qBACLllG,KAAK47C,KAAKupD,QAAWt6F,IACjB7K,KAAKolG,cAAgBv6F,EAAGw6F,QAAQ,GAChCrlG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,GAAG8nE,UAAY98D,EAAGw6F,QAAQ,EAAE,EAEjFrlG,KAAKslG,iBAAmBl7F,YAAW,MAC7BpK,KAAKwC,IAAI,UAAmC,YAAvBxC,KAAKwC,IAAI,WAA2BxC,KAAKwC,IAAI,oBAAsBxC,KAAK0sB,QAAQlqB,IAAI,QAAWxC,KAAKikB,QAAQ,GACpG,IAAhC,GAAUnvB,qBACbkL,KAAK47C,KAAK2pD,eAAiBvlG,KAAKwlG,eAAel9F,KAAKtI,MACpDA,KAAK47C,KAAK6pD,2BAA6BzlG,KAAK0lG,2BAA2Bp9F,KAAKtI,MAC5EA,KAAKqjB,GAAG,eAAgBrjB,KAAK2lG,qBAAsB3lG,MACnDA,KAAKqjB,GAAG,eAAgBrjB,KAAK4lG,oBAAqB5lG,MAClDA,KAAKqjB,GAAG,oBAAqBrjB,KAAK6lG,qBAAsB7lG,MACxDA,KAAKqjB,GAAG,sBAAuBrjB,KAAK8lG,gCAAiC9lG,MACrEA,KAAKqjB,GAAG,kBAAmBrjB,KAAK+lG,qBAAsB/lG,MACtDA,KAAKqjB,GAAG,mBAAoBrjB,KAAKgmG,gBAAiBhmG,MAClDA,KAAKqjB,GAAG,UAAWrjB,KAAK+8B,UAAW/8B,KACvC,EAEAqkG,kBAAmB,WACfrkG,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAKimG,YAC3CjmG,KAAKimG,WAAajmG,KAAK0sB,QAAQK,WAAW2J,YAAYX,IAC9C/1B,KAAKkmG,KAAKnwE,IACH,IACR,KAAM,KAAM,MAEvB,EAEA+kC,aAAc,SAAUv0C,GACpBvmB,KAAKwkG,WAAWpnE,iBAAiB7W,EACrC,EAEA4/E,YAAa,WACTnmG,KAAK86D,aAAa,GAAMnlD,kBAAkB3V,KAAK+kG,eACnD,EAEAqB,WAAY,WACRpmG,KAAKmmG,cACLr4D,cAAc9tC,KAAKqmG,YACnBrmG,KAAKqmG,WAAa5iF,aAAY,KAC1BzjB,KAAKmmG,aAAa,GACnB,IACP,EAEA5zC,YAAa,WACTvyD,KAAKwC,IAAI,eAAiBxC,KAAK4lG,sBAC/B,aAAiB5lG,KAAKskG,mBACtBl6F,YAAW,KACPpK,KAAK+f,IAAI,SAAU,aACnB,WAAe,wBACf/f,KAAK86D,eACL96D,KAAKomG,YAAY,GAClB,IACP,EAEAnB,wBAAyB,SAAUp6F,GAC/B,IAAIy7F,EAAYz7F,EAAG4C,OACf84F,EAAaD,EAAUE,gBACR,cAAfD,EACAvmG,KAAKuyD,eAELvyD,KAAK86D,aAAa,GAAMhlD,YAAYywF,GAAc,OAC/B,WAAfA,IACAhyE,aAAav0B,KAAKymG,iBAClBzmG,KAAKymG,gBAAkBr8F,YAAW,KACI,WAA9Bk8F,EAAUE,iBAA8D,iBAA9BF,EAAUE,kBACpDxmG,KAAK+f,IAAI,SAAUwmF,GACnB,WAAe,wBACfvmG,KAAKikB,SACLjkB,KAAKwxD,UACLxxD,KAAK86D,aAAa,aAAiB,gDACnC,qBAA2B,KAC/B,GACD,KACHwrC,EAAUI,cAEK,iBAAfH,IACAvmG,KAAK+f,IAAI,SAAUwmF,GACnB,WAAe,wBACfvmG,KAAKwxD,UACL,qBAA2B,MAGvC,EAEAg0C,eAAgB,SAAUmB,GACjBA,GAAQA,EAAIC,WAAcD,EAAIC,UAAUA,WAE7C5mG,KAAK6mG,cAAcF,EAAIC,UAC3B,EAEAlB,2BAA4B,SAAU76F,GAClC,IAAIy7F,EAAYz7F,EAAG4C,OACf84F,EAAaD,EAAUQ,mBACR,WAAfP,IACAhyE,aAAav0B,KAAKymG,iBAClBzmG,KAAKymG,gBAAkBr8F,YAAW,KACO,WAAjCk8F,EAAUQ,oBAAiE,iBAA9BR,EAAUE,kBACvDxmG,KAAK+f,IAAI,SAAUwmF,GACnB,WAAe,wBACfvmG,KAAKikB,SACLjkB,KAAKwxD,UACLxxD,KAAK86D,aAAa,aAAiB,gDACnC,qBAA2B,KAC/B,GACD,KACHwrC,EAAUI,cAEK,cAAfH,IACCvmG,KAAK47C,KAAK4qD,iBAAmBxmG,KAAKuyD,aAC3C,EAEA2yC,mBAAoB,WAChBllG,KAAK8kG,aAAa/3F,YAAY,UAAW/M,KAAKwC,IAAI,SACtD,EAEAujG,qBAAsB,WAClB,IAAIgB,EAAiB/mG,KAAKwC,IAAI,YAC1BukG,GACA/mG,KAAK4kG,iBAAiB,GAAGj9B,UAAY3nE,KAAKolG,cAC1CplG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwBmR,YAAYhR,KAAK4kG,kBAClE5kG,KAAKwkG,WAAWzkG,IAAIgN,YAAY,kBAAmB/M,KAAKwC,IAAI,UAAYxC,KAAKwC,IAAI,eAGjFxC,KAAK6kG,iBAAiB,GAAGl9B,UAAY3nE,KAAKolG,cAC1CplG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwBmR,YAAYhR,KAAK6kG,mBAEtE7kG,KAAKwkG,WAAWzkG,IAAIF,KAAK,mBAAmBkN,YAAY,SAAUg6F,GAClE/mG,KAAKgmG,iBACT,EAEAA,gBAAiB,WACThmG,KAAKwC,IAAI,cACTxC,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,KAAOG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,GAAGgY,OAAQ,GACpH7X,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,KAAOG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,GAAGgY,OAAQ,KAGpH7X,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,KAAOG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,GAAGgY,OAAQ,GACpH7X,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,KAAOG,KAAKwkG,WAAWzkG,IAAIF,KAAK,wBAAwB,GAAGgY,OAAQ,GAE5H,EAEA8tF,qBAAsB,WAClB3lG,KAAKgnG,aAAaC,iBAAiB,GAAG/9C,QAAUlpD,KAAKwC,IAAI,QAC7D,EAEAqjG,qBAAsB,WAClB,IAAI96F,EAAQ/K,KAAKwC,IAAI,cACjB0kG,EAAgBlnG,KAAK47C,KAAKurD,aAAatnG,MAAKunG,GAAUA,EAAOv/B,QAAUu/B,EAAOv/B,MAAMxoE,SAAW+nG,EAAOv/B,MAAMxyC,UAChHtqB,GAAS/K,KAAK+f,IAAI,gBAAgB,GACjCmnF,GAAiBn8F,GAAU/K,KAAKqnG,qBAC/BH,GAAiBlnG,KAAKgnG,eAAkBhnG,KAAKgnG,aAAaM,iBAAiB,GAAGp+C,QAAUn+C,GAC1F/K,KAAK+f,IAAI,QAAShV,GAAS/K,KAAKwC,IAAI,gBACxC,EAEAu6B,UAAW,WACPxI,aAAav0B,KAAKslG,kBAClBx3D,cAAc9tC,KAAKqmG,YACnB9xE,aAAav0B,KAAKymG,iBAClB,aAAiBzmG,KAAKskG,mBACtBtkG,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAKimG,YAC3CjmG,KAAKunG,aACLvnG,KAAK47C,KAAK1wC,OACd,EAEA46F,gCAAkC,WAC9B,IAAI/6F,EAAQ/K,KAAKwC,IAAI,gBACjB0kG,EAAgBlnG,KAAK47C,KAAKurD,aAAatnG,MAAKunG,GAAUA,EAAOv/B,QAAUu/B,EAAOv/B,MAAMxyC,SACxFtqB,GAAS/K,KAAK+f,IAAI,cAAc,GAC/BmnF,GAAiBn8F,GAAU/K,KAAKwnG,gCAC/BN,GAAiBlnG,KAAKgnG,eAAkBhnG,KAAKgnG,aAAaM,iBAAiB,GAAGp+C,QAAUn+C,GAC1F/K,KAAK+f,IAAI,QAAShV,GAAS/K,KAAKwC,IAAI,cACxC,EAEAojG,oBAAqB,WACjB,IAAI6B,EAAcznG,KAAKwC,IAAI,SAAW,SAAW,UACjDxC,KAAK0nG,qBAAqBD,GAC1BznG,KAAKklG,oBACT,EAEAsC,6BAA8B,WAC1B3uF,UAAUoJ,aAAa0lF,gBAAgB,CAACzsG,OAAO,IAAOmf,MAAMutF,IACxD5nG,KAAK8kG,aAAa,GAAGn9B,UAAYigC,EACjCA,EAAaN,iBAAiBj1F,SAASw1D,IACnC,GAAE79D,OAAO69D,EAAO,CAACxyC,QAAQ,IACzBr1B,KAAKgnG,aAAaa,SAAShgC,GAC3B7nE,KAAK47C,KAAKisD,SAAShgC,EAAO7nE,KAAKgnG,cAC/BhnG,KAAK47C,KAAKurD,aAAatnG,MAAKunG,IAAWA,EAAOv/B,OAASu/B,EAAOv/B,OAA+B,UAAtBu/B,EAAOv/B,MAAMz/C,OAAkB0/E,aAAajgC,EAAM,GAC3H,GAEV,EAEA6/B,qBAAsB,SAAUjuE,GAC5B,IAAIsuE,EAAY,GAAI,CAACxxF,GAAIvW,KAAKwC,IAAI,oBAAqBqB,KAAM,QACxDsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG4gC,aAC9B3jD,EAAE,QAAS,CAACsmB,MAAOA,EAAO7vB,GAAI5J,KAAKwC,IAAI,gBAC5CxC,KAAK0sB,QAAQiK,WAAWoxE,EAC5B,EAEA7B,KAAM,SAAUnwE,GACZ,IAAI2gC,EAAe,GAAE3gC,GACjBiyE,EAAmBtxC,EAAa72D,KAAK,qCACrCooG,EAAiBvxC,EAAa72D,KAAK,mCACnCqoG,EAAexxC,EAAa72D,KAAK,iCACjCsoG,EAAgBzxC,EAAa72D,KAAK,gBAAgB,GAAQq2B,GAAG4gC,sBAC7D3G,EAAWuG,EAAal3D,KAAK,QAC7B4oG,EAAa,GAAI,CAAC7xF,GAAI45C,EAAUtsD,KAAM,SAAU+F,GAAI8sD,EAAal3D,KAAK,QAC1E,GAAIwoG,EAAiB/lG,OAAQ,CACzB,GAAI+lG,EAAiBxoG,KAAK,SAAWQ,KAAKwC,IAAI,cAC1C,OACJ,IAAI6lG,EAAYL,EAAiBnoG,KAAK,sBAAsB,GAAQq2B,GAAGoyE,gBAAgBhmG,OACvF+lG,GAAaroG,KAAK47C,KAAK2sD,qBAAqB,IAAIC,sBAAsB,CAAC3kG,KAAM,QAAS4kG,IAAKJ,KAC3FroG,KAAK0oG,cAAcL,GACnBroG,KAAK0sB,QAAQiK,WAAWyxE,EAC5B,CACA,GAAIH,EAAehmG,OAAQ,CACvB,GAAIgmG,EAAezoG,KAAK,SAAWQ,KAAKwC,IAAI,cACxC,OACJ,IAAImmG,EAAaV,EAAepoG,KAAK,sBAAsB,GAAQq2B,GAAGoyE,gBAAgBhmG,OACtFqmG,GAAc3oG,KAAK47C,KAAK2sD,qBAAqB,IAAIC,sBAAsB,CAAC3kG,KAAM,SAAU4kG,IAAKE,KAC7F3oG,KAAK0sB,QAAQiK,WAAWyxE,EAC5B,CACA,GAAIF,EAAajmG,OAAQ,CACrB,GAAIimG,EAAa1oG,KAAK,SAAWQ,KAAKwC,IAAI,cACtC,OACJ,IAAIokG,EAAYsB,EAAaroG,KAAK,aAClC+mG,EAAU3kG,QAAUjC,KAAK47C,KAAKgtD,gBAAgB,IAAIC,gBAAgB,CAACjC,UAAWA,EAAUtkG,OAAQwmG,cAAelC,EAAUpnG,KAAK,iBAAkBupG,OAAQnC,EAAUpnG,KAAK,aACvKQ,KAAK0sB,QAAQiK,WAAWyxE,EAC5B,CACA,GAAID,EAAclmG,OAAQ,CAEtB,GADiBkmG,EAAc3oG,KAAK,QACjBQ,KAAKwC,IAAI,cAAe,CACvC,IAAIilG,EAAcU,EAAc3oG,KAAK,SACjB,WAAhBioG,GACAznG,KAAK+f,IAAI,YAAY,GACL,YAAhB0nF,GACAznG,KAAK+f,IAAI,YAAY,EAC7B,CACA/f,KAAK0sB,QAAQiK,WAAWyxE,EAC5B,CACJ,EAEAY,UAAW,WACPhpG,KAAK+f,IAAI,iBAAkB/f,KAAK0sB,QAAQlqB,IAAI,QAC5CxC,KAAKipG,oBACLjpG,KAAKwC,IAAI,eAAiBxC,KAAKqnG,oBAC/BrnG,KAAKkpG,SACT,EAEAD,kBAAmB,WACfpwF,UAAUoJ,aAAa8lD,aAAa,CAAC9sE,OAAO,IAAOof,MAAMutF,IACrD5nG,KAAKgnG,aAAeY,EACpB5nG,KAAK8kG,aAAa,GAAGn9B,UAAYigC,EACjC,IAAIuB,EAAcnpG,KAAKopG,iBACvBppG,KAAKgnG,aAAaa,SAASsB,GAC3BnpG,KAAK47C,KAAKisD,SAASsB,EAAanpG,KAAKgnG,cACrCY,EAAaX,iBAAiB50F,SAAQw1D,GAAS7nE,KAAK47C,KAAKisD,SAAShgC,EAAO7nE,KAAKgnG,eAAc,GAEpG,EAEAK,kBAAmB,WACfxuF,UAAUoJ,aAAa8lD,aAAa,CAAC7sE,OAAO,IAAOmf,MAAMutF,IACrD5nG,KAAK8kG,aAAa,GAAGn9B,UAAYigC,EACjCA,EAAaN,iBAAiBj1F,SAASw1D,IACnC7nE,KAAKgnG,aAAaa,SAAShgC,GAC3B7nE,KAAK47C,KAAKisD,SAAShgC,EAAO7nE,KAAKgnG,cAC/BhnG,KAAK47C,KAAKurD,aAAatnG,MAAKunG,IAAWA,EAAOv/B,OAASu/B,EAAOv/B,OAA+B,UAAtBu/B,EAAOv/B,MAAMz/C,OAAkB0/E,aAAajgC,EAAM,GAC3H,GAEV,EAEA0/B,WAAY,WACRvnG,KAAKgnG,cAAgBhnG,KAAKgnG,aAAap/B,YAAYv1D,SAASw1D,IACxDA,EAAMC,OACN9nE,KAAKgnG,aAAaqC,YAAYxhC,EAAM,GAE5C,EAEAqhC,QAAS,WACLlpG,KAAK86D,aAAa,aAAiB,yCACnC,IAAIwuC,EAAe9xB,GAAK,CAAC3zE,KAAM,OAAQ0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,SACvD2Q,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAG4gC,WAAYltD,GAAI5J,KAAKwC,IAAI,gBACzD2Q,EAAE,cAAe,CAAC8iB,MAAO,GAAQC,GAAGoyE,WAAYiB,MAAO,UAAUlzE,KAAKA,KACtEljB,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGszE,QAAQnzE,KACzCljB,EAAE,YAAYiE,MAAM,CAAC,MAAS,GAAQ8e,GAAGs4C,eAAen4C,KACxDljB,EAAE,QAAQgS,EAAE,aAAiB,8BAA8BkR,KAC3DljB,EAAE,YAAa,CAACvJ,GAAI,KAAQqsB,MAAO,mBACxCj2B,KAAK0sB,QAAQ4+B,QAAQg+C,EACzB,EAEA/pE,OAAQ,WACJ,IAAIkqE,EAAcjyB,GAAK,CAAC3zE,KAAM,OAAQ0S,GAAIvW,KAAKwC,IAAI,qBAAuBxC,KAAKi1B,QAAQzyB,IAAI,SACtF2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAG4gC,WAAYltD,GAAI5J,KAAKwC,IAAI,gBAAgB6zB,KACxEljB,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGszE,QAAQnzE,KACzCljB,EAAE,YAAYiE,MAAM,CAAC,MAAS,GAAQ8e,GAAGs4C,eAAen4C,KACxDljB,EAAE,YAAa,CAACvJ,GAAI,KAAQqsB,MAAO,mBACxCj2B,KAAK+f,IAAI,eAAgB,GAAO5W,OAChCnJ,KAAK0sB,QAAQ4+B,QAAQm+C,GACrB,aAAiBzpG,KAAKskG,mBACtBtkG,KAAK+f,IAAI,SAAU,cACnB,WAAe,wBACf/f,KAAK86D,aAAa,aAAiB,6CACnC96D,KAAKskG,kBAAoB,aAAiB,iCAAqC,EACnF,EAEArgF,OAAQ,SAAU0vB,GACd,GAA2B,iBAAvB3zC,KAAKwC,IAAI,WAAuD,kBAAvBxC,KAAKwC,IAAI,UAClD,OACJ,IAAIknG,EAAclyB,GAAK,CAAC3zE,KAAM,OAAQ0S,GAAIvW,KAAKwC,IAAI,qBAAuBxC,KAAKi1B,QAAQzyB,IAAI,SACtF2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAG4gC,WAAYltD,GAAI5J,KAAKwC,IAAI,gBAC7D,GAAIxC,KAAKwC,IAAI,gBAAiB,CAC1B,IAAIwU,EAAM,GAAO7N,MACbyM,EAAWtZ,KAAKqiE,OAAO3nD,EAAMhX,KAAKwC,IAAI,iBAAiB,KACvDmnG,EAAa,CAACC,UAAW5pG,KAAKwC,IAAI,mBAClCxC,KAAKqmG,YACL,GAAEr8F,OAAO2/F,EAAY,CAAC5yF,MAAO,GAAO/W,KAAKwC,IAAI,iBAAiBuR,SAAUiD,IAAK,GAAOA,GAAKjD,SAAU6B,SAAUA,IACjH+9B,IAAWg2D,EAAWh2D,OAASA,GAC/B+1D,EAAYv2F,EAAE,OAAQw2F,GAAYtzE,IACtC,CACAqzE,EAAYrzE,KAAKljB,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGszE,QAAQnzE,KAClDljB,EAAE,YAAYiE,MAAM,CAAC,MAAS,GAAQ8e,GAAGs4C,eAAen4C,KACxDljB,EAAE,YAAa,CAACvJ,GAAI,KAAQqsB,MAAO,mBACxCj2B,KAAK0sB,QAAQ4+B,QAAQo+C,GACrB1pG,KAAK4pF,oBAAoB8f,GACzB1pG,KAAK+f,IAAI,SAAU,gBACnB,WAAe,wBACf/f,KAAKwxD,UACL,qBAA2B,IAC/B,EAEAo4B,oBAAqB,SAAU1yE,GAC3B,IAAI2/D,EAAW,GAAE3/D,EAAQ40C,UACrB53D,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SAE3C,GADW4hD,EAASh3E,KAAK,QAAQL,KAAK,OAC5B,CACN,IAAIoW,EAAWihE,EAASh3E,KAAK,QAAQL,KAAK,YACtCoqG,EAAY/yB,EAASh3E,KAAK,QAAQL,KAAK,aAC3CtL,EAAKq/B,SAASq2D,oBAAoB,CAC9Bz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3By0D,WAAY4f,EAASh3E,KAAK,UAAUL,KAAK,MACzC0X,QAAS,aAAmB0yF,GAAaA,IAAc5pG,KAAK0sB,QAAQlqB,IAAI,OAAU,wCAA0C,wCAA0C,CAAC,GAAMmT,gBAAgBC,MAErM,MAEI1hB,EAAKq/B,SAASq2D,oBAAoB,CAC9Bz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3By0D,WAAY4f,EAASh3E,KAAK,UAAUL,KAAK,MACzC0X,QAAS,aAAiB,2CAGtC,EAEAkyF,eAAgB,WACZ,IAAIjjG,EAASgQ,OAAO2pD,OAAO3kE,SAASiL,cAAc,UAAW,CAACtB,MAAO,IAAKC,OAAQ,MAC9EsB,EAAMF,EAAOG,WAAW,MAC5BD,EAAI8hE,SAAS,EAAG,EAAGhiE,EAAOrB,MAAOqB,EAAOpB,QACxC,IAAI8kG,EAAIxjG,EAAIyjG,aAAa,EAAG,EAAG3jG,EAAOrB,MAAOqB,EAAOpB,QAOpD,OANAglG,uBAAsB,SAASC,IAC3B,IAAK,IAAIxmG,EAAI,EAAGA,EAAIqmG,EAAEnqG,KAAKuC,OAAQuB,IAC/BqmG,EAAEnqG,KAAK8D,KAAOqmG,EAAEnqG,KAAK8D,KAAOqmG,EAAEnqG,KAAK8D,KAAO,EAC9C6C,EAAI4jG,aAAaJ,EAAG,EAAG,GACvBE,sBAAsBC,EAC1B,IACO,GAAEhgG,OAAO7D,EAAO+jG,cAAc,IAAItiC,YAAY,GAAI,CAACvoE,SAAS,GACvE,EAEAmgC,YAAa,WACT3mB,UAAUoJ,aAAa8lD,aAAa,CAAC9sE,OAAO,IAAOof,MAAMutF,IACrD5nG,KAAKgnG,aAAeY,EACpB5nG,KAAK8kG,aAAa,GAAGn9B,UAAYigC,EACjC,IAAIuB,EAAcnpG,KAAKopG,iBAIvB,OAHAppG,KAAKgnG,aAAaa,SAASsB,GAC3BnpG,KAAK47C,KAAKisD,SAASsB,EAAanpG,KAAKgnG,cACrCY,EAAaX,iBAAiB50F,SAAQw1D,GAAS7nE,KAAK47C,KAAKisD,SAAShgC,EAAO7nE,KAAKgnG,gBACvEhnG,KAAK47C,KAAKuuD,YAAY,CAACC,qBAAoB,EAAMC,qBAAqB,GAAM,IACpFhwF,MAAMiwF,IACDtqG,KAAK+f,IAAI,oBAAqB/f,KAAK0sB,QAAQlqB,IAAI,QAC/CxC,KAAK47C,KAAK2uD,oBAAoBD,GAAOjwF,MAAK,KACtC,IAAIguF,EAAYiC,EAAM7B,IAClB+B,EAAgB,GAAI,CAACj0F,GAAIvW,KAAKwC,IAAI,oBAAqBqB,KAAM,QAC5DsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGu0E,OAAQh5D,OAAQ,mBAAoBm4D,UAAW5pG,KAAK0sB,QAAQlqB,IAAI,OAAQ0+F,IAAKlhG,KAAKwC,IAAI,gBACrH2Q,EAAE,UAAW,CAACu3F,QAAS,YAAa3rG,KAAM,UAC1CoU,EAAE,cAAe,CAAC8iB,MAAO,GAAQC,GAAGoyE,WAAYiB,MAAO,UACvDp2F,EAAE,OAAOgS,EAAEkjF,GAAWhyE,KAAKA,KAC3BljB,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGy0E,uBACtC3qG,KAAK0sB,QAAQiK,WAAW6zE,EAAc,GACxC,GAEd,EAEA3D,cAAe,SAAUD,GACrB,IAAIgE,EAAgB,GAAI,CAACr0F,GAAIvW,KAAKwC,IAAI,oBAAqBqB,KAAM,QAC5DsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGu0E,OAAQh5D,OAAQ,eAAgBm4D,UAAW5pG,KAAKwC,IAAI,qBAAsB0+F,IAAKlhG,KAAKwC,IAAI,gBACvH2Q,EAAE,UAAW,CAACu3F,QAAS,YAAa3rG,KAAM,UAC1CoU,EAAE,cAAe,CAAC8iB,MAAO,GAAQC,GAAGoyE,WAAYiB,MAAO,UAAUlzE,KACjEljB,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAG20E,wBAClC13F,EAAE,YAAa,CAAC21F,cAAelC,EAAUkC,cAAeC,OAAQnC,EAAUmC,SAAU5jF,EAAEyhF,EAAUA,WACrG5mG,KAAK0sB,QAAQiK,WAAWi0E,EAC5B,EAEAlC,cAAevsF,iBACXnc,KAAK+f,IAAI,oBAAqB/f,KAAKi1B,QAAQzyB,IAAI,QAC/CxC,KAAK47C,KAAKkvD,eAAezwF,MAAM0wF,IAC3B/qG,KAAK47C,KAAK2uD,oBAAoBQ,GAAQ1wF,MAAK,KACvC,IAAIsuF,EAAaoC,EAAOtC,IACpBuC,EAAiB,GAAI,CAACz0F,GAAIvW,KAAKwC,IAAI,oBAAqBqB,KAAM,QACzDsP,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGu0E,OAAQh5D,OAAQ,iBAAkBm4D,UAAW5pG,KAAKi1B,QAAQzyB,IAAI,OAAQ0+F,IAAKlhG,KAAKwC,IAAI,gBACnH2Q,EAAE,UAAW,CAACu3F,QAAS,YAAa3rG,KAAM,UAC1CoU,EAAE,cAAe,CAAC8iB,MAAO,GAAQC,GAAGoyE,WAAYiB,MAAO,UACvDp2F,EAAE,OAAOgS,EAAEwjF,GAAYtyE,KAAKA,KAC5BljB,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAGy0E,uBAC1C3qG,KAAK0sB,QAAQiK,WAAWq0E,EAAe,GACzC,GAEV,IAGJ,QAAc7pF,SAASC,MAAMpX,OAAO,CAClCqX,SAAU,CACN4pF,QAAQ,EACRhoB,QAAQ,EACRioB,SAAS,EACTC,gBAAgB,EAChBC,kBAAmB,EACnBC,kBAAmB,EACnBC,OAAQ,EACRx3F,UAAW,EACXy3F,aAAc,EACdhsF,WAAW,GAGfoC,WAAY,SAAUvK,EAAOpY,GACzBgB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAKwrG,aAAexsG,EAAQwsG,aAC5BxrG,KAAK0sB,QAAU1sB,KAAKi1B,QAAUj1B,KAAKi1B,QAAQvI,QAAU1tB,EAAQ0tB,QAC7D,IAAIxU,EAAMlY,KAAKi1B,QAAUj1B,KAAKi1B,QAAQzyB,IAAI,OAAS4U,EAAMc,IACzDlY,KAAK+f,IAAI,CACLnW,GAAIwN,GAASA,EAAMxN,IAAM5J,KAAKi1B,QAAQM,QACtCrd,IAAKA,IAERd,GAAwB,cAAfA,EAAMvT,MAAyB7D,KAAK+f,IAAI,aAAa,GAC3D3I,GAAwB,UAAfA,EAAMvT,OACf7D,KAAK+f,IAAI,SAAS,GAClB/f,KAAK0sB,QAAQrJ,GAAG,oBAAqBrjB,KAAKyrG,mBAAoBzrG,OAElEA,KAAKwpD,mBAAqB,EACtBxpD,KAAKi1B,SACLj1B,KAAK+f,IAAI,aAAc/f,KAAKi1B,QAAQzyB,IAAI,eACxCxC,KAAKi1B,QAAQ5R,GAAG,UAAWrjB,KAAKyrG,mBAAoBzrG,MACpDA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAK0rG,iBAAkB1rG,OAE5DA,KAAK+f,IAAI,CAAC,YAAc,EAAO,KAAQ3I,EAAMrY,OAEjDiB,KAAKuzB,SAAW,IAAI,YAAgB,KAAM,CAAC7G,QAAS1sB,KAAK0sB,QAASx4B,KAAM8L,OACxEA,KAAK+4F,gBAAkB,IAAI,YAAgB,KAAM,CAACrsE,QAAS1sB,KAAK0sB,UAChE1sB,KAAK40B,UAAY,IAAI,gBAAoB,CAACd,MAAO9zB,OACjDA,KAAKmjB,aAAe,GACpBnjB,KAAKo4F,sBAAwB,GAC7Bp4F,KAAKqjB,GAAG,uBAAwBrjB,KAAKkzD,yBAA0BlzD,MAC/DA,KAAKqjB,GAAG,mBAAoBrjB,KAAK2rG,mBAAoB3rG,KACzD,EAEA2rG,mBAAoB,WACpB,EAGAtvE,QAAS,WAGH,OAFIr8B,KAAKwC,IAAI,UAAaxC,KAAKwC,IAAI,SAAY0G,KAAKC,MAAQ,KACxDnJ,KAAK+f,IAAI,SAAS,GACf/f,KAAKwC,IAAI,QACtB,EAEEkpG,iBAAkB,WACd,IAAIpyE,EAAUt5B,KAAKi1B,QAAQqE,QACvB,GAAExI,IAAIwI,EAAS,eACft5B,KAAK+f,IAAI,aAAc/f,KAAKi1B,QAAQzyB,IAAI,eACxC,GAAEsuB,IAAIwI,EAAS,YACft5B,KAAK+f,IAAI,UAAW/f,KAAKi1B,QAAQzyB,IAAI,WAC7C,EAEFopG,cAAe,WACX5rG,KAAK+f,IAAI,SAAU/f,KAAK+4F,gBAAgB92F,QACpCjC,KAAKi1B,SAAWj1B,KAAKwC,IAAI,aAAexC,KAAKq8B,WAG7C,0CAER,EAEAovE,mBAAoB,WAChBzrG,KAAK6rG,cACL7rG,KAAKwxD,SACT,EAEAq6C,YAAa,WACT,IAAIP,EAAStrG,KAAKwC,IAAI,UAClB8oG,EAAS,IACTtrG,KAAK+f,IAAI,SAAU,GACnB,4BAAgCurF,GAChC,yCAA6CA,GAErD,EAEA11E,eAAgB,SAAUvD,EAAOrK,GAC7BhoB,KAAKooF,cAAgB,IAAI,wBAA4B,CACjD90D,WAAYjB,EACZyB,MAAO9zB,OAEXA,KAAKooF,cAAcC,gBAAgB,CAAC,GAAG,KACnC,kBAAsB,YAAa,CAC/BlvD,MAAO,oBACPrF,MAAO9zB,MACT,GAEV,EAEA8rG,aAAc,SAAU50F,EAAS60F,GAC7B,IAAIxyF,EAAYrC,EAAQ1U,IAAI,aAC5B,IAAK+W,EACD,OACJ,IAAIqM,EAAM4xD,GAAK,CAAC3zE,KAAM,SACtB0V,EAAUE,OAAOpH,SAASqH,IACF,YAAhBA,EAAM7V,OACF6V,EAAMK,MAAQgyF,EACdryF,EAAMG,OAAS,EAAC,GAEhBH,EAAMG,OAAS,EAAC,GACxB,IAEJ+L,EAAM5lB,KAAK0sB,QAAQkhC,oBAAoBhoC,EAAKrM,GAC5CA,EAAUspF,UAAUxwF,SAASizC,IACJ,YAAjBA,EAAQzhD,MACR,GAAE+hB,EAAIkmC,UAAUtsD,KAAK,KAAM8lD,EAAQptC,KACvClY,KAAK0sB,QAAQ4+B,QAAQ1lC,EAAI,GAEjC,EAEAomF,YAAa,SAAUn4C,EAAW0jB,GAC9B,IAAIrgE,EAAUlX,KAAKuzB,SAAS/wB,IAAIqxD,GAC5BusC,EAAYlpF,EAAQ1U,IAAI,aACxBxC,KAAK40B,WAAa50B,KAAK40B,UAAUqO,SAAWs0C,GAC5Cv3E,KAAK40B,UAAUqO,QAAQtlC,EAAE,gCAAgCk2D,OAAen0D,KAAK,WAAY63E,GAAW,GAAG79C,aAAa,gBAAiB69C,GACzIrgE,EAAQ6I,IAAI,YAAaw3D,GACrBv3E,KAAKwC,IAAI,cACTxC,KAAK0sB,QAAQ4mC,OAAStzD,KAAK0sB,QAAQ4mC,MAAM24C,cAAc,CAAC10B,YAAW6oB,aAAYpgG,KAAKi1B,QAC5F,EAEAwjE,uBAAwB,SAAUliF,EAAI0gD,EAAYjvC,GAC9C,IAAI+N,EAAK,GAAI,CAACxf,GAAIA,EAAI1S,KAAM,QACvBsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG4gC,aAC9B3jD,EAAE,UAAW,CAACvJ,GAAIqtD,IACvBj3D,KAAK0sB,QAAQiK,WAAWZ,EAAI/N,EAChC,EAEA0wE,WAAY,SAAU15F,IACjBA,IAAYA,EAAU,CAAC,GACxB,IAAIktG,EAASltG,EAAQuX,IAAMvW,KAAKi1B,QAAQzyB,IAAI,OACxCknG,EAAclyB,GAAK,CACf3zE,KAAM,OACN0S,GAAI21F,IAEH/4F,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAG4gC,WAAYltD,GAAI5K,EAAQi4D,aACvD9jD,EAAE,OAAQ,CAACwgC,OAAQ30C,EAAQ20C,SAAStd,KAAKA,KACzCljB,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGszE,QAAQnzE,KACtCljB,EAAE,YAAYiE,MAAM,CAAC,MAAS,GAAQ8e,GAAGs4C,eAAen4C,KACxDljB,EAAE,YAAa,CAACvJ,GAAI,KAAQqsB,MAAO,mBAC5Cj2B,KAAK0sB,QAAQ4+B,QAAQo+C,EACzB,EAEA/Q,iBAAkB,SAAUxnB,EAAUla,GAC7B,OAAW,UAOhB,qBAA2B,IAAI,iBAAqB,CAAC+sC,iBAAkB7yB,EAAUla,WAAYA,EAAYstC,eAAgBvkG,KAAKi1B,QAAQzyB,IAAI,QAAS,CAACyyB,QAASj1B,KAAKi1B,UAClK,qCAAyC,CAAC1O,OAAQ,OAClD,WAAe,wBACwB,cAAnC,mBAAuB,UAA4B,mBAAuB,UAAYvmB,KAAK40B,WAC3F50B,KAAK40B,UAAU3qB,QAVfjK,KAAKuzB,SAASq2D,oBAAoB,CAC9Bz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B0U,QAAS,aAAiB,iDAStC,EAEAi1F,QAAS,SAAU5lF,GACfA,GAAU,yBAA6B,SAAUA,GACjD,WAAe,wBACf,+BACA,qBAA2B,KAC3B,WAAe,uBACnB,EAEA2sC,yBAA0B,WACtB,IAAKlzD,KAAKi1B,QAAQzyB,IAAI,cAClB,OACJ,IAAIgxD,EAAoB,GAAI,CAAC3vD,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,SAC1D2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGk9B,QAASC,QAASrzD,KAAKwpD,qBAC1DxpD,KAAK0sB,QAAQiK,WAAW68B,EAC5B,EAEA44C,eAAgB,SAAUv1B,EAAU73E,GAChC,IAAIqtG,EAAgB,GAAQxuD,kBAAkBg5B,EAASr3E,KAAK,SACxD+gG,EAAgBvhG,EAAQuhG,cAExB+L,EAAUz1B,EAASlpD,SAAS,WAAW,GAAQuI,GAAGs4C,kBAClD+9B,EAAmB11B,EAASlpD,SAAS,kBAAkB,GAAQuI,GAAGs2E,cAClEC,EAAoB51B,EAASlpD,SAAS,mBAAmB,GAAQuI,GAAGs2E,cACpEE,EAAsB71B,EAASlpD,SAAS,kBAAkB,GAAQuI,GAAG4gC,gBACrE61C,EAAqB91B,EAASlpD,SAAS,iBAAiB,GAAQuI,GAAG4gC,gBACnE81C,EAAqB/1B,EAASlpD,SAAS,iBAAiB,GAAQuI,GAAG4gC,gBACvE,GAAI41C,EAAoBzqG,SAAWjD,EAAQmlF,iBAAkB,CACzD,GAAIoc,GAAkB8L,GAAiBrsG,KAAK0sB,QAAQlqB,IAAI,OACpD,OAEJ,GAAIxD,EAAQm5F,WAAW,CACnB,GAAIn4F,KAAKwC,IAAI,SACT,OACJ,IAAIqrB,EAAO,oBAAwB7tB,KAAKi1B,QAAQM,SAMhD,OALAshD,EAASh3E,KAAK,QAAQL,KAAK,UAAYQ,KAAK+f,IAAI,YAAa82D,EAASh3E,KAAK,QAAQL,KAAK,UACnFquB,EAAKoV,UACNpV,EAAKoV,QAAU,IAAI,mBAAuB,CAAC9N,UAAWtH,UACtDA,GAAQA,EAAKoV,SACbpV,EAAKoV,QAAQ4pE,qBAAqBh2B,EAAU0pB,GAEpD,CACA,GAAIvhG,EAAQoxD,YACR,OACC,CACD,IAAI6G,EAAay1C,EAAoBltG,KAAK,MACtCstG,EAAQj2B,EAASr3E,KAAK,QAC1BQ,KAAKy4F,uBAAuBqU,EAAO71C,GAAY,KAC3C,GAAI,qBAA0B,CAC1B,IAAItjB,EAAS04D,IAAkB,GAAQxuD,kBAAkB,yBAA6B,qBAAuB,cAAgB,OAM7H,OALA79C,KAAK04F,WAAW,CAACzhC,WAAYA,EAAYtjB,OAAQA,SACjD3zC,KAAKuzB,SAASq2D,oBAAoB,CAC9Bz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B0U,QAAS,aAAiB,2CAGlC,CACAlX,KAAK24F,iBAAiBmU,EAAO71C,EAAW,GAEhD,CACJ,CACA,GAAI01C,EAAmB1qG,OAAQ,CAC3B,GAAIjD,EAAQoxD,aAAepxD,EAAQm5F,WAC/B,OACJ,GAAI,sBAA4B,yBAA6B,gBAAkBwU,EAAmBntG,KAAK,MACnG,GAAI+gG,EACAvgG,KAAKmsG,cACJ,EACA,yBAA6B,UAAY,yBAA6B,QAAS,GAAUr2G,mBAC1F,WAAe,wBACf,IAAIi3G,EAAeJ,EAAmB9sG,KAAK,QAAQL,KAAK,SACxDutG,EAAeA,EAAehrG,OAAO,GAAOgrG,IAAiB,GAAO5jG,MACpE,yBAA6B,eAAgB4jG,IAC5C,yBAA6B,qBAAuB,yBAA6B,mBAAoBl2B,EAASr3E,KAAK,SACpH,aAAiB,wCACjB,yBAA6B,SAAU,cACvC,WAAe,wBACf,kCAAsC,aAAiB,6CACvD,uCAA6C,aAAiB,gCAClE,CAER,CACA,GAAIotG,EAAmB3qG,OAAQ,CAC3B,GAAIjC,KAAKuzB,SAAS5c,QAAOC,GAAKA,EAAEpU,IAAI,gBAAkBoqG,EAAmBptG,KAAK,QAAOyC,OACjF,OACJ,IAAwIiV,EAApIsD,EAAOxb,EAAQ85F,OAAS95F,EAAQ85F,MAAMt5F,KAAK,UAAYq3E,EAASh3E,KAAK,SAASL,KAAK,UAAYq3E,EAASh3E,KAAK,QAAQL,KAAK,SAAmBo1E,EAAW,GAC5J,GAAIg4B,EAAmBj/E,SAAS,QAAQ1rB,OAAQ,CAC5C,IAAI2T,EAAWg3F,EAAmBj/E,SAAS,QAAQnuB,KAAK,YACpDoqG,EAAYgD,EAAmBj/E,SAAS,QAAQnuB,KAAK,aAErDo1E,EADAh/D,GAAYg0F,EACF,aAAmBA,GAAaA,IAAc5pG,KAAK0sB,QAAQlqB,IAAI,OAAU,wCAA0C,wCAA0C,CAAC,GAAMmT,gBAAgBC,KAElL,aAAiB,yCACrC,MAEIg/D,EAAY,aAAiB,0CAWjC,GAVA51E,EAAQ65F,YAAc75F,EAAQguG,yBAA2BhuG,EAAQyhG,mBACjEvpF,EAAUlX,KAAKuzB,SAASq2D,oBAAoB,CACxCz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3BgY,KAAMA,EACNy8C,WAAY21C,EAAmBptG,KAAK,MACpC+3E,UAAWv4E,EAAQu4E,UACnBkpB,kBAAmBzhG,EAAQguG,yBAC3BnU,UAAW75F,EAAQ65F,UACnB3hF,QAAS09D,IAET51E,EAAQoxD,aAAepxD,EAAQm5F,WAC/B,OAAOjhF,EACX,GAAI,sBAA4B,yBAA6B,gBAAkB01F,EAAmBptG,KAAK,MAAO,CAC1G,aAAiB,wCACjB,IAAIytG,EAAa,aAAiB,QAClC7iG,YAAW,KACP,aAAiB6iG,EAAW,GAC7B,MACHjtG,KAAKmsG,QAA8D,eAAtDS,EAAmBj/E,SAAS,QAAQnuB,KAAK,UAA6B,cAAsE,QAAtDotG,EAAmBj/E,SAAS,QAAQnuB,KAAK,UAAsB,OAAS,eAC/K,CACA,OAAO0X,CACX,CACA,IAAKlY,EAAQoxD,YAAa,CACtB,IAAI88C,EAAYC,EAChBt2B,EAASlpD,SAAS,aAAa7tB,MAAK,CAAC4C,EAAK60E,KACtCA,EAAY,GAAEA,GACVV,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,gBAAgB1sE,OACrDs1E,EAAU/3E,KAAK,QAAU6sG,IACxBa,IAAeA,EAAa31B,GAC7B41B,EAAqB51B,GAGrB21B,EAAa31B,EAGbA,EAAU/3E,KAAK,QAAU6sG,EACzBc,EAAqB51B,EAErB21B,EAAa31B,CACrB,KAEFv4E,EAAQu4E,WAAa21B,IAAgBluG,EAAQu4E,UAAY21B,EAAW1tG,KAAK,QACzER,EAAQyhG,mBAAqB0M,IAAwBnuG,EAAQyhG,kBAAoB0M,EAAmB3tG,KAAK,MAC/G,CACA,GAAI8sG,EAAQrqG,OAAQ,CAChB,IAAImrG,EAAad,EAAQ,GAAG95F,QAAQwD,cAKpC,GAJoB,aAAfo3F,GAA+BpuG,EAAQquG,QAAWruG,EAAQoxD,aAAgBmwC,MAAmBvhG,EAAQm5F,YAAcn5F,EAAQm5F,YAAcn5F,EAAQ65F,aAClJ74F,KAAKstG,WAAWz2B,EAASr3E,KAAK,MAAO,WAAYR,EAAQu4E,UAAWv4E,EAAQyhG,mBAC5EzgG,KAAKwC,IAAI,UAAYxC,KAAKstG,WAAWz2B,EAASr3E,KAAK,MAAO,YAAaR,EAAQu4E,UAAWv4E,EAAQyhG,oBAElF,aAAf2M,IAA+B7M,EAEhC,YADAvgG,KAAKutG,cAAc12B,EAAUu2B,EAAY7M,GAGzB,cAAf6M,GAA+B7M,GAChCvgG,KAAKwtG,qBAAqBlB,EAClC,CAQA,IANIC,EAAiBtqG,QAAWjD,EAAQquG,QAAWruG,EAAQoxD,aAAgBmwC,MAAmBvhG,EAAQm5F,YAAcn5F,EAAQm5F,YAAcn5F,EAAQ65F,YAC9I74F,KAAKytG,oBAAoB52B,GAEzB41B,EAAkBxqG,QAClBjC,KAAK0tG,uBAAuB72B,IAE3BA,EAASh3E,KAAK,QAAQoC,QAAUyqG,EAAoBzqG,QAAU0qG,EAAmB1qG,QAAU2qG,EAAmB3qG,OAAQ,CACvH,GAAIjC,KAAKwC,IAAI,SACT,OACJ,IAAIqrB,EAAO,oBAAwB7tB,KAAKi1B,QAAQM,SAKhD,OAJK1H,EAAKoV,UACNpV,EAAKoV,QAAU,IAAI,mBAAuB,CAAC9N,UAAWtH,UACtDA,GAAQA,EAAKoV,SACbpV,EAAKoV,QAAQ4pE,qBAAqBh2B,EAAU0pB,GAEpD,CAEA,IAAI1pB,EAASh3E,KAAK,UAAUoC,OAyCxB,OAAOjC,KAAKuzB,SAASmgD,iBAAiBmD,EAAU73E,GAzChB,CAChC,GAAIqtG,IAAkBrsG,KAAK0sB,QAAQlqB,IAAI,OACnC,OACJ,IAAImnF,EAAY9S,EAASh3E,KAAK,UAAUL,KAAK,QAAUq3E,EAASh3E,KAAK,WAAWL,KAAK,QACjFy1B,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAImnF,GACxC,GAAI10D,GACmC,QAA/BA,EAAQzyB,IAAI,gBACZ,OACR,GAAIxC,KAAK0sB,QAAQK,YAAc/sB,KAAK0sB,QAAQK,WAAW01B,oBACnD,GAAIzjD,EAAQm5F,aAAen5F,EAAQm5F,aAAen5F,EAAQoxD,YACtD,OAAOpwD,KAAKuzB,SAASwsE,2BAA2BlpB,EAAU73E,OAC3D,CACH,IAAI+2B,EAAK,GAAI,CAAClyB,KAAM,QAAQsP,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGo4C,WAC9DtuE,KAAK0sB,QAAQiK,WAAWZ,GAAKA,IACrB,IAEI43E,EAFApxD,EAAQ,GAAExmB,GAAIl2B,KAAK,QACnB+tG,EAAoB7rG,OAAO,GAAO80E,EAASh3E,KAAK,SAASL,KAAK,UAAYq3E,EAASh3E,KAAK,QAAQL,KAAK,UAAaR,EAAa,OAAK+C,OAAO,GAAO/C,EAAQ85F,MAAMt5F,KAAK,YAAc,GAAO2J,QAE1L0kG,GAAe,EAgBnB,GAfItxD,EAAMt6C,OAAS,GACfs6C,EAAMz8C,MAAK,CAAC4C,EAAKxB,KACb,IACI8tF,EADQ,GAAE9tF,GACO1B,KAAK,OAAQsuG,EAAqB,GACvD,GAAI9e,EAAS5qF,QAAQulF,IAAc,EAAG,CAGlC,GAFAkkB,GAAe,EACfC,EAAqB9e,EAASj5E,OAAOi5E,EAAS8U,YAAY,KAAO,EAAG9U,EAAS/sF,OAAS0nF,EAAU1nF,SAC3F6rG,EAED,OADAH,EAA0B,IACnB,IACCA,GAA2BA,EAA0BG,KAC7DH,EAA0BG,EAClC,KAGJ,GAAE1iG,YAAYuiG,IAA4BA,GAA2BA,EAA0BC,EAC/F,OAAO5tG,KAAKuzB,SAASwsE,2BAA2BlpB,EAAU73E,EAAQ,IACvE,IACQgB,KAAKuzB,SAASwsE,2BAA2BlpB,EAAU73E,IAEtE,CACJ,CAGJ,EAEA+jC,kBAAmB,SAAU8wB,EAAW70D,GAEpC,IACIkY,IAFJlY,EAAUA,GAAW,CAAC,GACC8Y,SAAW9X,KAAK0sB,QAAQ6G,UAAYv0B,EAAQslF,mBAAqBtkF,KAAK0sB,QAAQ43D,mBAAqBtlF,EAAQkY,SAAW,0BAAgClX,KAAK0sB,QAAQ6G,UACnK/wB,IAAIqxD,GAC3B,GAAI38C,EAAS,CACLlY,EAAQslF,mBACRptE,EAAQ6I,IAAI,oBAAoB,GACpC,IAAIw3D,EAAYrgE,EAAQ1U,IAAI,aAC5BxC,KAAKooF,cAAgB,IAAI,sBAA0B,CAC/CnzD,QAASj1B,KAAKi1B,QACd84E,gBAAiB/uG,EAAQ8Y,QACzBgc,MAAO9zB,KACPguG,kBAAmBz2B,EACnBh4D,UAAWvgB,EAAQugB,YAEvBvf,KAAK0sB,QAAQ42E,iBAAiB1N,IAAI1+E,GAClClX,KAAKooF,cAAcC,gBAAgB,CAACjtB,MAAOmc,IAAY,KACnD,IAAIliD,EAAS,YACTr2B,EAAQ8Y,QACRud,EAAS,WACJr2B,EAAQkY,UACbme,EAAS,mBAAuB,SACpC,kBAAsBA,EAAQ,CAC1B8D,MAAO,kBACPrF,MAAO9zB,MACR,CACCq7B,oBAAoB,GACtB,GAEV,CACJ,EAEAoyE,oBAAqB,SAAU52B,GAC3B,IAAIo3B,EAAgBz2B,GAAK,CACrBjhE,GAAIvW,KAAKi1B,QAAQzyB,IAAI,OACrBqB,KAAM,OACN+F,GAAI,OACHuJ,EAAE,WAAY,CAAE8iB,MAAO,GAAQC,GAAGs2E,SAAU5iG,GAAIitE,EAASr3E,KAAK,QACnEQ,KAAK0sB,QAAQ4+B,QAAQ2iD,EACzB,EAEAX,WAAY,SAAUY,EAAQ3nF,EAAQgxD,EAAWkpB,GAC7Cl6E,IAAWA,EAAS,aACpB,IAAIs5B,EAAS23B,GAAK,CACdjhE,GAAIvW,KAAKwC,IAAI,OACbqB,KAAM,OACN+F,GAAI,OACLuJ,EAAEoT,GAAQnP,MAAM,CACf6e,MAAO,GAAQC,GAAGs4C,aAClB5kE,GAAIskG,GAAU32B,GAAakpB,GAAqB,KAEpDlpB,GAAa13B,EAAO1sC,EAAE,YAAa,CAAC8iB,MAAO,iBAAkBrsB,GAAI2tE,EAAW42B,GAAInuG,KAAK0sB,QAAQlqB,IAAI,SAAS6zB,MACxGr2B,KAAKwC,IAAI,UAAYi+F,GAAsB5gD,EAAO1sC,EAAE,YAAa,CAAC8iB,MAAO,iBAAkBrsB,GAAI62F,EAAmB0N,GAAInuG,KAAKi1B,QAAQzyB,IAAI,SAAS6zB,KAClJr2B,KAAK0sB,QAAQ4+B,QAAQzL,EACzB,EAEA0tD,cAAe,SAAU12B,EAAU6N,EAAK6b,GACpC,IAAI6N,EAAav3B,EAASh3E,KAAK,aAC3BwuG,EAAYx3B,EAASh3E,KAAK,YAE9B,GADsC,UAA1Bg3E,EAASr3E,KAAK,UACZ4uG,EAAWnsG,SAAWosG,EAAUpsG,OAC1C,OACJ,IAAIqsG,EAAgBF,EAAW5uG,KAAK,OAAS6uG,EAAU7uG,KAAK,MACxD+uG,EAAmBH,EAAWvuG,KAAK,iBAAiBG,KAAK0sB,QAAQlqB,IAAI,YAAYhD,KAAK,OAAS6uG,EAAUxuG,KAAK,iBAAiBG,KAAK0sB,QAAQlqB,IAAI,YAAYhD,KAAK,MACjKomB,EAAM5lB,KAAK0sB,QAAQ6G,SAAS1zB,MAAK+W,GAAK23F,IAAqB33F,EAAEpU,IAAI,eAAiB+rG,GAAoB33F,EAAEpU,IAAI,uBAAyB+rG,IAAqB33F,EAAEpU,IAAI,WAAa8rG,IACjL,GAAK1oF,EAOL,GAAIA,EAAIozE,aACJ,GAAIqV,EAAUpsG,OAAQ,CAClB,IAAIusG,EAAY5oF,EAAIpjB,IAAI,SACxB,GAAIgsG,IAAc,GAAUx4G,UAExB,YADA4vB,EAAI7F,IAAI,QAAS,GAAU5pB,eAG/B,GAAIq4G,IAAc,GAAUp4G,cAAe,CACvC,IAAIq4G,EAAiBJ,EAAU1gF,SAAS,QAAQnuB,KAAK,SACjDivG,IACA7oF,EAAI7F,IAAI,OAAQ,GAAgB0uF,IAChC7oF,EAAI7F,IAAI,YAAahe,OAAO0sG,IAEpC,CACAzuG,KAAK0uG,qBAAqB9oF,EAAIpjB,IAAI,aACtC,KAAO,CAEH,GADgBojB,EAAIpjB,IAAI,WACN,GAAUxM,UAExB,YADA4vB,EAAI7F,IAAI,QAAS,GAAU3pB,eAG/B4J,KAAK2uG,qBAAqB/oF,EAAIpjB,IAAI,aACtC,MAEAojB,EAAI7F,IAAI,aAAa,OA/BzB,CACI,IAAI6uF,EAAY5uG,KAAK0sB,QAAQgH,MAAMlxB,IAAI,GAAGxC,KAAK4J,gBACjCglG,GAAYA,EAASr7E,SAAS1zB,MAAK+W,GAAK23F,IAAqB33F,EAAEpU,IAAI,eAAiB+rG,GAAoB33F,EAAEpU,IAAI,uBAAyB+rG,IAAqB33F,EAAEpU,IAAI,WAAa8rG,KAEzLM,EAASrB,cAAc12B,EAAU6N,EAAK6b,EAE9C,CA2BJ,EAEAmO,qBAAsB,SAAU56F,IAC3BA,IAAcA,EAAY,GAAO3K,OAClC,IAAI0lG,EAAuB7uG,KAAKuzB,SAAS5c,QAAOO,GAAWA,EAAQ8hF,cAAiB9hF,EAAQ1U,IAAI,cAAgBsR,GAAeoD,EAAQ1U,IAAI,SAAW,GAAUvM,aAAiBihB,EAAQ1U,IAAI,SAAW,GAAUrM,gBAClN,IAAK04G,EAAqB5sG,OAAQ,CAC9B,IAAI/N,EAAQ8L,KAAK0sB,QAAQgH,MAAMlxB,IAAIxC,KAAK4J,GAAK,cAC7C1V,IAAS26G,EAAuB36G,EAAKq/B,SAAS5c,QAAOO,GAAWA,EAAQ8hF,cAAiB9hF,EAAQ1U,IAAI,cAAgBsR,GAAeoD,EAAQ1U,IAAI,SAAW,GAAUvM,aAAiBihB,EAAQ1U,IAAI,SAAW,GAAUrM,gBAC3N,CACA04G,EAAqBx8F,SAAQ6E,GAAWA,EAAQ6I,IAAI,QAAS,GAAU5pB,gBAC3E,EAEAw4G,qBAAsB,SAAU76F,IAC3BA,IAAcA,EAAY,GAAO3K,OAClC,IAAI0lG,EAAuB7uG,KAAKuzB,SAAS5c,QAAOO,GAAWA,EAAQ8hF,cAAiB9hF,EAAQ1U,IAAI,cAAgBsR,GAAeoD,EAAQ1U,IAAI,SAAW,GAAUvM,aAAiBihB,EAAQ1U,IAAI,SAAW,GAAUpM,gBAClN,IAAKy4G,EAAqB5sG,OAAQ,CAC9B,IAAI/N,EAAQ8L,KAAK0sB,QAAQgH,MAAMlxB,IAAIxC,KAAK4J,GAAK,cAC7C1V,IAAS26G,EAAuB36G,EAAKq/B,SAAS5c,QAAOO,GAAWA,EAAQ8hF,cAAiB9hF,EAAQ1U,IAAI,cAAgBsR,GAAeoD,EAAQ1U,IAAI,SAAW,GAAUvM,aAAiBihB,EAAQ1U,IAAI,SAAW,GAAUpM,gBAC3N,CACAy4G,EAAqBx8F,SAAQ6E,GAAWA,EAAQ6I,IAAI,QAAS,GAAU3pB,gBAC3E,EAEAo3G,qBAAsB,SAAUlB,GAC5B,IAE6Jz4E,EAFzJ0jD,EAAY+0B,EAAQ3+E,SAAS,iBAAiB3tB,KAAK0sB,QAAQlqB,IAAI,YAAYhD,KAAK,MAChF0uG,EAAS5B,EAAQ9sG,KAAK,MACtBomB,EAAM5lB,KAAKuzB,SAAS1zB,MAAK+W,GAAK2gE,IAAc3gE,EAAEpU,IAAI,eAAiB+0E,GAAa3gE,EAAEpU,IAAI,uBAAyB+0E,IAAc3gE,EAAEpU,IAAI,WAAa0rG,IAEpJ,GADAtoF,IAAQiO,EAAU7zB,KAAKuzB,SAASnvB,QAAQwhB,IACnCA,EAOL,GAAIiO,GAAW,EAAG,CACd7zB,KAAK+f,IAAI,eAAgB,GACzB,IAAK,IAAIvc,EAAIqwB,EAASrwB,GAAK,EAAGA,IAAK,CACjBxD,KAAKuzB,SAASimC,OAAOh2D,GAC3Buc,IAAI,aAAa,EAC7B,CACJ,KACK,CACD,IAAI+uF,EAAa9uG,KAAK+4F,gBAAgBl5F,MAAK+W,GAAKA,EAAEpU,IAAI,eAAiB+0E,GAAa3gE,EAAEpU,IAAI,uBAAyB+0E,GAAa3gE,EAAEpU,IAAI,WAAa0rG,IACnJY,GAAcA,EAAW/uF,IAAI,aAAa,EAC9C,KAjBA,CACI,IAAI6uF,EAAY5uG,KAAK0sB,QAAQgH,MAAMlxB,IAAIxC,KAAK4J,GAAK,cACnCglG,GAAYA,EAASr7E,SAAS1zB,MAAK+W,GAAK2gE,IAAc3gE,EAAEpU,IAAI,eAAiB+0E,GAAa3gE,EAAEpU,IAAI,uBAAyB+0E,IAAc3gE,EAAEpU,IAAI,WAAa0rG,KAEpKU,EAASpB,qBAAqBlB,EAEtC,CAYJ,EAEAoB,uBAAwB,SAAU72B,GAC9B,IAAIw3B,EAAYx3B,EAASh3E,KAAK,YAC1BkvG,EAAsBV,EAAU7uG,KAAK,MACrCwvG,EAAsBX,EAAU1gF,SAAS,iBAAiB3tB,KAAK0sB,QAAQlqB,IAAI,YAAYhD,KAAK,MAC5FomB,EAAM5lB,KAAK0sB,QAAQ6G,SAAS/wB,IAAIusG,GAAuBC,GACtDppF,GAELA,EAAIozE,cAAgBpzE,EAAI7F,IAAI,QAAS,GAAU5pB,cACnD,EAEAkgE,WAAY,SAAUxyD,GAClB,IAAIqU,EAAMlY,KAAKwC,IAAI,OACdxC,KAAKi1B,QAAQzyB,IAAI,eAAkBxC,KAAKi1B,QAAQzyB,IAAI,cACxC,cAATqB,GACA7D,KAAKuzB,SAASq2D,oBAAoB,CAC9Bz5B,SAAUj4C,EACV0oF,cAAc,EACd1pF,QAAS,aAAiB,iCAI1C,EAEA+3F,aAAc,SAAUprG,GACpB,IAAIqU,EAAMlY,KAAKwC,IAAI,OAEN,WAATqB,GACA7D,KAAKuzB,SAASq2D,oBAAoB,CAC9Bz5B,SAAUj4C,EACVolF,QAAQ,EACRpmF,QAAS,aAAiB,2BAGtC,EAEAg4F,gBAAiB,SAAU1yE,EAAMy0C,EAAYk+B,GACzC,IAAIC,EAAiB,EAAGz0F,EAAQ6hB,EAAKv6B,OAAQi/B,EAAM,IAAI,GAAE75B,SACzD65B,EAAI3Y,MAAM8mF,KACM,IAARA,GAGKA,IAAQ7yE,EAAKv6B,SAFlB,GAAM8J,QAAQgC,MAAM,aAAiB,8CAIzC,IAEJ,GAAEyuB,GAAM18B,MAAK,CAAC4C,EAAKxB,KACf,IAAIq2E,EAAYr2E,EAAKsB,IAAI,aACrBi+F,EAAoBv/F,EAAKsB,IAAI,qBACjC,GAAI+0E,GAAakpB,EAAmB,CAChC,IAAI6O,EAAgB,GAAI,CAACzrG,KAAM,MAAO0S,GAAI06D,EAAcjxE,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAUxC,KAAK0sB,QAAQlqB,IAAI,SAC/H2Q,EAAE,kBAAmB,CAACvJ,GAAK5J,KAAKwC,IAAI,eAAiBi+F,GAAqBlpB,EAAYthD,MAAO,GAAQC,GAAGk9B,QAAS+7C,UAAWA,EAAWhB,GAAInuG,KAAK0sB,QAAQlqB,IAAI,SACjKxC,KAAK0sB,QAAQiK,WAAW24E,GAAgBrmE,IAChCjpC,KAAK40B,UAAUqO,QAAQ08D,cAAcz+F,GACrCkuG,IACCA,IAAmB5yE,EAAKv6B,QAAWi/B,EAAI74B,QAAQsS,EAAM,IACtD5M,IACAqhG,IACI,GAAErhG,GAAOlO,KAAK,eAAeoC,QAC7B0Y,IACHy0F,IAAmB5yE,EAAKv6B,QAAWi/B,EAAI74B,QAAQsS,EAAM,GAElE,IAER,EAEAsuE,sBAAuB,SAAUsZ,GAC7B,IAAI+M,EAAgB,GAAI,CAACzrG,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACtF2Q,EAAE,eAAgB,CAACvJ,GAAI24F,EAAStsE,MAAO,GAAQC,GAAGk9B,QAAS+7C,WAAW,IAC3EnvG,KAAK0sB,QAAQiK,WAAW24E,GAAgBrmE,IACpC,IAAIsmE,EAAYvvG,KAAKuzB,SAAS5c,QAAOiP,GAAOA,EAAIpjB,IAAI,cAAiBojB,EAAIpjB,IAAI,aAAaoH,IAAM24F,IAChG,GAAEgN,GAAWzvG,MAAK,CAAC4C,EAAKkjB,KACpB5lB,KAAK40B,UAAUqO,QAAQ08D,cAAc/5E,EAAI,GAC3C,IACF7X,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAE/F,EAEAinE,mBAAoB,SAAUm6B,EAAWnnF,EAAUnN,GAC/C,IAAIihE,EAAgB97E,KAAKwC,IAAI,cACzB8sG,EAAgB,GAAI,CAACzrG,KAAM,MAAO0S,GAAIulE,EAAiB97E,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,OAAUxC,KAAK0sB,QAAQlqB,IAAI,SACnIgtG,EAAgB,CAACv5E,MAAO,GAAQC,GAAGk9B,QAAS+7C,UAAWA,IAC1DrzB,IAAkB0zB,EAAc1Y,aAAe92F,KAAKwC,IAAI,QACzDxC,KAAKwC,IAAI,eAAiBgtG,EAAc3rG,KAAO,aAC/CyrG,EAAcn8F,EAAE,cAAeq8F,GAC/BxvG,KAAK0sB,QAAQiK,WAAW24E,GAAgB5lB,IACpC,IAAI+lB,EAAezvG,KAAKuzB,SAASimC,OACjC,GAAEi2C,GAAc3vG,MAAK,CAAC4C,EAAKkjB,KACvB5lB,KAAK40B,UAAUqO,QAAQ08D,cAAc/5E,EAAI,IAE7CoC,GAAYA,GAAU,IACtBja,IACI,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,+CACzC8M,GAAWA,GAAS,GAE5B,EAEA60F,0BAA2B,WACnB1vG,KAAKuzB,SAAStxB,QACdjC,KAAKuzB,SAASq2D,oBAAoB,CAC9Bz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B0U,QAAS,aAAiB,0BAC1BsD,KAAMxa,KAAKuzB,SAAS0mC,OAAOz3D,IAAI,SAE3C,EAEA47E,SAAU,SAAUe,GAChB,IAAItnE,EAAQ7X,KAAKq8B,UAEbszE,KADW93F,GAAmB,MAAVA,GACK,GAAK,KAC9BsnE,GAAmC,KAAlBA,KACjBwwB,EAAcxwB,GAClB,IAAIywB,EAAuB,CACvB13F,IAAKlY,KAAKi1B,QAAQzyB,IAAI,OACtBqtG,KAAMF,EACN9rG,KAAM7D,KAAKwC,IAAI,aAAexC,KAAKwC,IAAI,aAAexC,KAAK8vG,oBAAoB9vG,OAEnF+1B,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAK0sB,QAAQlqB,IAAI,SACvC2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGqsB,kBAC9BpvC,EAAE,eAAgBy8F,GACvB5vG,KAAK0sB,QAAQiK,WAAWZ,EAC5B,EAEA+5E,oBAAqB,SAAU57G,GAC3B,OAAGA,EAAKsO,IAAI,aACD,GAAQ0zB,GAAGuhE,sBACnBvjG,EAAK+gC,QAAQzyB,IAAI,cACT,GAAQ0zB,GAAGy4C,WACf,GAAQz4C,GAAG65E,4BACtB,EAEA96B,0BAA2B,SAAUjtD,EAAUnN,GAC3C,IAAI+0F,EAAuB,CAAC13F,IAAKlY,KAAKwC,IAAI,OAAQ+jB,OAAQ,UAAW1iB,KAAM7D,KAAKwC,IAAI,aAAexC,KAAKwC,IAAI,aAAexC,KAAK8vG,oBAAoB9vG,OACpJA,KAAK0sB,QAAQlF,0BAA0B2vE,8BAA8ByY,EAAqB13F,IAAO,IAAM03F,EAAqB/rG,MAC5H,IAAIkyB,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAK0sB,QAAQlqB,IAAI,SAC3C2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGqsB,kBAC9BpvC,EAAE,eAAgBy8F,GACvB5vG,KAAK0sB,QAAQiK,WAAWZ,GAAKkT,IACzBjhB,GAAYA,EAASihB,EAAQ,IAC7Bl7B,IACA8M,GAAWA,EAAQ9M,EAAM,GAEjC,IAGJ,gBAAsB,oBAAwB,CAC1CgjB,UAAW,sBACXvD,SAAU,GAAU2H,UACpB2H,YAAa,GAAU7lC,aAAaiB,UAEpC+4B,OAAQ,CACJ,MAAS,eAGb1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKi1B,QAAUj1B,KAAK8zB,MAAMmB,QAC1Bj1B,KAAKgwG,gBAAkB,EACvBhwG,KAAKD,IAAIP,KAAK,UAAWQ,KAAK8zB,MAAMlqB,IAC/B5J,KAAK8zB,MAAM03E,eACZxrG,KAAKijC,QAAU,IAAI,mBAAuB,CAAC9N,UAAWn1B,QAC1DA,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKszF,gBACLtzF,KAAKw9B,eACLx9B,KAAKs8E,mBACLt8E,KAAKiwG,eACLjwG,KAAKkwG,sBACLlwG,KAAKohC,oBACLphC,KAAKmwG,mBACLnwG,KAAKy7E,aACLz7E,KAAKowG,kBACLpwG,KAAKqwG,kBACLrwG,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKswG,mBAAoBtwG,MACxDA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKszF,cAAetzF,MACnDA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKowG,gBAAiBpwG,MACxDA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKszF,cAAetzF,MACzDA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKiwG,aAAcjwG,MAClDA,KAAK8zB,MAAMzQ,GAAG,kBAAmBrjB,KAAKkwG,oBAAqBlwG,MAC3DA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKs8E,iBAAkBt8E,MACrDA,KAAK8zB,MAAMzQ,GAAG,OAAQrjB,KAAKiK,KAAMjK,MACjCA,KAAK8zB,MAAMzQ,GAAG,qBAAsBrjB,KAAKuwG,SAAUvwG,MACnDA,KAAK8zB,MAAMP,SAASlQ,GAAG,MAAOrjB,KAAKwwG,eAAgBxwG,MACnDA,KAAK8zB,MAAMP,SAASlQ,GAAG,UAAWrjB,KAAKywG,iBAAkBzwG,MACzDA,KAAK8zB,MAAMP,SAASlQ,GAAG,eAAgBrjB,KAAK0wG,sBAAuB1wG,MAC/DA,KAAKi1B,UACLj1B,KAAK2wG,6BACL3wG,KAAKi1B,QAAQ5R,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MAChDA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAK2wG,2BAA4B3wG,MACtEA,KAAKi1B,QAAQ5R,GAAG,sBAAuBrjB,KAAK2wG,2BAA4B3wG,MACxEA,KAAKi1B,QAAQ5R,GAAG,iCAAkCrjB,KAAK2wG,2BAA4B3wG,MACnFA,KAAKi1B,QAAQ5R,GAAG,kCAAmCrjB,KAAK2wG,2BAA4B3wG,MACpFA,KAAKi1B,QAAQ5R,GAAG,gBAAiBrjB,KAAK86D,aAAc96D,MACpDA,KAAKi1B,QAAQ5R,GAAG,sBAAuBrjB,KAAKy7E,WAAYz7E,MACxDA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAKy7E,WAAYz7E,MACtDA,KAAKi1B,QAAQ5R,GAAG,wBAAyBrjB,KAAKy7E,WAAYz7E,MAC1DA,KAAKi1B,QAAQ5R,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACnDA,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAK07E,UAAW17E,MAClDA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAKmwG,iBAAkBnwG,MAC5DA,KAAKi1B,QAAQ5R,GAAG,mBAAoBrjB,KAAK4wG,qBAAsB5wG,MAC/DA,KAAKi1B,QAAQ5R,GAAG,gBAAiBrjB,KAAK6wG,aAAc7wG,MACpDA,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAK8wG,qBAAsB9wG,OAEjEA,KAAKD,IAAIgN,YAAY,aAAc/M,KAAK8zB,MAAMtxB,IAAI,UAClDxC,KAAKD,IAAIF,KAAK,kBAAkBkN,YAAY,mBAAoB/M,KAAK8zB,MAAMtxB,IAAI,UAC/ExC,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAKD,IAAIF,KAAK,kBAAkBF,KAAK,GAAId,UAAUuB,IAAI,qBAClFJ,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,KACrE,EAEAwwG,eAAgB,SAAU5qF,GAClB5lB,KAAKijC,UAGmB,GAAxBjjC,KAAKgwG,iBAIThwG,KAAKijC,QAAU,IAAI,mBAAuB,CAAE9N,UAAWn1B,KAAM+wG,YAAanrF,IAC1E5lB,KAAK60B,kBAAkBjP,IAJnB5lB,KAAKgwG,kBAMb,EAEAU,sBAAuB,SAAUx5F,GAO7B,GANIA,EAAQ1U,IAAI,WAAa,GAAUpM,eAAiB4J,KAAK8zB,MAAMtxB,IAAI,qBAAuB0U,EAAQ1U,IAAI,cACtGxC,KAAK8zB,MAAM/T,IAAI,oBAAqB7I,EAAQ1U,IAAI,cAChDxC,KAAK8zB,MAAM/T,IAAI,oBAAqB7I,EAAQ1U,IAAI,eACzC0U,EAAQ1U,IAAI,WAAa,GAAUrM,eAAiB6J,KAAK8zB,MAAMtxB,IAAI,qBAAuB0U,EAAQ1U,IAAI,cAC7GxC,KAAK8zB,MAAM/T,IAAI,oBAAqB7I,EAAQ1U,IAAI,cAEhDxC,KAAKijC,QAAS,CACd,IACIuB,EADWxkC,KAAKijC,QAAQtlC,EAAE,gCAAgCuZ,EAAQ1U,IAAI,kBACrD3C,KAAK,yBAC1B2kC,EAAMhlC,KAAK,CACP,aAAc0X,EAAQ2oF,WACtB,MAAS3oF,EAAQ4oF,oBAEpBt7D,EAAMhlC,KAAK,gBAAkB,GAAU/B,UAAU,GAAUzH,YAAewuC,EAAMlK,SAAS,CACtFC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QAEnB,CACIzjB,IAAYlX,KAAK8zB,MAAMmlE,cACvBj5F,KAAK60B,oBAET70B,KAAKqwG,iBACT,EAEAlzE,WAAY,WACJn9B,KAAK8zB,MAAMtxB,IAAI,SACfxC,KAAKrC,EAAE,eAAe2E,KAAK,aAAiB,2BAGhDtC,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAKi1B,QAAQzyB,IAAI,QAChD,EAEAs4D,aAAc,WACV,GAAI96D,KAAK8zB,MAAMtxB,IAAI,SACf,OACJ,IAAI+jB,EAASvmB,KAAKi1B,QAAQzyB,IAAI,UAC9BxC,KAAKrC,EAAE,WAAW6B,KAAK,cAAe+mB,GACtCvmB,KAAKrC,EAAE,cAAc6B,KAAK,cAAe+mB,EAC7C,EAEA+pF,mBAAoB,WAChBtwG,KAAKD,IAAIgN,YAAY,SAAU/M,KAAK8zB,MAAMtxB,IAAI,WAC9CxC,KAAK60B,mBACT,EAEA+7E,qBAAsB,WACF5wG,KAAKi1B,QAAQzyB,IAAI,cAE7BxC,KAAK8zB,MAAM/T,IAAI,eAAe,EACtC,EAEA27D,UAAW,WACP17E,KAAKy7E,aACLz7E,KAAKD,IAAIgN,YAAY,UAAW/M,KAAK8zB,MAAMtxB,IAAI,WACnD,EAEA8wF,cAAe,WACX,IAAIgY,EAAStrG,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK8zB,MAAMtxB,IAAI,gBACvDxC,KAAKrC,EAAE,gBAAgB2T,OAAOg6F,GAAQhpG,KAAKgpG,GAAU,IACrDtrG,KAAKgxG,oBACT,EAEAL,2BAA4B,WACxB3wG,KAAKrC,EAAE,8BAA8B2T,OAAOtR,KAAKi1B,QAAQzyB,IAAI,eAAkBxC,KAAKi1B,QAAQzyB,IAAI,4BAAkE,QAApCxC,KAAKi1B,QAAQzyB,IAAI,iBAC/IxC,KAAKgxG,oBACT,EAEAX,gBAAiB,WACb,IAAIY,EAAajxG,KAAK8zB,MAAMP,SAAS5c,QAAOC,IAAyB,IAApBA,EAAEpU,IAAI,WACvDxC,KAAKrC,EAAE,mBAAmB2T,OAAO2/F,EAAWhvG,QAC5CjC,KAAKgxG,oBACT,EAEAA,mBAAoB,WAChB,IAAIE,EAAmBlxG,KAAKrC,EAAE,iCAAiCgwB,SAAS,iBAAiB1rB,OACzFjC,KAAKrC,EAAE,aAAaoP,YAAY,oBAA0C,IAArBmkG,GACrDlxG,KAAKrC,EAAE,aAAaoP,YAAY,kBAAwC,IAArBmkG,EACvD,EAEA1zE,aAAc,WACV,GAAIx9B,KAAK8zB,MAAMtxB,IAAI,SACf,OACJ,IAAIxH,EAAQgF,KAAKi1B,QAAQ9vB,aACzBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAszE,gBAAiB,WACbpwG,KAAKD,IAAIgN,YAAY,YAAa/M,KAAK8zB,MAAMtxB,IAAI,aACrD,EAEAytG,aAAc,WACV,IAAIkB,EAAYnxG,KAAK8zB,MAAMtxB,IAAI,UAC/BxC,KAAKrC,EAAE,gBAAgB2T,OAAO6/F,GAA2B,MAAdA,GACvCA,GACA,iCAAqCnxG,KAAK8zB,MAClD,EAEAg9E,qBAAsB,SAAUvxF,GAC5Bvf,KAAKD,IAAIP,KAAK,aAAc+f,EAChC,EAEAk8D,WAAY,WACR,IAAKz7E,KAAKi1B,QACN,OACJj1B,KAAKrC,EAAE,cAAcwC,SAAS,UAC9B,IAAI46E,EAAU/6E,KAAKi1B,QAAQw9C,UAC3BsI,GAAW/6E,KAAKrC,EAAE,cAAcuC,YAAY,+BAA+B6M,YAAYguE,EAAqB,gBAAXA,GAAwC,UAAXA,GAAkC,WAAXA,GAAuBp7E,KAAK,GAAId,UAAUuB,IAAI26E,KACvM,EAEAuB,iBAAkB,WACTt8E,KAAKi1B,UAEVj1B,KAAKrC,EAAE,gBAAgBoP,YAAY,qBAAsB/M,KAAK8zB,MAAMuI,WACpEr8B,KAAKrC,EAAE,eAAeoP,YAAY,eAAiB/M,KAAK8zB,MAAMuI,UAAY,MAAatvB,YAAY,iBAAmB/M,KAAK8zB,MAAMuI,WAAa,MAC9Ir8B,KAAKrC,EAAE,eAAe2T,OAAOtR,KAAK8zB,MAAMuI,WAC5C,EAEA6zE,oBAAqB,WACjB,IAAKlwG,KAAKi1B,QACN,OACJ,IAAIm8E,EAAWpxG,KAAK8zB,MAAMtxB,IAAI,aAC1B4uG,IAAcA,GAAY,kBAAsB,WAAWpkG,SAAS,mBACpEhN,KAAKD,IAAI+K,UACTsmG,GAAY,kBAAsB,WAAWpkG,SAAS,mBAAqBokG,IAAa,kBAAsB,WAAWpkG,SAAS,mBAClI,iCAAqChN,KAAK8zB,MAClD,EAEAq8E,iBAAkB,WACd,IAAKnwG,KAAKi1B,QACN,OACJ,IAAI6mD,EAAgB97E,KAAKi1B,QAAQzyB,IAAI,cACrCxC,KAAKrC,EAAE,WAAW4T,OAAOuqE,GACzB97E,KAAKrC,EAAE,cAAc2T,OAAOwqE,GAC5B97E,KAAKy7E,aACDK,IACA97E,KAAKD,IAAII,SAAS,cAClBH,KAAK8zB,MAAM/T,IAAI,cAAc,GAErC,EAEAqhB,kBAAmB,WACf,IAAIv7B,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKD,IAAIP,KAAK,aAAcqG,EAChC,EAEA4qG,iBAAkB,SAAU7qF,GACxB,GAAI5lB,KAAK8zB,MAAMmlE,eAAiBrzE,EAAK,CACjC,IAAIqzE,EACJ,IAAK,IAAIv2F,EAAM1C,KAAK8zB,MAAMP,SAAStxB,OAAO,EAAGS,GAAO,IAChDu2F,EAAej5F,KAAK8zB,MAAMP,SAASgnC,GAAG73D,GACjCu2F,EAAaz2F,IAAI,WAF6BE,KAKvD1C,KAAK8zB,MAAMmlE,aAAeA,EAC1Bj5F,KAAK60B,mBACT,CACA70B,KAAKqxG,yBAAyBzrF,EAClC,EAEAyrF,yBAA0B,SAAUn6F,GAChC,IAAIo6F,EAAU,GAGd,GAFAp6F,EAAQ1U,IAAI,uBAAyB8uG,EAAUA,EAAQ/3B,OAAOriE,EAAQ1U,IAAI,uBAC1E0U,EAAQ1U,IAAI,uBAAyB8uG,EAAUA,EAAQ/3B,OAAOriE,EAAQ1U,IAAI,uBACtE8uG,EAAQrvG,OAAO,CACf,GAAI,uBAA2B,EACH,gCACpBqvG,EAAQ/7F,SAAS,oDAAwD,sCACvE+7F,EAAQ/7F,SAAS,2BAGnB,yBAA6BrU,IACrBA,EAAK0/B,YACD1/B,EAAK0/B,YAAYC,eACjB3/B,EAAK0/B,YAAYC,cAAcC,WAGnC5/B,EAAK4mE,MAAM,IAEf,iCAAuC,qBACvC,mCAEA,uBAA6B,KAC7B,WAAe,wBAG3B,CACA9nE,KAAK8zB,MAAM3Q,aAAenjB,KAAK8zB,MAAM3Q,aAAaxM,QAAQ3E,IAASs/F,EAAQ/7F,SAASvD,KACpF,gBAAsB,wBAA4BA,IAASs/F,EAAQ/7F,SAASvD,KAC5E,WAAe,sBACnB,CACJ,EAEA4mF,gBAAiB,WACb,IAAI2Y,EAAWvxG,KAAK8zB,MAAMtxB,IAAI,aAC1BgvG,EAAWzvG,OAAO/B,KAAK8zB,MAAMtxB,IAAI,uBAAyBT,OAAO/B,KAAK8zB,MAAMtxB,IAAI,uBAAyBT,OAAO/B,KAAK8zB,MAAMtxB,IAAI,kBACnIxC,KAAKrC,EAAE,aAAagC,KAAK,aAAiB6xG,EAAW,sCAAwC,eAAeC,WAC5GzxG,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAM4R,kCAAkCq9F,IACjE/xG,KAAK,QAAS,GAAgB+xG,GACvC,EAEAjZ,oBAAqB,WACjB,IAAIiZ,EAAWvxG,KAAK8zB,MAAMtxB,IAAI,aAC9BxC,KAAKrC,EAAE,aAAagC,KAAK,aAAiB,oCAAoC8xG,WAC9EzxG,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAM4R,kCAAkCq9F,IACjE/xG,KAAK,QAAS,GAAgB+xG,GACvC,EAEA18E,kBAAmB,SAAUjP,GACzB,IAAK5lB,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAK8zB,MAAMc,WAAa50B,KAAK8zB,MAAMc,UAAUqO,SAAWjjC,KAAK8zB,MAAMc,UAAUqO,QAAQyuE,QAAU1xG,KAAK8zB,MAAMc,UAAUqO,QAAQyuE,OAAO/zG,EAAE,iCAAiCmS,0BAA0BtL,OAAO,CACpO,IAAImtG,EAAgB3xG,KAAK8zB,MAAMc,UAAUqO,QAAQyuE,OAAO/zG,EAAE,iCAAiCmS,0BAG3F,OAFA9P,KAAKrC,EAAE,aAAagC,KAAKgyG,GAAev8E,QAAQ,GAAE,gCAAgC,aAAiB,2BACnGp1B,KAAKD,IAAIwB,QAAQ,YAAa,CAACG,WAAY,KAAKqQ,aAAa,CAACe,YAAY,GAE9E,CAEA,GADA8S,IAAQA,EAAM5lB,KAAK8zB,MAAMmlE,eACpBrzE,EAED,aADC5lB,KAAK8zB,MAAMP,SAAStxB,QAAUjC,KAAK44F,mBAGxC,IAAI2Y,EAAW3rF,EAAIpjB,IAAI,QACnBsR,EAAY8R,EAAIpjB,IAAI,aAAcovG,EAAW,GAC7ChS,EAAoBh6E,EAAIpjB,IAAI,qBAC5BqvG,EAAYjsF,EAAIpjB,IAAI,UAAY,GAChCsvG,EAAalsF,EAAIpjB,IAAI,WAAa,GAClCuvG,EAAgBnsF,EAAIpjB,IAAI,cAAgB,GACxCoyE,EAAWgrB,EAAqBh6E,EAAIpjB,IAAI,YAAc,qBAAyB,2BAA4Bo9F,EAAkB39F,QAAQwvG,UAAa7rF,EAAIk6B,UACtJkyD,EAAgBpsF,EAAIpjB,IAAI,cAAgBojB,EAAIozE,cAAgBh5F,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQr8D,YAAc,CAAC,EAM5I,GALAsO,EAAIpjB,IAAI,WAAaojB,EAAIpjB,IAAI,UAAUP,SAAW4vG,EAAYA,EAAUt4B,OAAO3zD,EAAIpjB,IAAI,YACvFxC,KAAK8zB,MAAM/T,IAAI,CAACjM,UAAWA,IACvB9T,KAAK8zB,MAAMtxB,IAAI,gBACfovG,EAAWI,EAAcrtD,UAAYqtD,EAAc95F,MAAQ0N,EAAIozE,aAAeh5F,KAAK0sB,QAAQlqB,IAAI,QAAUojB,EAAIpjB,IAAI,cAAgB,IACrIovG,IAAaA,EAAW,GAAE,gCAAgCtvG,KAAKsvG,EAAW,OACtEC,EAAU5vG,QAAU6vG,EAAW7vG,QAAU8vG,EAAc9vG,OAAQ,CAC/D,IAAIgwG,EAAgB,GAAE,kCAKtB,GAJwB,gBAApBrsF,EAAIpjB,IAAI,UACRsvG,EAAaD,EAAUl7F,QAAOukE,GAAKA,GAAKA,EAAEr3E,MAAQ,GAAM8Q,YAAYumE,EAAEr3E,QACtEguG,EAAYA,EAAUl7F,QAAOukE,GAAKA,KAAOA,EAAEr3E,MAAQ,GAAM8Q,YAAYumE,EAAEr3E,UAEvEguG,EAAU5vG,QAAU6vG,EAAW7vG,OAC/B2yE,EAAWq9B,EAAc3vG,KAAK,aAAiB,yCAA0C,CAACuvG,EAAU5vG,OAAS6vG,EAAW7vG,cACvH,CACD,GAAwB,GAApB4vG,EAAU5vG,SAAgB4vG,EAAU,GAAGK,UAAYL,EAAU,GAAG35C,OAChE0c,EAAWq9B,EAAc3vG,KAAK,GAAG,aAAiB,qBAAuB,GAAMqT,gBAAgBk8F,EAAU,GAAGj8F,gBAC3G,GAAIi8F,EAAU5vG,OAAS,EAAG,CAC3B,IAAIkwG,EAAa,EACjBN,EAAUx/F,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACnDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,mCAAoCuvG,EAAU5vG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAC5K,CACA,GAAIL,EAAW7vG,OAAS,EAAG,CACvB,IAAIkwG,EAAa,EACjBL,EAAWz/F,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACpDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,oCAAqCwvG,EAAW7vG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAC9K,CACIJ,EAAc9vG,OAAS,IACvB2yE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,uCAAwCyvG,EAAc9vG,SAErH,CACAjC,KAAKrC,EAAE,aAAagC,KAAK,IAAIkN,OAAO+kG,GAAU/kG,OAAO+nE,EACzD,KACK,CACD,GAAuB,UAAnBhvD,EAAIpjB,IAAI,QACRovG,EAAW,GACPhsF,EAAIpjB,IAAI,YACRoyE,EAAW,aAAiB,qCAAsC,CAAE50E,KAAKi1B,SAAWj1B,KAAKi1B,QAAQzyB,IAAI,kBAAqB,YAAc,YAC5IojB,EAAIpjB,IAAI,oBAAsBoyE,EAAW,aAAiB,kDAEtDA,EADA50E,KAAK8zB,MAAMtxB,IAAI,cACJ,GAAE,QAAQF,KAAKsyE,GAEf,GAAE,gCAAgCtyE,KAAKsyE,GACtD50E,KAAKrC,EAAE,aAAagC,KAAKi1E,GACrBhvD,EAAIpjB,IAAI,iBACR,gDAIJ,GAAIo9F,EACA,GAAIh6E,EAAIpjB,IAAI,WACRoyE,EAAWhvD,EAAIpjB,IAAI,WACnBxC,KAAKrC,EAAE,aAAa2E,KAAKsyE,OAExB,CACD,IAAIw9B,EAAsBxS,EAAkB,GAC5C,GAAIwS,EAAoB5vG,IAAI,WAAY,CACpC,IAAI6vG,EAAgBD,EAAoB5vG,IAAI,UAAY,GACpD8vG,EAAiBF,EAAoB5vG,IAAI,WAAa,GACtD+vG,EAAoBH,EAAoB5vG,IAAI,cAAgB,GAEhE,GADA4vG,EAAoB5vG,IAAI,WAAa4vG,EAAoB5vG,IAAI,UAAUP,SAAWowG,EAAgBA,EAAc94B,OAAO64B,EAAoB5vG,IAAI,YAC3I6vG,EAAcpwG,QAAUqwG,EAAerwG,QAAUswG,EAAkBtwG,OAAQ,CAC3E,IAAIgwG,EAAgB,GAAE,kCAKtB,GAJwB,gBAApBrsF,EAAIpjB,IAAI,UACR8vG,EAAiBD,EAAc17F,QAAOukE,GAAKA,EAAEr3E,MAAQ,GAAM8Q,YAAYumE,EAAEr3E,QACzEwuG,EAAgBA,EAAc17F,QAAOukE,KAAOA,EAAEr3E,MAAQ,GAAM8Q,YAAYumE,EAAEr3E,UAE1EwuG,EAAcpwG,QAAUqwG,EAAerwG,OACvC2yE,EAAWq9B,EAAc3vG,KAAK,aAAiB,yCAA0C,CAAC+vG,EAAcpwG,OAASqwG,EAAerwG,cAC/H,CACD,GAA4B,GAAxBowG,EAAcpwG,SAAgBowG,EAAc,GAAGH,UAAYG,EAAc,GAAGn6C,OAC5E0c,EAAWq9B,EAAc3vG,KAAK,GAAG,aAAiB,qBAAuB,GAAMqT,gBAAgB08F,EAAc,GAAGz8F,gBAC/G,GAAIy8F,EAAcpwG,OAAS,EAAG,CAC/B,IAAIkwG,EAAa,EACjBE,EAAchgG,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACvDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,mCAAoC+vG,EAAcpwG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAChL,CACA,GAAIG,EAAerwG,OAAS,EAAG,CAC3B,IAAIkwG,EAAa,EACjBG,EAAejgG,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACxDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,oCAAqCgwG,EAAerwG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAClL,CACII,EAAkBtwG,OAAS,IAC3B2yE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,uCAAwCiwG,EAAkBtwG,SAEzH,CACIjC,KAAK8zB,MAAMtxB,IAAI,cACfxC,KAAKrC,EAAE,aAAagC,KAAK,IAAIkN,OAAO+kG,GAAU/kG,OAAO,MAAMA,OAAO+nE,GAElE50E,KAAKrC,EAAE,aAAagC,KAAK,MAAMkN,OAAO+nE,EAE9C,MAAW50E,KAAK8zB,MAAMtxB,IAAI,eACtBoyE,EAAWw9B,EAAoB5vG,IAAI,WACnCoyE,EAAW,KAAOA,EAClB50E,KAAKrC,EAAE,aAAa2E,KAAKsyE,KAEzBA,EAAWw9B,EAAoB5vG,IAAI,WACnCxC,KAAKrC,EAAE,aAAa2E,KAAKsyE,GACzBg9B,EAAW,KAEnB,MAEI,GAAiC,IAA7BhS,EAAkB39F,OAAc,CAChC,IAAIuwG,EAAc,qBAAyB,2BAA4B5S,EAAkB39F,QAAQoB,MAAM,GACvGmvG,EAAcA,EAAYlyD,OAAO,GAAGx5C,cAAgB0rG,EAAYnvG,MAAM,GACtEuxE,EAAW,GAAE,QAAQtyE,KAAKkwG,GAC1BxyG,KAAKrC,EAAE,aAAagC,KAAK,MAAMkN,OAAO+nE,EAC1C,MAEIA,EAAW,GAAE,QAAQtyE,KAAK,qBAAyB,2BAA4Bs9F,EAAkB39F,SACjGjC,KAAKrC,EAAE,aAAagC,KAAK,MAAMkN,OAAO+nE,EAGlD,MAGAA,EAAWhvD,EAAIk6B,UACf9/C,KAAKrC,EAAE,aAAa2E,KAAKsyE,GAGjC50E,KAAKrC,EAAE,aAAay3B,QAAQw8E,EAChC,CACA5xG,KAAKD,IAAIwB,QAAQ,YAAa,CAACG,WAAY,KAAKqQ,aAAa,CAACe,YAAY,IAC1E9S,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAM4R,kCAAkCq9F,IACjE/xG,KAAK,QAAS,GAAgB+xG,IACnCvxG,KAAKrC,EAAE,yBAAyB2T,OAA2B,WAApBsU,EAAIpjB,IAAI,SAAwBojB,EAAIozE,cAAiBpzE,EAAIpjB,IAAI,WAAa,GAAUnM,cACtHmJ,KAAK,aAAcomB,EAAIi6E,WAChC,EAEA4S,YAAa,WACTzyG,KAAKiK,MACT,EAEAA,KAAM,SAAUjL,GACPgB,KAAKijC,UACNjjC,KAAKijC,QAAU,IAAI,mBAAuB,CAAC9N,UAAWn1B,QAE1DhB,IAAYA,EAAU,CAACq8B,oBAAoB,EAAM1F,cAAc,IAC/D,uBAA2B31B,KAAMhB,GACjCgB,KAAKijC,QAAQyuE,OAAOgB,cAAgB,EACpC1yG,KAAKijC,QAAQyuE,OAAOiB,uBACxB,EAEA9B,aAAc,SAAU7xG,GACpB,IAAKgB,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,SAC7C,OACJp0D,IAAYA,EAAU,CAAC,GACvB,IAAIw9B,EAAO,GAAEnlB,MAAMrX,KAAK8zB,MAAMP,SAASimC,QACvCx5D,KAAK8zB,MAAM/T,IAAI,CAAC,qBAAmB3E,EAAW,sBAAoBA,IAClEohB,EAAKnqB,SAASnR,IACV,GAAIA,EAAKsB,IAAI,UAAW,CACpB,IAAI8sG,EAAgB,GAAI,CAACzrG,KAAM,MAAO0S,GAAIvW,KAAK0sB,QAAQlqB,IAAI,SACtD2Q,EAAE,kBAAmB,CAClBvJ,GAAI1I,EAAKsB,IAAI,aACbyzB,MAAO,GAAQC,GAAGk9B,QAClB+7C,WAAW,EACXhB,GAAInuG,KAAK0sB,QAAQlqB,IAAI,SAE7BxC,KAAK0sB,QAAQiK,WAAW24E,GACxBpuG,GAAQlB,KAAKijC,QAAQ08D,cAAcz+F,EACvC,KAEJlB,KAAK8zB,MAAM83E,uBACJ5rG,KAAKi1B,QAAQ3d,WAAWi3E,WAC/BvuF,KAAKy7E,YACT,EAEA80B,SAAU,WACNvwG,KAAKytB,OAAOmlF,cAAc5yG,KAAK8zB,MAAO,CAACzE,MAAM,GACjD,IAGF,gBAAsB,oBAAwB,CAC1C7B,SAAU,GAAUisD,aACpB3rD,YAAa,gBACbG,YAAa,CACT4kF,kBAAkB,GAEtB/1E,YAAa,GAAU7lC,aAAamB,aAEpCm2B,YAAa,SAAUvvB,GACnBgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B,IAAI7mB,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKD,IAAIP,KAAK,aAAcqG,GAC5B7F,KAAKs/E,aAAet/E,KAAKrC,EAAE,uBAC3BqC,KAAK8yG,iBAAkB,EACvB9yG,KAAK+yG,gBAAiB,EACtB/yG,KAAKgzG,aAAe,EACpBhzG,KAAKizG,YAAc,EACnBjzG,KAAKkzG,WAAalzG,KAAK6vB,eACvB7vB,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAKy5E,aAAez6E,EAAQy6E,cAAgBz5E,KAAK8zB,MAAMc,UAAUqO,QACjE,IAAIkwE,EAAWnzG,KAAKozG,wBACpBpzG,KAAKD,IAAIsjB,GAAG8vF,EAAUnzG,KAAKqzG,aAAa/qG,KAAKtI,OAC7CA,KAAKrC,EAAE,mBAAmB8N,MAAMzL,KAAKszG,aAAahrG,KAAKtI,MAC3D,EAEAozG,sBAAuB,WACnB,OAAK,GAAEhoG,YAAYrH,OAAOwvG,SAEd,GAAEnoG,YAAYrH,OAAOyvG,cAGtB,sBAFA,aAFA,OAMf,EAEAC,YAAa,SAAU5oG,GACnB,GAAIA,EAAGW,UAAY,GAAUlZ,UAAW,CACpC,IAAI+/B,EAAQryB,KAAKs/E,aAAaz/E,KAAK,SAAS0N,MAC5CvN,KAAK8zB,MAAM8B,eAAevD,GAAQkB,IAAD,GAErC,CACI1oB,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,kBAC/DuN,KAAKy5E,aAAauH,KAAK0yB,mBAE/B,EAEAL,aAAc,SAAUxoG,GACpB7K,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEAgjF,eAAe,SAAU9oG,GACrB7K,KAAKy5E,aAAak6B,eAAe9oG,EACrC,EAEA+oG,YAAY,SAAU/oG,GAClB7K,KAAKy5E,aAAam6B,YAAY/oG,EAClC,EAEAgpG,oBAAoB,SAAUhpG,GAC1B7K,KAAKy5E,aAAao6B,oBAAoBhpG,EAC1C,EAEAipG,gBAAgB,SAAUjpG,GACtB7K,KAAKy5E,aAAaq6B,gBAAgBjpG,EACtC,EAEAkpG,gBAAgB,SAAUlpG,GACtB7K,KAAKy5E,aAAas6B,gBAAgBlpG,EACtC,EAEAopB,SAAU,WACNj0B,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,sBACtC3wB,KAAKg0G,gBAAkBh0G,KAAKkzG,YAAc,EAC1ClzG,KAAKkzG,WAAalzG,KAAK6vB,gBAClB7vB,KAAK+yG,iBAAmB/yG,KAAK8yG,iBAAoB9yG,KAAKkzG,WAAalzG,KAAKg0G,kBAAqBh0G,KAAKkzG,WAAa,KAAOlzG,KAAKywB,qBAAuB,MACnJzwB,KAAK8yG,iBAAkB,EACvB9yG,KAAKqoF,gBAAgB,CAACj1D,OAAQpzB,KAAKgzG,eAAe,KAC9ChzG,KAAK8yG,iBAAkB,CAAK,IAGxC,EAEAQ,aAAc,WACVtzG,KAAK69E,WACL79E,KAAKkwB,iBACLlwB,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEA03D,gBAAiB,WAAa,EAE9B4rB,UAAW,WACPj0G,KAAKrC,EAAE,iBAAiBgC,KAAK,GAAE,yBAAyB2C,KAAK,aAAiB,gBAClF,EAEAu7E,SAAU,WACN79E,KAAK8zB,MAAMc,UAAU3qB,KAAK,CAACoxB,oBAAoB,EAAM1F,cAAc,GACvE,EAEAu+E,eAAgB,SAAUr9B,EAAUjxD,EAAK80C,EAAOy5C,GAC5C,IAAIC,EACAC,EAAuBr0G,KAAKwwB,kBAClB,IAAVkqC,EACAmc,EAASoP,UAAUjmF,KAAKrC,EAAE,kBAE1Bk5E,EAASv+C,YAAYt4B,KAAKrC,EAAE,iBAAiBq2B,GAAG0mC,EAAQ,IACxDA,IAAUy5C,IACVC,EAAoBp0G,KAAK6vB,gBAC7B,IAAIykF,EAAgBz9B,EAAS09B,QAAQ,iBAAiBriF,QAUtD,OATAlyB,KAAKy5E,aAAa+6B,oBAAoB39B,EAAS,GAAIjxD,GAC/C0uF,EAAcryG,QACdjC,KAAKy5E,aAAa+6B,oBAAoBF,EAAc,IAExDt0G,KAAKy5E,aAAag7B,UAAU59B,GACxBu9B,EACAp0G,KAAK+vB,SAASqkF,GAEdp0G,KAAK+vB,SAAS/vB,KAAK+tB,aAAa,GAAG3U,aAAepZ,KAAK+tB,aAAa,GAAGoC,aAAekkF,GACnFx9B,CACX,IAIJ,sBAA4B,uBAA2B,CACnD9lD,UAAW,0CAEXE,OAAQ,CACJ,sBAAuB,iBACvB,mCAAoC,kBACpC,gDAAiD,kBACjD,0BAA2B,cAC3B,2BAA6B,sBAC7B,8BAA+B,eAGnCzC,aAAc,SAAUxvB,GACpBA,EAAUA,GAAW,CAAC,EACtBgB,KAAKu3E,UAAYv4E,EAAQgvG,kBACzBhuG,KAAKuf,UAAYvgB,EAAQugB,UACzBvf,KAAK+tG,gBAAkB/uG,EAAQ+uG,gBAC1B/tG,KAAK8zB,MAAMc,UAAUqO,UACtBjjC,KAAKy5E,aAAe,IAAI,mBAAuB,CAACtkD,UAAWn1B,KAAK8zB,MAAMc,aAC1E50B,KAAK00G,kBAAoB10G,KAAKrC,EAAE,0BAChCqC,KAAK0sB,QAAQ42E,iBAAmB,IAAI,YAAgB,KAAM,CAAC52E,QAAS1sB,KAAK0sB,UACzE1sB,KAAK0sB,QAAQ42E,iBAAiBjgF,GAAG,2BAA4BrjB,KAAKy5E,aAAawyB,cAAejsG,MAC9FA,KAAK0sB,QAAQ42E,iBAAiBjgF,GAAG,MAAOrjB,KAAK20G,WAAY30G,MACzD,MAAU,sBAAuBA,KAAK40G,aAAc50G,KACxD,EAEAgvB,OAAQ,WACJhvB,KAAKiwB,cACLjwB,KAAK40G,eACL50G,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,sBACtC3wB,KAAKuf,WAAavf,KAAKD,IAAIP,KAAK,cAAc,EAClD,EAEA6zG,aAAc,SAAUxoG,GACf7K,KAAK8yG,kBACFjoG,EAAGgqG,cAAcC,OAAS,EACrB90G,KAAK+0G,uBACN/0G,KAAK8yG,iBAAkB,EACvB9yG,KAAKqoF,gBAAgB,CAACj1D,OAAQpzB,KAAKgzG,eAAe,KAC9ChzG,KAAK8yG,iBAAkB,CAAK,KAK/B9yG,KAAKg1G,sBACNh1G,KAAK8yG,iBAAkB,EACvB9yG,KAAKqoF,gBAAgB,CAACjtB,MAAOp7D,KAAKizG,cAAc,KAC5CjzG,KAAK8yG,iBAAkB,CAAK,MAI5C9yG,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEAsD,SAAU,WACNj0B,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,sBACtC3wB,KAAKg0G,gBAAkBh0G,KAAKkzG,YAAc,EAC1ClzG,KAAKkzG,WAAalzG,KAAK6vB,eACvB7vB,KAAKi1G,cAAgBj1G,KAAKwwB,kBAErBxwB,KAAK8yG,mBACD9yG,KAAK+0G,sBAAyB/0G,KAAKkzG,WAAalzG,KAAKg0G,kBAAqBh0G,KAAKkzG,WAAa,KAAOlzG,KAAKywB,qBAAuB,KAChIzwB,KAAK8yG,iBAAkB,EACvB9yG,KAAKk1G,sBACLl1G,KAAKqoF,gBAAgB,CAACj1D,OAAQpzB,KAAKgzG,eAAe,KAC9ChzG,KAAK8yG,iBAAkB,EACvB9yG,KAAKm1G,qBAAqB,MAIzBn1G,KAAKg1G,qBAAwBh1G,KAAKkzG,WAAalzG,KAAKg0G,kBAAqBh0G,KAAKi1G,cAAgB,KAAOj1G,KAAKywB,qBAAuB,MAClIzwB,KAAK8yG,iBAAkB,EACvB9yG,KAAKk1G,sBACLl1G,KAAKqoF,gBAAgB,CAACjtB,MAAOp7D,KAAKizG,cAAc,KAC5CjzG,KAAK8yG,iBAAkB,EACvB9yG,KAAKm1G,qBAAqB,KAI9C,EAEAD,oBAAqB,WACjBl1G,KAAK00G,kBAAkBpyG,KAAK,aAAiB,oBAAoBpC,YAAY,SACjF,EAEAi1G,oBAAqB,WACjBn1G,KAAK00G,kBAAkBv0G,SAAS,SACpC,EAEAkoF,gBAAiB,SAAUh2D,EAAOrK,GAC9B,IAAIuL,EAAW,GACXv0B,EAAUqzB,GAAS,CAAC,EACpBS,EAAU,MACb9zB,EAAQ82B,MAAQ92B,EAAQ82B,IAAM,iCAC9B92B,EAAQo8D,QAAUp8D,EAAQo0B,SAAWp0B,EAAQo0B,OAAS,IACvD,IAAIqD,EAAUz2B,KAAK0sB,QAAQK,WAAW2J,YAAYxf,IACnC,GAAEA,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GACxCS,EAASnyB,KAAK8V,IACX,IACR,GAAQgf,GAAGC,KACdn2B,KAAKy5E,aAAapmD,WAAWr0B,GAAS,CAACiqC,EAAS1V,EAAU4kD,KAClDn4E,KAAK0sB,QAAQK,WAAW6J,cAAcH,GACtC0hD,IAAQn4E,KAAKgzG,aAAe76B,EAAIjmD,SAAWlyB,KAAKizG,YAAc96B,EAAIle,MAC9Dj7D,EAAQo8D,OAAU7nC,EAAStxB,OAASjD,EAAQ82B,MAC5C91B,KAAKg1G,qBAAsB,GAC3Bh2G,EAAQo0B,QAAWG,EAAStxB,OAASjD,EAAQ82B,MAC7C91B,KAAK+0G,sBAAuB,GAChC,GAAExhF,GAAUzzB,MAAK,CAAC4C,EAAKwU,KACnB,IAAI2/D,EAAW,GAAE3/D,GACjBlX,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAU,CAACsqB,iBAAiB,GAAM,IAE5En5E,GAAYA,GAAU,IACvB,KACChoB,KAAK0sB,QAAQK,WAAW6J,cAAcH,EAAQ,GAG1D,EAEAk+E,WAAY,SAAUz9F,GAClB,GAAIA,EAAQ1U,IAAI,gBACZ,OACAxC,KAAK+tG,iBAAoB72F,EAAQ1U,IAAI,eAAiBxC,KAAKu3E,WAAoBrgE,EAAQ6I,IAAI,eAAe,GAC9G,IAAI82D,EAAW72E,KAAKy5E,aAAa27B,iBAAiBl+F,GAAS/W,SAAS,mBAChEu6D,EAAQ16D,KAAK0sB,QAAQ42E,iBAAiBl/F,QAAQ8S,GAC9CA,EAAQ1U,IAAI,eAAiBxC,KAAKu3E,YAClCV,EAAS12E,SAAS,wBAClBiK,YAAW,KACPysE,EAAS32E,YAAY,uBAAsB,GAC5C,MAEPF,KAAKk0G,eAAer9B,EAAU3/D,EAASwjD,EAAO16D,KAAK0sB,QAAQ42E,iBAAiB+R,gBAChF,EAEAT,aAAc,SAAU/pG,GAEpB,GADA7K,KAAKrC,EAAE,yBAAyBuC,YAAY,yBACxC,wBAA8B,mCAAwC,CACtE,IAAI22E,EAAW72E,KAAKrC,EAAE,gCAAgC,8CAClDk5E,EAAS50E,QACT40E,EAASh3E,KAAK,0CAA0C,mDAAuDM,SAAS,wBAEhI,CACJ,IAGJ,wBAA8B,uBAA2B,CACrD4wB,UAAW,2CAEXE,OAAQ,CACJ,sBAAuB,iBACvB,mCAAoC,kBACpC,gDAAiD,kBACjD,0BAA2B,cAC3B,2BAA6B,sBAC7B,8BAA+B,WAC/B,8BAA+B,eAGnCzC,aAAc,SAAUxvB,GAKpB,OAJAgB,KAAKszB,WAAat0B,EAAQs0B,WAC1BtzB,KAAK0sB,QAAQ43D,kBAAoB,IAAI,YAAgB,KAAM,CAAC53D,QAAS1sB,KAAK0sB,UAC1E1sB,KAAK0sB,QAAQ43D,kBAAkBjhE,GAAG,2BAA4BrjB,KAAKy5E,aAAawyB,cAAejsG,MAC/FA,KAAK0sB,QAAQ43D,kBAAkBjhE,GAAG,MAAOrjB,KAAK20G,WAAY30G,MACnDA,IACX,EAEAgvB,OAAQ,WACJhvB,KAAKs/E,aAAaz/E,KAAK,SAAS0N,IAAIvN,KAAKszB,YACzCtzB,KAAKs/E,aAAag2B,YAAY,IAAI,KACW,SAArCt1G,KAAKs/E,aAAah6E,IAAI,YACtBtF,KAAKs/E,aAAaz/E,KAAK,SAASkP,QACpC/O,KAAKkwB,gBAAgB,IAEzBlwB,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEA03D,gBAAiB,SAAUh2D,EAAOrK,GAC9B,IAAIuL,EAAW,GACXv0B,EAAUqzB,GAAS,CAAC,EACpBS,EAAU,KACd,GAAE9oB,OAAOhL,EAAS,CACd82B,IAAK,+BACL1C,OAAQf,EAAMe,QAAU,GACxBrZ,IAAK,CAAC,CAACA,IAAK,WAAYhP,MAAO/K,KAAKszB,eAExC,IAAImD,EAAUz2B,KAAK0sB,QAAQK,WAAW2J,YAAYxf,IACnC,GAAEA,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GACxCS,EAASnyB,KAAK8V,IACX,IACR,GAAQgf,GAAGC,KACdn2B,KAAKy5E,aAAapmD,WAAWr0B,GAAS,CAACiqC,EAAS1V,EAAU4kD,KAClDn4E,KAAK0sB,QAAQK,WAAW6J,cAAcH,GACtC0hD,IAAQn4E,KAAKgzG,aAAe76B,EAAIjmD,OAC3BqB,EAAStxB,QAAWjC,KAAK0sB,QAAQ43D,kBAAkBriF,QACpDjC,KAAKi0G,YAEL1gF,EAAStxB,OAASjD,EAAQ82B,MAC1B91B,KAAK+yG,gBAAiB,GAC1B,GAAEx/E,GAAUzzB,MAAK,CAAC4C,EAAKwU,KACnB,IAAI2/D,EAAW,GAAE3/D,GACjBlX,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAU,CAACsN,kBAAkB,GAAM,IAE7En8D,GAAYA,GAAU,IACvB,KACChoB,KAAK0sB,QAAQK,WAAW6J,cAAcH,EAAQ,GAG1D,EAEAk+E,WAAY,SAAUz9F,GAClB,GAAIA,EAAQ1U,IAAI,gBACZ,OACJ0U,EAAQ6I,IAAI,eAAe,GAC3B,IAAI82D,EAAW72E,KAAKy5E,aAAa27B,iBAAiBl+F,GAAS/W,SAAS,oBAChEu6D,EAAQ16D,KAAK0sB,QAAQ43D,kBAAkBlgF,QAAQ8S,GACnDlX,KAAKk0G,eAAer9B,EAAU3/D,EAASwjD,EAC3C,IAGJ,+BAAqC,uBAA2B,CAC5DltC,SAAU,GAAU+nF,qBACpBtnF,YAAa,CACT4kF,kBAAkB,GAEtB/1E,YAAa,GAAU7lC,aAAamB,aACpC24B,UAAW,2CAEXE,OAAQ,CACJ,sBAAuB,iBACvB,mCAAoC,kBACpC,gDAAiD,kBACjD,0BAA2B,cAC3B,2BAA6B,sBAC7B,8BAA+B,WAC/B,8BAA+B,cAC/B,2BAA4B,cAC5B,kBAAmB,cAGvB1C,YAAa,SAAUvvB,GAYnB,OAXAgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKs/E,aAAet/E,KAAKrC,EAAE,uBAC3BqC,KAAKw1G,MAAQ,KACbx1G,KAAK8yG,iBAAkB,EACvB9yG,KAAK+yG,gBAAiB,EACtB/yG,KAAKgzG,aAAe,EACpBhzG,KAAKizG,YAAc,EACnBjzG,KAAKy5E,aAAez6E,EAAQy6E,cAAgBz5E,KAAK8zB,MAAMc,UAAUqO,QACjEjjC,KAAKytB,OAAOqG,MAAM/T,IAAI,iBAAiB,GAChC/f,IACX,EAEAgvB,OAAQ,WACAhvB,KAAK0sB,QAAQ43D,oBACbtkF,KAAKskF,kBAAoBtkF,KAAK0sB,QAAQ43D,mBAC1CtkF,KAAK0sB,QAAQ43D,kBAAoB,IAAI,YAAgB,KAAM,CAAC53D,QAAS1sB,KAAK0sB,UACtE1sB,KAAKskF,mBACLtkF,KAAK0sB,QAAQ43D,kBAAkBsR,IAAI51F,KAAKskF,kBAAkBxgB,SAAU,CAACw5B,QAAS,IAClFt9F,KAAK0sB,QAAQ43D,kBAAkBjhE,GAAG,MAAOrjB,KAAK20G,WAAY30G,MACtDA,KAAKytB,OAAOqG,MAAMtxB,IAAI,uBACtBxC,KAAKD,IAAIJ,KAAKK,KAAKytB,OAAOqG,MAAMtxB,IAAI,uBACpCxC,KAAK8zB,MAAM/T,IAAI,0BAAsB3E,KAGrCpb,KAAKi0G,YACLj0G,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKi0G,YACDj0G,KAAKytB,OAAOqG,MAAMtxB,IAAI,kBACtBxC,KAAK06E,cAEb16E,KAAK+tB,aAAe/tB,KAAKrC,EAAE,iCACvBqC,KAAK+tB,aAAa9rB,QAClBjC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,iBAGzCjuB,KAAKs/E,aAAet/E,KAAKrC,EAAE,uBACvBqC,KAAKytB,OAAOqG,MAAMtxB,IAAI,wBACtBxC,KAAKs/E,aAAaz/E,KAAK,SAASkP,QAC5B/O,KAAKytB,OAAOqG,MAAMtxB,IAAI,8BACtBxC,KAAK+vB,SAAS/vB,KAAKytB,OAAOqG,MAAMtxB,IAAI,8BAEhD,EAEAovB,YAAa,WACT5xB,KAAKs/E,aAAaz/E,KAAK,SAAS0N,IAAI,IACpCvN,KAAKi0G,WACT,EAGAR,YAAa,SAAU5oG,GAEnB,GADA7K,KAAKrC,EAAE,sBAAsB4T,QAAQvR,KAAKs/E,aAAaz/E,KAAK,SAAS0N,OACjE1C,EAAGW,UAAY,GAAUlZ,UAAW,CACpC0N,KAAKi0G,YACL,IAAI5hF,EAAQryB,KAAKs/E,aAAaz/E,KAAK,SAAS0N,MAC5CvN,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKy1G,kBAAoB1zG,OAAO,GAAOoH,OACvCnJ,KAAKqoF,gBAAgBh2D,EAAOryB,KAAKy1G,uBAAmBr6F,EAAW,IAAI,CAACmY,EAAU4kD,KAAX,GAEvE,CACJ,EAEA87B,UAAW,WACHj0G,KAAK0sB,QAAQ43D,mBACbtkF,KAAK0sB,QAAQ43D,kBAAkB9nC,QACnCx8C,KAAKrC,EAAE,iBAAiBgC,KAAK,IAC7BK,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GACjCvR,KAAKrC,EAAE,sBAAsB4T,QAAO,EACxC,EAEA82E,gBAAiB,SAAUh2D,EAAOve,EAAWqkE,EAAKu9B,EAAiB1tF,GAC/D,IAAIqK,GAASryB,KAAKy1G,mBAAqB3hG,EAEnC,OADA9T,KAAKi0G,aACE,EAEX,IAAI1gF,EAAW,GACXv0B,EAAU,CAAC,EACX8zB,EAAU,KACd,GAAE9oB,OAAOhL,EAAS,CACd82B,IAAK,+BACL/b,IAAK,CAAC,CAACA,IAAK,WAAYhP,MAAOsnB,MAE/B8lD,GAAOA,EAAIle,MACX,GAAEjwD,OAAOhL,EAAS,CACdo8D,MAAO+c,EAAIle,OAEnB,IAAIxjC,EAAUz2B,KAAK0sB,QAAQK,WAAW2J,YAAYxf,IACnC,GAAEA,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GACxCS,EAASnyB,KAAK8V,IACX,IACR,GAAQgf,GAAGC,KACdn2B,KAAKy5E,aAAapmD,WAAWr0B,GAAS,CAACiqC,EAAS1V,EAAU4kD,KASlD,GARAn4E,KAAK0sB,QAAQK,WAAW6J,cAAcH,GACtC0hD,IAAQn4E,KAAKgzG,aAAe76B,EAAIjmD,OAC3BqB,EAAStxB,QAAWjC,KAAK0sB,QAAQ43D,kBAAkBriF,QACpDjC,KAAKi0G,YAEL1gF,EAAStxB,OAASjD,EAAQ82B,MAC1B91B,KAAK+yG,gBAAiB,GAC1B2C,EAAkBA,EAAgBn8B,OAAOhmD,GACrCA,EAAStxB,QAAUjD,EAAQ82B,IAC3B91B,KAAKqoF,gBAAgBh2D,EAAOve,EAAWqkE,EAAKu9B,GAAiB,CAACniF,EAAU4kD,KAAX,SAC5D,GAAIu9B,EAAgBzzG,QAAUk2E,EAAIx9D,MACnC,GAAiB,GAAbw9D,EAAIx9D,MAAY,CAChB,IAAIg7F,EAAgBx9B,EAAIx9D,MACxB3a,KAAKi0G,YAEL,GAAEyB,GAAiB51G,MAAK,CAAC4C,EAAKwU,KAC1B,IAAI2/D,EAAW,GAAE3/D,GACS2/D,EAASh3E,KAAK,kBAAkB,GAAQq2B,GAAG4gC,gBAC7C70D,QACpB0zG,IACJ31G,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAU,CAC5CsN,kBAAkB,EAClBkf,8BAA8B,EAC9BhxE,MAAOA,GACT,IAENryB,KAAKrC,EAAE,mBAAmB4T,QAAQokG,GAClC31G,KAAKrC,EAAE,sBAAsB4T,QAAQokG,GACrC31G,KAAKrC,EAAE,mBAAmB4T,OAAOokG,GACjC31G,KAAKrC,EAAE,mBAAmB2E,KAAK,qBAAyB,0BAA2BqzG,GACvF,MAEI31G,KAAKi0G,YACLj0G,KAAKrC,EAAE,sBAAsB4T,QAAO,GACpCvR,KAAKrC,EAAE,mBAAmB4T,QAAO,GAIzCyW,GAAYA,EAASuL,EAAU4kD,EAAI,IACpC,KACCn4E,KAAK0sB,QAAQK,WAAW6J,cAAcH,EAAQ,GAG1D,EAEAy9E,eAAgB,SAAUr9B,EAAUjxD,EAAK80C,EAAOy5C,GAC5Ct9B,EAASoP,UAAUjmF,KAAKrC,EAAE,kBACtB+8D,IAAUy5C,IACVC,kBAAoBp0G,KAAK6vB,gBACTgnD,EAAS09B,QAAQ,iBAAiBriF,QAMtD,OAAO2kD,CACX,EAEA89B,WAAY,SAAUz9F,GAClB,IAAKlX,KAAKytB,OAAOqG,MAAMtxB,IAAI,iBAAkB,CACzC,GAAI0U,EAAQ1U,IAAI,kBAAoB0U,EAAQ1U,IAAI,gCAC5C,OACJ0U,EAAQ6I,IAAI,eAAe,GAC3B7I,EAAQ6I,IAAI,oBAAoB,GAChC,IAAI82D,EAAW72E,KAAKy5E,aAAa27B,iBAAiBl+F,GAAS/W,SAAS,oBAChEu6D,EAAQ16D,KAAK0sB,QAAQ43D,kBAAkBlgF,QAAQ8S,GACnDlX,KAAKy5E,aAAam8B,kBAAkB/+B,GACpC72E,KAAKk0G,eAAer9B,EAAU3/D,EAASwjD,EAC3C,CACJ,EAEAggB,WAAY,SAAU7vE,GAClB7K,KAAKytB,OAAOqG,MAAM/T,IAAI,iBAAiB,GACvC/f,KAAKrC,EAAE,iBAAiB4P,IAAI,IAC5BvN,KAAKi0G,YACDj0G,KAAKytB,OAAOM,aAAa9rB,QACzBjC,KAAKytB,OAAOM,aAAaC,iBACrB,GAAEhkB,OAAOhK,KAAKytB,OAAOQ,aAAe,CAAC,EAAG,iBAGhDjuB,KAAKrC,EAAE,gBAAgB4T,OAAOvR,KAAKytB,OAAOqG,MAAMtxB,IAAI,iBACxD,EAEAmxG,eAAgB,SAAU9oG,GACtB,IACI2sE,EADQ,GAAE3sE,EAAG4C,QACAstB,QAAQ,iBACzB/6B,KAAKytB,OAAOqG,MAAM/T,IAAI,4BAA6B/f,KAAK+tB,aAAa,GAAGiC,WACxEhwB,KAAK+tB,aAAaC,iBAAiB,WACnChuB,KAAKytB,OAAOqG,MAAM/T,IAAI,qBAAsB/f,KAAKD,IAAIsX,SACrDrX,KAAK8zB,MAAMiP,kBAAkBy0C,EAAK93E,KAAK,YAAa,CAAC4kF,mBAAmB,GAC5E,IAGJ,2BAAiC,uBAA2B,CACxDvzD,UAAW,8CAEXE,OAAQ,CACJ,sBAAuB,iBACvB,mCAAoC,kBACpC,gDAAiD,kBACjD,0BAA2B,cAC3B,2BAA6B,sBAC7B,8BAAgC,WAChC,8BAAgC,kBAChC,8BAA+B,eAGnCzC,aAAc,SAAUxvB,GASpB,OARAgB,KAAK4iF,YAAc5jF,EAAQ4jF,YAC3B5iF,KAAKyiF,WAAaziF,KAAK4iF,YAAY1qE,IACnClY,KAAKiqF,UAAYjqF,KAAK4iF,YAAYh5E,GAClC5J,KAAK61G,gBAAkB71G,KAAK4iF,YAAYj+B,SACxC3kD,KAAK0sB,QAAQm7D,qBAAuB,IAAI,YAAgB,KAAM,CAACn7D,QAAS1sB,KAAK0sB,UAC7E1sB,KAAK0sB,QAAQm7D,qBAAqBxkE,GAAG,MAAOrjB,KAAK20G,WAAY30G,MAC7DA,KAAK0sB,QAAQm7D,qBAAqBxkE,GAAG,2BAA4BrjB,KAAKy5E,aAAawyB,cAAejsG,MAClGA,KAAK+tB,aAAa1K,GAAG,cAAerjB,KAAK6yB,UAAUvqB,KAAKtI,OACjDA,IACX,EAEAgvB,OAAQ,WACJhvB,KAAKrC,EAAE,iBAAiB2H,IAAI,SAAU,qBACtCtF,KAAKrC,EAAE,0EAA0E2E,KAAKtC,KAAK61G,iBAC3F71G,KAAKrC,EAAE,gCAAgCuC,YAAY,UACnDF,KAAKkwB,iBACLlwB,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEAkC,UAAW,WAEX,EAEAq8E,gBAAiB,WACb,GAAMnjG,QAAQiC,IAAI,aAAiB,uCAAwC,aAAiB,uCAAwC,CAAEhO,KAAK61G,iBAAmB71G,KAAKyiF,YAAcziF,KAAKiqF,YAClL,KAAM,CAAE97E,eAAgB,aAAiB,YAAYoa,MAAMrgB,IACvDA,GACIlI,KAAKiqF,WACLjqF,KAAKy5E,aAAa3lD,MAAMm1D,sBAAsBjpF,KAAKiqF,WAAW,KAC1DjqF,KAAKi0G,WAAW,GAG5B,GAER,EAEA5rB,gBAAiB,SAAUh2D,EAAOrK,GAC9B,IAAIuL,EAAW,GACXv0B,EAAUqzB,GAAS,CAAC,EACpB43D,EAAYjqF,KAAKiqF,UACjBn3D,EAAU,KACd,GAAE9oB,OAAOhL,EAAS,CACd82B,IAAK,+BACL1C,OAAQf,EAAMe,QAAU,GACxBrZ,IAAK,CAAC,CAACA,IAAK,OAAQhP,MAAOk/E,MAE/B,IAAIxzD,EAAUz2B,KAAK0sB,QAAQK,WAAW2J,YAAYxf,IACnC,GAAEA,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GACxCS,EAASnyB,KAAK8V,IAEX,IACR,GAAQgf,GAAGC,KACdn2B,KAAKy5E,aAAapmD,WAAWr0B,GACzB,CAACiqC,EAAS1V,EAAU4kD,KAChBn4E,KAAK0sB,QAAQK,WAAW6J,cAAcH,GACtC0hD,IAAQn4E,KAAKgzG,aAAe76B,EAAIjmD,OAC3BqB,EAAStxB,QAAWjC,KAAK0sB,QAAQm7D,qBAAqB5lF,QACvDjC,KAAKi0G,YAEL1gF,EAAStxB,OAASjD,EAAQ82B,MAC1B91B,KAAK+yG,gBAAiB,GAC1B,GAAEx/E,GAAUzzB,MAAK,CAAC4C,EAAKwU,KACnB,IAAI2/D,EAAW,GAAE3/D,GACjBlX,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAU,CAACuqB,qBAAqB,GAAM,IAEhFp5E,GAAYA,GAAU,IACvB,KACChoB,KAAK0sB,QAAQK,WAAW6J,cAAcH,EAAQ,GAG1D,EAEAk+E,WAAY,SAAUz9F,GAClB,GAAIA,EAAQ1U,IAAI,gBACZ,OACJ0U,EAAQ6I,IAAI,eAAe,GAC3B,IAAI82D,EAAW72E,KAAKy5E,aAAa27B,iBAAiBl+F,GAAS/W,SAAS,uBAChEu6D,EAAQ16D,KAAK0sB,QAAQm7D,qBAAqBzjF,QAAQ8S,GACtDlX,KAAKk0G,eAAer9B,EAAU3/D,EAASwjD,EAC3C,IAGJ,2BAAiC,oBAAwB,CACrDltC,SAAU,GAAUsoF,qBAEpB7kF,OAAQ,CACJ,qBAAsB,sBACtB,mBAAoB,oBACpB,iBAAkB,aAClB,uBAAwB,aACxB,mBAAoB,gBAGxB1C,YAAa,SAAUvvB,GACnBgB,KAAKD,IAAIJ,KAAKK,KAAKwtB,YACnBxtB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAKi1B,QAAQ5R,GAAG,sBAAuBrjB,KAAKgvB,OAAQhvB,MACpDA,KAAKi1B,QAAQ5R,GAAG,mBAAoBrjB,KAAKgvB,OAAQhvB,MACjDA,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAKgvB,OAAQhvB,MAC/CA,KAAKi1B,QAAQ5R,GAAG,iCAAkCrjB,KAAKgvB,OAAQhvB,MAC/DA,KAAKi1B,QAAQ5R,GAAG,kCAAmCrjB,KAAKgvB,OAAQhvB,KACpE,EAEAgvB,OAAQ,WAEJ,GADAhvB,KAAKD,IAAIg7B,QAAQ,sBAAsBpN,SAAS,iBAAiBztB,YAAY,eACzEF,KAAKi1B,QAAQzyB,IAAI,cAEjB,YADAxC,KAAKD,IAAII,SAAS,UAGtB,IAAI0wE,EAAe7wE,KAAKi1B,QAAQzyB,IAAI,gBAChCyvE,EAAajyE,KAAKi1B,QAAQzyB,IAAI,2BAC9BqwE,EAAY7yE,KAAKi1B,QAAQzyB,IAAI,aAC7BovE,EAAc5xE,KAAKi1B,QAAQzyB,IAAI,4BAInC,GAHAxC,KAAKrC,EAAE,WAAWuC,YAAY,UAC9BF,KAAKrC,EAAE,sBAAsB2E,KAAK,IAClCtC,KAAKD,IAAII,SAAS,UACG,SAAjB0wE,IAA2B7wE,KAAKi1B,QAAQzyB,IAAI,WAAhD,CAEK,GAAqB,OAAjBquE,GAAyBoB,GAAgC,SAAjBpB,GAA2BoB,GAAcY,EACtF7yE,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,4CACnDtC,KAAKrC,EAAE,2BAA2BwC,SAAS,eACxC,GAAKyxE,GAAgBiB,GAAcZ,GAAgC,SAAjBpB,GAA4C,SAAjBA,EAG7E,WAAqBz1D,IAAjBy1D,GAA+C,SAAjBA,GAA2BoB,GAGhE,OAFAjyE,KAAKrC,EAAE,yCAAyCwC,SAAS,SAG7D,MANIH,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,oCACnDtC,KAAKrC,EAAE,+BAA+BwC,SAAS,UAMnDH,KAAKD,IAAIG,YAAY,UACrBF,KAAKD,IAAIg7B,QAAQ,sBAAsBpN,SAAS,iBAAiBxtB,SAAS,cAF1E,CAGJ,EAEA41G,YAAa,WACT/1G,KAAKD,IAAII,SAAS,UAClBH,KAAKD,IAAIg7B,QAAQ,sBAAsBpN,SAAS,iBAAiBztB,YAAY,cACjF,EAEAs0E,oBAAqB,WACjBx0E,KAAKi1B,QAAQw/C,mBACbz0E,KAAKi1B,QAAQlV,IAAI,2BAA2B,GAC5C/f,KAAK+1G,aACT,EAEA/kB,kBAAmB,WACfhxF,KAAKi1B,QAAQm/C,gBACbp0E,KAAK+1G,aACT,EAEA13B,WAAY,gBACiCjjE,IAArCpb,KAAKi1B,QAAQzyB,IAAI,gBACjBxC,KAAKi1B,QAAQ++C,aAAa,MAAM,KAC5Bh0E,KAAKg2G,wBAAwB,IAGjCh2G,KAAKg2G,yBACTh2G,KAAK+1G,aACT,EAEAC,uBAAwB,WACpBh2G,KAAKi1B,QAAQo/C,aACbr0E,KAAKi1B,QAAQm/C,eACjB,EAEAvO,aAAc,WACV7lE,KAAKi1B,QAAQq/C,eACbt0E,KAAK+1G,aACT,IAGJ,mBAAyB,oBAAwB,CAC/ChlF,UAAW,oBACXvD,SAAU,GAAUisD,aACpB3rD,YAAa,gBACbG,YAAa,CACT4kF,kBAAkB,GAEtB/1E,YAAa,GAAU7lC,aAAamB,aAEpC64B,OAAQ,CACJ,0BAA2B,iBAC3B,sBAAuB,iBACvB,mCAAoC,kBACpC,gDAAiD,kBACjD,0BAA4B,cAC5B,2BAA6B,sBAC7B,wBAA0B,oBAC1B,8BAA+B,cAC/B,8BAA+B,eAC/B,wBAAyB,eACzB,gCAAiC,mBACjC,4BAA6B,yBAC7B,4BAA6B,qBAGjC1C,YAAa,SAAUvvB,GACnBgB,KAAKm1B,UAAYn2B,EAAQm2B,UACzBn1B,KAAKi2G,sBAAwB,KAC7Bj2G,KAAKk2G,iBAAmB,GACxBl2G,KAAK0sB,QAAU1sB,KAAKm1B,UAAUzI,QAC9B1sB,KAAK8zB,MAAQ9zB,KAAKm1B,UAAUrB,MAC5B9zB,KAAKi1B,QAAUj1B,KAAK8zB,MAAMmB,QAC1Bj1B,KAAKghF,KAAOhhF,KAAK8zB,MAAMtxB,IAAI,SAAW,IAAI,qBAAyB,CAACygC,QAASjjC,OAAS,IAAI,gBAAoB,CAACijC,QAASjjC,OACxHA,KAAK0xG,OAAS,IAAI,kBAAsB,CAACzuE,QAASjjC,OAClDA,KAAK00G,kBAAoB10G,KAAKrC,EAAE,0BAChCqC,KAAK22E,gBAAkB32E,KAAKrC,EAAE,mBAC9BqC,KAAKs/E,aAAet/E,KAAKrC,EAAE,uBAC3BqC,KAAKD,IAAIP,KAAK,UAAWQ,KAAK8zB,MAAMlqB,IACpC5J,KAAKm2G,2BACDn2G,KAAK8zB,MAAM03E,cAAgBxrG,KAAK8zB,MAAMmlE,eACtCj5F,KAAKo2G,UAAUp2G,KAAK8zB,MAAMmlE,cACtBj6F,EAAQ+xG,cACR/wG,KAAKo2G,UAAUp3G,EAAQ+xG,aACvB/wG,KAAKq2G,mBAAmBr3G,EAAQ+xG,eAGxC/wG,KAAKkzG,WAAalzG,KAAK6vB,eACvB,IAAIsjF,EAAWnzG,KAAKozG,wBA2BpB,OA1BApzG,KAAKD,IAAIsjB,GAAG8vF,EAAUnzG,KAAKqzG,aAAa/qG,KAAKtI,OAC7CA,KAAK+tB,aAAa1K,GAAG,8BAA+BrjB,KAAKi0B,SAAS3rB,KAAKtI,OACvEA,KAAK+tB,aAAa1K,GAAG,cAAerjB,KAAK6yB,UAAUvqB,KAAKtI,OACxDA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKs2G,sBAAuBt2G,MAC3DA,KAAK8zB,MAAMzQ,GAAG,oBAAqBrjB,KAAKu2G,gBAAiBv2G,MACzDA,KAAK8zB,MAAMzQ,GAAG,qBAAsBrjB,KAAKw2G,sBAAuBx2G,MAChEA,KAAK8zB,MAAMP,SAASlQ,GAAG,MAAOrjB,KAAKo2G,UAAWp2G,MAC9CA,KAAK8zB,MAAMP,SAASlQ,GAAG,mBAAoBrjB,KAAKq2G,mBAAoBr2G,MACpEA,KAAK8zB,MAAMP,SAASlQ,GAAG,mBAAoBrjB,KAAKy2G,0BAA2Bz2G,MAC3EA,KAAK8zB,MAAMP,SAASlQ,GAAG,iBAAkBrjB,KAAK02G,iBAAkB12G,MAChEA,KAAK8zB,MAAMP,SAASlQ,GAAG,2BAA4BrjB,KAAKisG,cAAejsG,MACnEA,KAAKi1B,UACLj1B,KAAK81G,qBAAuB,IAAI,2BAA+B,CAAC7gF,QAASj1B,KAAKi1B,QAASnmB,GAAI9O,KAAKrC,EAAE,8BAA8B,KAChIqC,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAKq8E,mBAAoBr8E,MAC3DA,KAAKi1B,QAAQ5R,GAAG,sBAAuBrjB,KAAK22G,qBAAsB32G,MAClEA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAKw7E,gBAAiBx7E,MAC3DA,KAAKi1B,QAAQ5R,GAAG,wBAAyBrjB,KAAKu2G,gBAAiBv2G,MAC/DA,KAAK0sB,QAAQ4I,SAASjS,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MACzDA,KAAK0sB,QAAQ4I,SAASjS,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,OAEhEA,KAAK0sB,QAAQrJ,GAAG,SAAUrjB,KAAK42G,aAAc52G,MAC7CA,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKm2G,yBAA0Bn2G,MACxE,MAAU,sBAAuBA,KAAK40G,aAAc50G,MACpDA,KAAK0sB,QAAQo+B,aAAaviC,MAAK,MAC1BvoB,KAAK0sB,QAAQK,WAAW01B,oBAAsBziD,KAAKu2G,iBAAiB,IAElEv2G,IACX,EAEEgvB,OAAQ,WACJhvB,KAAK62G,eACL72G,KAAKkwB,iBACLlwB,KAAKi0B,WACLj0B,KAAK82G,sBACL92G,KAAK+2G,kBACL/2G,KAAK40G,eACD50G,KAAKi1B,UACLj1B,KAAKi1B,QAAQzyB,IAAI,eAAiBxC,KAAK0tF,sBACvC1tF,KAAK81G,qBAAqB9mF,SAElC,EAEA21C,kBAAmB,WACf,IAAK3kE,KAAK0sB,QAAQ4mC,MACd,OACOtzD,KAAK0sB,QAAQ4mC,MAAM0jD,QAAQh3G,KAAKi1B,QAAQzyB,IAAI,QAClDy0G,aAAahtG,MACtB,EAEFmpG,sBAAuB,WACnB,OAAK,GAAEhoG,YAAYrH,OAAOwvG,SAEd,GAAEnoG,YAAYrH,OAAOyvG,cAGtB,sBAFA,aAFA,OAMf,EAEAoD,aAAc,WACV,IAAIt9E,EAAUt5B,KAAK0sB,QAAQ4M,QACvB,GAAExI,IAAIwI,EAAS,SAASt5B,KAAKk3G,eAC7B,GAAEpmF,IAAIwI,EAAS,WAAWt5B,KAAKm3G,iBAC/B,GAAErmF,IAAIwI,EAAS,UAAUt5B,KAAKo3G,gBACtC,EAEAjB,yBAA0B,WACtB,IAAItwG,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKD,IAAIP,KAAK,aAAcqG,GAC5B7F,KAAKghF,KAAKjhF,IAAIP,KAAK,aAAcqG,GACjC7F,KAAK0xG,OAAO3xG,IAAIP,KAAK,aAAcqG,EACvC,EAEE6wG,iBAAkB,SAAUx/F,GACxB,IAAImgG,EAAUngG,EAAQ1U,IAAI,WAEb,OAAZ60G,IAAsBA,EAAU,QADlBr3G,KAAKrC,EAAE,gCAAkCuZ,EAAQ1U,IAAI,aAAe,MAE1EhD,KAAK,aAAc63G,EAChC,EAEF77B,gBAAiB,WACbx7E,KAAKs3G,kBAAmB,EACxBt3G,KAAK8zB,MAAM/T,IAAI,kBAAkB,EACrC,EAEA42F,qBAAsB,WAEG,SADF32G,KAAKi1B,QAAQzyB,IAAI,iBACNxC,KAAKi1B,QAAQzyB,IAAI,gBAC3CxC,KAAKw7E,kBACLx7E,KAAKu3G,sBAEb,EAEAV,aAAc,WACV72G,KAAKs/E,aAAaxwD,OAAOjvB,KAAK,SAAS0N,IAAI,GAC/C,EAEAupG,oBAAqB,WACjB,GAA0D,WAAtD92G,KAAKghF,KAAKrjF,EAAE,mBAAmB6B,KAAK,gBAA+BQ,KAAKi1B,QAAQzyB,IAAI,aAAc,CAClG,IAAIyjB,GAAW,GAAO9c,MAAQnJ,KAAKi1B,QAAQzyB,IAAI,cAAc,IACzDq5E,EAAa,oBAAwB51D,GACzCjmB,KAAKi1B,QAAQlV,IAAI,CAACopC,eAAgB0yB,GACtC,CACJ,EAEAk7B,gBAAiB,WACb/2G,KAAK8zB,MAAM3Q,aAAa9Q,SAAQ,SAASnR,GACjCA,EAAK0/B,aAAe1/B,EAAK0/B,YAAYC,eAAiB3/B,EAAK0/B,YAAYC,cAAc22E,SAAWt2G,EAAK0/B,YAAYC,cAAc22E,QAAQz7F,QACvI7a,EAAK0/B,YAAYC,cAAc42E,YACvC,GACJ,EAEA/pB,oBAAqB,WACjB,IAAI/W,EAAkB32E,KAAKi1B,QAAQzyB,IAAI,kBACvCxC,KAAKi1B,QAAQkkD,oBAAoBxC,EAAiB32E,KAAK22E,gBAC3D,EAEAxoD,oBAAqB,WACbnuB,KAAKyuB,aACLzuB,KAAK8zB,MAAM/T,IAAI,CAACmrF,SAAS,EAAMjoB,QAAQ,IACvCjjF,KAAKi0B,WACLj0B,KAAKyuF,gBAELzuF,KAAK8zB,MAAM/T,IAAI,CAACmrF,SAAS,GAEjC,EAEAoL,sBAAuB,WACnB,IAAIrzB,EAASjjF,KAAK8zB,MAAMtxB,IAAI,UAC5BxC,KAAK03G,cAAcz0B,EAAS,SAAW,YACnCjjF,KAAK8zB,MAAMtxB,IAAI,gBAAkBxC,KAAKi1B,QAAQzyB,IAAI,gBAC9CygF,EACAjjF,KAAKi1B,QAAQogD,cAEbr1E,KAAKi1B,QAAQsgD,iBAEzB,EAEAp4C,WAAY,SAAUlI,GAClB,IAAIl2B,EAAOk2B,EAAQzyB,IAAI,QACnB0V,EAAM+c,EAAQzyB,IAAI,OAClByyB,IAAYj1B,KAAKi1B,QACjBj1B,KAAKrC,EAAE,wCAAwCua,OAASpY,MAAK,WACzD,GAAEE,MAAMH,KAAK,oBAAoByC,KAAKvD,EAC1C,IAEAiB,KAAKrC,EAAE,uCAAuCua,OAASpY,MAAK,WACxD,GAAEE,MAAMH,KAAK,mBAAmByC,KAAKvD,EACzC,GAER,EAEAy+B,aAAc,SAAUvI,GACpB,IAAIj6B,EAAQi6B,EAAQ9vB,aAChB+S,EAAM+c,EAAQzyB,IAAI,OAClByyB,IAAYj1B,KAAKi1B,QACjBj1B,KAAKrC,EAAE,wCAAwCua,OAASpY,MAAK,WACzD,GAAEE,MAAMH,KAAK,6BAA6BoF,UAClCjK,EAAOgF,KAAK88B,YACxB,IAEA98B,KAAKrC,EAAE,uCAAuCua,OAASpY,MAAK,WACxD,GAAEE,MAAMH,KAAK,iCAAiCoF,UACtCjK,EAAOgF,KAAK88B,YACxB,GAER,EAEAq6E,eAAgB,WACZ,IAAI70G,EACCtC,KAAK0sB,QAAQy+B,aACd7oD,EAAO,aAAiB,uCAE5BtC,KAAK0xG,OAAOiG,qBAAqBr1G,GAAQ,IAAI,EACjD,EAEA40G,aAAc,WACV,IAAIn4G,EAAOiB,KAAK0sB,QAAQlqB,IAAI,QACxB0V,EAAMlY,KAAK0sB,QAAQlqB,IAAI,OAC3BxC,KAAKrC,EAAE,wCAAwCua,OAASpY,MAAK,WACzD,GAAEE,MAAMH,KAAK,oBAAoByC,KAAKvD,EAC1C,IACAiB,KAAKrC,EAAE,uCAAuCua,OAASpY,MAAK,WACxD,GAAEE,MAAMH,KAAK,mBAAmByC,KAAKvD,EACzC,GACJ,EAEAq4G,eAAgB,WACZ,IAAIp8G,EAAQgF,KAAK0sB,QAAQvnB,aACrB+S,EAAMlY,KAAK0sB,QAAQlqB,IAAI,OAC3BxC,KAAKrC,EAAE,wCAAwCua,OAASpY,MAAK,WACzD,GAAEE,MAAMH,KAAK,6BAA6BoF,UAClCjK,EAAOgF,KAAK88B,YACxB,IACA98B,KAAKrC,EAAE,uCAAuCua,OAASpY,MAAK,WACxD,GAAEE,MAAMH,KAAK,iCAAiCoF,UACtCjK,EAAOgF,KAAK88B,YACxB,GACJ,EAEAu/C,mBAAoB,WACZr8E,KAAK8zB,MAAMtxB,IAAI,YACfxC,KAAK8zB,MAAM47E,4BACX1vG,KAAKyuB,cACL,kBAAsB,mBAAuB,QAAS,CAAC0K,MAAO,OAAQhE,UAAWn1B,KAAKm1B,UAAWo8C,QAASvxE,KAAK8zB,MAAMtxB,IAAI,aACzHxC,KAAK6uB,kBAEb,EAEA4/D,aAAc,SAAU36E,GACpB,IAAI8oB,EAAkB,GAAEvlB,MAAMrX,KAAK8zB,MAAMilE,gBAAgBv/B,QACzD,GAAI58B,EAAgB36B,OAAQ,CACxB,IAAI2jB,EAAMgX,EAAgBA,EAAgB36B,OAAS,GACnDjC,KAAK8zB,MAAMw5E,WAAW1nF,EAAIpjB,IAAI,SAAU,YAAaojB,EAAIpjB,IAAI,aAAcojB,EAAIpjB,IAAI,qBACvF,CAOA,GANAxC,KAAK8zB,MAAM/T,IAAI,eAAgB,GAC/B,GAAEjgB,KAAK88B,GAAkBhX,MAChB9R,GAAa8R,EAAIpjB,IAAI,cAAgBsR,IACtC8R,EAAI7F,IAAI,aAAa,EACzB,IAEA/f,KAAK8zB,MAAMmlE,cAAgBj5F,KAAK8zB,MAAMmlE,aAAaz2F,IAAI,eAAiBo6B,EAAgB36B,OAAO,CAC/F,IAAI2jB,EAAM5lB,KAAK8zB,MAAMmlE,aACrBj5F,KAAK8zB,MAAMw5E,WAAW1nF,EAAIpjB,IAAI,SAAU,YAAaojB,EAAIpjB,IAAI,aAAcojB,EAAIpjB,IAAI,sBACnFojB,EAAI7F,IAAI,aAAa,EACzB,MACK,GAAI/f,KAAK8zB,MAAMmlE,cAAgBj5F,KAAK8zB,MAAMmlE,aAAaz2F,IAAI,iBAAmBxC,KAAK8zB,MAAMP,SAAStxB,OAAO,CAC1G,IAAIsxB,EAAW,GAAElc,MAAMrX,KAAK8zB,MAAMP,SAASimC,QACvC5zC,EAAM2N,EAASA,EAAStxB,OAAS,GACjC2jB,GAAOA,EAAIpjB,IAAI,eACfxC,KAAK8zB,MAAMw5E,WAAW1nF,EAAIpjB,IAAI,SAAU,YAAaojB,EAAIpjB,IAAI,aAAcojB,EAAIpjB,IAAI,sBACnFojB,EAAI7F,IAAI,aAAa,GAE7B,CACJ,EAEAszF,aAAc,SAAUxoG,GAChBA,EAAGgqG,cAAcC,OAAS,GAC1B90G,KAAKu3G,sBACTv3G,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEA8iF,YAAa,SAAU5oG,GACnB,GAAIA,EAAGW,UAAY,GAAUlZ,UAAW,CACpC,IAAI+/B,EAAQryB,KAAKs/E,aAAaz/E,KAAK,SAAS0N,MAC5CvN,KAAK8zB,MAAM8B,eAAevD,GAAQkB,IAAD,GACrC,CACI1oB,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,kBAC/DuN,KAAKghF,KAAK0yB,mBAElB,EAEA7gF,UAAW,WACiB,IAApB7yB,KAAKkzG,YAAoBlzG,KAAKrC,EAAE,8BAA8BqP,SAAS,YACvEhN,KAAKrC,EAAE,6BAA6B2H,IAAI,UAAW,GACnDtF,KAAKi2G,sBAAwBjiG,GAAYmJ,SAASnd,KAAKrC,EAAE,iBAAiBgwB,WAAWuE,QAAQxyB,KAAK,UAClGM,KAAK43G,iBAAiB53G,KAAKi2G,wBAE/Bj2G,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,qBAC1C,EAEAsD,SAAU,WACN,IAAKj0B,KAAKyuB,YACN,OACJzuB,KAAKrC,EAAE,mBAAmB4T,OAAOvR,KAAK2wB,sBACtC,IAEIknF,EACAC,EAHAC,EAAqB/3G,KAAKrC,EAAE,uBAC5Bq6G,EAAYh4G,KAAKrC,EAAE,iBAGvBqC,KAAKg0G,gBAAkBh0G,KAAKkzG,YAAc,EAC1ClzG,KAAKkzG,WAAalzG,KAAK6vB,eACvBkoF,EAAmBj4G,MAAK,CAAC4C,EAAKu1G,KAC1B,GAAIj4G,KAAKrC,EAAE,8BAA8BqP,SAAS,UAC9C,GAAIhN,KAAKkzG,WAAalzG,KAAKg0G,gBAAiB,CACxC,GAAKiE,EAAU9lF,WAAanyB,KAAKkzG,YAAgB+E,EAAU9lF,WAAanyB,KAAKkzG,WAAa,GAGtF,OAFA2E,EAAgBn1G,EAChBo1G,EAAgB,GACT,EAEX,GAAKG,EAAU9lF,WAAanyB,KAAKkzG,YAAgB+E,EAAU9lF,WAAanyB,KAAKkzG,WAAa,GAGtF,OAFA2E,EAAgBn1G,GAAQA,EAAM,EAC9Bo1G,EAAgB,GACT,CAEf,KACK,CACD,GAAKG,EAAU9lF,WAAanyB,KAAKkzG,WAAa,IAAQ+E,EAAU9lF,WAAanyB,KAAKkzG,WAG9E,OAFA2E,EAAgBn1G,GAAQA,EAAM,EAC9Bo1G,EAAgB,GACT,EAEX,GAAKG,EAAU9lF,WAAanyB,KAAKkzG,WAAa,IAAQ+E,EAAU9lF,WAAanyB,KAAKkzG,WAG9E,OAFA2E,EAAgBn1G,EAChBo1G,EAAgB,GACT,CAEf,MAEC,IAAK,GAAEG,GAAWjrG,SAAS,4BAC5B,GAAIhN,KAAKkzG,WAAalzG,KAAKg0G,gBAAiB,CACxC,GAAKiE,EAAU9lF,WAAanyB,KAAKkzG,WAAa,IAAQ+E,EAAU9lF,WAAanyB,KAAKkzG,WAAa,GAG3F,OAFA2E,EAAgBn1G,EAChBo1G,EAAgB,GACT,EAEX,GAAKG,EAAU9lF,WAAanyB,KAAKkzG,YAAgB+E,EAAU9lF,WAAanyB,KAAKkzG,WAAa,GAGtF,OAFA2E,EAAgBn1G,EAChBo1G,EAAgB,GACT,CAEf,KACK,CACD,GAAKG,EAAU9lF,WAAanyB,KAAKkzG,WAAa,IAAQ+E,EAAU9lF,WAAanyB,KAAKkzG,WAAa,GAG3F,OAFA2E,EAAgBn1G,GAAQA,EAAM,EAC9Bo1G,EAAgB,GACT,EAEX,GAAKG,EAAU9lF,WAAanyB,KAAKkzG,WAAa,IAAQ+E,EAAU9lF,WAAanyB,KAAKkzG,WAAa,GAG3F,OAFA2E,EAAgBn1G,EAChBo1G,EAAgB,GACT,CAEf,CACJ,IAEAD,GACA73G,KAAKrC,EAAE,6BAA6B2H,IAAI,UAAWwyG,GACnD93G,KAAKi2G,sBAAwBjiG,GAAYmJ,SAAS,GAAE46F,EAAmBF,IAAgBr4G,KAAK,iBAG5Fw4G,EAAUl4G,MAAK,CAAC4C,EAAKkjB,KACjB,GAAKA,EAAIuM,UAAY,GAAEvM,GAAK7gB,SAAW/E,KAAKkzG,YAAgBttF,EAAIuM,UAAYnyB,KAAKkzG,WAG7E,OAFA2E,EAAgBn1G,EAChBo1G,EAAgB,GACT,CACX,IAEAD,GACA73G,KAAKrC,EAAE,6BAA6B2H,IAAI,UAAWwyG,GACnD93G,KAAKi2G,sBAAwBjiG,GAAYmJ,SAAS,GAAE66F,EAAUH,IAAgBr4G,KAAK,gBAE7EQ,KAAKrC,EAAE,8BAA8BqP,SAAS,WAAgC,GAAnBhN,KAAKkzG,aACtE4E,EAAgB,EAChB93G,KAAKrC,EAAE,6BAA6B2H,IAAI,UAAWwyG,KAGxB,OAA/B93G,KAAKi2G,uBACLj2G,KAAK43G,iBAAiB53G,KAAKi2G,uBAE3Bj2G,KAAKkzG,WAAalzG,KAAKg0G,kBACtBh0G,KAAKkzG,WAAa,KAAOlzG,KAAKywB,qBAAuB,KACtDzwB,KAAKu3G,qBAEb,EAEAjE,aAAc,WACVtzG,KAAKkwB,gBACT,EAEAmD,WAAY,SAAUr0B,EAASgpB,EAAUnN,GACrC,IAIyEkb,EAAImiF,EAAWzhF,EAJpF/J,EAAU1sB,KAAK0sB,QACfuI,EAAUj1B,KAAKi1B,QACfkjF,EAAWn4G,KAAK8zB,MAAMtxB,IAAI,SAC1B+wB,EAAW,GAAIT,EAAU,KACzB4kD,EAAeziD,GAAWA,EAAQzyB,IAAI,cAAeymC,GAAU,SAC5DjqC,EAAQy4E,KAEX1hD,EAAK,GADL2hD,EACS,CAAC7zE,KAAM,MAAO0S,GAAI0e,EAAQzyB,IAAI,aAAeyyB,EAAQzyB,IAAI,QAEzD,CAACqB,KAAM,QACpBkyB,EAAG5iB,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGC,IAAKrD,QAASA,IACtC3f,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAGE,SAAUvyB,KAAM,WAC1CsP,EAAE,QAAS,CAAC,IAAO,YAAatP,KAAM,WACtCsP,EAAE,SAASgS,EAAE,GAAQ+Q,GAAGC,KAAKE,KAAKA,KACvCr2B,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGw4C,UAAY1uE,KAAK8zB,MAAMtxB,IAAI,cACvEuzB,EAAG5iB,EAAE,QAAS,CAAC,IAAO,IAAI,GAAQ+iB,GAAGw4C,6BAChCv7D,EAAE,SAASgS,EAAEnlB,KAAK8zB,MAAMtxB,IAAI,cAAc6zB,KAAKA,KAEnDqhD,GACD3hD,EAAG5iB,EAAE,QAAS,CAAC,IAAO,SACjBA,EAAE,SAASgS,EAAEnlB,KAAK8zB,MAAMtxB,IAAI,QAAQ6zB,KAAKA,KAC9Cr3B,EAAQ+a,KACR/a,EAAQ+a,IAAI1H,SAAS0lE,IACjBhiD,EAAG5iB,EAAE,QAAS,CAAC,IAAO4kE,EAAQh+D,MACzB5G,EAAE,SAASgS,EAAE4yD,EAAQhtE,OAAOsrB,KAAKA,IAAI,IAElDN,EAAGM,KAAKC,MAAM,IAAI,GAAQC,IAAIv3B,GAASw3B,SACvC,IAAI1lC,EAAW,IAAI,GAAEuW,SACrBqlB,EAAQgH,MAAMskD,oBAAoBlnF,GAClCA,EAASy3B,MAAK,WACV,IAAI6vF,EAAiB,SAASC,GAC1B5hF,EAAU4hF,EAAU3hF,YAAW,SAAUxf,GACrC,GAAK+d,GAAWyiD,GAAgBziD,EAAQzyB,IAAI,eAAkB21G,EAAU,CACzD,GAAEjhG,GACJrX,KAAK,UAAUL,KAAK,aAAeszB,GACxCS,EAASnyB,KAAK8V,EAEtB,MAEIqc,EAAW,GACX0V,GAAU,EAEd,OAAO,CACX,GAAG,GAAQ/S,GAAGC,KACd,IAAImiF,EAA0BluG,YAAW,KACrC,GAAQ2b,IAAI,mBACZsyF,EAAUzhF,cAAcH,EAAQ,GACjC,MACCwhD,EAAQ,SAAU14E,GAClB,GAAQwmB,IAAI,cACZ,GAAQA,IAAIgQ,GACZ,GAAQhQ,IAAIxmB,GACZ,GAAQwmB,IAAIwN,GACZ8kF,EAAUzhF,cAAcH,GACxBlC,aAAa+jF,GACbxqE,cAAcoqE,GACdzhF,EAAU,KACV/J,EAAQgH,MAAMwkD,sBAAsBpnF,GACpC,IAAI+lC,EAAO,GAAEt3B,GAAKM,KAAK,cAAc,GAAQq2B,GAAGC,SAChD,GAAIU,EAAK50B,QAAU40B,EAAKr3B,KAAK,aAAeszB,EAAS,CACjD,IAAIqlD,EAAM,IAAI,GAAQ5hD,IAAI,CAAC20B,IAAKr0B,EAAKh3B,KAAK,OAAO,KACjDs4E,EAAIhtE,SAAsC,SAA1B0rB,EAAKr3B,KAAK,YAC1BwoB,GAAYA,EAASihB,EAAS1V,EAAU4kD,EAC5C,CACJ,EACAC,EAAO,SAAU9vD,GACb+vF,EAAUzhF,cAAcH,GACxBlC,aAAa+jF,GACbxqE,cAAcoqE,GACdzhF,EAAU,KACV,SAAa,aACb,SAAanO,GACboE,EAAQgH,MAAMwkD,sBAAsBpnF,GACpC+pB,GAAWA,EAAQyN,EACvB,EACA,GAAQvC,IAAI,kBACR+G,EACAJ,EAAQm/B,SAAS91B,EAAIkiD,EAAOG,GAE5B1rD,EAAQi6B,OAAO5wB,EAAIkiD,EAAOG,EAElC,EACItrD,EAAU9tB,EAAQy4E,MAAQ/qD,EAAQk/B,kBAAoBl/B,EAAQk/B,gBAAgBJ,eAC3E9+B,EAAQk/B,gBAAgBL,eAAiB7+B,EAAQk/B,gBAAgBxa,WAAuC,YAA1B1kB,EAAQlqB,IAAI,UAC7Fo5C,EAAO9uB,EAAUJ,EAAQk/B,gBAAkBl/B,EAAQK,WAEnD6uB,EAAKxK,WACLgnE,EAAex8D,GAGnBs8D,EAAYz0F,aAAY,KACpBqJ,EAAU9tB,EAAQy4E,MAAQ/qD,EAAQk/B,kBAAoBl/B,EAAQk/B,gBAAgBJ,eACvE9+B,EAAQk/B,gBAAgBL,eAAiB7+B,EAAQk/B,gBAAgBxa,WAAuC,YAA1B1kB,EAAQlqB,IAAI,UACjGo5C,EAAO9uB,EAAUJ,EAAQk/B,gBAAkBl/B,EAAQK,WACnD,GAAQhH,IAAI,YACZ,GAAQA,IAAI+G,GACZ8uB,GAAQ,GAAQ71B,IAAI61B,EAAKxK,WACpBwK,EAIDA,EAAKxK,WACLgnE,EAAex8D,GAJf9N,cAAcoqE,EAKlB,GACD,KACP,GACJ,EAEAK,kBAAmB,SAAUlmF,EAAOrzB,GAChC,GAAIA,EAAQw5G,iBAAkB,CAC1B,GAAIx4G,KAAKs3G,kBAAoBt3G,KAAK8zB,MAAMtxB,IAAI,kBACxC,OAEJxC,KAAKs3G,kBAAmB,EACxB/iF,aAAav0B,KAAKy4G,uBAClBz4G,KAAKy4G,sBAAwBruG,YAAW,KACpCpK,KAAKs3G,kBAAmB,CAAK,GAC9B,KACHt3G,KAAKk1G,qBACT,CACA,IAAIxoF,EAAU1sB,KAAK8zB,MAAMpH,QAASrQ,EAAU,EACxCrc,KAAKqzB,WAAWhB,GAAO,CAAC4W,EAAS1V,EAAU4kD,KA6BnC,GA5BA5jD,aAAav0B,KAAKy4G,uBAClBz4G,KAAKs3G,kBAAmB,EACxBt3G,KAAKm1G,sBACDn2G,EAAQkkG,iBAAmB/qB,EAAIhtE,UAAagtE,EAAIx9D,MAAQ4Y,EAAStxB,QACjEjC,KAAKu4G,kBAAkB,CAACn9C,MAAO+c,EAAIle,MAAO,CAACipC,gBAAgB,IAC3DljG,KAAK8zB,MAAMtxB,IAAI,cACXxC,KAAKi1B,UAAYj1B,KAAKi1B,QAAQ0+C,SAC9B3zE,KAAKi1B,QAAQo+C,aAGbrzE,KAAKi1B,SAAYj1B,KAAKi1B,QAAQzyB,IAAI,cAAiBxC,KAAKi1B,QAAQzyB,IAAI,WACpExC,KAAKi1B,QAAQi+C,cAEhB3/C,EAAStxB,OAASowB,EAAMyD,KAAQmT,GACjCjpC,KAAK8zB,MAAM/T,IAAI,kBAAkB,IAEjC/gB,EAAQw5G,kBAAqBx4G,KAAK8zB,MAAMtxB,IAAI,qBAC5C21E,EAAIjmD,OAASlyB,KAAK8zB,MAAM/T,IAAI,mBAAoBo4D,EAAIjmD,QAEpDlzB,EAAQ05G,cAAiB14G,KAAK8zB,MAAMtxB,IAAI,oBACxC21E,EAAIle,MAAQj6D,KAAK8zB,MAAM/T,IAAI,kBAAmBo4D,EAAIle,MAEtD,GAAEn6D,KAAKyzB,GAAU,SAAUrc,GACFwV,EAAQgH,MAAMC,mBAAmBzc,EAClD,GAAElN,OAAO,CAAComD,aAAa,GAAOpxD,KAEdqd,GACxB,IACIrd,EAAQw5G,mBAAqBx4G,KAAK8zB,MAAMtxB,IAAI,mBAAqBxC,KAAK8zB,MAAMP,SAAStxB,OAAQ,CAC7F,IAAI02G,EAAW34G,KAAK8zB,MAAMP,SAASimC,OAAOx5D,KAAK8zB,MAAMP,SAAStxB,OAAS,GACnE02G,IACKA,EAAS3f,cAAgBh5F,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAK8zB,MAAMtxB,IAAI,aACrExC,KAAK8zB,MAAMw5E,WAAWqL,EAASn2G,IAAI,SAAU,YAAam2G,EAASn2G,IAAI,aAAcm2G,EAASn2G,IAAI,sBAClGxC,KAAK8zB,MAAM/T,IAAI,kBAAkB,GAE7C,CACiB,IAAZ1D,GAAkBrd,EAAQ05G,eAAiB14G,KAAK8zB,MAAMtxB,IAAI,mBAC3DxC,KAAKu4G,kBAAkB,GAAEvuG,OAAOqoB,EAAO,CACnCyD,IAAK,+BACL1C,OAAQpzB,KAAK8zB,MAAMtxB,IAAI,qBAAuB,KAC9C,CAACg2G,kBAAkB,GAC3B,IACAlwF,IACItpB,EAAQw5G,mBACRx4G,KAAKs3G,kBAAmB,EACxBt3G,KAAKk1G,qBAAoB,GAC7B,GAGhB,EAEAsB,sBAAuB,SAAU1iG,GAC7B,IAAKA,EACD,OACJ,IAAIue,EAAQ,CAAC,EACbA,EAAMtY,IAAM,CAAC,CAACA,IAAK,QAAShP,MAAO,GAAO+I,GAAWC,WACrD/T,KAAKu4G,kBAAkBlmF,EAAO,CAAC6wE,gBAAgB,GACnD,EAEAqT,gBAAiB,WACb,IAAK,yBACD,OAEJ,IAAIqC,EAAkB54G,KAAK8zB,MAAMtxB,IAAI,mBACjC6vB,EAAQ,CAAC,EACTumF,EACAvmF,EAAM+oC,MAAQw9C,GAEdvmF,EAAMe,OAAS,GACff,EAAMyD,IAAM,sCAEhB91B,KAAKu4G,kBAAkBlmF,EAAO,CAACqmF,cAAc,GACjD,EAEAnB,oBAAqB,aACbv3G,KAAKi1B,SACA,2BAAkCj1B,KAAKi1B,QAAQzyB,IAAI,iBAAwD,SAArCxC,KAAKi1B,QAAQzyB,IAAI,kBAA+BxC,KAAKi1B,QAAQzyB,IAAI,iBAIhJxC,KAAKu4G,kBAAkB,CACf9gC,MAAM,EACN3hD,IAAK,+BACL1C,OAAQpzB,KAAK8zB,MAAMtxB,IAAI,qBAAuB,IAClD,CAACg2G,kBAAkB,GAE3B,EAEAtD,oBAAqB,SAAU2D,GACvB74G,KAAK84G,iCACLvkF,aAAav0B,KAAK84G,gCAClB94G,KAAK84G,+BAAiC,MAE1C,IAAIx2G,EAAO,aAAiBu2G,EAAW,kCAAoC,mBAC3E74G,KAAK00G,kBAAkBpyG,KAAKA,GAAMpC,YAAY,UAC1C24G,IACA74G,KAAK84G,+BAAiC1uG,WAClCpK,KAAKm1G,oBAAoB7sG,KAAKtI,MAAO,KAEjD,EAEA43G,iBAAkB,SAAUt1G,GACxBtC,KAAKrC,EAAE,wBAAwB2E,KAAKA,GACpCtC,KAAKrC,EAAE,6BAA6BuC,YAAY,SACpD,EAEA64G,kBAAmB,SAAUluG,GACzB,GAAI,GAAEA,EAAG4C,QAAQT,SAAS,SACtBhN,KAAKg5G,mBACJ,CACD,IAAI1iC,EAAiBt2E,KAAKi1B,QAAQzyB,IAAI,kBAClCojB,EAAM5lB,KAAKo1G,iBAAiB9+B,GAC5B2iC,EAAmB,IAAI,wBAA4B,CAACvsF,QAAS1sB,KAAK0sB,QAAS+sD,aAAcz5E,KAAMkX,QAASo/D,IAC5G2iC,EAAiBl5G,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,UAClExC,KAAKw0G,oBAAoB5uF,EAAK0wD,GAC9Bt2E,KAAKy0G,UAAU7uF,GACfqzF,EAAiBhvG,KAAK2b,EAC1B,CACJ,EAEAszF,YAAa,SAAUriC,GACnB,IAAIsiC,EAAmBtiC,EAASh3E,KAAK,gBACjCu5G,EAAkBviC,EAASh3E,KAAK,qBACpCs5G,EAAiB7zG,IAAI,mBAAoB,QACzC8zG,EAAgB55G,KAAK,CACjB,aAAc,QAEtB,EAEA65G,YAAa,SAAUxiC,EAAU3/D,GACP2/D,EAASh3E,KAAK,qBACpBL,KAAK,CACjB,aAAc,SAElBQ,KAAKs5G,oBAAoBziC,EAAU3/D,EACvC,EAEAqiG,cAAe,SAAU1iC,EAAU3/D,GACT2/D,EAASh3E,KAAK,qBACpBL,KAAK,CACjB,aAAc,QAEtB,EAEAg6G,eAAgB,SAAU3iC,GACtB,IAAI4iC,EAAqB5iC,EAASh3E,KAAK,8BACvC45G,EAAmB95G,KAAK,GAAId,UAAUuB,IAAI,yBAC1Cq5G,EAAmBj6G,KAAK,CACpB,gBAAiB,QAEzB,EAEAw5G,aAAc,WACV,IAAIjjF,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SAC3E2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGy4C,aAC/Bx7D,EAAE,kBACPnT,KAAK0sB,QAAQiK,WAAWZ,GAAI,SAAWhoB,IAC/B,GAAEA,GAAOlO,KAAK,qBAAqBoC,QACnC,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAE/F,EAEA2rG,mBAAoB,SAAU7iC,EAAUz/D,GACpC,yDAAmBiD,MAAKs/F,IACpBA,EAAKA,EAAGt6G,QAAUs6G,EAAGt6G,QAAUs6G,EAC/B,IAAIC,EAAe/iC,EAASh3E,KAAK,IAAIuX,EAAMxN,MAC3C,IAAKgwG,EAAa33G,OACd,OACJ,IAAIovB,EAAM,IAAIsoF,EAAGE,IAAI,CACjBpsG,OAAQmsG,EAAa,GACrB/rF,KAAM,IAAI8rF,EAAGpsF,KACZ,CAAEuzC,KAAM,GACLg5C,OAAQH,EAAGI,KAAKC,UAAU,CAAC5iG,EAAM2qF,IAAK3qF,EAAM0qF,KAAM,YAAa,eAEnEmY,aAAcN,EAAGO,qBAAqB,CAClCC,oBAAmB,EACnBC,iBAAgB,EAChBC,UAAS,EACTC,gBAAe,EACfC,eAAc,EACdC,SAAQ,EACRC,aAAY,EACZC,WAAU,IAEdC,OAAQ,CAAE,IAAIhB,EAAGiB,MAAMC,KAAK,CAAEp5E,OAAQ,IAAIk4E,EAAGl4E,OAAOq5E,SAGxDzpF,EAAIsQ,KAAK,kBAAkB,SAAS3gB,GAChC,IAAI+5F,EAAY5/G,SAASiL,cAAc,UACnCxB,EAAOysB,EAAI2pF,UACfD,EAAUj2G,MAAQF,EAAK,GACvBm2G,EAAUh2G,OAASH,EAAK,GACxB,IAAIq2G,EAAaF,EAAUz0G,WAAW,MA2BtC,GA1BA/C,MAAMjC,UAAU+Q,QAAQ9Y,KACpB4B,SAAS+/G,iBAAiB,IAAI9jG,EAAMxN,wBACpC,SAAUzD,GACN,GAAIA,EAAOrB,MAAQ,EAAG,CAClB,IAAI0oC,EAAUrnC,EAAOumC,WAAWZ,MAAM0B,QACtCytE,EAAWE,YAA0B,KAAZ3tE,EAAiB,EAAIzrC,OAAOyrC,GACrD,IAEI4tE,EAFYj1G,EAAO2lC,MAAMkuE,UAGxBrnG,MAAM,wBAAwB,GAC9BzT,MAAM,KACNmyB,IAAItvB,QAETs5G,yBAAyB/5G,UAAUg6G,aAAa1sF,MAC5CqsF,EACAG,GAEJ,IAAIn8G,EAAO,IAAIs8G,OAAO,wYACtBN,EAAWx0G,UAAY+0G,iBAAiBrgH,SAAS+wC,cAAc,IAAI90B,EAAMxN,OAAO/D,MAChFo1G,EAAWrzG,UAAUzB,EAAQ,EAAG,GAChC80G,EAAWQ,UAAU,IAAK,KAE1BR,EAAWv0G,KAAKzH,EACpB,CACJ,IAEA4Z,UAAU6iG,WAEV7iG,UAAU6iG,WAAWX,EAAUY,WAAY,eACxC,CACH,IAAItyE,EAAMluC,SAASygH,eAAe,OAAOxkG,EAAMxN,MAC3CiyG,EAAUd,EAAUh0G,UAAU,aAClCsqB,EAAIyqF,UAAU,MACdzqF,EAAM,KACNgY,EAAIjiC,IAAKy0G,CACb,CACJ,GAAE,GAEV,EAEA1G,oBAAqB,WACjBn1G,KAAK00G,kBAAkBv0G,SAAS,SACpC,EAEA0sG,qBAAsB,SAAUh2B,EAAU0pB,GACtC,IAAIpwC,EAAW,GAAQtS,kBAAkBg5B,EAASr3E,KAAK,SAEnDkjG,GADS,GAAQ7kD,kBAAkBg5B,EAASr3E,KAAK,OACrC2wD,IAAanwD,KAAK0sB,QAAQlqB,IAAI,QAC1Cu5G,EAAcllC,EAASh3E,KAAK,WAAW,GAAQq2B,GAAGm4C,gBACtD,GAAI0tC,EAAY95G,SACPygG,EAAW,CACZ,IAAIsZ,EAAWD,EAAYpuF,SAAS,WACpC,GAA6B,aAAzBquF,EAASx8G,KAAK,QAAwB,CACtC,IAAIquB,EAAO,oBAAwB,GAAG7tB,KAAKi1B,QAAQM,qBAC/C1H,GAAQA,EAAKoV,SACbpV,EAAKoV,QAAQg5E,cAAcF,EAAY,GAAGvpG,QAAQwD,cAC1D,MACIhW,KAAKi8G,cAAcF,EAAY,GAAGvpG,QAAQwD,cAAegmG,EAASx8G,KAAK,QAASw8G,EAASx8G,KAAK,aACtG,CAER,EAEAy8G,cAAe,SAAUxiF,EAAO51B,EAAMqR,GAClCqf,aAAav0B,KAAKk8G,yBAClB,IAAIhlG,EAAgBlX,KAAKi1B,QAAQzyB,IAAI,QACrC,GAAc,cAAVi3B,EA2BG,MAAc,WAAVA,OACPz5B,KAAKi8G,iBAGLj8G,KAAK0xG,OAAOiG,qBAAqB,SACjC33G,KAAKm1B,UAAUN,qBA/Bf,GAAIhxB,EAEA,GADA7D,KAAKm8G,uBAAyB,CAACt4G,KAAMA,GACxB,WAATA,EAAmB,CACnB,IAAIiF,EAAYoM,EAAY,GAAMI,8BAA8BJ,GAAa,KAC7EA,IAAclV,KAAKm8G,uBAAuBjnG,UAAYA,GACtDgC,EAAUpO,EAAY,aAAiB,uCAAwC,CAACA,IAAc,aAAiB,+BAC/G9I,KAAKk8G,wBAA0B9xG,YAAW,KACtCpK,KAAKi8G,eAAe,GACrB,GAAUpnH,+BACjB,KACiB,UAATgP,IACAqT,EAAU,aAAiB,+BAClB,UAATrT,IACAqT,EAAU,aAAiB,+BAC/BlX,KAAKk8G,wBAA0B9xG,YAAW,KACtCpK,KAAKi8G,cAAc,SAAUp4G,EAAK,GACnC,GAAUhP,qCAIjBmL,KAAKm8G,4BAAyB/gG,EAC9BlE,EAAU,aAAiB,wBAC3BlX,KAAKk8G,wBAA0B9xG,YAAW,KACtCpK,KAAKi8G,eAAe,GACrB,GAAUtnH,0BAUjBuiB,EACAlX,KAAK0xG,OAAOiG,qBAAqB,GAAG33G,KAAKi1B,QAAQzyB,IAAI,WAAW0U,KAEhElX,KAAK0xG,OAAOiG,uBAChB33G,KAAKm1B,UAAUx3B,EAAE,aAAa2E,KAAK4U,GACnClX,KAAKm1B,UAAUx3B,EAAE,kBAAkB2E,KAAK,GAAMgS,yBACzC9U,KAAK,QAAS,MACnBQ,KAAKm1B,UAAUx3B,EAAE,yBAAyBwC,SAAS,SACvD,EAEAi8G,eAAgB,SAAUllG,GAClBA,EAAQ1U,IAAI,aACZ0U,EAAQ1U,IAAI,YAAY6P,SAASyF,IAC7B,IAAIukG,EAAiBvkG,EAAQrK,QAAU,GACvC,GAAIzN,KAAKi1B,QAAQzyB,IAAI,eAAiB0U,EAAQ1U,IAAI,iBAAkB,CAChE,IAAIoH,EAAKyyG,EAAe1pG,MAAM,YAC1BuF,EAAMmkG,EAAe1pG,MAAM,YAC3B/I,GAAM5J,KAAKi1B,QAAQ0+C,SACnB0oC,EAAiBzyG,EAAG,GAAGvG,MAAM,GAC5Bg5G,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,QAAWsV,EAAQK,IAAK,IAEhED,IACLmkG,EAAiBnkG,EAAI,GAAG7U,MAAM,GAC7Bg5G,IAAmBr8G,KAAK0sB,QAAQlqB,IAAI,SAAYsV,EAAQK,IAAK,GAEtE,MAEIkkG,EAAiBA,EAAeh5G,MAAM,GAClCg5G,IAAmBr8G,KAAK0sB,QAAQlqB,IAAI,SACpCsV,EAAQK,IAAK,EACrB,GAGZ,EAEAi+F,UAAW,SAAUl/F,GACjBlX,KAAKo8G,eAAellG,GACpBlX,KAAK0sB,QAAQ6G,SAASqiE,IAAI1+E,GAC1B,IAAIolG,EAAwBt8G,KAAK2wB,qBAC7B0jF,EAAuBr0G,KAAKwwB,kBAC3B,GAAEplB,YAAY8L,EAAQ1U,IAAI,iBAC3BxC,KAAK8zB,MAAM/T,IAAI,eAAe,GAElC/f,KAAK8zB,MAAM/T,IAAI,UAAU,IACpB7I,EAAQ1U,IAAI,gBAAkB0U,EAAQ1U,IAAI,cAC3CxC,KAAK8zB,MAAM/T,IAAI,kBAAmB7I,EAAQ1U,IAAI,cAE9C0U,EAAQ1U,IAAI,yBACRxC,KAAKi1B,QAAQ+9C,cAAgBhzE,KAAKi1B,QAAQ+9C,aAAa3f,QAAUn8C,EAAQ1U,IAAI,yBAC7ExC,KAAKi1B,QAAQ1pB,QAAQ,uBAG7B,IAAIsrE,EAAW72E,KAAK20G,WAAWz9F,GAEH,gBAAxBA,EAAQ1U,IAAI,UACRxC,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,eACtDxC,KAAKu8G,uBAAuBrlG,EAAS2/D,GAErC72E,KAAKw8G,gBAAgBtlG,EAAS2/D,IAGlC72E,KAAKyuB,cACD6tF,GAAyBplG,EAAQ1U,IAAI,kBACrCxC,KAAKkwB,kBAELlwB,KAAK6uB,kBACL7uB,KAAK+vB,SAAS/vB,KAAK+tB,aAAa,GAAG3U,aAAepZ,KAAK+tB,aAAa,GAAGoC,aAAekkF,KAIxFn9F,EAAQ1U,IAAI,uBAAyB0U,EAAQ1U,IAAI,iBAC7C0U,EAAQ8hF,cAAgB9hF,EAAQ1U,IAAI,WAAuC,WAAxB0U,EAAQ1U,IAAI,UAA0B0U,EAAQ1U,IAAI,kBACvG0U,EAAQ6I,IAAI,cAAe/f,KAAK8zB,MAAMtxB,IAAI,YAAc,OAAW,aAC9D0U,EAAQ1U,IAAI,cACbxC,KAAK8zB,MAAMw5E,WAAWp2F,EAAQ1U,IAAI,SAAU,YAAa0U,EAAQ1U,IAAI,aAAc0U,EAAQ1U,IAAI,sBAC9F,OAAW,aACRxC,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK8zB,MAAMuI,UACtCnlB,EAAQ6I,IAAI,SAAS,GACf7I,EAAQ1U,IAAI,kCAClBxC,KAAKy8G,cAAcvlG,IAE3BlX,KAAK8zB,MAAM66E,qBAAqBz3F,EAAQ1U,IAAI,eAE5CxC,KAAKi1B,SAAWj1B,KAAK8zB,MAAMtxB,IAAI,cAC3BxC,KAAK8zB,MAAMuI,UACXnlB,EAAQ6I,IAAI,YAAY,IAExB/f,KAAKghF,KAAK07B,cACV18G,KAAK8zB,MAAM/T,IAAI,YAAY,KAE/B/f,KAAK8zB,MAAMtxB,IAAI,WACf0U,EAAQ6I,IAAI,SAAS,GACrB7I,EAAQ6I,IAAI,QAAS,GAAU3pB,iBAInC8gB,EAAQ1U,IAAI,cACZxC,KAAK28G,iBAAiBzlG,GAGtBA,EAAQ8hF,eACH9hF,EAAQ1U,IAAI,gBAAmB0U,EAAQ1U,IAAI,eAAwC,UAAvB0U,EAAQ1U,IAAI,SACzExC,KAAKyuF,aAAav3E,EAAQ1U,IAAI,cAC9BxC,KAAK8zB,MAAMtxB,IAAI,sBAAwB0U,EAAQ1U,IAAI,cAAgB0U,EAAQ1U,IAAI,eAAiB0U,EAAQ1U,IAAI,aAC5G0U,EAAQ6I,IAAI,QAAS,GAAU3pB,eAC1B8gB,EAAQ1U,IAAI,eAAiB0U,EAAQ1U,IAAI,eAAiBxC,KAAK8zB,MAAMtxB,IAAI,sBAAwB0U,EAAQ1U,IAAI,cAAgB0U,EAAQ1U,IAAI,iBAC9I0U,EAAQ6I,IAAI,QAAS,GAAU5pB,iBAGnC+gB,EAAQ1U,IAAI,mBAAqB0U,EAAQ1U,IAAI,aACvCxC,KAAKi1B,QAAQs5D,YAAcvuF,KAAKi1B,QAAQs5D,WAAWr3E,QAAQ1U,IAAI,aAAe0U,EAAQ1U,IAAI,eAC5FxC,KAAKi1B,QAAQs5D,WAAa,IAAI,2BAA+B,CAACz6D,MAAO9zB,KAAKi1B,QAAS/d,QAASA,KAChGlX,KAAK8zB,MAAMmB,QAAQlV,IAAI,cAAc,GACrC/f,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAK8zB,MAAMmB,QAAQ1pB,QAAQ,YAAavL,KAAK8zB,MAAMmB,SAC/E/d,EAAQ6I,IAAI,aAAa,IAG7B,IAAIk5E,EAAej5F,KAAK8zB,MAAMmlE,eACzBA,GAAgB/hF,EAAQ1U,IAAI,cAAgBy2F,EAAaz2F,IAAI,gBAC9DxC,KAAK8zB,MAAMmlE,aAAe/hF,EAC1BlX,KAAKm1B,UAAUN,qBAEf3d,EAAQ1U,IAAI,aACZ0U,EAAQ1U,IAAI,YAAY6P,SAASyF,IAC7B,IAAIukG,EAAiBvkG,EAAQrK,QAAU,GACnC7D,EAAKyyG,EAAe1pG,MAAM,YAC1BuF,EAAMmkG,EAAe1pG,MAAM,YAE3B0pG,EADAzyG,EACiBA,EAAG,GAAGvG,MAAM,GACxB6U,EACYA,EAAI,GAAG7U,MAAM,GAEb,GACjBrD,KAAKi1B,QAAQ0+C,QACZ0oC,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,OAAUxC,KAAK0sB,QAAQnV,SAASw5B,OAAO,KAAM,CAAC75B,QAASA,EAAS+d,QAASj1B,KAAKi1B,UACtHj1B,KAAKi1B,QAAQzyB,IAAI,gBAClBxC,KAAK48G,iBACL58G,KAAK48G,iBAAiBr0F,MAAK,KACtB8zF,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,OAAUxC,KAAK0sB,QAAQnV,SAASw5B,OAAO,KAAM,CAAC75B,QAASA,EAAS+d,QAASj1B,KAAKi1B,UAC3Hj1B,KAAK48G,iBAAmB,IAAI,KAIhC58G,KAAK48G,iBAAmB,IAAI,GAAEv1G,SAC9BrH,KAAKi1B,QAAQo+C,WAAU,KAClBgpC,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,OAAUxC,KAAK0sB,QAAQnV,SAASw5B,OAAO,KAAM,CACtF75B,QAASA,EACT+d,QAASj1B,KAAKi1B,UAElBj1B,KAAK48G,iBAAiBv0G,SAAS,OAI1Cg0G,IAAmBr8G,KAAK0sB,QAAQlqB,IAAI,QAA6B,KAAnB65G,IAA0Br8G,KAAK0sB,QAAQnV,SAASw5B,OAAO,KAAM,CAAC75B,QAASA,EAAS+d,QAASj1B,KAAKi1B,SAAS,GAGlK,EAGE4nF,cAAe,SAAU3lG,EAAS4lG,GAChC,IAAIzI,EAAuBr0G,KAAKwwB,kBAC5BqjC,EAAY38C,EAAQ1U,IAAI,aAC1B,GAAIxC,KAAK8zB,MAAMtxB,IAAI,cAAgB0U,EAAQ1U,IAAI,cAAgBs6G,EAAO,CAClE,IAAIp8F,EAASxJ,EAAQ1U,IAAI,WAAa,GAClCke,EAAOze,QACPye,EAAOrO,SAASg3B,IACZ,IAAI5H,EAAS4H,EAAI3H,QAAQ,GACpB2H,EAAIhzB,KAETrW,KAAK8zB,MAAMP,SAASyO,YAAYP,EAAQ4H,EAAIhzB,KAAKgE,MAAMnS,IACnD,GAAe,OAAXA,EACA,OACJ,IAAIsvE,EAAO,GAEPA,EADAx3E,KAAK8zB,MAAMs0D,eAAqD,oBAApC,mBAAuB,SAC5CpoF,KAAK8zB,MAAMs0D,cAAczqF,EAAE,gCAAgCk2D,gBAAwBpyB,OAEnFzhC,KAAKrC,EAAE,gCAAgCk2D,gBAAwBpyB,OACtE+1C,EAAKv1E,SACLu1E,EAAK,GAAGpwE,IAAMc,EACdsvE,EAAK,GAAGlwE,OAAS,KACR+sG,EAGDr0G,KAAK+vB,SAAS/vB,KAAK+tB,aAAa,GAAG3U,aAAei7F,GAFlDr0G,KAAKkwB,gBAEkE,EAE/EsnD,EAAKh4E,KAAK,eAAgB0I,GAC9B,GACF,KAGKgP,EAAQ1U,IAAI,sBAAwB,IAC1C6P,SAAS0qG,IACd,IAAIC,EAAaD,EAAQv6G,IAAI,WAAa,GACtCy6G,EAAgBF,EAAQv6G,IAAI,aAChCw6G,EAAW3qG,SAASg3B,IAChB,IAAI5H,EAAS4H,EAAI3H,QAAQ,GACpB2H,EAAIhzB,KAETrW,KAAK8zB,MAAMP,SAASyO,YAAYP,EAAQ4H,EAAIhzB,KAAKgE,MAAMnS,IACnD,GAAe,OAAXA,EACA,OACJ,IAAIsvE,EAAOx3E,KAAKrC,EAAE,gCAAgCk2D,mCAA2CopD,gBAA4Bx7E,OACrH+1C,EAAKv1E,SACLu1E,EAAK,GAAGpwE,IAAMc,EACdsvE,EAAK,GAAGlwE,OAAS,KACR+sG,EAGDr0G,KAAK+vB,SAAS/vB,KAAK+tB,aAAa,GAAG3U,aAAei7F,GAFlDr0G,KAAKkwB,gBAEkE,EAE/EsnD,EAAKh4E,KAAK,eAAgB0I,GAC9B,GACF,GACJ,GAEV,CACJ,EAEFysG,WAAY,SAAUz9F,GAClB,IAAI2/D,EAAW72E,KAAKo1G,iBAAiBl+F,GACjCwjD,EAAQ16D,KAAK8zB,MAAMP,SAASnvB,QAAQ8S,GAC1B,IAAVwjD,EACAmc,EAASoP,UAAUjmF,KAAKrC,EAAE,kBAE1Bk5E,EAASv+C,YAAYt4B,KAAKrC,EAAE,iBAAiBq2B,GAAG0mC,EAAQ,IAE5D,IAAI45C,EAAgBz9B,EAAS09B,QAAQ,iBAAiBriF,QAOtD,OANAlyB,KAAKw0G,oBAAoB39B,EAAS,GAAI3/D,GAClCo9F,EAAcryG,QACdjC,KAAKw0G,oBAAoBF,EAAc,IAE3Ct0G,KAAKy0G,UAAU59B,GACf72E,KAAK0xG,OAAOiG,uBACL9gC,CACX,EAEA49B,UAAW,SAAU59B,GACjB,IAAIqmC,EAAarmC,EAASh3E,KAAK,iBAC3Bs9G,EAAiBtmC,EAASh3E,KAAK,6BAC/Bq9G,EAAWj7G,QACXi7G,EAAWp9G,MAAK,CAAC4C,EAAKxB,KAClBlB,KAAKo9G,kBAAkB,GAAEl8G,GAAM,IAGnCi8G,EAAel7G,QACfjC,KAAKq9G,gBAAgBxmC,EAE7B,EAEAymC,qBAAsB,SAAU13F,GAC5B,IAAIlF,EAASkF,EAAIpjB,IAAI,UACjB+6G,EAAU,GACd,GAAK78F,EASL,OAPAA,EAAOrO,SAASg3B,IACZ,IAAI+nC,EAAS,IAAIptE,IAAIqlC,EAAI3H,QAAQ,IAAI3sB,SACrCs0B,EAAI7zB,YAAc,GAAMA,YAAY6zB,EAAIzkC,MACxC24G,EAAQn8G,KAAKgwE,EAAO,IAExBmsC,EAAU,IAAI,IAAI1qG,IAAI0qG,IAEf,CAAC78F,SAAQ68F,UACpB,EAEAH,kBAAmB,SAAU54E,GACzB,IAAIlZ,EAAOtrB,KACXwkC,EAAMviC,QAAUuiC,EAAM/lC,cAAc,CAChCoF,KAAM,QACN48D,qBAAqB,EACrBC,iBAAiB,EACjBC,UAAW,+BACX3lE,MAAO,CACH4lE,aAAa,EACbC,SAAU,SAAS3/D,GACf,MAAO,sCAAsCA,EAAK4N,GAAGtP,KAAK,OAAO,qBAAuB8rB,EAAKwI,MAAMP,SAASqwE,YAAY1iG,EAAK4N,GAAGtP,KAAK,QAA9H,QAAuJ0B,EAAK4N,GAAGtP,KAAK,QAC/K,GAEJshE,KAAM,CACF5X,SAAS,EACTtzC,SAAU,MAGtB,EAEAynG,gBAAiB,SAAUxmC,GACvB,IAAIvrD,EAAOtrB,KACX62E,EAASh3E,KAAK,iBAAiBoC,QAAU40E,EAASh3E,KAAK,iBAAiBpB,cAAc,CAClF++G,SAAU,MACV35G,KAAM,QACN48D,qBAAqB,EACrBg9C,gBAAgB,EAChB98C,UAAW,+BACX3lE,MAAO,CACH4lE,aAAa,EACbC,SAAU,SAAS3/D,GACf,MAAO,sCAAsCA,EAAK4N,GAAGtP,KAAK,OAAO,qBAAuB8rB,EAAKwI,MAAMP,SAASqwE,YAAY1iG,EAAK4N,GAAGtP,KAAK,QAA9H,QAAuJ0B,EAAK4N,GAAGtP,KAAK,QAC/K,GAEJ4kF,QAAS,CACLl7B,SAAS,GAEb4X,KAAM,CACF5X,SAAS,EACTtzC,SAAU,IACV8nG,OAAQ,SAAS1kG,GACb,OAAOA,CACX,IAGZ,EAEAizF,cAAe,SAAU/qG,GACrB,IAAI21E,EAAuE8mC,EAApDz8G,EAAKsB,IAAI,UAAmBtB,EAAKsB,IAAI,cAC/CtB,EAAKsB,IAAI,SACtB,KAAItB,aAAgB,YAMhB,OAOJ,GAZIlB,KAAKo8G,eAAel7G,GACpBy8G,EAAe39G,KAAKo1G,iBAAiBl0G,GACrC21E,EAAW72E,KAAKrC,EAAE,gCAAgCuD,EAAKsB,IAAI,kBAI/Dq0E,EAAS7lE,YAAY2sG,GACrB9mC,EAAW72E,KAAKrC,EAAE,gCAAgCuD,EAAKsB,IAAI,kBAC3DxC,KAAKw0G,oBAAoB39B,EAAS,GAAI31E,GACtClB,KAAKy0G,UAAU59B,GACf72E,KAAK0xG,OAAOiG,uBAERz2G,EAAKsB,IAAI,aAAc,CACvB,IAAI+W,EAAY,GAAMD,iBAAiBpY,EAAKsB,IAAI,cAChDq0E,EAASh3E,KAAK,qBAAqBgN,OAAO0M,EAC9C,CACA,IAAIqkG,EAAiB,GAAMtpG,sBAAsBpT,EAAKsB,IAAI,sBACtD+R,EAAW,GAAOrT,EAAKsB,IAAI,sBAAsBuR,OAAO,yBACxD8pG,EAAY,GAAG,GAAgB38G,EAAKsB,IAAI,YAAY,aAAiB,SAAU,CAAC,GAAOtB,EAAKsB,IAAI,cAAc2R,QAAQ,OAAOC,OAAO,GAAOlT,EAAKsB,IAAI,sBAAsB2R,QAAQ,QAAUypG,EAAiBrpG,MACjNsiE,EAASh3E,KAAK,aAAa0K,KAAK,QAASszG,GACzChnC,EAASh3E,KAAK,gBAAgBK,YAAY,UAAUoC,KAAK,aAAiB,uCAAuCiI,KAAK,QAASszG,EACnI,EAEAle,cAAe,SAAUz+F,GACrB,IAAIgW,EAAS2/D,EAAUinC,EACvB,GAAI58G,aAAgB,WAChBgW,EAAUhW,EACV48G,EAAmB99G,KAAKrC,EAAE,gCAAgCuD,EAAKsB,IAAI,kBAClExC,KAAK0xG,OAAmB,eAAM76B,EAAW72E,KAAK0xG,OAAOqM,aAAapgH,EAAE,gCAAgCuD,EAAKsB,IAAI,uBAC3G,CAEH,GADAq0E,EAAW31E,GACN21E,EAAS50E,OAAQ,OACtBiV,EAAUlX,KAAK8zB,MAAMP,SAAS/wB,IAAIq0E,EAASn3E,KAAK,YACpD,CACAwX,GAAWA,EAAQs6C,UACfssD,GACA99G,KAAKg+G,qBAAqBF,GAE1BjnC,GAAaA,IAAainC,GAC1B99G,KAAKg+G,qBAAqBnnC,EAClC,EAEAmnC,qBAAsB,SAAUnnC,GAC5B,GAAKA,EAAS7pE,SAAS,iBAAqB6pE,EAASonC,OAAOjxG,SAAS,eAAiB,CAClF,IAAIs+B,EAASurC,EAASh3E,KAAK,kBAAkB,GAC7Cg3E,EAASonC,OAAO99G,SAAS,eACzB02E,EAASonC,OAAOp+G,KAAK,kBAAkBmR,YAAYs6B,EACvD,CACAurC,EAAS8G,KAAK,uBAAuBzsE,SACrC2lE,EAAS3lE,SACTlR,KAAK0xG,OAAOwM,yBACPl+G,KAAKm+G,mBACNn+G,KAAK6uB,iBAEb,EAEAkyD,aAAc,WACV,IAAI50E,EAAiB,GACjBiyG,EAAiBp+G,KAAKi1B,QAAQzyB,IAAI,cAAgB,aAAiB,2CAA6C,aAAiB,qCACjIs5E,IAAgB97E,KAAKi1B,QAAQzyB,IAAI,cACrCxC,KAAKm+G,mBAAoB,EACrBn+G,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,SAC5C,GAAMrnD,QAAQiC,IAAI,aAAiB,iBAAkBowG,EACjDjyG,EAAgB,CAACgC,eAAgB,aAAiB,sCAAsCoa,MAAMhpB,IACzFA,EAILS,KAAK8zB,MAAMkhD,mBAAmB8G,GAAe,KACzC97E,KAAKm+G,mBAAoB,EACzBn+G,KAAKm1B,UAAUN,oBACf70B,KAAK6uB,iBAAiB,IACvB,KACC7uB,KAAKm+G,mBAAoB,CAAK,IAR9Bn+G,KAAKm+G,mBAAoB,CAS3B,IAIN,GAAMpyG,QAAQiC,IAAI,aAAiB,iBAAkB,GAAGowG,MAAmB,aAAiB,4DAA6D,CAACp+G,KAAK0sB,QAAQixB,SAAS0gE,UAAU,cACtLlyG,EAAgB,CAACgC,eAAgB,aAAiB,sCAAsCoa,MAAMhpB,IAC9F,IAAKA,EAED,YADAS,KAAKm+G,mBAAoB,GAGlB,GAAE9mG,MAAMrX,KAAK8zB,MAAMP,SAASimC,QAClCnnD,SAASnR,IAAWlB,KAAK2/F,cAAcz+F,EAAK,GAAI,GAGjE,EAEAgiC,mBAAoB,SAAUlqB,EAASolD,EAAUlqE,GAC7C,IAAImqE,EAAmBrlD,EAAQ5I,UAC3ByjD,EAAY,WAAa,GAAO1qD,MAChCq7B,EAAQ,GAAExrB,GACVslD,EAAe95B,EAAMzJ,QAAQ,cACjC7mC,EAAOA,GAAQ8L,KAAK8zB,MACpB0Q,EAAMrkC,SAAS,2BAA2BR,KAAK,GAAE,GAAU4zB,SAASgrC,oBAAoB,CAACC,YAAa3K,MACtG,IAAI4K,EAAMz+D,KAAK0+D,YAAYN,EAAU55B,EAAM3kC,KAAK,IAAMg0D,IAElDyqD,EAAiB,KACjB,IAAIC,EAAe9/C,EAAIO,iBACnBppD,EAAW6oD,EAAIG,cACE,IAAjB2/C,GAAsBA,IAAiB3oG,EACvC0oD,EAAan+D,SAAS,sBAEtBm+D,EAAap+D,YAAY,qBAAqB,EAmEtD,OAhEAu+D,EAAIp7C,GAAG,SAAS,KACZ,IAAIzN,EAAWtZ,KAAKqiE,MAAMF,EAAIG,eAC9B0/C,IACA95E,EAAM3kC,KAAK,yBAAyByC,KAAK,GAAMqT,gBAAgBC,GAAU,IAG7E6oD,EAAIp7C,GAAG,SAAS,KACZmhB,EAAMtkC,YAAY,2BAClB8Y,EAAQ5I,UAAYiuD,EACpBI,EAAII,QACJr6B,EAAM3kC,KAAK,uBAAuB2C,IAAI,GAAG0O,SACzC,GAAMqJ,uBAAuB,aAAiB,sCAAuC,IAAK,IAG9FkkD,EAAIp7C,GAAG,QAAQ,KAGX,IAAIm7F,EAFJlgD,EAAan+D,SAAS,WACtBm+D,EAAap+D,YAAY,sBAEzB,yBAA+Bs+G,EAAW,iCAC1C,uBAA6BtqH,EAAKivB,aAAatjB,MAAKqB,GAAQA,EAAK0/B,cAAgB09B,EAAa,KAC9F,yBAA+B,iCAAuCpqE,EAAK0gC,WAC3E,yBAA+B,gCAAsC4pF,GACjD,wBAA2B79E,GAASA,GAAS,yBACnDtuB,SAAQ,SAASsuB,GACvBA,EAAMC,aACFD,EAAMC,YAAYC,eAClBF,EAAMC,YAAYC,cAAcC,UAE5C,IACC,sBAA4B,6BAAoC,oCAC/D,wBAA8B,sBAA6B,kCAC7D,IAAIg+B,EAAUr7C,aAAY,WACtB,IAAIs7C,EAAWziE,KAAKqiE,MAAMF,EAAIO,kBAC1BP,EAAIQ,YACJz6B,EAAM3kC,KAAK,2BAA2ByC,KAAK,GAAMqT,gBAAgBopD,IAEjEjxB,cAAcgxB,EACtB,GAAG,KACH,WAAe,sBAAsB,IAGzCL,EAAIp7C,GAAG,UAAU,KACbi7F,IACAhgD,EAAap+D,YAAY,UAAU,IAGvCu+D,EAAIp7C,GAAG,SAAS,KACZi7C,EAAap+D,YAAY,WACzBo+G,IACA,WAAe,sBAAsB,IAGzC7/C,EAAIp7C,GAAG,QAAQ,KACXi7F,GAAgB,IAGpB7/C,EAAI39B,SAAW,KACX29B,EAAIqJ,OACJtjC,EAAM3kC,KAAK,2BAA2ByC,KAAK,GAAMqT,gBAAgB,GAAG,EAGxE6uB,EAAM3kC,KAAK,yBAAyB,GAAGq/D,SAAW,KAC9CT,EAAIU,UAAU36B,EAAM3kC,KAAK,yBAAyB0N,MAAM,IAAI,EAEzDkxD,CACX,EAEAggD,gBAAiB,SAAUrnG,GACvB,IAAIsnG,EACJ,GAAItnG,EAAMsJ,OAAOze,OAAS,EAAG,CACzB,IAAI3C,EAAW,iBACXq/G,EAAgBvnG,EAAMsJ,OAAOze,OAAS,GACzC,yBAA+B3C,EAAW,yBAC3Co/G,EAAsB,GAAE,GAAUnrF,SAASj0B,GAAU8X,IACrDsnG,EAAoB7+G,KAAK,eAAeM,SAAS,iBACjDu+G,EAAoB7+G,KAAK,kBAAkByC,KAAK,IAAMq8G,EAC1D,KACK,CACD,IAAIr/G,EAAW,gBAAkB8X,EAAMsJ,OAAOze,QAC7C,yBAA+B3C,EAAW,uBAAyB8X,EAAMsJ,OAAOze,QACjFy8G,EAAsB,GAAE,GAAUnrF,SAASj0B,GAAU8X,GACzD,CAIA,OAHK,wBACDsnG,EAAoB7+G,KAAK,OAAOK,YAAY,sCAAsCC,SAAS,gBAExFu+G,CACX,EAEAtJ,iBAAkB,SAAUl+F,GACxB,IAEuCxhB,EAYnCgpH,EAdAtnG,EAAQ,GAAEC,MAAMH,EAAQI,YACxBorF,EAAaxrF,aAAmB,YAAkBA,EAAQ8hF,aAC1Dxf,EAAYpiE,EAAMoiE,WAAa,CAAC,EAChC94D,EAAStJ,EAAMsJ,OACf88C,EAASpmD,EAAMomD,OACfr8D,EAAQ+V,EAAQ1U,IAAI,cACpBgmC,EAASpxB,EAAMoxB,MACf4wC,EAAahiE,EAAMgiE,UACnBkoB,EAAmBlqF,EAAMkqF,gBACzBsd,EAAWjgB,QAAQnhC,GAAUA,EAAOv7D,QACpC48G,EAAWlgB,QAAQj+E,GAAUA,EAAOze,QACpC68G,IAAc1lC,EACd2lC,IAAUv2E,EACV0pE,GAAW,EAEX8M,EAAYxlC,EAAUluC,OACtBg7C,EAAa9M,EAAU8M,WACvBthC,EAAOw0B,EAAUx0B,KACjB2gC,EAAQnM,EAAUmM,MAClBs5B,EAAUzlC,EAAU5vE,GACpBsvE,EAAsB9hE,EAAM8hE,oBAC5BgmC,EAAoB,GAoDxB,GAlDAxpH,EAAW8jF,EAAU70B,UAAY3kD,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAK0sB,QAAQlqB,IAAI,SAAY4U,EAAM+4C,WAAanwD,KAAKi1B,QAAQzyB,IAAI,QAAUxC,KAAKi1B,QAAQzyB,IAAI,QACnJ9M,IACGgtG,EACI1iG,KAAK8zB,MAAMtxB,IAAI,cACXxC,KAAKi1B,QAAQ0+C,QACbj+E,EAAWsK,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,YAC/BxC,KAAKi1B,QACVj1B,KAAKi1B,QAAQo+C,WAAU,KACnB39E,EAAWsK,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,YAChCq0E,GACAA,EAASlpD,SAAS,aAAa9tB,KAAK,0CAA0CyC,KAAK,GAAQomF,UAAUhzF,GACzG,IAGJA,EAAWsK,KAAK0sB,QAAQlqB,IAAI,QAEhC9M,EAAWsK,KAAK0sB,QAAQlqB,IAAI,QAEhC9M,EAAWsK,KAAK0sB,QAAQ4I,SAAS9yB,IAAI4U,EAAM+4C,UAAYnwD,KAAK0sB,QAAQ4I,SAAS9yB,IAAI4U,EAAM+4C,UAAU3tD,IAAI,QAAU4U,EAAM+4C,UAG7Hz6D,EAAW,GAAQgzF,UAAUhzF,GAAY,IAErCgtG,GAAa1iG,KAAK8zB,MAAMtxB,IAAI,eACxBxC,KAAKi1B,QAAQ0+C,UACb3uB,EAAOhlD,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,QAChCmjF,EAAQ3lF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,UAGzC,GAAEwH,OAAOoN,EAAO,CACZ1hB,SAAUA,EACV+jC,MAAQviB,aAAmB,WAAkBA,EAAQ2oF,WAAa,OAClEsf,cAAgBjoG,aAAmB,WAAkBA,EAAQ4oF,kBAAoB,OACjFtlF,KAAM,GAAgBpD,EAAMoD,MAC5B4kG,WAAY,GAAMvrG,YAAYuD,EAAMoD,MACpCwkG,UAAWA,EACX14B,WAAYA,EACZu4B,SAAUA,EACVD,SAAUA,EACVG,QAASA,EACTD,YAAaA,EACbt2E,MAAOA,EACP4wC,UAAWA,EACXkoB,gBAAiBA,EACjBt8C,KAAM,GAAMlvC,YAAYkvC,GACxB2gC,MAAOA,EACPs5B,QAASA,IAEb7nG,EAAMmI,UAAYnI,EAAMmI,WAAavf,KAAK8zB,MAAMtxB,IAAI,aAEjC,WAAf4U,EAAMvT,KAAmB,CACzB,IAAIvE,EAAW8X,EAAMypF,OAAS,gBAAkB,SAChD,OAAO,GAAE,GAAUttE,SAASj0B,GAAU8X,GAC1C,CAEIynG,GACIn+F,EAAOze,OAAS,IAChBy8G,EAAsB1+G,KAAKy+G,gBAAgBrnG,IAInD,IAKoDy/D,EALhDwoC,EAAU,CACVjoG,EAAMwoF,mBAAqB,aAC1BxoF,EAAMmI,WAAavf,KAAK8zB,MAAMtxB,IAAI,aAAgB,YAAc,IAGjEmV,EAAc,GAAMV,kBAAkBC,GAC1C,GAAIE,EAAM+sE,iBAAiB,CACvB,IACIm7B,EADW,IAAItsG,OAAO,aAAeoE,EAAMib,MAAQ,aAAa,SACrCktF,KAAK5nG,GAChC2nG,IACiC,IAA7BA,EAAgB,GAAGr9G,SACnBq9G,EAAgB,GAAK,MAAQA,EAAgB,GAAG79F,UAAU,IAC7B,IAA7B69F,EAAgB,GAAGr9G,SACnBq9G,EAAgB,GAAKA,EAAgB,GAAG79F,UAAU,EAAG69F,EAAgB,GAAGr9G,OAAS,GAAK,OAC1F0V,EAAc2nG,EAAgB,GAAK,0CAA4CA,EAAgB,GAAK,UAAYA,EAAgB,GAChI3nG,EAAcA,EAAY9V,QAAQ,MAAO,KAEjD,CA6BA,GA1BIg1E,EADA72E,KAAK8zB,MAAMtxB,IAAI,WAAamV,EAAY1V,QAAUmV,EAAMwoF,mBAAuD,GAAlCxoF,EAAMwoF,kBAAkB39F,OAC1F,GAAE,GAAUsxB,SAASisF,WAAW,GAAEx1G,OAAOoN,EAAO,CACvDwW,UAAWyxF,EAAQjgH,KAAK,SAErBgY,EAAM+sE,iBACF,GAAE,GAAU5wD,SAASksF,SAAS,GAAEz1G,OAAOoN,EAAO,CACrDsrF,UAAWA,EACXxrF,QAASS,EACT45F,SAAU,GAAMr9F,kCAAkCkD,EAAMoD,MACxDoT,UAAWyxF,EAAQjgH,KAAK,SAER,gBAAfgY,EAAMvT,KACA,GAAE,GAAU0vB,SAASmsF,YAAY,GAAE11G,OAAOoN,EAAO,CACxDsrF,UAAWA,EACXxrF,QAASS,EACTiW,UAAWyxF,EAAQjgH,KAAK,SAGjB,GAAE,GAAUm0B,SAASosF,KAAK,GAAE31G,OAAOoN,EAAO,CACjDsrF,UAAWA,EACXxrF,QAASS,EACTiW,UAAWyxF,EAAQjgH,KAAK,SAG5BgY,EAAMm+E,eAAe,eACrB1e,EAASr3E,KAAK,aAAc4X,EAAMmqF,YAElCsd,IACIn+F,EAAOze,OAAS,IAChB40E,EAASh3E,KAAK,2BAA2BF,KAAK++G,IAC7C,wBAA8B7nC,EAASh3E,KAAK,yBAAyBqyB,QAAQrlB,OAAO,GAAE,sCAAsCvK,KAAK,aAAiB,iCAElI,GAAjBoe,EAAOze,QAAa,CACpB,IAAI29G,EAAY5/G,KAAK6/G,YAAYn/F,EAAO,IACpCo/F,EAAc9/G,KAAK+/G,qBAAqBr/F,EAAO,IACnDk/F,EAAUt4G,OAAS,KACftH,KAAKk5G,YAAYriC,EAAS,EAE9BA,EAASh3E,KAAK,2BAA2BF,KAAK,GAAEmgH,GAAangH,KAAKigH,KACjE,wBAA8B/oC,EAASh3E,KAAK,gBAAgBgN,OAAO,GAAE,sCAAsCvK,KAAK,aAAiB,gCAClItC,KAAK6uB,iBACT,CAEJ,GAAI+vF,EAAU,CACV,IAAIoB,EAAgBhgH,KAAKigH,uBACzBppC,EAASh3E,KAAK,2BAA2BgN,OAAOmzG,GAChDxiD,EAAOnrD,SAAQ,CAACnX,EAAOwH,KACnB,IAAIw9G,EAAWlgH,KAAKmgH,YAAYjlH,EAAOwH,GACvCm0E,EAASh3E,KAAK,kBAAkBgN,OAAOqzG,EAAS,IAEpDlgH,KAAKq5G,YAAYxiC,EAAU3/D,GAC3B2/D,EAAS32E,YAAY,uBACzB,CAEA,GAAI6+G,GAA0B,gBAAf3nG,EAAMvT,MACb2kC,EAAMvmC,OAAS,EAAG,CAClB,IACIm+G,EADAtnC,EAAa,GAAEzhE,MAAMmxB,GAEzB,GAAEswC,GAAYh5E,MAAK,CAAC4C,EAAKuE,KACrB,IAAIo5G,EAAe,GAAEhpG,MAAMyhE,EAAWp2E,IAClCuE,EAAKpD,OAEDquG,IADAjrG,EAAKixD,OAKW,IAAtB4gB,EAAW72E,QAAiBiwG,IAAcjrG,EAAKlI,KAAO,aAAiB,kBACzE,IAAIuhH,EAAiB,GAAMrrG,eAAehO,EAAKpD,MAI/C,GAHA,GAAEmG,OAAOq2G,EAAc,CAAEnO,SAAUA,EAAUt8F,SAAU,GAAMD,gBAAgB0qG,EAAazqG,UAAWu+E,SAAUmsB,EAAgB17G,KAAM,GAAM4Q,YAAY6qG,EAAaz7G,QACpKw7G,EAAuC,GAAXlO,EAAa,GAAU3+E,SAASgtF,WAAWF,GAAmB,GAAU9sF,SAAStsB,KAAKo5G,IAClHxpC,EAASh3E,KAAK,2BAA2BgN,OAAOuzG,GAC5ClO,GAAYr7B,EAASh3E,KAAK,cAAcoC,OAAQ,CAChD,IAAIu+G,EAAe,CAAC5/E,YAAci2C,EAASh3E,KAAK,cAAc,IAI9D,GAHA2gH,EAAajP,SAAW16B,EAASr3E,KAAK,aACtCghH,EAAa5mC,OAASlkF,EACtB8qH,EAAal/E,kBAAoBu1C,EAASr3E,KAAK,iBAC3C4X,EAAM+4C,WAAanwD,KAAK0sB,QAAQlqB,IAAI,OAChCxC,KAAK8zB,MAAMtxB,IAAI,eACXxC,KAAKi1B,QAAQ0+C,UACb6sC,EAAaC,eAAiBzgH,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAClDg+G,EAAaC,eAKdD,EAAaC,eAAiB,GAAOv8G,eAAes8G,EAAaC,iBAJ7DzgH,KAAK0sB,QAAQvnB,eACbq7G,EAAaC,eAAiBzgH,KAAK0sB,QAAQvnB,eAC9Cq7G,EAAaC,iBAAmBD,EAAaC,eAAiB,GAAO76G,iBAAiB5F,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBAKvHg+G,EAAaC,iBACdD,EAAaC,eAAiBzgH,KAAK0sB,QAAQvnB,mBAE/C,GAAInF,KAAK8zB,MAAMtxB,IAAI,cAAe,CAC9B,IAAIo3E,EAAS/C,EAASh3E,KAAK,8BAA8ByC,OACzDk+G,EAAaC,eAAiB,GAAO76G,iBAAiBg0E,EAC1D,KACK,CACD,IAAIA,EAAS55E,KAAK0sB,QAAQ4I,SAAS9yB,IAAIq0E,EAASn3E,KAAK,UAAYm3E,EAASh3E,KAAK,8BAA8ByC,QAAUu0E,EAASn3E,KAAK,QACrI8gH,EAAaC,eAAiB7mC,EAAOz0E,cAAgB,GAAOS,iBAAiBg0E,EACjF,CAEC55E,KAAK8zB,MAAM3Q,aAAaxM,QAAO3E,GAAiBA,EAAIsvB,oBAAsBk/E,EAAal/E,oBAAqBr/B,OAK7Gi9G,EAAoBhoG,EAAQ1U,IAAI,sBAJhCxC,KAAK8zB,MAAM3Q,aAAenjB,KAAK8zB,MAAM3Q,aAAao2D,OAAO,CAACinC,IAAexrF,MAAK,CAACngB,EAAG8+C,IAAM9+C,EAAE08F,SAAW59C,EAAE49C,WACvG,gBAAsB,uBAA2B,CAACiP,IAClDtB,EAAoBA,EAAkB3lC,OAAO,CAACinC,KAKlD,IAAI/9E,EAAQo0C,EAASh3E,KAAK,cAAcA,KAAK,uBAAuBL,KAAK,QACzEq3E,EAASh3E,KAAK,cAAcA,KAAK,aAAaK,YAAY,eAC1DsgH,EAAa5/E,YAAYC,cAAgB7gC,KAAKkjC,mBAAmB2zC,EAASh3E,KAAK,cAAcA,KAAK,mBAAmB,GAAI4iC,GAEzH,WAAe,sBACnB,IAER,CAGJ,GAAIs8E,GAA0B,gBAAf3nG,EAAMvT,KAAwB,CACzC,IAAI6c,EAAS,GAQb,GAPA,GAAE8nB,GAAO1oC,MAAK,CAAC4C,EAAKg+G,KAChBA,EAAMC,UAAYj+G,EACd,GAAMiS,YAAY+rG,EAAM78G,QACxB68G,EAAMh/E,QAAU,CAACg/E,EAAMrqG,IAAMqqG,EAAMr2E,WAAWjjC,IAAMrD,OAAOC,IAAIC,gBAAgB,IAAIL,KAAK,CAAC88G,MACzFhgG,EAAOtf,KAAKs/G,GAChB,IAEAhgG,EAAOze,OAAS,EAChB,GAAIye,EAAOze,OAAS,EAAG,CACnB,IAAIy8G,EACJ,GAAIh+F,EAAOze,OAAS,EAAG,CACnB,IAAI3C,EAAW,iBACXq/G,EAAgBj+F,EAAOze,OAAS,EACpCy8G,EAAsB,GAAE,GAAUnrF,SAASj0B,GAAU,CAACohB,YACtDg+F,EAAoB7+G,KAAK,eAAeM,SAAS,iBACjDu+G,EAAoB7+G,KAAK,kBAAkByC,KAAK,IAAMq8G,EAC1D,KACK,CACD,IAAIr/G,EAAW,gBAAkBohB,EAAOze,OACxCy8G,EAAsB,GAAE,GAAUnrF,SAASj0B,GAAU,CAACohB,WAC1D,CACAg+F,EAAoBv+G,SAAS,qBAC7B,GAAE,GAAUozB,SAASqtF,kBAAkBtoF,YAAYomF,EAAoB7+G,KAAK,QAC5Eg3E,EAASh3E,KAAK,kDAAkDu1B,QAAQspF,EAC5E,KAAO,CACH,IAAIkB,EAAY5/G,KAAK6/G,YAAYn/F,EAAO,IACpCo/F,EAAc9/G,KAAK+/G,qBAAqBr/F,EAAO,IAC/CmgG,EAAY,IACZC,EAA2D,IAAf,KAAhC,0BAAwC,KACpDC,EAAYrgG,EAAO,GAAG3b,OACtBi8G,EAAWtgG,EAAO,GAAG5b,MACzBg8G,EAAWA,EAAW,IAAM,IAAMA,EAC9BC,GAAaC,IACTA,EAAWF,IACXC,GAAyBD,EAASE,EAClCA,EAAWF,GAEXC,EAAYF,IACZG,GAAuBH,EAAUE,EACjCA,EAAYF,IAGpBG,EAAWA,GAAsB,IACjCD,EAAYA,GAAwB,IACpC,GAAEjB,GAAa3/G,SAAS,qBACxB,GAAE2/G,GAAatgH,KAAK,sBAAuBkhB,EAAO,GAAGigG,WACrD,GAAEb,GAAax6G,IAAI,CACfR,MAAOk8G,EACPj8G,OAAQg8G,EACR,aAAcF,EACd,YAAaC,IAEjB,GAAEhB,GAAangH,KAAKigH,GACpB,GAAEE,GAAajzG,OAAO,GAAU0mB,SAASqtF,kBACzC/pC,EAASh3E,KAAK,kDAAkDu1B,QAAQ0qF,EAC5E,CAEAt3E,EAAMvmC,OAAS,GACf,GAAEumC,GAAO1oC,MAAK,CAAC4C,EAAKxB,KAChB,GAAIwf,EAAOnL,SAASrU,GAChB,OACJ,IAKIk/G,EALAtnC,EAAa,CACT/5E,KAAMmC,EAAKnC,KACX8E,KAAM3C,EAAK2C,KACX88G,UAAWz/G,EAAKy/G,WAGxB,GAAE32G,OAAO8uE,EAAY,CAACl0E,KAAM,GAAM4Q,YAAYtU,EAAK0D,QACnDw7G,EAA4B,GAAE,GAAU7sF,SAAS0tF,aAAanoC,IAC9DsnC,EAA0BvgH,KAAK,2BAA2BF,KAAK,GAAU4zB,SAASqtF,kBAClF/pC,EAASh3E,KAAK,kDAAkDgN,OAAOuzG,EAA0B,GAG7G,CACA,GAAItB,GACI1lC,EAAUn3E,OAAS,EAAG,CACtB,IACIi/G,EADAC,EAAiB,GAAE9pG,MAAM+hE,GAE7B,GAAE+nC,GAAgBrhH,MAAK,CAAC4C,EAAK+f,KACzB,IAAI49F,EAAe,GAAEhpG,MAAM8pG,EAAez+G,IAC1C,GAAEsH,OAAOq2G,EAAc,CAAEz2G,GAAI,IAAMtN,KAAK+W,SAASrR,SAAS,IAAI+T,OAAO,EAAG,KACpE,6BACAmrG,EAAgC,GAAE,GAAU3tF,SAAS9Q,SAAS49F,IAC9DxpC,EAASh3E,KAAK,8BAA8BL,KAAK,MAAO6gH,EAAate,KACrElrB,EAASh3E,KAAK,8BAA8BL,KAAK,MAAO6gH,EAAave,KACrEjrB,EAASh3E,KAAK,8BAA8BgN,OAAOq0G,GACnDlhH,KAAK05G,mBAAmB7iC,EAAUwpC,GAClCrgH,KAAKw5G,eAAe3iC,IAEpBA,EAASh3E,KAAK,qBAAqBgN,OAAO,sCAAwCwzG,EAAave,IAAM,IAAMue,EAAate,IAAM,KAAO,aAAiB,iDAAmD,OAC7M,GAER,CAGJ,GAAIT,GAAmBA,EAAgBr/F,OAAS,EAAG,CAC/C,IACIm/G,EADAC,EAAwB,GAAEhqG,MAAMiqF,GAEhCggB,EAAqB,IAAItuG,OAAO,yIAA0I,KAC1KuuG,EAAmB,iJACvB,GAAEF,GAAuBvhH,MAAK,CAAC4C,EAAK8+G,KAChC,IAAInB,EAAe,GAAEhpG,MAAMgqG,EAAsB3+G,IACjD29G,EAAa1iE,OAAS0iE,EAAa7qH,IAAM,GAAMof,iBAAiByrG,EAAa7qH,KAAO6qH,EAAaoB,UAC7FpB,EAAale,gBAAkB,gBAAgBrtF,KAAKurG,EAAale,iBACjEke,EAAale,cAAgB,UAAYke,EAAale,eACtDkf,EAAsB3+G,GAAKmB,MAAQw9G,EAAsB3+G,GAAKmB,KAAK0R,SAAS,UAAY8rG,EAAsB3+G,GAAKi2D,YAAc2oD,EAAmBxsG,KAAKusG,EAAsB3+G,GAAKi2D,YAAc4oD,EAAiBzsG,KAAKusG,EAAsB3+G,GAAKi2D,aACnP0nD,EAAa1nD,UAAY0oD,EAAsB3+G,GAAKi2D,UAAU92D,QAAQ,cAAe,IACrFw+G,EAAazB,UAAW,EACxB0C,EAAmBxsG,KAAKusG,EAAsB3+G,GAAKi2D,aAAe0nD,EAAal/E,SAAW,WAC1FogF,EAAiBzsG,KAAKusG,EAAsB3+G,GAAKi2D,aAAe0nD,EAAal/E,SAAW,UAExFk/E,EAAazB,UAAW,EAC5BwC,EAAsC,GAAE,GAAU7tF,SAASmuF,oBAAoBrB,IAC/ExpC,EAASh3E,KAAK,oCAAoCgN,OAAOu0G,EAAoC,IAEjGphH,KAAKu5G,cAAc1iC,EAAU3/D,EACjC,CAEA,GAAIA,EAAQ1U,IAAI,aAAc,CAC1B,IAAI+W,EAAY,GAAMD,iBAAiBpC,EAAQ1U,IAAI,cACnDq0E,EAASh3E,KAAK,qBAAqBgN,OAAO0M,EAC9C,CAiMA,GA/LInC,EAAMwoF,oBAAsBxoF,EAAM+sE,kBAClC,GAAE/sE,EAAMwoF,mBAAmB9/F,MAAK,CAAC4C,EAAKq6G,KAClCra,EAAYqa,EAAQ/jB,aACpB5hF,EAAQ,GAAEC,MAAM0lG,EAAQzlG,YACxB,IAEIqqG,EAFAC,EAAmBjjB,QAAQvnF,EAAMsJ,QAAUtJ,EAAMsJ,OAAOze,QACxD4/G,EAAiBD,EAAmB,GAAEvqG,MAAMD,EAAMsJ,aAAUtF,EAE5D0mG,EAAmBnjB,QAAQvnF,EAAMomD,QAAUpmD,EAAMomD,OAAOv7D,QACxD8/G,EAAkBpjB,QAAQvnF,EAAMoxB,OAASpxB,EAAMoxB,MAAMvmC,QACrD+/G,EAAsBrjB,QAAQvnF,EAAMgiE,WAAahiE,EAAMgiE,UAAUn3E,QAEjEu3E,EAAYpiE,EAAMoiE,WAAa,CAAC,EAChCwlC,EAAYxlC,EAAUluC,OACtBg7C,EAAa9M,EAAU8M,WACvBthC,EAAO,GAAMlvC,YAAY0jE,EAAUx0B,MACnC2gC,EAAQnM,EAAUmM,MAClBs5B,EAAUzlC,EAAU5vE,GACpBumD,EAAW/4C,EAAM+4C,UACpB+oB,IAAwBA,EAAsB9hE,EAAM8hE,qBAEjDxjF,EADAgtG,EACW,GAAQha,UAAUlP,EAAU70B,UAAY3kD,KAAK0sB,QAAQlqB,IAAI,SAEzD,GAAQkmF,UAAUlP,EAAU70B,UAAY60B,EAAU5vE,IAAM5J,KAAK0sB,QAAQ4I,SAASsjC,aAAa,CAAC1gD,IAAKi4C,IAAW3tD,IAAI,SAG/H,IAAIy/G,EAAkB,GAAMhrG,kBAAkB8lG,GAE1CmF,EAAa,GAAE,GAAU3uF,SAAS0tE,UAAU,GAAEj3F,OAAOoN,EAAO,CAC5DoD,KAAM,GAAgBpD,EAAMoD,MAC5B4kG,WAAY,GAAM1qG,wBAAwB0C,EAAMoD,MAChD9kB,SAAUA,EACVspH,UAAWA,EACX14B,WAAYA,EACZpvE,QAAS+qG,EACTlD,QAASgD,EACTjD,YAAakD,EACb9P,SA1BAiQ,UA2BAn9D,KAAMA,EACN2gC,MAAOA,EACPs5B,QAASA,MAOb,GAJIj/G,KAAK8zB,MAAMtxB,IAAI,UAAYq0E,EAAS7pE,SAAS,eAC7Ck1G,EAAWr1G,OAAOgqE,EAASlpD,SAAS,eAAetW,SAGnD0lG,EAAQv6G,IAAI,qBAAsB,CAClC,IAAI4/G,EAAqBrF,EAAQv6G,IAAI,qBAAqBP,OACtDogH,EAAoB,qBAAyB,2BAA4BD,GAC7EF,EAAWv0F,SAAS,aAAaA,SAAS,mBAAmB9gB,OAAO,GAAE,OAAQ,CAACi/D,MAAO,8BAA+B,gBAAiB10D,EAAMy8C,YAAYvxD,KAAK+/G,GACjK,CAEA,GAAIT,IACIC,EAAe5/G,OAAS,IACxBy8G,EAAsB1+G,KAAKy+G,gBAAgBrnG,GAC3C8qG,EAAWriH,KAAK,2BAA2BF,KAAK++G,IAC/C,wBAA8BwD,EAAWriH,KAAK,yBAAyBqyB,QAAQrlB,OAAO,GAAE,sCAAsCvK,KAAK,aAAiB,iCAE5H,GAAzBu/G,EAAe5/G,QAAa,CAC5B0/G,EAAoB3hH,KAAK6/G,YAAYgC,EAAe,IACpDF,EAAkBr6G,OAAS,KACvBtH,KAAKk5G,YAAYriC,EAAS,EAE9B,IAAIyrC,EAAsBtiH,KAAK+/G,qBAAqB8B,EAAe,IACnEK,EAAWriH,KAAK,2BAA2BF,KAAK,GAAE2iH,GAAqB3iH,KAAKgiH,KAC3E,wBAA8BO,EAAWriH,KAAK,gBAAgBgN,OAAO,GAAE,sCAAsCvK,KAAK,aAAiB,+BACxI,CAEJ,GAAIw/G,EAAkB,CAClB,IAAI9B,EAAgBhgH,KAAKigH,uBACzBiC,EAAWriH,KAAK,2BAA2BgN,OAAOmzG,GAClD5oG,EAAMomD,OAAOnrD,SAAQ,CAACnX,EAAOwH,KACzB,IAAIw9G,EAAWlgH,KAAKmgH,YAAYjlH,EAAOwH,GACvCw/G,EAAWriH,KAAK,kBAAkBgN,OAAOqzG,EAAS,IAEtDlgH,KAAKq5G,YAAYxiC,EAAU3/D,GAC3BgrG,EAAWhiH,YAAY,uBAC3B,CAEA,GAAI6hH,GACI3qG,EAAMoxB,MAAMvmC,OAAS,EAAG,CACxB,IACIm+G,EADAtnC,EAAa,GAAEzhE,MAAMD,EAAMoxB,OAE/B,GAAEswC,GAAYh5E,MAAK,CAAC4C,EAAKuE,KACrB,IAAIo5G,EAAe,GAAEhpG,MAAMyhE,EAAWp2E,IAClCuE,EAAKpD,OAEDquG,IADAjrG,EAAKixD,OAKW,IAAtB4gB,EAAW72E,QAAiBiwG,IAAcjrG,EAAKlI,KAAO,aAAiB,kBACzE,IAAIuhH,EAAiB,GAAMrrG,eAAehO,EAAKpD,MAI/C,GAHA,GAAEmG,OAAOq2G,EAAc,CAAEnO,SAAUA,EAAUt8F,SAAU,GAAMD,gBAAgB0qG,EAAazqG,UAAWu+E,SAAUmsB,EAAgB17G,KAAM,GAAM4Q,YAAY6qG,EAAaz7G,QACpKw7G,EAAuC,GAAXlO,EAAa,GAAU3+E,SAASgtF,WAAWF,GAAmB,GAAU9sF,SAAStsB,KAAKo5G,IAClH6B,EAAWriH,KAAK,2BAA2BgN,OAAOuzG,GAC9ClO,GAAYgQ,EAAWriH,KAAK,cAAcoC,OAAQ,CAClD,IAAIu+G,EAAe,CAAC5/E,YAAcshF,EAAWriH,KAAK,cAAc,IAIhE,GAHA2gH,EAAajP,SAAW16B,EAASr3E,KAAK,aACtCghH,EAAa5mC,OAASlkF,EACtB8qH,EAAal/E,kBAAoBu1C,EAASr3E,KAAK,iBAAmB,IAAM0iH,EAAW1iH,KAAK,iBACpFkjG,EACI1iG,KAAK8zB,MAAMtxB,IAAI,eACXxC,KAAKi1B,QAAQ0+C,UACb6sC,EAAaC,eAAiBzgH,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAClDg+G,EAAaC,eAGdD,EAAaC,eAAiB,GAAOv8G,eAAes8G,EAAaC,gBAFjED,EAAaC,eAAiBzgH,KAAK0sB,QAAQvnB,cAAgB,GAAOS,iBAAiB5F,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAKnHg+G,EAAaC,iBACdD,EAAaC,eAAiBzgH,KAAK0sB,QAAQvnB,mBAC5C,GAAInF,KAAK0sB,QAAQ4I,SAASsjC,aAAa,CAAC1gD,IAAKi4C,IAAY,CAC5D,IAAIl7B,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa,CAAC1gD,IAAKi4C,IACvDqwD,EAAaC,eAAiBxrF,EAAQ9vB,eAAiBnF,KAAK8zB,MAAMtxB,IAAI,cAAgB,GAAOoD,iBAAiBs8G,EAAWriH,KAAK,6BAA6ByC,QAAU,GAAOsD,iBAAiBqvB,GACjM,CACKj1B,KAAK8zB,MAAM3Q,aAAaxM,QAAO3E,GAAiBA,EAAIsvB,oBAAsBk/E,EAAal/E,oBAAqBr/B,OAK7Gi9G,EAAoBhoG,EAAQ1U,IAAI,sBAJhCxC,KAAK8zB,MAAM3Q,aAAenjB,KAAK8zB,MAAM3Q,aAAao2D,OAAO,CAACinC,IAAexrF,MAAK,CAACngB,EAAG8+C,IAAM9+C,EAAE08F,SAAW59C,EAAE49C,WACvG,gBAAsB,uBAA2B,CAACiP,IAClDtB,EAAoBA,EAAkB3lC,OAAO,CAACinC,KAIlD,IAAI/9E,EAAQy/E,EAAWriH,KAAK,cAAcA,KAAK,uBAAuBL,KAAK,QAC3E0iH,EAAWriH,KAAK,cAAcA,KAAK,aAAaK,YAAY,eAC5DsgH,EAAa5/E,YAAYC,cAAgB7gC,KAAKkjC,mBAAmBg/E,EAAWriH,KAAK,cAAcA,KAAK,mBAAmB,GAAI4iC,GAC3H,WAAe,sBACnB,IAER,CAEJ,GAAIu/E,GACI5qG,EAAMgiE,UAAUn3E,OAAS,EAAG,CAC5B,IACIi/G,EADAC,EAAiB,GAAE9pG,MAAMD,EAAMgiE,WAEnC,GAAE+nC,GAAgBrhH,MAAK,CAAC4C,EAAK+f,KACzB,IAAI49F,EAAe,GAAEhpG,MAAM8pG,EAAez+G,IAC1C,GAAEsH,OAAOq2G,EAAc,CAAEz2G,GAAI,OAAStN,KAAK+W,SAASrR,SAAS,IAAI+T,OAAO,EAAG,KACvE,6BACAmrG,EAAgC,GAAE,GAAU3tF,SAAS9Q,SAAS49F,IAC9D6B,EAAWriH,KAAK,8BAA8BL,KAAK,MAAO6gH,EAAate,KACvEmgB,EAAWriH,KAAK,8BAA8BL,KAAK,MAAO6gH,EAAave,KACvEogB,EAAWriH,KAAK,8BAA8BgN,OAAOq0G,GACrDlhH,KAAK05G,mBAAmB7iC,EAAUwpC,IAElC6B,EAAWriH,KAAK,qBAAqBgN,OAAO,sCAAwCwzG,EAAave,IAAM,IAAMue,EAAate,IAAM,KAAO,aAAiB,iDAAmD,OAC/M,GAER,CAEJ,GAAI3qF,EAAMkqF,iBAAmBlqF,EAAMkqF,gBAAgBr/F,OAAS,EAAG,CAC3D,IACIm/G,EADAC,EAAwB,GAAEhqG,MAAMD,EAAMkqF,iBAEtCggB,EAAqB,IAAItuG,OAAO,yIAA0I,KAC1KuuG,EAAmB,iJACvB,GAAEF,GAAuBvhH,MAAK,CAAC4C,EAAK8+G,KAChC,IAAInB,EAAe,GAAEhpG,MAAMgqG,EAAsB3+G,IACjD29G,EAAa1iE,OAAS0iE,EAAa7qH,IAAM,GAAMof,iBAAiByrG,EAAa7qH,KAAO6qH,EAAaoB,UAC7FpB,EAAale,gBAAkB,gBAAgBrtF,KAAKurG,EAAale,iBACjEke,EAAale,cAAgB,UAAYke,EAAale,eACtDkf,EAAsB3+G,GAAKmB,MAAQw9G,EAAsB3+G,GAAKmB,KAAK0R,SAAS,UAAY8rG,EAAsB3+G,GAAKi2D,YAAc2oD,EAAmBxsG,KAAKusG,EAAsB3+G,GAAKi2D,YAAc4oD,EAAiBzsG,KAAKusG,EAAsB3+G,GAAKi2D,aACnP0nD,EAAa1nD,UAAY0oD,EAAsB3+G,GAAKi2D,UAAU92D,QAAQ,cAAe,IACrFw+G,EAAazB,UAAW,EACxB0C,EAAmBxsG,KAAKusG,EAAsB3+G,GAAKi2D,aAAe0nD,EAAal/E,SAAW,WAC1FogF,EAAiBzsG,KAAKusG,EAAsB3+G,GAAKi2D,aAAe0nD,EAAal/E,SAAW,UAExFk/E,EAAazB,UAAW,EAC5BwC,EAAsC,GAAE,GAAU7tF,SAASmuF,oBAAoBrB,IAC/E6B,EAAWriH,KAAK,oCAAoCgN,OAAOu0G,EAAoC,IAEnGphH,KAAKu5G,cAAc1iC,EAAU3/D,EACjC,CACA,GAAI6lG,EAAQv6G,IAAI,aAAc,CAC1B,IAAI+W,EAAY,GAAMD,iBAAiByjG,EAAQv6G,IAAI,cACnD0/G,EAAWriH,KAAK,qBAAqBgN,OAAO0M,EAChD,CACAs9D,EAASlpD,SAAS,aAAa1rB,OAAS40E,EAASlpD,SAAS,aAAaA,SAAS,mBAAmB9gB,OAAOq1G,GAAcrrC,EAASlpD,SAAS,mBAAmB9gB,OAAOq1G,EAAW,IAEnLliH,KAAK6uB,kBACD7uB,KAAK8zB,MAAMtxB,IAAI,UAAYq0E,EAAS7pE,SAAS,eAC7C6pE,EAASlpD,SAAS,eAAezc,UAIrC2lE,EAASh3E,KAAK,mBAAmBqR,UAEjCkG,EAAMmI,WAAavf,KAAK8zB,MAAMtxB,IAAI,cAAgB02E,IAClDl5E,KAAK68G,cAAc3lG,EAASgiE,GAG5B9hE,EAAM+sE,iBAAkB,CACxB,IAAIvP,EAAW,GAEf,GADAA,EAAYx9D,EAAuB,kBAAK,qBAAyB,2BAA4BA,EAAMwoF,kBAAkB39F,QAAW,GAC5H88G,GAAWF,GAAYr2E,EAAMvmC,QAAUye,EAAOze,OAC9C2yE,EAAW,aAAiB,yCAA0C,CAACpsC,EAAMvmC,OAASye,EAAOze,aAC5F,CACD,GAAI88G,GAA2B,GAAhBv2E,EAAMvmC,SAAgBumC,EAAM,GAAG0pE,UAAY1pE,EAAM,GAAG0vB,OAC/D0c,EAAW,GAAG,aAAiB,qBAAuB,GAAMj/D,gBAAgB6yB,EAAM,GAAG5yB,eACpF,GAAImpG,GAAWv2E,EAAMvmC,OAAS,EAAG,CAClC,IAAIkwG,EAAa,EACjB3pE,EAAMn2B,SAAS6oE,IACXi3B,GAAcpwG,OAAOm5E,EAAEt2E,KAAI,IAE/BgwE,EAAW,qBAAyB,mCAAoCpsC,EAAMvmC,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,GACrJ,CACA,GAAI0M,GAAYn+F,EAAOze,OAAS,EAAG,CAC/B,IAAIkwG,EAAa,EACjBzxF,EAAOrO,SAAS6oE,IACZi3B,GAAcpwG,OAAOm5E,EAAEt2E,KAAI,IAE/BgwE,EAAW,qBAAyB,oCAAqCl0D,EAAOze,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,GACvJ,CACI2M,GAAe1lC,EAAUn3E,OAAS,IAClC2yE,EAAW,qBAAyB,uCAAwCwE,EAAUn3E,QAE9F,CACI2yE,GACAiC,EAASh3E,KAAK,qBAAqByC,KAAKsyE,EAChD,CAEA,OADA19D,EAAQ6I,IAAI,oBAAqBm/F,GAC1BroC,EAAS9kE,aAAa,CAAC1P,SAAU,qBAAsBkgH,aAAa,IAAOhhH,QAAQ,qBAAsB,CAACE,SAAU,MAAOC,WAAY,GAAMA,WAAWP,KAASI,QAAQ,yBAA0B,CAACG,WAAY,IAC3N,EAEA8gH,iBAAkB,SAAUthD,GACxB,IAAIuhD,EAAW,GAAOvhD,GAAM/sD,QAAQ,OACpC,OAAO,GAAE,qDAAuDnU,KAAK8zB,MAAMtxB,IAAI,aAAgB,iBAAmBxC,KAAK0xG,OAAO3xG,IAAIP,KAAK,eAAiBQ,KAAK0xG,OAAO3xG,IAAIP,KAAK,uBAAyB,IAAO,IAAM,eAC/MijH,EAAS1uG,OAAO,KAAK,KAAKC,GAAYyuG,GAAU,SACxD,EAEAnJ,oBAAqB,SAAU9hC,EAAM5xD,GACjC,IAAI1O,EAAUlX,KAAK8zB,MAAMP,SAAS/wB,IAAIg1E,EAAK93E,KAAK,cAAgBkmB,EAC5D88F,EAAc,GACdC,EAAazrG,GAAWA,EAAQ1U,IAAI,WAAa0U,EAAQ1U,IAAI,UAAUP,OAASiV,EAAQ1U,IAAI,UAAY,KAC5Gg1E,EAAK33E,KAAK,uCAAuCC,MAAK,CAAC4C,EAAKxB,KACxD,GAAI,GAAEA,GAAM8L,SAAS,WACjB,OACJ,IACImzB,EADAyiF,EAAkB5iH,KAAK8zB,MAAM3Q,aAAaxM,QAAO3E,GAAiBA,EAAI6wG,aAAengH,GAAOsP,EAAIsvB,oBAAsBk2C,EAAKh4E,KAAK,mBAEpI,GAAIojH,EAAgB3gH,OAChBk+B,EAASyiF,EAAgB,GACzBF,EAAcA,EAAYnpC,OAAO,CAACp5C,QAC/B,CAQH,GAPAA,EAAS,CAACqB,UAAW,GAAEtgC,GAAM1B,KAAK,aAClC2gC,EAAOgB,SAAW,GAAEjgC,GAAM1B,KAAK,iBAC/B2gC,EAAO2iF,SAAW,GAAE5hH,GAAM1B,KAAK,qBAC/B2gC,EAAOoxE,SAAW/5B,EAAKh4E,KAAK,aAC5B2gC,EAAOhL,UAAYn1B,KAAK8zB,MAAMc,UAC9BuL,EAAO0iF,WAAangH,EACpBy9B,EAAOmB,kBAAoBk2C,EAAKh4E,KAAK,iBACjCmjH,GAAcA,EAAW1gH,QAAUk+B,EAAO2iF,UAAY,EAAG,CACzD,IAAIC,EAAaJ,EAAWxiF,EAAO2iF,UAC/BC,EAAW1sG,MACX8pB,EAAO9pB,IAAM0sG,EAAW1sG,IACxB0sG,EAAWl/G,OAASs8B,EAAOt8B,KAAOk/G,EAAWl/G,MAErD,CACA7D,KAAK8zB,MAAM3Q,aAAenjB,KAAK8zB,MAAM3Q,aAAao2D,OAAO,CAACp5C,IAASnL,MAAK,CAACngB,EAAG8+C,IAAM9+C,EAAE08F,SAAW59C,EAAE49C,WACjG,gBAAsB,uBAA2B,CAACpxE,IAClDuiF,EAAcA,EAAYnpC,OAAO,CAACp5C,GACtC,CACA,GAAEj/B,GAAM1B,KAAK,kBAAmB2gC,EAAO0iF,YACvC,GAAE3hH,GAAMf,SAAS,WACb,wBAA8B,oCAC1B,gDAAsDggC,EAAO0iF,YAAc,uDAA6D1iF,EAAOmB,mBAC/I,GAAEpgC,GAAMf,SAAS,wBAAwB,IAErDuiH,EAAYzgH,QAAUiV,GAAWA,EAAQ6I,IAAI,oBAAqB2iG,GAClE,WAAe,sBACnB,EAEAM,kBAAmB,SAAUxrC,GACzBA,EAAKt3E,YAAY,cACrB,EAEA01G,kBAAmB,SAAUp+B,GACzB,GAAIA,EAAKxqE,SAAS,UACd,OACJwqE,EAAKr3E,SAAS,eACd,IAAInF,EAAOwxC,EAAUgrC,EAAK33E,KAAK,6BAE/B,GADe23E,EAAK93E,KAAK,UACRM,KAAK0sB,QAAQlqB,IAAI,OAC1BxC,KAAK8zB,MAAMtxB,IAAI,eACXxC,KAAKi1B,QAAQ0+C,UACb34E,EAAQgF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAC5BxH,EAKDA,EAAQ,GAAOkJ,eAAelJ,IAJ1BgF,KAAK0sB,QAAQvnB,eACbnK,EAAQgF,KAAK0sB,QAAQvnB,eACxBnK,IAAUA,EAAQ,GAAO4K,iBAAiB5F,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBAK3ExH,IACDA,EAAQgF,KAAK0sB,QAAQvnB,mBAEzB,GAAInF,KAAK8zB,MAAMtxB,IAAI,cAAe,CAC9B,IAAIo3E,EAASpC,EAAK33E,KAAK,8BAA8ByC,OACrDtH,EAAQ,GAAO4K,iBAAiBg0E,EACpC,KACK,CACD,IAAIA,EAAS55E,KAAK0sB,QAAQ4I,SAAS9yB,IAAIg1E,EAAK93E,KAAK,UAAY83E,EAAK33E,KAAK,8BAA8ByC,QAAUk1E,EAAK93E,KAAK,QACzH1E,EAAQ4+E,EAAOz0E,cAAgB,GAAOS,iBAAiBg0E,EAC3D,CAGJ,GADAptC,EAAQvnC,UAAUjK,EAAOgF,KAAK88B,aAC1B06C,EAAK93E,KAAK,WACN83E,EAAK93E,KAAK,WACV,GAAIM,KAAK0sB,QAAQ8kD,cAAc6U,cAAc7O,EAAK93E,KAAK,aAAe83E,EAAK93E,KAAK,WAAcM,KAAK0sB,QAAQ8kD,cAAc4U,aAAa5O,EAAK93E,KAAK,YAC5I8sC,EAAQvnC,UAAUjF,KAAK0sB,QAAQ8kD,cAAc4U,aAAa5O,EAAK93E,KAAK,YAAaM,KAAK88B,iBAErF,CACD,IAAImmF,EAAiBjjH,KAAKk2G,iBAAiBr2G,MAAKgV,GAAKA,EAAErN,MAAQgwE,EAAK93E,KAAK,YACzE,GAAIujH,EACAA,EAAe/hF,IAAI3Y,MAAM26F,IACrB12E,EAAQvnC,UAAUi+G,EAAaljH,KAAK88B,aACpC,IAAIp6B,EAAM1C,KAAKk2G,iBAAiB9xG,QAAQ6+G,GACpCvgH,GAAO,GACP1C,KAAKk2G,iBAAiBj8D,OAAOv3C,EAAK,EAAE,SAG5C,GAAG80E,EAAK93E,KAAK,cACT8sC,EAAQvnC,UAAUuyE,EAAK93E,KAAK,cAAeM,KAAK88B,aAChD98B,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB/O,EAAK93E,KAAK,WAAY83E,EAAK93E,KAAK,UAAW83E,EAAK93E,KAAK,mBAGxG,CACI,IAAI2Q,EAAO,GAAQ6lB,GAAGy2B,mBAAqB,IAAM6qB,EAAK93E,KAAK,WAAYwhC,EAAM,IAAI,GAAE75B,SACnFrH,KAAKk2G,iBAAiB90G,KAAK,CAACoG,KAAMgwE,EAAK93E,KAAK,UAAWwhC,IAAKA,IAC5DlhC,KAAKi1B,QAAQ83B,UAAUyqB,EAAK93E,KAAK,UAAW2Q,GAAO6yG,IAC/C12E,EAAQvnC,UAAUi+G,EAAaljH,KAAK88B,aACpC98B,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB/O,EAAK93E,KAAK,WAAY83E,EAAK93E,KAAK,UAAWwjH,GAC1FhiF,EAAI74B,QAAQ66G,EAAY,GAGhC,CAER,CAGZ,EAEAC,qBAAsB,SAAU3rC,GAC5BA,EAAKt3E,YAAY,cACrB,EAEAkjH,qBAAsB,SAAUC,GAC5B,IAAKA,EAAaphH,OACd,OACJohH,EAAaljH,SAAS,eACtB,IAAInF,EACAwxC,EAAU62E,EAAaxjH,KAAK,kBAC5BswD,EAAWkzD,EAAa3jH,KAAK,QAC7BgjG,EAAavyC,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OAC3CyyB,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAI2tD,IAAaA,EAkBrD,GAjBIuyC,GACI1iG,KAAK8zB,MAAMtxB,IAAI,eACXxC,KAAKi1B,QAAQ0+C,UACb34E,EAAQgF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAI7BxH,EAHCA,EAGO,GAAOkJ,eAAelJ,GAFtBgF,KAAK0sB,QAAQvnB,cAAgB,GAAOS,iBAAiB5F,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAK7FxH,IACDA,EAAQgF,KAAK0sB,QAAQvnB,eAClB8vB,IACPj6B,EAAQi6B,EAAQ9vB,eAAiBnF,KAAK8zB,MAAMtxB,IAAI,cAAgB,GAAOoD,iBAAiBy9G,EAAaxjH,KAAK,6BAA6ByC,QAAU,GAAOsD,iBAAiBqvB,KAE7KuX,EAAQvnC,UAAUjK,EAAOgF,KAAK88B,aAC9B0P,EAAQtsC,YAAY,UAChBmjH,EAAa3jH,KAAK,WACd2jH,EAAa3jH,KAAK,WAClB,GAAKM,KAAK0sB,QAAQ8kD,cAAc6U,cAAcg9B,EAAa3jH,KAAK,aAAe2jH,EAAa3jH,KAAK,WAAeM,KAAK0sB,QAAQ8kD,cAAc4U,aAAai9B,EAAa3jH,KAAK,YACtK8sC,EAAQvnC,UAAUjF,KAAK0sB,QAAQ8kD,cAAc4U,aAAai9B,EAAa3jH,KAAK,YAAaM,KAAK88B,kBAG9F,GAAGumF,EAAa3jH,KAAK,cACjB8sC,EAAQvnC,UAAUo+G,EAAa3jH,KAAK,cAAeM,KAAK88B,aACxD98B,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB88B,EAAa3jH,KAAK,WAAY2jH,EAAa3jH,KAAK,UAAW2jH,EAAa3jH,KAAK,mBAE3H,CACD,IAAI2Q,EAAO,GAAQ6lB,GAAGy2B,mBAAqB,IAAM02D,EAAa3jH,KAAK,WACnEM,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ83B,UAAUs2D,EAAa3jH,KAAK,UAAW2Q,GAAO6yG,IACvE12E,EAAQvnC,UAAUi+G,EAAaljH,KAAK88B,aACpC98B,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB88B,EAAa3jH,KAAK,WAAY2jH,EAAa3jH,KAAK,UAAWwjH,EAAY,GAE9H,CAIhB,EAEA1O,oBAAqB,SAAU8O,EAAU19F,GACrC,IAAI4xD,EAAO,GAAE8rC,GACb9rC,EAAKmG,KAAK,uBAAuBzsE,SAC7BsmE,EAAK33E,KAAK,yBAAyBoC,QACnCjC,KAAKs5G,oBAAoB9hC,EAAM5xD,GAEnC,IAAI29F,EAAY/rC,EAAKlnD,QAAQ,iBAAiB4B,QAC9C,IAAKqxF,EAAUthH,OAMX,OALAjC,KAAKwiH,iBAAiBhrC,EAAK93E,KAAK,SAASq0B,aAAayjD,GACtDx3E,KAAK41G,kBAAkBp+B,QACvBA,EAAK33E,KAAK,gBAAgBC,MAAK,CAAC4C,EAAK8gH,KACjCxjH,KAAKojH,qBAAqB,GAAEI,GAAc,IAIlD,GAAIhsC,EAAK33E,KAAK,cAAcoC,OAExB,YADAjC,KAAK41G,kBAAkBp+B,GAG3B,IAAIisC,EAAYF,EAAUv2G,SAAS,UAC/B02G,EAAkBlsC,EAAK93E,KAAK,UAAY6jH,EAAU7jH,KAAK,QACvDikH,EAAe,GAAOnsC,EAAK93E,KAAK,SAASyU,QAAQ,OACxCC,OAAO,GAAOmvG,EAAU7jH,KAAK,SAASyU,QAAQ,QAS3D,GARKwvG,EAGMF,IAAcC,GAAkBH,EAAUv2G,SAAS,cAC1DhN,KAAK41G,kBAAkBp+B,GAEvBx3E,KAAKgjH,kBAAkBxrC,IALvBx3E,KAAKwiH,iBAAiBhrC,EAAK93E,KAAK,SAASq0B,aAAayjD,GACtDx3E,KAAK41G,kBAAkBp+B,IAMvBA,EAAKxqE,SAAS,cAAe,CACVwqE,EAAK33E,KAAK,gBAChBC,MAAK,CAAC4C,EAAK8gH,KACpB,IAAII,EAAgB,GAAEJ,GAClBK,EAAqBnhH,EAAM,EAAKkhH,EAAcjmC,OAAS,GAG3D,GAFAimC,EAAc72G,YAAY,YAAa42G,GAAgBE,EAAkB5hH,QACzE2hH,EAAc1jH,YAAY,aACtB2jH,EAAkB5hH,OAAQ,CACE2hH,EAAclkH,KAAK,UAAYmkH,EAAkBnkH,KAAK,QAE9EM,KAAKmjH,qBAAqBS,GAE1B5jH,KAAKojH,qBAAqBQ,EAElC,MACI5jH,KAAK41G,kBAAkBp+B,GACvBx3E,KAAKojH,qBAAqBQ,EAC9B,GAER,CACJ,EAEAnH,cAAe,SAAUvlG,GACrB,GAAI,4BAAmC,oCAA0ClX,KAAK8zB,MAAMtxB,IAAI,eAAmB,iCAAuCxC,KAAK8zB,MAAMtxB,IAAI,eAAiB,CACtL,IAAIshH,EAEAA,EADC9jH,KAAK8zB,MAAMtxB,IAAI,eAAiB,oCAA4CxC,KAAK8zB,MAAMtxB,IAAI,eAAiB,oCACzF0U,EAAQ4oC,UAER,aAAiB,qCACtB,qBAAyB,CACxCl+C,MAAO5B,KAAKi1B,QAAQzyB,IAAI,QACxBF,KAAMwhH,EACNhqH,KAAMkG,KAAKi1B,QAAQ9vB,aAAa3P,MAEvBuuH,QAAU,KACnBhgH,OAAOgL,QACP/O,KAAK8zB,MAAMvoB,QAAQ,OAAO,CAElC,CACA,GAAI,yBAA+B,iCAAuCvL,KAAK8zB,MAAMtxB,IAAI,cAAe,CACpG,IAAIgkC,EAEAA,EADAtvB,EAAQ1U,IAAI,gBACJ,kCAEA,mCAEZ,aAAiBgkC,GAAO,EAAO,iCACnC,MACK,GAAI,2BAAiC,oCAA0CxmC,KAAK8zB,MAAMtxB,IAAI,cAAe,CAC9G,IAAIgkC,EAEAA,EADAtvB,EAAQ1U,IAAI,gBACJ,kCAEA,qCAEZ,aAAiBgkC,GAAO,EAAO,iCACnC,CACA,6BACJ,EAEEm2E,iBAAkB,WACK,qBAAyB,CACxC/6G,MAAO5B,KAAKi1B,QAAQzyB,IAAI,QACxBF,KAAM,aAAiB,mBACvBxI,KAAMkG,KAAKi1B,QAAQ9vB,aAAa3P,MAEvBuuH,QAAU,KACnBhgH,OAAOgL,QACP/O,KAAK8zB,MAAMvoB,QAAQ,OAAO,EAE9B,IAAIi7B,EAAQ,+BACZ,aAAiBA,EACrB,EAEFw9E,YAAa,SAAU9sG,GACnB,IAAIhI,EAAOgI,EAAQ1U,IAAI,WACnByhH,EAAc,GACdxsG,EAAkB,GAClBmoF,EAAoB1oF,EAAQ1U,IAAI,qBAChCqxD,EAAY38C,EAAQ1U,IAAI,aACxB0rG,EAASh3F,EAAQ1U,IAAI,SACrB8+F,EAAkBpqF,EAAQ1U,IAAI,mBAC9Bq9C,EAAS23B,GAAK,CACVjhE,GAAIvW,KAAK8zB,MAAMtxB,IAAI,OACnBqB,KAAM,OACN+F,GAAIskG,IA0EZ,GAvEItO,IACAqkB,EAAc,GACd,GAAErkB,GAAmB9/F,MAAK,CAAC4C,EAAKq6G,KAC5B,IAAImH,EAAiB3gH,MAAMqP,KAAK,GAAEf,OAAO,GAAE4B,SAASzT,KAAK0xG,OAAOyS,kBAAkB,CAACpH,GAAU,QAAWr6G,IAAQk9F,EAAkB39F,OAAS,GAAMiN,EAAKjN,OAAe,KAAL,KAC5JmiH,EAAYH,EAAYhiH,OACxBoiH,EAAM,GAAEtH,EAAQv6G,IAAI,QAAQ6U,QAC5BitG,EAAUL,EAAY1qC,OAAO2qC,GAAgBjiH,OAC5CoiH,EAAI7kH,KAAK,SACV6kH,EAAI7kH,KAAK,OAAQQ,KAAK0sB,QAAQlqB,IAAI,QACtCq9C,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClB10E,KAAM,UACN29F,MAAO4iB,EACPptG,IAAKstG,IAEJnxG,EAAE,YAAa,CAAC8iB,MAAO,uBACvB9iB,EAAE,QAAS,CACR8iB,MAAO,iBACP+C,MAAO+jF,EAAQv6G,IAAI,UACpB6zB,KAAKC,MAAM+tF,EAAI,IAAIhuF,KAAKA,KAAKA,KACpC4tF,EAAcA,EAAY1qC,OAAO2qC,GACjCzsG,EAAgBrW,KAAK,CACjB2V,MAAOqtG,EACPptG,IAAKstG,EACLzgH,KAAM,WACR,IAENqL,EAAO,GAAEuE,SAASwwG,EAAY7kH,KAAK,KAAO8P,GAG1CgI,EAAQ1U,IAAI,aAAe0U,EAAQ1U,IAAI,YAAYP,QACnDiV,EAAQ1U,IAAI,YAAY6P,SAASyF,IAC7B,IAAIysG,EAAgB,CAACtuF,MAAO,GAAQC,GAAGurE,QACvC3pF,EAAQG,QAAUssG,EAAcl0G,KAAO,GAAQ6lB,GAAGy4C,YAClD9uB,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClBipB,MAAO1pF,EAAQf,MAAQktG,EAAYhiH,OACnC+U,IAAKc,EAAQd,IAAMitG,EAAYhiH,OAC/B4B,KAAM,eAELsP,EAAE,UAAWoxG,GAAep/F,EAAErN,EAAQrK,QAAQ4oB,KAAKA,IAAI,IAIhEnf,EAAQ1U,IAAI,YACZ0U,EAAQ1U,IAAI,WAAW6P,SAAS+F,IAC5BynC,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClBipB,MAAOppF,EAAOrB,MAAQktG,EAAYhiH,OAClC+U,IAAKoB,EAAOpB,IAAMitG,EAAYhiH,OAC9B4B,KAAM,eAEV,IAAK,IAAInB,KAAO0V,EAAOA,OACnBynC,EAAO1sC,EAAEiF,EAAOA,OAAO1V,GAAM,CAACuzB,MAAO,GAAQC,GAAGurE,SAASprE,KAE7DwpB,EAAOxpB,IAAI,IAIfnf,EAAQ1U,IAAI,gBACZ0U,EAAQ1U,IAAI,eAAe6P,SAASmyG,IAChC3kE,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClBipB,MAAOgjB,EAAWztG,MAAQktG,EAAYhiH,OACtC+U,IAAKwtG,EAAWxtG,IAAMitG,EAAYhiH,OAClC4B,KAAM,eAELsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGurE,SAASprE,KAAKA,IAAI,IAIlC,eAAvBnf,EAAQ1U,IAAI,QAA0B,CACtC,IAAIgmC,EAAQtxB,EAAQ1U,IAAI,UAAY,GAChCke,EAASxJ,EAAQ1U,IAAI,WAAa,GAClCg7D,EAAStmD,EAAQ1U,IAAI,WAAa,GAClCiiH,EAAYj8E,EAAM+wC,OAAO74D,GAC7B+jG,EAAYA,EAAUlrC,OAAO/b,GAC7BinD,EAAUpyG,SAAQ,CAACpL,EAAMvE,KACZ,IAARA,IAAewM,GAAQ,MACxB+0G,EAAch9G,EAAKy6B,QAAQ,IAAOh/B,GAAO+hH,EAAUxiH,OAAS,EAAK,KAAO,IACxE,IAAI8V,EAAYxU,MAAMqP,KAAK,GAAEf,OAAO3C,IAAOjN,OACvC+V,EAAUD,EAAYksG,EAAYhiH,OACtC49C,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClB10E,KAAM,UACN29F,MAAOzpF,EACPf,IAAKgB,IAET/Q,EAAKixD,OAASrY,EAAO1sC,EAAE,gBAAiB,CAAC8iB,MAAO,GAAQC,GAAG0iD,gBAC3D/4B,EAAO1sC,EAAE,eAAgB,CAAC8iB,MAAO,GAAQC,GAAGyiD,QAAQxlE,EAAE,QACtDlM,EAAKpD,MAAQg8C,EAAO1sC,EAAE,cAAcgS,EAAEle,EAAKpD,MAAMwyB,KACjDpvB,EAAS,IAAK44C,EAAO1sC,EAAE,cAAcgS,EAAEle,EAAS,IAAGovB,KACnDpvB,EAAKqiC,WAAauW,EAAO1sC,EAAE,iBAAiBgS,EAAEle,EAAKqiC,WAAWjT,KAC9DpvB,EAAKy9G,SAAW7kE,EAAO1sC,EAAE,WAAWgS,EAAEle,EAAKy9G,SAASruF,KACpDpvB,EAAKlI,MAAQ8gD,EAAO1sC,EAAE,QAAQgS,EAAEle,EAAKlI,MAAMs3B,KAC3CpvB,EAAKrC,MAAQi7C,EAAO1sC,EAAE,QAAQgS,EAAEle,EAAKrC,MAAMyxB,KAC3CpvB,EAAKlC,QAAU86C,EAAO1sC,EAAE,UAAUgS,EAAEle,EAAKlC,QAAQsxB,KACjDpvB,EAAKnC,OAAS+6C,EAAO1sC,EAAE,SAASgS,EAAEle,EAAKnC,OAAOuxB,KAC9CpvB,EAAK2O,UAAYiqC,EAAO1sC,EAAE,YAAYgS,EAAEle,EAAK2O,UAAUygB,KACvDpvB,EAAKg+C,aAAepF,EAAO1sC,EAAE,QAAQgS,EAAEle,EAAKg+C,aAAa5uB,KACzDwpB,EAAOxpB,KAAKljB,EAAE,WACdlM,EAAKy6B,QAAQrvB,SAASsyG,IACd19G,EAAKoP,MACLsuG,EAAIA,EAAE9iH,QAAQ,gBAAiB,UAAY,IAAM,GAAMma,oBAAoB/U,EAAKoP,MACpFwpC,EAAO1sC,EAAE,OAAOgS,EAAEw/F,GAAGtuF,IAAI,IAE7BwpB,EAAOxpB,KAAKA,KAAKA,KACjBpvB,EAAKixD,OAASrY,EAAOxpB,KACrBnnB,GAAQ+0G,EACRxsG,EAAgBrW,KAAK,CAAC2V,MAAOgB,EAAWf,IAAKgB,GAAS,IAE1Dd,EAAQ6I,IAAI,CAAClc,KAAM,QACvB,CA0CA,GAxCIy9F,GAAmBA,EAAgBr/F,QACnCq/F,EAAgBjvF,SAAQ,CAACuyG,EAAgBliH,MACP,IAA1BkiH,EAAe7tG,QACf6tG,EAAe7tG,MAAQxT,MAAMqP,KAAK,GAAEf,OAAO3C,IAAOjN,OAClDiN,EAAOA,EAAO,KAAO01G,EAAeziB,cACpCyiB,EAAe5tG,IAAM4tG,EAAe7tG,MAAQ6tG,EAAeziB,cAAclgG,OAAS,GAEtF49C,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClBipB,MAAOojB,EAAe7tG,MACtBC,IAAK4tG,EAAe5tG,IACpBnT,KAAM,YACPsP,EAAE,MAAO,CAAE8iB,MAAO,GAAQC,GAAG8rE,IAAKxsG,IAAKovH,EAAeziB,gBACzDyiB,EAAersD,MAAQ1Y,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,eAAgB5hF,QAAS2hF,EAAersD,OAAOliC,KACnGuuF,EAAe/gH,MAAQg8C,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,UAAW5hF,QAAS2hF,EAAe/gH,OAAOwyB,KAC9FuuF,EAAehjH,OAASi+C,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,WAAY5hF,QAAS2hF,EAAehjH,QAAQy0B,KACjGuuF,EAAepvH,KAAOqqD,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,SAAU5hF,QAAS2hF,EAAepvH,MAAM6gC,KAC3FuuF,EAAe3/D,aAAepF,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,iBAAkB5hF,QAAS2hF,EAAe3/D,cAAc5uB,KACnHuuF,EAAe5pH,OAAS6kD,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,WAAY5hF,QAAS2hF,EAAe5pH,QAAQq7B,KACjGuuF,EAAelsD,aAAe7Y,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,iBAAkB5hF,QAAS2hF,EAAelsD,cAAcriC,KACnHuuF,EAAensD,cAAgB5Y,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,kBAAmB5hF,QAAS2hF,EAAensD,eAAepiC,KACtHuuF,EAAejsD,WAAa9Y,EAAO1sC,EAAE,OAAQ,CAAE0xG,SAAU,eAAgB5hF,QAAS2hF,EAAejsD,YAAYtiC,KAC7GwpB,EAAOxpB,KAAKA,KACZ5e,EAAgBrW,KAAK,CAAC2V,MAAO6tG,EAAe7tG,MAAOC,IAAK4tG,EAAe5tG,KAAK,IAIpFS,EAAgBxV,QAAUiV,EAAQ6I,IAAI,CAACtI,gBAAiBA,IAExDzX,KAAK0sB,QAAQm+B,kBAAkBzpD,KAAK,CAAC0jH,aAAc9kH,KAAK8zB,MAAMlqB,GAAIiqD,UAAWA,EAAW//C,UAAW,GAAO3K,QAE1G+N,EAAQ6I,IAAI,mBAAoB7Q,GAChCA,GAAQ2wC,EAAO1sC,EAAE,QAAQgS,EAAEjW,GAAMmnB,KACjCwpB,EAAO1sC,EAAE,YAAYiE,MAAM,CAAC,MAAS,GAAQ8e,GAAGs4C,eAAen4C,KAC1DljB,EAAE,YAAa,CAACvJ,GAAIskG,EAAQj4E,MAAO,mBAAmBI,KAC3Dnf,EAAQ6I,IAAI,CAACmrC,IAAK,GAAErL,EAAOjvB,QAAQvZ,QAAQ,KACvCH,EAAQ1U,IAAI,WAAa,GAAUxM,YACnC6pD,EAAO1sC,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG49B,WAAWz9B,KAChDnf,EAAQ6I,IAAI,QAAS,GAAU9pB,cAE/B4pD,EAAO79C,WAAWC,QAAU,GAAU5F,gBAGtC,OAFA,GAAM0P,QAAQgC,MAAM,aAAiB,mCACrC/N,KAAK2/F,cAAczoF,GAGvB,GAAIA,EAAQ1U,IAAI,cAAgBxC,KAAK0sB,QAAQ4mC,MAuBzC,OAtBAzT,EAAO1sC,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAG6uF,MAAM5xG,EAAE,WAC5C,GAAE0sC,EAAOjvB,QAAQjD,SAAS,QAAQ1rB,SAClC49C,EAAOvpB,MAAM,GAAEupB,EAAOjvB,QAAQjD,SAAS,QAAQ,IAAIvW,MAAM,CAAC,MAAS,GAAQ8e,GAAG8uF,SAAS3uF,KACvF,GAAEwpB,EAAOjvB,QAAQjD,SAAS,QAAQ7iB,UAElC,GAAE+0C,EAAOjvB,QAAQjD,SAAS,aAAa1rB,SACvC,GAAE49C,EAAOjvB,QAAQjD,SAAS,aAAa7tB,MAAK,CAAC4C,EAAK81E,KAC9C34B,EAAOvpB,MAAM,GAAEupB,EAAOjvB,QAAQjD,SAAS,aAAajrB,IAAM2zB,IAAG,IAEjE,GAAEwpB,EAAOjvB,QAAQjD,SAAS,aAAa7iB,UAE3C+0C,EAAOxpB,KAAKljB,EAAE,QAAQgS,EAAE,IAAIjjB,OAAO,KAAKmB,MAAM,EAAG/G,KAAKoI,MAAuB,IAAhBpI,KAAK+W,SAAkB,KAAKgjB,KACzFwpB,EAAO1sC,EAAE,OAAQ,CAAC+E,IAAKlY,KAAK0sB,QAAQlqB,IAAI,SAAS6zB,KAAKA,UACtDr2B,KAAK0sB,QAAQ4mC,MAAMl0C,QAAQpf,KAAKi1B,QAAS4qB,GAAQxlC,MAAMuL,IAC/CA,IACAi6B,EAASj6B,EAAI1O,QACbA,EAAQ6I,IAAI,UAAW6F,EAAI27E,YAC3BrqF,EAAQ6I,IAAI,CAACmrC,IAAK,GAAErL,EAAOjvB,QAAQvZ,QAAQ,MAE/C,IAAI4tG,EAAwB,GAAO97G,MACnCnJ,KAAK0sB,QAAQm/B,SAAShM,EAAQ7/C,KAAKklH,YAAY58G,KAAKtI,KAAMilH,EAAuB/tG,GAAS,IAG3F,CACH,IAAI+tG,EAAwB,GAAO97G,MACnCnJ,KAAK0sB,QAAQm/B,SAAShM,EAAQ7/C,KAAKklH,YAAY58G,KAAKtI,KAAMilH,EAAuB/tG,GACrF,CACJ,EAEEguG,YAAa,SAAUD,EAAuB/tG,GAG1C,GAFAlX,KAAK0xG,OAAOgB,cAAgB,EAC5B1yG,KAAK0xG,OAAOiB,wBACP3yG,KAAK8zB,MAAMtxB,IAAI,eAAkBxC,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG49B,UAe7E,CACD,IAAuBqxD,EAAnBC,EAAgB,EACdplH,KAAK0sB,QAAQK,WAAWw+B,gBAAkBvrD,KAAK0sB,QAAQK,WAAWy+B,eAAiBxrD,KAAK0sB,QAAQE,QAAQpqB,IAAI,cAAgBxC,KAAK0sB,QAAQE,QAAQpqB,IAAI,kBAAmD,YAA/BxC,KAAK0sB,QAAQlqB,IAAI,YAC5L2iH,GAAmB,GACnBnlH,KAAK0sB,QAAQE,QAAQpqB,IAAI,kBACzB2iH,GAAmB,GACvBnlH,KAAK0sB,QAAQE,QAAQ+U,KAAK,uBAAuB,KAC7C,GAAQ5b,IAAI,uBACZ,GAAQA,IAAI/lB,KAAK0sB,QAAQE,QAAQpqB,IAAI,iBACrC2iH,GAAmB,CAAI,IAE3B,IAAIjN,EAAYz0F,aAAY,KACxB,GAAQsC,IAAIo/F,GACRC,GAAiB,IAAMluG,EAAQ1U,IAAI,WAAa,GAAUvM,cAAgBkvH,IAC1E,GAAQp/F,IAAI,2BACZ/lB,KAAK0sB,QAAQK,WAAWgjD,KAAKA,KAAK/vE,KAAK0sB,QAAQlqB,IAAI,QAAQ,SAAW,KAClE,GAAQujB,IAAI,kCACZ,GAAQA,IAAI7O,GACZlX,KAAK0sB,QAAQK,WAAWqhC,YAAY,GACrC,OAEDpuD,KAAK0sB,QAAQsnC,sBAAwBixD,GAA2BG,EAAgB,IAAQluG,EAAQ1U,IAAI,WAAa,GAAUvM,aAAiBmvH,EAAgB,MAASD,GACvKjuG,EAAQ6I,IAAI,QAAS,GAAU/pB,WAC/B83C,cAAcoqE,IAEThhG,EAAQ1U,IAAI,WAAa,GAAUvM,aACxC63C,cAAcoqE,GAClBkN,GAAiB,EAAE,GACpB,IACP,MA3CIh7G,YAAW,KACFpK,KAAK0sB,QAAQsnC,sBAAwBixD,GAA2B/tG,EAAQ1U,IAAI,WAAa,GAAUvM,YACpGihB,EAAQ6I,IAAI,QAAS,GAAU7pB,WAE/B8J,KAAK0sB,QAAQK,WAAWgjD,KAAKA,KAAK/vE,KAAK0sB,QAAQlqB,IAAI,QAAQ,KACtD0U,EAAQ1U,IAAI,WAAa,GAAUvM,aAAgBihB,EAAQ6I,IAAI,QAAS,GAAU7pB,SAAS,IAEhGkU,YAAW,KACFpK,KAAK0sB,QAAQsnC,sBAAwBixD,GAA2B/tG,EAAQ1U,IAAI,WAAa,GAAUvM,aACpGihB,EAAQ6I,IAAI,QAAS,GAAU/pB,UAAU,GAC9C,KACP,GACD,IAgCX,EAEFgoF,kBAAmB,SAAUzd,GACzB,sBAA4B,+BAE5BA,GADAA,EAAaA,GAAc,CAAC,GACJrlE,MAAQ,QAAU,QAC1C,IAAI+7D,EAAa,KACjB,qBAA2B,IAAI,iBAAqB,CAACA,WAAYA,EAAYmtC,WAA2B,UAAf7jC,GAAyB,CAACtrC,QAASj1B,KAAKi1B,UACjI,iCACA,qCAAyC,CAAC1O,OAAQ,GAAU3wB,qBAC5D,WAAe,uBACnB,EAEAyvH,qBAAsB,SAAUz/F,GAC5B,IAAIg6E,EAAoB,KAWxB,OAVI,GAAEh6E,GAAKpjB,IAAI,uBACXo9F,EAAoB,GAAEh6E,GAAKpjB,IAAI,qBAC3BxC,KAAK0sB,QAAQ44F,mBAAmBlhH,QAAQw7F,GAAqB,IAC7DA,EAAoB5/F,KAAKqlH,qBAAqBzlB,KAGtDh6E,EAAM5lB,KAAK0sB,QAAQ44F,mBAAmBv0E,OAAO,GAAE/mC,OAAO,CAClDw2F,cAAc,EACdZ,kBAAmBA,GACpBh6E,EAAItO,YAEX,EAEAiuG,SAAU,SAAUjjH,EAAMkjH,EAAcxmH,GAEpCA,EAAUA,GAAW,CAAC,EACtB,IAAIoY,EAAQ,CACR+4C,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B0U,QAAS5U,EACTiV,SAAUvY,EAAQuY,SAClBG,YAAa1Y,EAAQ0Y,YACrBF,QAASxY,EAAQymH,kBACjBj9E,MAAOxpC,EAAQ0mH,eACfpkB,gBAAiBtiG,EAAQsiG,gBACzB/hF,UAAWvf,KAAK8zB,MAAMtxB,IAAI,aAC1BmjH,gBAAgB,EAChB/lB,kBAAmB,MACpBgmB,EAAY,IAAI,GAAEv+G,SACrBu+G,EAAUr9F,MAAK,KAGX,GAFKi9F,EAAavjH,QAAYmV,EAAMoxB,OAASpxB,EAAMoxB,MAAMvmC,QAAamV,EAAMkqF,iBAAmBlqF,EAAMkqF,gBAAgBr/F,QAAkC,KAAvBK,EAAKH,gBACjIiV,EAAM4rF,WAAaz/F,MAAMqP,KAAKtQ,GAAML,QACpCujH,EAAavjH,OAAQ,CACrB,IAAI4jH,EAAmB,GAQvB,GAPA,GAAE/lH,KAAK0lH,GAAe5/F,IACd5lB,KAAK0sB,QAAQ44F,mBAAmBlhH,QAAQwhB,GAAO,IAC/CA,EAAM5lB,KAAKqlH,qBAAqBz/F,IAEpCigG,EAAiBzkH,KAAKwkB,EAAI,IAE9BxO,EAAMwoF,kBAAoBimB,EACtBzuG,EAAMoxB,OAASpxB,EAAMoxB,MAAMvmC,OAC3BmV,EAAMvT,KAAO,cACb7D,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,eAAiB71D,EAAM0uG,eAAiB9lH,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,aAAazqE,IAAI,SACjJxC,KAAK8zB,MAAMP,SAASwd,OAAO35B,OACxB,CACH,IAAIF,EAAUlX,KAAK8zB,MAAMP,SAASwd,OAAO35B,GACzCpX,KAAKgkH,YAAY9sG,EACrB,CACJ,MAAO,GAAIE,EAAMoxB,OAASpxB,EAAMoxB,MAAMvmC,OAClCmV,EAAMvT,KAAO,cACb7D,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,eAAiB71D,EAAM0uG,eAAiB9lH,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,aAAazqE,IAAI,SACjJxC,KAAK8zB,MAAMP,SAASwd,OAAO35B,QACxB,GAAI9U,GAAS8U,EAAMkqF,iBAAmBlqF,EAAMkqF,gBAAgBr/F,OAAS,CACxE,IAAIiV,EAAUlX,KAAK8zB,MAAMP,SAASwd,OAAO35B,GACzCpX,KAAKgkH,YAAY9sG,EACrB,CACIlX,KAAKi1B,SAAWj1B,KAAK8zB,MAAMtxB,IAAI,cAAgBxC,KAAK8zB,MAAMuI,YAC1DnlB,QAAQ6I,IAAI,SAAS,GACrB/f,KAAKghF,KAAK07B,cACV18G,KAAK8zB,MAAM/T,IAAI,YAAY,GAC3B,sCAEA/f,KAAK8zB,MAAMtxB,IAAI,eAAiB,kBAAsB,WAAWwK,SAAS,YACtEhN,KAAKi1B,SAAYj1B,KAAK8zB,MAAMuI,WAAcr8B,KAAK8zB,MAAMtxB,IAAI,aACzD,sCACR,4BACA,2BAA+B,IAG/BxC,KAAKi1B,SAAWj1B,KAAKi1B,QAAQzyB,IAAI,gBAAkBxC,KAAKi1B,QAAQ0+C,QAChE3zE,KAAKi1B,QAAQo+C,WAAU,KACnBuyC,EAAUv9G,SAAS,IAGvBu9G,EAAUv9G,SAClB,EAEA09G,eAAgB,SAAUv9E,EAAOw9E,GAC7B,IAAIC,EAAY,GAAIC,EAAe,EAInC,GAHIlmH,KAAK8zB,MAAMs0D,eACPpoF,KAAK8zB,MAAMs0D,cAAc1oF,KAAK8C,IAAI,YAClCxC,KAAK8zB,MAAMs0D,cAAcvK,WAC7Br1C,EAAMvmC,OAAS,MAAQjC,KAAK0sB,QAAQlqB,IAAI,mBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBAE7E,YADA,GAAMuJ,QAAQgC,MAAM,aAAiB,2BAGzC,IAAIo4G,EAAsBnmH,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,aACtE,KAAKk5C,GAAyBnmH,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBAEhF,YADA,GAAMuJ,QAAQgC,MAAM,aAAiB,gCAAiC,CAAC/N,KAAK0sB,QAAQixB,UAGxF,IAAIyoE,EAAe,IAAI,GAAE/+G,SACzB++G,EAAa79F,MAAM7oB,IACXsmH,EACAhmH,KAAK8zB,MAAMP,SAASwd,OAAO,CACvBof,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3BqB,KAAM,cACN2kC,MAAO9oC,EACP6f,UAAWvf,KAAK8zB,MAAMtxB,IAAI,aAC1BsjH,eAAgBK,EAAoB3jH,IAAI,QACxC0U,QAAS,GACTyuG,gBAAgB,IAGpB3lH,KAAK0xG,OAAO2U,gBAAgB3mH,EAAK,IAEzC,GAAE8oC,GAAO1oC,MAAK,CAAC4C,EAAKuE,KAChB,GAAI,GAAM0N,YAAY1N,EAAKpD,MAAO,CAC9B,IAAImE,EAAS,IAAIC,WAAcnX,EAAW,IAAI,GAAEuW,SAChD,GAAOwB,cAAc5B,GAAMshB,MAAMvtB,IAC7BgN,EAAOO,cAAcvN,GACrBlK,EAASy3B,MAAM7oB,IACPA,IACA1E,EAAM+J,OAASrF,EAAKqF,OACpB/J,EAAM8J,MAAQpF,EAAKoF,OAEnBpF,EAAK4mH,eACLL,EAAU7kH,KAAK1B,EAAK4mH,gBAEpBL,EAAU7kH,KAAKpG,GACnBkrH,IACIA,IAAiB19E,EAAMvmC,QACvBmkH,EAAa/9G,QAAQ49G,EAAU,GACrC,IAENj+G,EAAOV,OAAUwK,IACb,GAAI9R,KAAK8zB,MAAMtxB,IAAI,aACfxC,KAAKumH,YAAYz0G,EAAErE,OAAOvF,QAAQmS,MAAMkF,IACpC,IAAIlJ,EAAMkJ,EAAUE,QAChB+mG,EAAW,IAAIx9G,KAAK,CAACuW,EAAUhB,SAAU,KAAO1c,QAAQ,KAAM,IAAK,CAACgC,KAAMoD,EAAKpD,OAEnF,GADA2iH,EAASnwG,IAAMA,EACO,kBAAlBmwG,EAAS3iH,KACT/S,EAASuX,QAAQ,CAACi+G,eAAgBE,EAASnwG,IAAKA,QAC7C,CACH,IAAIg0B,EAAa,IAAIljC,MACrBkjC,EAAW/iC,OAAS,WAChB,IAAIvC,EAAS/E,KAAK+E,OACdD,EAAQ9E,KAAK8E,MACjB0hH,EAASn8E,WAAaA,EACtBv5C,EAASuX,QAAQ,CAACtD,OAAQA,EAAQD,MAAOA,EAAOwhH,eAAgBE,EAAUnwG,IAAKA,GACnF,EACAg0B,EAAWjjC,IAAM0K,EAAErE,OAAOvF,MAC9B,UAGJ,GAAkB,kBAAdjB,EAAKpD,KACL/S,EAASuX,QAAQ,CAAC,OACf,CACH,IAAIgiC,EAAa,IAAIljC,MACrBkjC,EAAW/iC,OAAS,WAChB,IAAIvC,EAAS/E,KAAK+E,OACdD,EAAQ9E,KAAK8E,MACjBhU,EAASuX,QAAQ,CAACtD,OAAQA,EAAQD,MAAOA,GAC7C,EACAulC,EAAWjjC,IAAM0K,EAAErE,OAAOvF,MAC9B,CACJ,CAER,MAEI,GAAIlI,KAAK8zB,MAAMtxB,IAAI,aAAc,CAC7B,IAAIwF,EAAS,IAAIC,WACjBD,EAAOV,OAAUwK,IACb9R,KAAKumH,YAAYz0G,EAAErE,OAAOvF,QAAQmS,MAAMkF,IACpC,IAAIlJ,EAAMkJ,EAAUE,QAChB6mG,EAAiB,IAAIt9G,KAAK,CAACuW,EAAUhB,SAAU,KAAO1c,QAAQ,KAAM,IAAK,CAACgC,KAAMoD,EAAKpD,OACzFoD,EAAKixD,QAAUouD,EAAepuD,OAAQ,GACtCjxD,EAAK2O,WAAa0wG,EAAe1wG,SAAW3O,EAAK2O,UACjD0wG,EAAejwG,IAAMA,EACrB4vG,EAAU7kH,KAAKklH,GACfJ,IACIA,IAAiB19E,EAAMvmC,QACvBmkH,EAAa/9G,QAAQ49G,EAAU,GACrC,EAENj+G,EAAOO,cAActB,EACzB,MACIg/G,EAAU7kH,KAAK6F,GACfi/G,IACIA,IAAiB19E,EAAMvmC,QACvBmkH,EAAa/9G,QAAQ49G,EAEjC,GAER,EAEAzJ,gBAAiB,SAAUtlG,EAAS2/D,GAChCA,EAASt1E,QAAQ,yBAA0B,CAACG,WAAY,KACxDm1E,EAASh3E,KAAK,kBAAkBivB,OAChC+nD,EAASh3E,KAAK,WAAWivB,OACzB+nD,EAASh3E,KAAK,aAAa6uB,OAC3BmoD,EAASh3E,KAAK,iCAAiCK,YAAY,aAAaC,SAAS,aACjF02E,EAASh3E,KAAK,iCAAiCK,YAAY,UAC3D22E,EAASh3E,KAAK,wCAAwCM,SAAS,UAC/D02E,EAASh3E,KAAK,yBAAyBM,SAAS,YAChD,IAAIujF,EAAc,EAClB,GAAExsE,EAAQ1U,IAAI,UAAU1C,MAAK,CAAC4C,EAAKuE,KAC/B,IAAIy8F,EAAW,IAAI16F,KAAK,CAAC/B,GAAOA,EAAKlI,MACrC2kG,EAASrtF,YAAeqtF,EAASrtF,IACjC,IAAI0f,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIW,EAAQ1U,IAAI,oBAClC2Q,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAG+2C,cAChC95D,EAAE,YAAYgS,EAAEu+E,EAAS3kG,MAAMs3B,KAC/BljB,EAAE,QAAQgS,EAAEu+E,EAAS9+F,MAAMyxB,KAC3BljB,EAAE,gBAAgBgS,EAAEu+E,EAAS7/F,MAAMwyB,KACxCvlC,EAAW,IAAI,GAAEuW,SAAYikB,EAAOtrB,KACxCA,KAAK0sB,QAAQiK,WAAWZ,GACpB,SAAU7tB,GACN,IAAIu+G,EAAQ,GAAEv+G,GAAQrI,KAAK,eAAe,GAAQq2B,GAAG+2C,iBACrDn8E,EAASuX,QAAQ,CACbq+G,QAASD,EAAM5mH,KAAK,OAAOyC,OAC3BqkH,QAASF,EAAM5mH,KAAK,OAAOyC,QAEnC,IACA,SAAUgmB,GACN,IAAI03B,EAAa,GAAE13B,GAAKzoB,KAAK,0BAA0B,iBAAqB,iBAAiByC,OAC5E,GAAEgmB,GAAKzoB,KAAK,SAASL,KAAK,SAC1CwgD,IAAeA,EAAa,GAAE13B,GAAKzoB,KAAK,cAAcyC,QACvDgpB,EAAKs7F,kBAAkB1vG,EAAS2/D,EAAU72B,EAAY,OAC1D,IAEJ,IAAIilE,EAAwB,GAAO97G,MAAOi8G,EAAgB,GAAIlN,EAAYz0F,aAAY,KAC7EzjB,KAAK0sB,QAAQsnC,sBAAwBixD,GAA2BG,EAAgB,IAAQluG,EAAQ1U,IAAI,WAAa,GAAUvM,aAAiBmvH,EAAgB,IAC7JluG,EAAQ6I,IAAI,QAAS,GAAU/pB,WAC/B83C,cAAcoqE,IAEThhG,EAAQ1U,IAAI,WAAa,GAAUvM,aACxC63C,cAAcoqE,GAClBkN,GAAiB,EAAE,GACpB,KACHt0H,EAASy3B,MAAM7oB,IACXouC,cAAcoqE,GACd,IAAI2O,EAAM,IAAIzgG,eACHywD,EAASh3E,KAAK,aACzBg3E,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,8BAA8Bl1G,OAAM,KAC7Fo7G,EAAIC,OAAO,IAEfD,EAAIE,QAAU,KACV/mH,KAAK2/F,cAAc9oB,EAAS,EAEhCgwC,EAAIG,OAAOC,WAAcjmG,IACrB,IAAIkmG,EAAalmG,EAAMmmG,OAASnmG,EAAMq8C,MACtCwZ,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,2BAA2Br+G,KAAK6a,SAAU,IAAM+pG,GAAe,KAC5HrwC,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,0BAA0Br7G,IAAI,CAAE,mBAA0B,IAAM4hH,EAAc,aAAa,EAE5JL,EAAIv/G,OAASu/G,EAAIr+G,QAAU,WACH,MAAhBxI,KAAKumB,QACLrP,EAAQ1U,IAAI,SAASE,GAAKlN,IAAMkK,EAAKgnH,QACrChjC,IACIA,GAAexsE,EAAQ1U,IAAI,SAASP,QACpCqpB,EAAK87F,eAAelwG,EAAS2/D,IAGjCvrD,EAAKs7F,kBAAkB1vG,EAAS2/D,EAAU72E,KAAKymB,aAAc,OAErE,EACIowD,EAASn3E,KAAK,UACdmnH,EAAIC,SAEJD,EAAI58G,KAAK,MAAOvK,EAAKinH,SAAS,GAC9BE,EAAIhgG,KAAK68E,GACb,GACF,GAEV,EAEA6Y,uBAAwB,SAAUrlG,EAAS2/D,GACvCA,EAASt1E,QAAQ,yBAA0B,CAACG,WAAY,KACxDwV,EAAQ6I,IAAI,QAAS7I,EAAQ1U,IAAI,SAASmU,QAAQqC,GAAgC,MAAXA,KACvE,IAAI0qE,EAAc,EACd2jC,EAAwB,EACxB/7F,EAAOtrB,KACP64G,GAAW,EACXyO,EAAe,GACfC,EAAkBrwG,EAAQ1U,IAAI,SAASP,OAC3C40E,EAASh3E,KAAK,iCAAiCK,YAAY,aAAaC,SAAS,aACjF02E,EAASh3E,KAAK,kBAAkBK,YAAY,iBAC5C22E,EAASh3E,KAAK,iCAAiCK,YAAY,UAC3D22E,EAASh3E,KAAK,wCAAwCM,SAAS,UAC/D02E,EAASh3E,KAAK,yBAAyBM,SAAS,YAChD,GAAE+W,EAAQ1U,IAAI,UAAU1C,MAAK,CAAC4C,EAAKuE,KAC/B,GAAI4xG,EACA,OACA5xG,EAAKoP,YACLpP,EAAO,IAAI+B,KAAK,CAAC/B,GAAOA,EAAKlI,OACjBsX,IAEhB,IAAI4uG,EAAwB,GAAO97G,MAAOi8G,EAAgB,GAAIlN,EAAYz0F,aAAY,KAC7EzjB,KAAK0sB,QAAQsnC,sBAAwBixD,GAA2BG,EAAgB,IAAQluG,EAAQ1U,IAAI,WAAa,GAAUvM,aAAiBmvH,EAAgB,IAC7JluG,EAAQ6I,IAAI,QAAS,GAAU/pB,WAC/B83C,cAAcoqE,IAEThhG,EAAQ1U,IAAI,WAAa,GAAUvM,aACxC63C,cAAcoqE,GAClBkN,GAAiB,EAAE,GACpB,KAECptD,EAAW,IAAIC,SACnBD,EAASnrD,OAAO,OAAQ5F,EAAMA,EAAKlI,MAC/BkI,EAAK2O,UACLoiD,EAASnrD,OAAO,WAAY5F,EAAK2O,UACjC3O,EAAKixD,MACLF,EAASnrD,OAAO,aAAc5F,EAAKpD,KAAO,UAE1Cm0D,EAASnrD,OAAO,aAAc5F,EAAKpD,MACvCiqC,cAAcoqE,GACdhhG,EAAQ1U,IAAI,SAASE,GAAK8kH,YAAa,EACvC,IAAIX,EAAM,IAAIzgG,eACHywD,EAASh3E,KAAK,aACzBgnH,EAAI7uD,SAAWA,EACfsvD,EAAeA,EAAa/tC,OAAO,CAACstC,IACpCA,EAAIY,WAAaH,EAAaljH,QAAQyiH,GACtChwC,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,8BAA8B/1G,IAAI,SAAQ,KACnGy8G,IACIR,EAAIa,aACJb,EAAIC,QAECS,EAAkBF,GAA0B,GAC7CnwG,EAAQ6I,IAAI,QAAS,IACrBuL,EAAKomF,OAAOiW,4BAA4BzwG,GAAS,GACjDoU,EAAKomF,OAAOkW,yBAAyB1wG,GACrCoU,EAAKq0E,cAAc9oB,KAEnBgwC,EAAIgB,cAAe,EACnBhxC,EAASh3E,KAAK,yCAA2CoH,EAAK05G,UAAY,MAAMzvG,SAChF2lE,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,mBAAmBzvG,SAChFgG,EAAQ1U,IAAI,SAASE,GAAO,KAEpC,IAEJmkH,EAAIG,OAAOC,WAAcjmG,IACrB,IAAIkmG,EAAalmG,EAAMmmG,OAASnmG,EAAMq8C,MACtCwZ,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,2BAA2Br+G,KAAK6a,SAAU,IAAM+pG,GAAe,KAC5HrwC,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,0BAA0Br7G,IAAI,CAAE,mBAA0B,IAAM4hH,EAAc,aAAa,EAE5JL,EAAIv/G,OAASu/G,EAAIr+G,QAAUq+G,EAAIE,QAAU,WACrC,GAAoB,MAAhB/mH,KAAKumB,OAAgB,CACrBswD,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,oCAAoCxgH,SAAS,aAAaD,YAAY,aACnI,IAAIuzC,EAAW/sB,KAAKC,MAAM3mB,KAAKyzC,UAO/B,IANAv8B,EAAQ1U,IAAI,SAASE,GAAKkH,GAAK6pC,EAAS7pC,GACxCsN,EAAQ1U,IAAI,SAASE,GAAKu2E,WAAaxlC,EAASwlC,WAC/CxlC,EAASnK,WAAamK,EAASnK,UAAU9zC,MAAS0hB,EAAQ1U,IAAI,SAASE,GAAK4mC,UAAYmK,EAASnK,UAAU9zC,KAC5G0hB,EAAQ1U,IAAI,SAASE,GAAKlN,IAAMi+C,EAASxsC,KACzCy8E,IACA7M,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,MAAMxgH,SAAS,iBACrEmnH,EAAa5jC,IAAgB4jC,EAAa5jC,GAAamkC,cAC1DnkC,IAEAA,GAAexsE,EAAQ1U,IAAI,SAASP,OACpCqpB,EAAK87F,eAAelwG,EAAS2/D,GACtBywC,EAAa5jC,IACpBp4D,EAAKoB,QAAQwqC,wBAAuB,KAC3B2hD,IACDyO,EAAa5jC,GAAaz5E,KAAK,OAAQqhB,EAAKoB,QAAQlqB,IAAI,eAAiB,oBAAoB,GAC7F8kH,EAAa5jC,GAAaokC,iBAAiB,gBAAiB,UAAYx8F,EAAKoB,QAAQlqB,IAAI,kBACzF8kH,EAAa5jC,GAAagkC,cAAe,EACzCJ,EAAa5jC,GAAa78D,KAAKygG,EAAa5jC,GAAa1rB,UAC7D,GAGZ,KAAO,CACH,GAAoB,IAAhBh4D,KAAKumB,QAAgBsyF,EACrB,OACJ,GAAK0O,EAAkBF,GAA0B,GAAqB,IAAhBrnH,KAAKumB,OACvDrP,EAAQ6I,IAAI,QAAS,IACrBuL,EAAKomF,OAAOiW,4BAA4BzwG,GAAS,GACjDoU,EAAKomF,OAAOkW,yBAAyB1wG,GACrCoU,EAAKq0E,cAAc9oB,OAChB,CACH,IAAIkxC,EAAeC,EAEnB,GADA18F,EAAKoB,QAAQ6qC,0BAA0Bv3D,KAAKyzC,UACxB,MAAhBzzC,KAAKumB,OACLwhG,EAAgB/nH,KAAKioH,gBACpB,GAAoB,MAAhBjoH,KAAKumB,QAGV,GAFAwhG,EAAgBrhG,KAAKC,MAAM3mB,KAAKyzC,UAAU1lC,MAC1Ci6G,EAAethG,KAAKC,MAAM3mB,KAAKyzC,UAAUltB,OACrCyhG,GAAgC,KAAhBA,EAWhB,YAVA59G,YAAW,KACPkhB,EAAKoB,QAAQwqC,wBAAuB,KAC3B2hD,IACDyO,EAAa5jC,GAAaz5E,KAAK,OAAQqhB,EAAKoB,QAAQlqB,IAAI,eAAiB,oBAAoB,GAC7F8kH,EAAa5jC,GAAaokC,iBAAiB,gBAAiB,UAAYx8F,EAAKoB,QAAQlqB,IAAI,kBACzF8kH,EAAa5jC,GAAagkC,cAAe,EACzCJ,EAAa5jC,GAAa78D,KAAKygG,EAAa5jC,GAAa1rB,UAC7D,GACF,GACH,UAIc,IAAhBh4D,KAAKumB,SACVswD,EAASh3E,KAAK,yCAA2CoH,EAAK05G,UAAY,MAAMzvG,SAChF2lE,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,mBAAmBzvG,UAIpF,GAFiB,IAAhBlR,KAAKumB,SAAkBrP,EAAQ1U,IAAI,SAASE,GAAO,MACpDghF,IACmB,GAAf1jF,KAAKumB,OACAswD,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,MAAM5lF,QAAQ,gCAAgC94B,QAQ5G40E,EAASh3E,KAAK,uCAAuCyC,KAAKylH,GAC1DlxC,EAASh3E,KAAK,oCAAoCK,YAAY,UAC9D22E,EAASh3E,KAAK,oCAAoC0K,KAAK,QAASw9G,GAChElxC,EAASh3E,KAAK,gDAAgDM,SAAS,UACvE02E,EAASh3E,KAAK,kBAAkBM,SAAS,gBACzC02E,EAASh3E,KAAK,kBAAkByF,IAAI,CAAE,eAAgB,cAZtDuxE,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,2BAA2Br+G,KAAKylH,GAC7FlxC,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,wBAAwBzgH,YAAY,UACjG22E,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,wBAAwBp2G,KAAK,QAASw9G,GACnGlxC,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,oCAAoCxgH,SAAS,UAC1G02E,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,MAAMxgH,SAAS,gBAC5E02E,EAASh3E,KAAK,4BAA8BoH,EAAK05G,UAAY,MAAMr7G,IAAI,CAAE,eAAgB,aAS7F4R,EAAQ1U,IAAI,SAASE,GAAK8kH,YAAa,EACvC3O,GAAW,EACX,GAAEyO,GAAcxnH,MAAK,CAAC4C,EAAKqmC,KACvBA,EAAQ+9E,OAAO,IAEnBx7F,EAAKs7F,kBAAkB1vG,EAAS2/D,EAAUkxC,QAEzC,GAAIrkC,GAAe6jC,EACpBj8F,EAAK87F,eAAelwG,EAAS2/D,OAC1B,CACH,KAAOywC,EAAa5jC,IAAgB4jC,EAAa5jC,GAAamkC,cAC1DnkC,IAEAA,GAAe6jC,EACfj8F,EAAK87F,eAAelwG,EAAS2/D,GAE7BvrD,EAAKoB,QAAQwqC,wBAAuB,KAC3B2hD,IACDyO,EAAa5jC,GAAaz5E,KAAK,OAAQqhB,EAAKoB,QAAQlqB,IAAI,eAAiB,oBAAoB,GAC7F8kH,EAAa5jC,GAAaokC,iBAAiB,gBAAiB,UAAYx8F,EAAKoB,QAAQlqB,IAAI,kBACzF8kH,EAAa5jC,GAAagkC,cAAe,EACzCJ,EAAa5jC,GAAa78D,KAAKygG,EAAa5jC,GAAa1rB,UAC7D,GAGZ,CACJ,CACJ,CACJ,CAAC,IAEDsvD,EAAarlH,SACT40E,EAASn3E,KAAK,UACd4nH,EAAa,GAAGR,QAEhB9mH,KAAK0sB,QAAQwqC,wBAAuB,KAC3B2hD,IACDyO,EAAa,GAAGr9G,KAAK,OAAQjK,KAAK0sB,QAAQlqB,IAAI,eAAiB,oBAAoB,GACnF8kH,EAAa,GAAGQ,iBAAiB,gBAAiB,UAAY9nH,KAAK0sB,QAAQlqB,IAAI,kBAC/E8kH,EAAa,GAAGI,cAAe,EAC/BJ,EAAa,GAAGzgG,KAAKygG,EAAa,GAAGtvD,UACzC,IAKhB,EAEEuuD,YAAapqG,eAAgBlV,GAC3B,aAAa,GAAM6W,IAAIsB,QAAQnY,EACjC,EAEFmgH,eAAgB,SAAUlwG,EAAS2/D,GAC/BA,EAASh3E,KAAK,wCAAwCK,YAAY,UAClE22E,EAASh3E,KAAK,yBAAyBK,YAAY,YACnDgX,EAAQ6I,IAAI,QAAS7I,EAAQ1U,IAAI,SAASmU,QAAQqC,GAAgC,MAAXA,KACvE,IAAIwvB,EAAQtxB,EAAQ1U,IAAI,SACpB8oB,EAAOtrB,KAAMkyG,GAAW,EACxBxxF,EAAS,GAAIwnG,EAAS,GAAI1qD,EAAS,GAgCvC,GA/BKh1B,EAAMvmC,QACPjC,KAAK4mH,kBAAkB1vG,EAAS2/D,GACpC,GAAEruC,GAAO1oC,MAAK,CAAC4C,EAAKg+G,KAChB,IAAIyH,EAAkB,CAClBppH,KAAM2hH,EAAM3hH,KACZ8E,KAAM68G,EAAM78G,KACZe,KAAM87G,EAAM97G,KACZqgD,YAAay7D,EAAMz7D,aAAe,GAClCvjB,QAAS,CAACg/E,EAAMlrH,MAEpBkrH,EAAMrqG,MAAQ8xG,EAAgB9xG,IAAMqqG,EAAMrqG,KAC1CqqG,EAAMxoD,QAAUiwD,EAAgBjwD,OAAQ,GACpCl4D,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBACtD,GAAEwH,OAAOm+G,EAAiB,CAAEv+G,GAAI82G,EAAM92G,GAAI86G,QAAShE,EAAMznC,WAAY3vC,UAAWo3E,EAAMp3E,YAEtF,GAAM30B,YAAY+rG,EAAM78G,OACxB,GAAEmG,OAAOm+G,EAAiB,CAAErjH,MAAO47G,EAAM57G,MAAOC,OAAQ27G,EAAM37G,SAC9D2b,EAAOtf,KAAK+mH,IAEP,GAAMnzG,YAAY0rG,EAAM78G,OAC7B,GAAEmG,OAAOm+G,EAAiB,CAAEvyG,SAAU8qG,EAAM9qG,WAC5C4nD,EAAOp8D,KAAK+mH,KAGZ,GAAEn+G,OAAOm+G,EAAiB,CAAEvyG,SAAU8qG,EAAM9qG,WAC5CsyG,EAAO9mH,KAAK+mH,GAChB,IAEJtxC,EAASh3E,KAAK,sBAAsBqR,SACpC2lE,EAASh3E,KAAK,oBAAoBqR,SAE9BwP,EAAOze,OAAS,EAChB,GAAIye,EAAOze,OAAS,EAAG,CACnB,IAAIy8G,EACJ,GAAIh+F,EAAOze,OAAS,EAAG,CACnB,IAAI3C,EAAW,iBACXq/G,EAAgBj+F,EAAOze,OAAS,GACnC,yBAA+B3C,EAAW,yBAC3Co/G,EAAsB,GAAE,GAAUnrF,SAASj0B,GAAU,CAACohB,YACtDg+F,EAAoB7+G,KAAK,eAAeM,SAAS,iBACjDu+G,EAAoB7+G,KAAK,kBAAkByC,KAAK,IAAMq8G,EAC1D,KACK,CACD,IAAIr/G,EAAW,gBAAkBohB,EAAOze,QACvC,yBAA+B3C,EAAW,uBAAyBohB,EAAOze,QAC3Ey8G,EAAsB,GAAE,GAAUnrF,SAASj0B,GAAU,CAACohB,WAC1D,CACK,wBACDg+F,EAAoB7+G,KAAK,OAAOK,YAAY,sCAAsCC,SAAS,gBAE/F02E,EAAS32E,YAAY,wBACrB22E,EAASh3E,KAAK,2CAA2CqR,SACzD2lE,EAASh3E,KAAK,kDAAkDgN,OAAO6xG,IACtE,wBAA8B7nC,EAASh3E,KAAK,wEAAwEqyB,QAAQrlB,OAAO,GAAE,sCAAsCvK,KAAK,aAAiB,+BACtM,KACK,CACD,IAAI+mC,EAAMrpC,KAAK6/G,YAAYn/F,EAAO,IAC9Bo/F,EAAcx0F,EAAKy0F,qBAAqBr/F,EAAO,IACnD2oB,EAAI/hC,OAAS,KACTtH,KAAKk5G,YAAYriC,EAAS,EAE9BA,EAAS32E,YAAY,wBACrB22E,EAASh3E,KAAK,2CAA2CqR,SACzD2lE,EAASh3E,KAAK,kDAAkDgN,OAAOizG,GACvEjpC,EAASh3E,KAAK,+DAA+DF,KAAK0pC,IACjF,wBAA8BwtC,EAASh3E,KAAK,+DAA+DgN,OAAO,GAAE,sCAAsCvK,KAAK,aAAiB,+BACrL,CAEJ,GAAIk7D,EAAOv7D,OAAS,EAAG,CACnB,IAAI+9G,EAAgBhgH,KAAKigH,uBACzBppC,EAASh3E,KAAK,kDAAkDA,KAAK,mBAAmBqR,SACxF2lE,EAASh3E,KAAK,kDAAkDgN,OAAOmzG,GACvExiD,EAAOnrD,SAAQ,CAACnX,EAAOwH,KACnB,IAAIw9G,EAAWlgH,KAAKmgH,YAAYjlH,EAAOwH,GACvCm0E,EAASh3E,KAAK,kBAAkBgN,OAAOqzG,EAAS,IAEpDlgH,KAAKq5G,YAAYxiC,EAAU3/D,GAC3B2/D,EAAS32E,YAAY,uBACzB,CACIgoH,EAAOjmH,OAAS,IAChB40E,EAAS32E,YAAY,wBACrB,GAAEgoH,GAAQpoH,MAAK,CAAC4C,EAAKxB,KACZwB,GAAQge,EAAOze,SAChB40E,EAASh3E,KAAK,kDAAkDA,KAAK,mBAAmBqR,SACxF2lE,EAASh3E,KAAK,kDAAkDK,YAAY,sBAE5EgB,EAAK2C,OAEDquG,IADAhxG,EAAKg3D,OAKb,IAKIkoD,EALAtnC,EAAa,CACT/5E,KAAMmC,EAAKnC,KACX8E,KAAM3C,EAAK2C,KACX69B,QAASxgC,EAAKwgC,SAGlB4+E,EAAiB,GAAMrrG,eAAe/T,EAAK2C,MAK/C,GAJoB,IAAlBqkH,EAAOjmH,QAAiBiwG,IAAcp5B,EAAW/5E,KAAO,aAAiB,kBAC3E,GAAEiL,OAAO8uE,EAAY,CAACl0E,KAAM,GAAM4Q,YAAYtU,EAAK0D,MAAOstG,SAAUA,EAAUt8F,SAAU,GAAMD,gBAAgBzU,EAAK0U,UAAWu+E,SAAUmsB,IACxIF,EAAuC,GAAXlO,EAAa,GAAU3+E,SAASgtF,WAAWznC,GAAiB,GAAUvlD,SAAStsB,KAAK6xE,IAChHjC,EAASh3E,KAAK,kDAAkDgN,OAAOuzG,GACnElO,GAAYr7B,EAASh3E,KAAK,cAAcoC,OAAQ,CAChD,IAAIu+G,EAAe,CAAC5/E,YAAci2C,EAASh3E,KAAK,cAAc,IAC9D2gH,EAAajP,SAAW16B,EAASr3E,KAAK,aACtCghH,EAAa5mC,OAAS/C,EAASh3E,KAAK,oBAAoByC,OACxDk+G,EAAal/E,kBAAoBu1C,EAASr3E,KAAK,iBAC3CQ,KAAK8zB,MAAMtxB,IAAI,eACXxC,KAAKi1B,QAAQ0+C,UACb6sC,EAAaC,eAAiBzgH,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAClDg+G,EAAaC,eAKdD,EAAaC,eAAiB,GAAOv8G,eAAes8G,EAAaC,iBAJ7DzgH,KAAK0sB,QAAQvnB,eACbq7G,EAAaC,eAAiBzgH,KAAK0sB,QAAQvnB,eAC9Cq7G,EAAaC,iBAAmBD,EAAaC,eAAiB,GAAO76G,iBAAiB5F,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBAKvHg+G,EAAaC,iBACdD,EAAaC,eAAiBzgH,KAAK0sB,QAAQvnB,cAC1CnF,KAAK8zB,MAAM3Q,aAAaxM,QAAO3E,GAAiBA,EAAIsvB,oBAAsBk/E,EAAal/E,oBAAqBr/B,SAC7GjC,KAAK8zB,MAAM3Q,aAAenjB,KAAK8zB,MAAM3Q,aAAao2D,OAAO,CAACinC,IAAexrF,MAAK,CAACngB,EAAG8+C,IAAM9+C,EAAE08F,SAAW59C,EAAE49C,WACvG,gBAAsB,uBAA2B,CAACiP,KAGtD,IAAI/9E,EAAQo0C,EAASh3E,KAAK,cAAcA,KAAK,uBAAuBL,KAAK,QACzEq3E,EAASh3E,KAAK,cAAcA,KAAK,aAAaK,YAAY,eAC1DsgH,EAAa5/E,YAAYC,cAAgB7gC,KAAKkjC,mBAAmB2zC,EAASh3E,KAAK,cAAcA,KAAK,mBAAmB,GAAI4iC,GAEzHvrB,EAAQ6I,IAAI,oBAAqB,CAACygG,IAClC,WAAe,sBACnB,MAGRxgH,KAAKy0G,UAAU59B,GACf3/D,EAAQ6I,IAAI,SAAUW,GACtBxJ,EAAQ6I,IAAI,SAAUy9C,GACtBtmD,EAAQ6I,IAAI,QAASmoG,IAChBhxG,EAAQ1U,IAAI,cAAgBxC,KAAK8zB,MAAMtxB,IAAI,eAAiB0U,EAAQ1U,IAAI,UAAUP,QACnFjC,KAAK68G,cAAc3lG,GAEvBlX,KAAKgkH,YAAY9sG,GACjBlX,KAAKkwB,gBACT,EAEAwuC,YAAa,SAASN,EAAU55B,GAC5B,IAAIvpC,EAAQ6C,WAAWizC,OAAO,CAC1BquB,UAAW56B,EAAM,GACjB66B,cAAc,EACdC,SAAU,EACVv6D,OAAQ,GACRw6D,UAAW,GACXC,YAAa,sBACbC,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,cAAe,YAInB,OAFA3kE,EAAM4kE,KAAKzB,GACXnjE,EAAMkkE,UAAU,IACTlkE,CACX,EAEA4kH,YAAa,SAAS7kH,GAClB,IAAIotH,EAAa,IAAIjhH,MAEjB25G,EAA2D,IAAf,KAAhC,0BAAwC,KAuBxD,OAtBI9lH,EAAM+J,SACNqjH,EAAWrjH,OAAS/J,EAAM+J,QAC1B/J,EAAM8J,QACNsjH,EAAWtjH,MAAQ9J,EAAM8J,OAC7Bg8G,EAAWA,EAAW,IAAM,IAAMA,EAC9B,wBACAsH,EAAWhhH,IAAMpM,EAAM0mC,QAAQ,GAC/B,GAAE0mF,GAAYjoH,SAAS,2BAEvB,GAAEioH,GAAYjoH,SAAS,gBAE3B,GAAEioH,GAAY5oH,KAAK,CAAC,eAAgBxE,EAAM0mC,QAAQ,GAAI9/B,MAAQ5G,EAAMiqD,aAAe,KAC/EmjE,EAAWrjH,QAAUqjH,EAAWtjH,QAC5BsjH,EAAWtjH,MAAQg8G,IACnBsH,EAAWrjH,OAASqjH,EAAWrjH,QAAU+7G,EAASsH,EAAWtjH,OAC7DsjH,EAAWtjH,MAAQg8G,GAEnBsH,EAAWrjH,OAnBH,MAoBRqjH,EAAWtjH,MAAQsjH,EAAWtjH,OApBtB,IAoByCsjH,EAAWrjH,QAC5DqjH,EAAWrjH,OArBH,MAwBTqjH,CACX,EAEAjI,YAAa,SAASjlH,EAAOwH,GACzBxH,EAAMsa,YAAc,GAAMA,YAAYta,EAAM0J,MAC5C,IAAIyjH,EAAc,CAAC7mF,UAAWtmC,EAAMwmC,QAAQ,GAAI4H,UAAWpuC,EAAMouC,UAAWw5E,SAAUpgH,GAEtF,OAD2B,GAAE,GAAU6wB,SAASr4B,MAAMmtH,GAE1D,EAEAtI,qBAAsB,WAClB,OAAO,GAAE,8BAA8B,EAC3C,EAEAE,qBAAsB,WAClB,OAAO,GAAE,gCAAgC,EAC7C,EAEA2G,kBAAmB,SAAU1vG,EAAS2/D,EAAU72B,EAAYn8C,EAAMykH,GAC1CtoE,EAAa,aAAiB,qBAAsB,CAACA,IAAe,aAAiB,8BACzG62B,EAASh3E,KAAK,wCAAwCK,YAAY,UAClE22E,EAASh3E,KAAK,yBAAyBK,YAAY,YACnD22E,EAASh3E,KAAK,2BAA2Bi5B,OAAQ,SACjD5hB,EAAQ6I,IAAI,QAAS,GAAU/pB,WACnB,QAAR6N,GAAgC,QAAdykH,EAClBzxC,EAASh3E,KAAK,kBAAkB+K,IAAI,SAAQ,KACxC5K,KAAKw8G,gBAAgBtlG,EAAS2/D,EAAS,KAIvC72E,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBACtDxC,KAAK0xG,OAAO6W,wBAAwB,CAACrxG,IACzC2/D,EAASh3E,KAAK,gBAAgB+K,IAAI,SAAQ,KACtC5K,KAAK0xG,OAAOiW,4BAA4BzwG,GAAS,GACjDlX,KAAK0xG,OAAOkW,yBAAyB1wG,GACrClX,KAAK2/F,cAAc9oB,EAAS,IAEhCA,EAASh3E,KAAK,kBAAkB+K,IAAI,SAAQ,KACxCsM,EAAQ6I,IAAI,QAAS,GAAU9pB,aAC/B4gF,EAASh3E,KAAK,sCAAsCyC,KAAK,MACzDu0E,EAASh3E,KAAK,qBAAqBM,SAAS,UAC5C02E,EAASh3E,KAAK,cAAcK,YAAY,UACxC22E,EAASh3E,KAAK,iBAAiByF,IAAI,CAAE,eAAgB,KACrDuxE,EAASh3E,KAAK,iBAAiBK,YAAY,gBAC3C22E,EAASh3E,KAAK,uBAAuByF,IAAI,CAAE,mBAAoB,eAC3DtF,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,eACtDxC,KAAKu8G,uBAAuBrlG,EAAS2/D,GAErC72E,KAAKw8G,gBAAgBtlG,EAAS2/D,EAAS,IAGvD,EAEA6gC,cAAe,SAAUj+E,EAAO51B,GAC5B,GAAI7D,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAKi1B,SAA0C,YAA/Bj1B,KAAKi1B,QAAQzyB,IAAI,UAC5D,OACJ+xB,aAAav0B,KAAKwoH,oBAClBj0F,aAAav0B,KAAKyoH,yBAClBzoH,KAAK0oH,YAAa,EAClB,IAAI7oE,EAAS23B,GAAK,CAACjhE,GAAIvW,KAAK8zB,MAAMtxB,IAAI,OAAQqB,KAAM,SAASsP,EAAEsmB,EAAO,CAACxD,MAAO,GAAQC,GAAGm4C,aACzF,GAAIruE,KAAK8zB,MAAMtxB,IAAI,aAAc,CAC7B,IAAIxC,KAAK0sB,QAAQlK,SAAShgB,IAAI,wBAG1B,OAFAqB,EAAO,WAGf,CACAA,GAAQg8C,EAAO1sC,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAGyyF,oBAAqB9kH,KAAMA,IAC/D,cAAV41B,IAA2Bz5B,KAAK0oH,YAAa,GAC9C1oH,KAAK0sB,QAAQ4+B,QAAQzL,GACP,cAAVpmB,IACAz5B,KAAKwoH,mBAAqBp+G,YAAW,KACjCpK,KAAK0oH,YAAa,CAAK,GACxB,GAAU/zH,0BACbqL,KAAKyoH,wBAA0Br+G,YAAW,MACpCpK,KAAK0oH,YAAc,kCAAyC1oH,KAAK03G,cAAc,SAAS,GACxD,EAAnC,GAAU/iH,0BAErB,EAEA8hH,0BAA2B,SAAUv/F,GACjC,IAAI2/D,EAAW72E,KAAKrC,EAAE,gCAAgCuZ,EAAQ1U,IAAI,kBAC9DomH,EAAY/xC,EAASonC,OACrB4K,EAAgBhyC,EAAS8G,OAC7B9G,EAASr3E,KAAK,CACV,YAAa0X,EAAQ1U,IAAI,eAE7Bq0E,EAAS/rE,SACT+rE,EAASlpD,SAAS,eAAe9tB,KAAK,aAAaL,KAAK,CAACoC,MAAO,GAAgBsV,EAAQ1U,IAAI,WAAWF,KAAK,GAAMuR,YAAYqD,EAAQ1U,IAAI,UAC1I0U,EAAQ1U,IAAI,cAAgBq0E,EAASr3E,KAAK,eAAgB0X,EAAQ1U,IAAI,aAAaoH,IACnF5J,KAAK8zB,MAAMP,SAASyB,OACpB,IAAI0lC,EAAQ16D,KAAK8zB,MAAMP,SAASnvB,QAAQ8S,GACxC,GAAc,IAAVwjD,EACImuD,EAAc77G,SAAS,sBACvB67G,EAAcztD,MAAMyb,GAEpBA,EAASoP,UAAUjmF,KAAKrC,EAAE,sBAC3B,CACH,IAAI4lH,EAAYvjH,KAAKrC,EAAE,iBAAiBq2B,GAAG0mC,EAAQ,GAC/CgpD,EAAkB7sC,EAASn3E,KAAK,UAAY6jH,EAAU7jH,KAAK,QAC3DikH,EAAe,GAAO9sC,EAASn3E,KAAK,SAASyU,QAAQ,OAChDC,OAAO,GAAOmvG,EAAU7jH,KAAK,SAASyU,QAAQ,QAClD00G,EAAcnpH,KAAK,UAAYm3E,EAASn3E,KAAK,SAAakpH,EAAUlpH,KAAK,UAAYm3E,EAASn3E,KAAK,SAAqG,cAAvFkpH,EAAUj7F,SAAS,eAAe9tB,KAAK,yBAAyBL,KAAK,eAA0H,cAAvFopH,EAAUj7F,SAAS,eAAe9tB,KAAK,yBAAyBL,KAAK,eAC/RQ,KAAK41G,kBAAkBgT,GACvBrF,EAAUtF,OAAOjxG,SAAS,uBAA0B,GAAOu2G,EAAUtF,OAAOv+G,KAAK,SAASqU,OAAO,cAAgB,GAAOmD,EAAQ1U,IAAI,cAAcuR,OAAO,aACzJ8iE,EAASv+C,YAAYirF,EAAUtF,QAC/Bj+G,KAAK41G,kBAAkB/+B,IAGvBA,EAASv+C,YAAYirF,GACrBrsG,EAAQ1U,IAAI,cAAgB0U,EAAQ1U,IAAI,uBAAyBmhH,IAAiBD,GAAkBH,EAAUv2G,SAAS,WAAau2G,EAAUv2G,SAAS,cACvJhN,KAAK41G,kBAAkB/+B,GAEvB72E,KAAKgjH,kBAAkBnsC,EAC/B,CACA,IAAIoiB,EAAej5F,KAAK8zB,MAAMmlE,eACzBA,GAAgB/hF,EAAQ1U,IAAI,aAAey2F,EAAaz2F,IAAI,gBAC7DxC,KAAK8zB,MAAMmlE,aAAe/hF,EAC1BlX,KAAKm1B,UAAUN,oBAEvB,EAEAwhF,mBAAoB,SAAUn/F,GAC1B,IAAI2hF,EAAY3hF,EAAQ1U,IAAI,aACxBsmH,EAAY5xG,EAAQ1U,IAAI,sBACxBq2F,IAAciwB,GACd9oH,KAAK8zB,MAAMilE,gBAAgBnD,IAAI1+E,GAC/BlX,KAAK8zB,MAAM83E,kBAEX5rG,KAAK8zB,MAAMilE,gBAAgB7nF,OAAOgG,GAClClX,KAAK8zB,MAAM83E,gBACN10F,EAAQ1U,IAAI,UACb,8BAGZ,EAEAumH,eAAgB,SAAUl+G,GACtB,GAAiB,IAAbA,EAAGigC,MACH,OACJ,IAA0B0sC,EAAtBhzC,EAAQ,GAAE35B,EAAG4C,QAGb+pE,EADAhzC,EAAMx3B,SAAS,gBACRw3B,EAEAA,EAAM6/C,QAAQ,iBAEI,GAAzBtgF,OAAOiL,iBACP,GAAM+L,iBACNy8D,EAAKh4E,KAAK,4BAA6B,KAE/C,EAEAo0G,YAAa,SAAU/oG,GACnB,IACIgsE,EADQ,GAAEhsE,EAAG4C,QACIstB,QAAQ,iBACzBnV,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIq0E,EAASn3E,KAAK,aAC3CkmB,IACDA,EAAM5lB,KAAK0sB,QAAQm7D,qBAAqBrlF,IAAIq0E,EAASn3E,KAAK,cAE9D,IAAI8oC,EAAQ5iB,EAAIpjB,IAAI,SAChBg7D,EAAS53C,EAAIpjB,IAAI,UACjBke,EAASkF,EAAIpjB,IAAI,UACjB8+F,EAAkB17E,EAAIpjB,IAAI,mBAC1BgjH,EAAe,GACfwD,EAAsB,GACtBC,EAAc,GACdrjG,EAAIpjB,IAAI,sBACRojB,EAAIpjB,IAAI,qBAAqB6P,SAAS6E,IAClCA,EAAQ1U,IAAI,WAAagjH,EAAapkH,KAAK8V,EAAQ1U,IAAI,WACvD0U,EAAQ1U,IAAI,WAAagjH,EAAapkH,KAAK8V,EAAQ1U,IAAI,WACvD0U,EAAQ1U,IAAI,oBAAsBwmH,EAAoB5nH,KAAK8V,EAAQ1U,IAAI,mBAAmB,IAGlG,GAAEgmC,GAAO1oC,MAAK,SAAS4C,EAAKuE,GACpBvE,EAAM,IACNumH,GAAe,MACnBA,GAAehiH,EAAKy6B,QAAQ,EAChC,IACA,GAAEhhB,GAAQ5gB,MAAK,SAAS4C,EAAK1H,GACrB0H,EAAM,IACNumH,GAAe,MACnBA,GAAejuH,EAAM0mC,QAAQ,EACjC,IACA,GAAE87B,GAAQ19D,MAAK,SAAS4C,EAAK1H,GACrB0H,EAAM,IACNumH,GAAe,MACnBA,GAAejuH,EAAM0mC,QAAQ,EACjC,IACA,GAAE4/D,GAAiBxhG,MAAK,SAAS4C,EAAKkiH,GACf,IAAfqE,IACAA,GAAe,MACnBA,GAAerE,EAAepvH,GAClC,IACA,GAAEgwH,GAAc1lH,MAAK,SAAU4C,EAAKwU,GAChC,GAAEA,GAASpX,MAAK,SAAU0D,EAAGyD,GACN,IAAfgiH,IACAA,GAAe,MACnBA,GAAehiH,EAAKy6B,QAAQ,EAChC,GACJ,IACA,GAAEsnF,GAAqBlpH,MAAK,SAAU4C,EAAKwU,GACvC,GAAEA,GAASpX,MAAK,SAAU0D,EAAGohH,GACN,IAAfqE,IACAA,GAAe,MACnBA,GAAerE,EAAepvH,GAClC,GACJ,IACA,GAAMwkB,oBAAoBivG,EAAa,aAAiB,qBAAsB,aAAiB,kCACnG,EAGApV,oBAAqB,SAAUhpG,GAC3BA,EAAGa,iBACH,IACImrE,EADQ,GAAEhsE,EAAG4C,QACIstB,QAAQ,iBACzBnV,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIq0E,EAASn3E,KAAK,aAC3CkmB,IACDA,EAAM5lB,KAAK0sB,QAAQm7D,qBAAqBrlF,IAAIq0E,EAASn3E,KAAK,cAE9D,IAAI05E,EAAYxzD,EAAIpjB,IAAI,aACpBgjH,EAAe,GACf0D,EAAiB,GACjBtjG,EAAIpjB,IAAI,sBACRojB,EAAIpjB,IAAI,qBAAqB6P,SAAS6E,IAClCA,EAAQ1U,IAAI,cAAgBgjH,EAAapkH,KAAK8V,EAAQ1U,IAAI,aAAa,IAG/E,GAAE42E,GAAWt5E,MAAK,SAAS4C,EAAK+f,GAC5BymG,GAAkB,OAASzmG,EAASq/E,IAAM,IAAMr/E,EAASs/E,GAC7D,IACA,GAAEyjB,GAAc1lH,MAAK,SAAU4C,EAAKwU,GAChC,GAAEA,GAASpX,MAAK,SAAU0D,EAAG0S,GACH,IAAlBgzG,IACAA,GAAkB,MACtBA,GAAkB,OAAShzG,EAAO4rF,IAAM,IAAM5rF,EAAO6rF,GACzD,GACJ,IAEA,GAAM/nF,oBAAoBkvG,EAAgB,aAAiB,yBAA0B,aAAiB,kCAC1G,EAEA1iC,0BAA2B,SAAUE,EAAgB1nF,GACjDA,EAAUA,GAAW,CAAC,EACtB,IAAI4jF,EAAc5iF,KAAKi1B,QAAQ+9C,aAAaxwE,IAAIkkF,GAC3C9D,GAaJ5iF,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,QAAUkkF,IAAoBA,EAAiB,IACjG1mF,KAAKi1B,QAAQ+9C,aAAaM,oBAAoB,CAAC1pE,GAAI88E,IAAkBjzC,IACjE,IAAIl6B,EAAYvZ,KAAK0sB,QAAQygC,cAAc,GAAE1Z,GAAU5zC,KAAK,YAAY,GAAQq2B,GAAGE,eACnFp2B,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACh/B,KAAM,gBAClD7D,KAAKi1B,QAAQslD,mBAAmBvH,aAAa+R,6BAA6B96E,KAAK24E,EAAarpE,EAAU,KAhBtGvZ,KAAKi1B,QAAQg+C,wBAAwBx/B,IACjC,GAAEzpC,OAAOhL,EAAS,CAAC8mF,QAAS,KAAMjV,aAAc,OAC5C,GAAEp9B,GAAU5zC,KAAK,uBAAuB6mF,MAAmBzkF,OAC3DjD,EAAQuyE,SAAU,EAElBvyE,EAAQuyE,SAAU,EACtBqR,EAAc,IAAI,eAAmB5jF,EAAS,CAACi2B,QAASj1B,KAAKi1B,UAC7Dj1B,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACh/B,KAAM,gBAClD7D,KAAKi1B,QAAQslD,mBAAmBvH,aAAa+R,6BAA6B96E,KAAK24E,EAAa,CAAC,EAAE,GAU3G,EAEA+wB,eAAgB,SAAU9oG,GACtB,IAAI25B,EAAQ,GAAE35B,EAAG4C,QACjB,GAAI+2B,EAAMx3B,SAAS,sBAAuB,CACtCnC,EAAGa,iBACH,IAAIka,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,aAClE8Y,EAAMgsB,EAAMhlC,KAAK,QACjByH,GAAQ2e,EAAIpjB,IAAI,UAAY,IAAI3C,MAAKq7E,GAAKA,EAAEx5C,QAAQ,IAAMlpB,IAC9D,GAAIvR,GAAQA,EAAKoP,IASb,YARArW,KAAK8zB,MAAMP,SAASyO,YAAYxpB,EAAIvR,EAAKoP,KAAKgE,MAAMnS,IAChD,GAAe,OAAXA,EACA,OACJ,IAAIihH,EAAWhuH,SAASiL,cAAc,KACtC+iH,EAASxnH,KAAOuG,EAChBihH,EAASA,SAAWliH,EAAKlI,KACzBoqH,EAAS19G,OAAO,IAIpB,cAAkB+4B,EAAMhlC,KAAK,QACrC,CACA,KAAIglC,EAAMx3B,SAAS,yBAA2Bw3B,EAAMx3B,SAAS,wBAA0Bw3B,EAAMx3B,SAAS,2BAA6Bw3B,EAAMx3B,SAAS,yBAAlJ,CAGA,GAAIw3B,EAAMzJ,QAAQ,yBAAyB94B,OAAS,EAAG,CACnD,IAAI2jB,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,aAClE0pH,EAAQ5kF,EAAMzJ,QAAQ,yBAS1B,OARCnV,IAAQA,EAAM5lB,KAAK0sB,QAAQ42E,iBAAiB9gG,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,mBACjFkmB,GAAOA,EAAIpjB,IAAI,uBACV,qBAID,kCAAsC,CAAC29B,OAAQva,EAAIpjB,IAAI,qBAAqB4mH,EAAM5pH,KAAK,uBAHvF,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAAC2gC,OAAQva,EAAIpjB,IAAI,qBAAqB4mH,EAAM5pH,KAAK,wBAK3F,CACA,KAAKglC,EAAMx3B,SAAS,qBAAwBw3B,EAAMx3B,SAAS,8BAAiCw3B,EAAMx3B,SAAS,2BAA8Bw3B,EAAMx3B,SAAS,uBAA0Bw3B,EAAMx3B,SAAS,uBAA0Bw3B,EAAMunB,GAAG,WAAcvnB,EAAMx3B,SAAS,yBAAyB,CACtR,IAA2C4Y,EAAvC4xD,EAAOhzC,EAAMzJ,QAAQ,iBACrBsoF,EAAe7+E,EAAM6/C,QAAQ,gBAAgBnyD,QAC7CsuE,EAAe6iB,EAAaphH,OAAS,EACrConH,EAAoB7xC,EAAKh4E,KAAK,6BAGlC,GAFAg4E,EAAKh4E,KAAK,4BAA6B,IAEnCglC,EAAMx3B,SAAS,mBAIf,OAHA4Y,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIg1E,EAAK93E,KAAK,kBACpCkmB,GACA5lB,KAAK8zB,MAAMg4E,aAAalmF,EAAK4e,EAAMhlC,KAAK,QAIhD,GAA6B,GAAzBuE,OAAOiL,eACP,OAGJ,GAAIw1B,EAAMx3B,SAAS,+BAAgC,CAC/C,IAAI4Y,EAAM5lB,KAAKo1G,iBAAiBp1G,KAAK0sB,QAAQ44F,mBAAmB9iH,IAAIgiC,EAAM9kC,KAAK,cAC3E4pH,EAAuB,IAAI,wBAA4B,CAAC58F,QAAS1sB,KAAK0sB,QAAS+sD,aAAcz5E,OAKjG,OAJAspH,EAAqBvpH,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,UACtExC,KAAKw0G,oBAAoB5uF,EAAK5lB,KAAK0sB,QAAQ44F,mBAAmB9iH,IAAIgiC,EAAM9kC,KAAK,cAC7EM,KAAKy0G,UAAU7uF,QACf0jG,EAAqBr/G,KAAK2b,EAE9B,CAEA,GAAI4e,EAAMx3B,SAAS,oBAAsBw3B,EAAMx3B,SAAS,kBAAmB,CACvE,IAAImjD,EAAWqwC,EAAe6iB,EAAa3jH,KAAK,QAAU83E,EAAK93E,KAAK,QAChEu/G,EAAUze,EAAe6iB,EAAa3jH,KAAK,UAAY83E,EAAK93E,KAAK,UACrE,GAAIM,KAAKi1B,SAAWj1B,KAAKi1B,QAAQzyB,IAAI,cAAe,CAChDxC,KAAK0xG,OAAO6X,MAAMx6G,QAClB,IAAIy6G,EAAiBxpH,KAAK0xG,OAAO6X,MAAMv6G,eACnCy6G,EAAoB,CAACvxG,IAAKi4C,EAAUvmD,GAAIq1G,EAASt6D,SAAUngB,EAAMliC,QACrEknH,IAAmBA,EAAiBA,EAAe9uD,OACnD+uD,EAAkB78E,SAAW48E,GAAkB,EAC/CxpH,KAAK0xG,OAAOgY,cAAcD,EAC9B,MACK,GAAIt5D,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OACnCxC,KAAK0sB,QAAQ+O,oBACV,GAAI00B,IAAanwD,KAAK8zB,MAAMtxB,IAAI,OACnCxC,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACtjB,UAAWvf,KAAK8zB,MAAMtxB,IAAI,mBACnF,CACH,GAAI2tD,GAAY8uD,EACZ,OACUj/G,KAAK0sB,QAAQ4I,SAASsjC,aAAazI,GACzCiqB,aACZ,CACA,MACJ,CAEA,GAAI51C,EAAMx3B,SAAS,iBAAkB,CACjC,IAAImjD,EAAWqwC,EAAe6iB,EAAa3jH,KAAK,QAAU83E,EAAK93E,KAAK,QACpE,GAAIM,KAAK8zB,MAAMtxB,IAAI,cAAe,CAC9B,IAAIynF,EAAY,EAAiBo5B,EAAa7jH,KAAK,gBAAkBg4E,EAAKh4E,KAAK,gBAC3Eq0D,EAAY,EAAiBwvD,EAAa7jH,KAAK,iBAAmBg4E,EAAKh4E,KAAK,iBAC5EomB,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIqxD,GAC9B2lB,EAAY5zD,GAAOA,EAAIpjB,IAAI,aAE/B,YADAynF,GAAajqF,KAAKwmF,0BAA0ByD,EAAWzQ,GAE3D,CACK,GAAIrpB,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OACnCxC,KAAK0sB,QAAQ+O,oBACV,GAAI00B,IAAanwD,KAAK8zB,MAAMtxB,IAAI,OACnCxC,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACtjB,UAAWvf,KAAK8zB,MAAMtxB,IAAI,mBACnF,CACWxC,KAAK0sB,QAAQ4I,SAASsjC,aAAazI,GACzCiqB,aACZ,CACA,MACJ,CAEA,GAAI51C,EAAMx3B,SAAS,WAAY,CAC3B,IAAIi9E,EAAYzlD,EAAM9kC,KAAK,UAC3B,GAAIM,KAAKi1B,QAAQzyB,IAAI,cAAe,CAChC,GAAIynF,IAAcjqF,KAAKi1B,QAAQ+9C,aAAaxwE,IAAIynF,GAAY,CACxD,IAAIrH,EAAc5iF,KAAKi1B,QAAQ+9C,aAAanzE,MAAKgqG,GAAKA,EAAErnG,IAAI,SAAWynF,IACvErH,IAAgBqH,EAAYrH,EAAYpgF,IAAI,MAChD,CACAynF,GAAajqF,KAAKwmF,0BAA0ByD,EAChD,MAEI,GAAIA,IAAcjqF,KAAK0sB,QAAQlqB,IAAI,OAC/BxC,KAAK0sB,QAAQ+O,oBACZ,GAAIwuD,IAAcjqF,KAAK8zB,MAAMtxB,IAAI,OAClCxC,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACtjB,UAAWvf,KAAK8zB,MAAMtxB,IAAI,mBACnF,CACWxC,KAAK0sB,QAAQ4I,SAASsjC,aAAaqxB,GACzC7P,aACZ,CAEJ,MACJ,CAEA,GAAI51C,EAAMx3B,SAAS,uBAAyBw3B,EAAMx3B,SAAS,eAAgB,CACvE,IAAI4zB,EAAc4D,EAAMzJ,QAAQ,cAC5B0H,EAAQ7B,EAAY/gC,KAAK,uBAAuBL,KAAK,QAEzD,GADAohC,EAAY/gC,KAAK,aAAaK,YAAY,eACtCskC,EAAMzJ,QAAQ,iBAAiB/tB,SAAS,aAAc,CACtD,IAAI4Y,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,aAClE8Y,EAAMgsB,EAAMzJ,QAAQ,cAAcl7B,KAAK,uBAAuBL,KAAK,QACnEyH,GAAQ2e,EAAIpjB,IAAI,UAAY,IAAI3C,MAAKq7E,GAAKA,EAAEx5C,QAAQ,IAAMlpB,IAC1DvR,GAAQA,EAAKoP,KACbrW,KAAK8zB,MAAMP,SAASyO,YAAYS,EAAOx7B,EAAKoP,KAAKgE,MAAMnS,IACpC,OAAXA,IAEJ04B,EAAY,GAAGC,cAAgB7gC,KAAKkjC,mBAAmBtC,EAAY/gC,KAAK,mBAAmB,GAAIqI,GAAO,GAGlH,MACI04B,EAAY,GAAGC,cAAgB7gC,KAAKkjC,mBAAmBtC,EAAY/gC,KAAK,mBAAmB,GAAI4iC,GAEnG,MACJ,CAEA,GAAI+B,EAAMx3B,SAAS,eAAiBw3B,EAAMzJ,QAAQ,oBAAoB94B,OAAS,GAAI,CAG/E,YAFkBuiC,EAAMzJ,QAAQ,cACpB,GAAG8F,cAAckB,MAEjC,CAEA,GAAIyC,EAAMx3B,SAAS,gBAAkBw3B,EAAMzJ,QAAQ,oBAAoB94B,OAAS,GAAI,CAGhF,YAFkBuiC,EAAMzJ,QAAQ,cACpB,GAAG8F,cAAcyE,OAEjC,CAEA,GAAId,EAAMx3B,SAAS,iBAAkB,CACjCnC,GAAMA,EAAGa,iBACT84B,EAAMnb,OACN,IAAIm4F,EAAOh9E,EAAMhlC,KAAK,QAKtB,YAJA,GAAMuM,QAAQiC,IAAI,aAAiB,kBAAmB4D,UAAU4vG,GAAO,KAAM,CAACrzG,eAAgB,aAAiB,UAAUoa,MAAMrgB,IACvHA,GACA,GAAM0S,WAAW4mG,EAAK,GAGlC,CAEA,GAAIh9E,EAAMzJ,QAAQ,kBAAkB94B,OAAS,EAAG,CAC5C4I,GAAMA,EAAGa,iBACT84B,EAAMnb,OACN,IAAIm4F,EAAOh9E,EAAMzJ,QAAQ,kBAAkBv7B,KAAK,QAKhD,YAJA,GAAMuM,QAAQiC,IAAI,aAAiB,kBAAmB4D,UAAU4vG,GAAO,KAAM,CAACrzG,eAAgB,aAAiB,UAAUoa,MAAMrgB,IACvHA,GACA,GAAM0S,WAAW4mG,EAAK,GAGlC,CAEA,GAAIh9E,EAAMx3B,SAAS,iBAAiBw3B,EAAMx3B,SAAS,gBAAiBw3B,EAAMx3B,SAAS,4BAE/E,YADAw3B,EAAMx3B,SAAS,gBAAkBw3B,EAAM7W,SAAS,OAAOliB,SAI3D,GAAI+4B,EAAMx3B,SAAS,gBAAiB,CAChC,IAAI28G,EAAkB3pH,KAAKs9G,qBAAqBt9G,KAAK8zB,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,cAU5G,YATA,GAAMqM,QAAQiC,IAAI,aAAiB,gBAAiB,aAAiB,qBAAsB,CAACrB,kBAAkB,EAAMC,YAAa,GAAE,GAAU2mB,SAASq2F,eAAe,CAACD,gBAAiBA,MAAqB,CAAEx7G,eAAgB,aAAiB,yBAAyBoa,MAAMrgB,IACtQA,IACAs8B,EAAMhlC,KAAK,MAAMglC,EAAMhlC,KAAK,iBAC5BglC,EAAMtkC,YAAY,gBAClBskC,EAAMrkC,SAAS,gBACfH,KAAKy0G,UAAUjwE,EAAMzJ,QAAQ,kBAC7ByJ,EAAMzJ,QAAQ,iBAAiBl7B,KAAK,wBAAwBqR,SAChE,GAGR,CAEA,GAAIszB,EAAMx3B,SAAS,yBAA2Bw3B,EAAM3kC,KAAK,OAAOmN,SAAS,gBAAiB,CACtF,IAAI28G,EAAkB3pH,KAAKs9G,qBAAqBt9G,KAAK8zB,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,cAc5G,YAbA,GAAMqM,QAAQiC,IAAI,aAAiB,gBAAiB,aAAiB,qBAAsB,CAACrB,kBAAkB,EAAMC,YAAa,GAAE,GAAU2mB,SAASq2F,eAAe,CAACD,gBAAiBA,MAAqB,CAAEx7G,eAAgB,aAAiB,yBAAyBoa,MAAMrgB,IAC1Q,GAAIA,EAAQ,CACR,IAAIsvE,EAAOhzC,EAAMzJ,QAAQ,iBACrB8uF,EAAQryC,EAAK33E,KAAK,6BACtBgqH,EAAM/pH,MAAK,CAAC4C,EAAK2mC,KACb,GAAEA,GAAK7pC,KAAK,MAAM,GAAE6pC,GAAK7pC,KAAK,gBAAgB,IAElDqqH,EAAM3pH,YAAY,gBAClB2pH,EAAM1pH,SAAS,4BACfH,KAAKy0G,UAAUj9B,GACfhzC,EAAMzJ,QAAQ,iBAAiBl7B,KAAK,wBAAwBqR,QAChE,IAGR,CAEA,GAAIszB,EAAMx3B,SAAS,8BAAgCw3B,EAAMx3B,SAAS,kBAAoBw3B,EAAMzJ,QAAQ,oBAAoB94B,OAAS,GAAKuiC,EAAMzJ,QAAQ,gBAAgB94B,OAAS,EACzK,OAGJ,GAAIuiC,EAAMx3B,SAAS,cAEf,YADAw3B,EAAM3kC,KAAK,OAAOoC,QAAUuiC,EAAM3kC,KAAK,OAAO,GAAG4L,SAIrD,GAAI+4B,EAAMx3B,SAAS,iBAEf,YADAw3B,EAAMzJ,QAAQ,eAAel7B,KAAK,OAAO,GAAG4L,QAIhD,GAAI+rE,EAAKxqE,SAAS,oBAEd,YADAhN,KAAK8zB,MAAMiP,kBAAkBy0C,EAAK93E,KAAK,YAAa,CAAC4kF,mBAAmB,IAI5E,IAAIwlC,EAAe,KACf,IAAIC,EAAiBvyC,EAAKxqE,SAAS,YAAcwqE,EAAKlnD,QAAQ,0BAA0B2pC,OAASud,EAAKlnD,QAAQ,0BAA0B4B,QAGxI,IAFC63F,EAAe9nH,SAAW8nH,EAAiBvyC,EAAKxqE,SAAS,YAAcwqE,EAAK+8B,QAAQ,0BAA0Bt6C,OAASud,EAAK+8B,QAAQ,0BAA0BriF,UAC9J63F,EAAe9nH,SAAW8nH,EAAiBvyC,EAAKxqE,SAAS,YAAcwqE,EAAKlnD,QAAQ,0BAA0B4B,QAAUslD,EAAKlnD,QAAQ,0BAA0B2pC,SAC3J,sBAA4B,mBAAyB8vD,EAAe9nH,OAAQ,CAC7E,IAAI+nH,EAAY,GAAI/3B,EAAcza,EAAKxqE,SAAS,YAWhD,OATIg9G,EADAD,EAAevqH,KAAK,aAAeg4E,EAAKh4E,KAAK,aACjCuqH,EAAeE,UAAUzyC,EAAM,8BAE/BA,EAAKyyC,UAAUF,EAAgB,8BAC/C,kBAAwB/pH,KAAKrC,EAAE,iBAAiBuC,YAAY,YAC5D6pH,EAAeh9G,YAAY,YAAaklF,GACxC+3B,EAAUj9G,YAAY,YAAaklF,GACnCza,EAAKzqE,YAAY,YAAaklF,GAC9BpnF,EAAGa,iBACH1L,KAAK0xG,OAAOwM,0BACL,CACX,CACA,IAAKmL,EAID,OAHA7xC,EAAKzqE,YAAY,YAAayqE,EAAKxqE,SAAS,aAC5CnC,EAAGa,iBACH1L,KAAK0xG,OAAOwM,0BACL,CACX,EAGJ,GAAI1mC,EAAKxqE,SAAS,wBAA0BwqE,EAAKxqE,SAAS,mBAAoB,CAC1E,GAAIwqE,EAAKxqE,SAAS,UACd,OAEJ,YADA88G,GAEJ,CAGA,GADAlkG,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIg1E,EAAK93E,KAAK,cACnCkmB,EACD,OAGJ,IAAI/hB,EAAO+hB,EAAIpjB,IAAI,QACnB,GAAa,gBAATqB,EACA,OAGJ,GAAa,WAATA,EACA,OACG,GAAI28F,EAAc,CAErB,IADkBxgG,KAAK0sB,QAAQ44F,mBAAmB9iH,IAAI6gH,EAAa3jH,KAAK,aAEpE,OAEJoqH,GACJ,MACIA,GAER,CAlRA,CAmRJ,EAEAhW,gBAAiB,SAAUjpG,GACvBA,EAAGa,iBACH,IAAIq2F,EAAM,GAAEl3F,EAAG4C,QAAQjO,KAAK,OACxBsiG,EAAM,GAAEj3F,EAAG4C,QAAQjO,KAAK,OACxB0qH,EAAgB,GAAEr/G,EAAG4C,QAAQjO,KAAK,SAClCuiG,GAAOD,IACP,qBAA2B,CAACC,EAAKD,GACjC,iBAAuBooB,EACvB,IAAI,oBAAwB,CAACjnF,QAASjjC,OAAO0uB,KAAK7jB,GAE1D,EAEAkpG,gBAAiB,SAAUlpG,GACvB,IAAIk3F,EAAM,GAAEl3F,EAAG4C,QAAQjO,KAAK,OACxBsiG,EAAM,GAAEj3F,EAAG4C,QAAQjO,KAAK,OAE5B+iB,MAAM,+DAAiEw/E,EAAM,QAAUD,GAAKznF,MAAK,SAASo5B,GACtG,OAAOA,EAASjtB,MACpB,IAAGnM,MAAK,SAASmM,GACRA,EAAKzY,MAIN,GAAElD,EAAG4C,QAAQjO,KAAK,QAAS,aAAiB,4CAH5C,GAAEqL,EAAG4C,QAAQjO,KAAK,QAASgnB,EAAK2jG,cAKpC,GAAEt/G,EAAG4C,QAAQvN,YAAY,WAC7B,GACJ,EAEAkqH,iBAAkB,SAAUv/G,GACxB,IAAI2sE,EAAO,GAAE3sE,EAAG4C,QAAQstB,QAAQ,iBAC5BnV,EAAM5lB,KAAK8zB,MAAMP,SAAS/wB,IAAIg1E,EAAK93E,KAAK,aACpB,gBAApBkmB,EAAIpjB,IAAI,SACRojB,EAAI7F,IAAI,QAAS,GAAU9pB,aAC3B+J,KAAKw8G,gBAAgB52F,EAAK4xD,IAG1Bx3E,KAAKgkH,YAAYp+F,GACrB/a,EAAGa,gBACP,EAEA2+G,uBAAwB,SAAUx/G,GAC9B,IAAI2sE,EAAO,GAAE3sE,EAAG4C,QAAQstB,QAAQ,iBAChC/6B,KAAK2/F,cAAcnoB,GACnB3sE,EAAGa,iBACH1L,KAAKm1B,UAAUk7E,iBACnB,EAEAuE,aAAc,SAAU/pG,GAEpB,GADA7K,KAAKrC,EAAE,yBAAyBuC,YAAY,yBACxC,wBAA8B,mCAAwC,CACtE,IAAI22E,EAAW72E,KAAKrC,EAAE,gCAAgC,8CAClDk5E,EAAS50E,QACT40E,EAASh3E,KAAK,0CAA0C,mDAAuDM,SAAS,wBAEhI,CACJ,IAGJ,wBAA8B,oBAAwB,CAClD4wB,UAAW,yBACXvD,SAAU,GAAUusD,YAAYuwC,qBAChCx8F,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,qCAAsC,mBACtC,sBAAuB,uBACvB,mCAAoC,iCACpC,0BAA4B,eAGhC1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKy5E,aAAez6E,EAAQy6E,aAC5Bz5E,KAAKkX,QAAUlY,EAAQkY,OAC3B,EAEAjN,KAAM,SAAU4sE,GACZ72E,KAAKD,IAAIuF,IAAI,QAASuxE,EAASh3E,KAAK,sBAAsByC,OAAOL,QAAU,GAAK,IAAsC,KAAhC,2BACtFjC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAK6uB,kBACL7uB,KAAKrC,EAAE,kBAAkB2H,IAAI,SAAUtF,KAAKD,IAAIgF,SAAW,IACvD8xE,EAASh3E,KAAK,yBAAyBoC,QACvCjC,KAAKy5E,aAAa6/B,oBAAoBziC,EAAU72E,KAAKkX,QACzD,EAEJ/L,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,IAGvC82D,EAASh3E,KAAK,qCAAqCqR,SACnDlR,KAAKrC,EAAE,kBAAkBgC,KAAKk3E,EAClC,EAEA3rE,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEA4zG,YAAY,SAAU/oG,GAClB7K,KAAKy5E,aAAam6B,YAAY/oG,EAClC,EAEA0/G,qBAAsB,SAAU1/G,GAC5B,IAAI25B,EAAQ,GAAE35B,EAAG4C,QACjB,GAAI+2B,EAAMx3B,SAAS,iBAAnB,CACInC,GAAMA,EAAGa,iBACT,IAAI81G,EAAOh9E,EAAMhlC,KAAK,QACtB,GAAMuM,QAAQiC,IAAI,aAAiB,kBAAmB4D,UAAU4vG,GAAO,KAAM,CAACrzG,eAAgB,aAAiB,UAAUoa,MAAMrgB,IACvHA,GACA,GAAM0S,WAAW4mG,EAAK,GAGlC,MACA,GAAIh9E,EAAMzJ,QAAQ,yBAAyB94B,OAAS,EAApD,CACI,IAAI2jB,EAAM5lB,KAAKy5E,aAAa3lD,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,aAC/E0pH,EAAQ5kF,EAAMzJ,QAAQ,yBACtBnV,EAAIpjB,IAAI,uBACH,qBAID,kCAAsC,CAAC29B,OAAQva,EAAIpjB,IAAI,qBAAqB4mH,EAAM5pH,KAAK,uBAHvF,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAAC2gC,OAAQva,EAAIpjB,IAAI,qBAAqB4mH,EAAM5pH,KAAK,uBAK3F,MACA,GAAIglC,EAAMx3B,SAAS,uBAAyBw3B,EAAMx3B,SAAS,eAA3D,CACI,IAAI4zB,EAAc4D,EAAMzJ,QAAQ,cAC5B0H,EAAQ7B,EAAY/gC,KAAK,uBAAuBL,KAAK,QAEzD,GADAohC,EAAY/gC,KAAK,aAAaK,YAAY,eACtCskC,EAAMzJ,QAAQ,iBAAiB/tB,SAAS,aAAc,CACtD,IAAI4Y,EAAM5lB,KAAKy5E,aAAa3lD,MAAMP,SAAS/wB,IAAIgiC,EAAMzJ,QAAQ,iBAAiBr7B,KAAK,aAC/E8Y,EAAMgsB,EAAMzJ,QAAQ,cAAcl7B,KAAK,uBAAuBL,KAAK,QACnEyH,GAAQ2e,EAAIpjB,IAAI,UAAY,IAAI3C,MAAKq7E,GAAKA,EAAEx5C,QAAQ,IAAMlpB,IAC1DvR,GAAQA,EAAKoP,KACbrW,KAAKy5E,aAAa3lD,MAAMP,SAASyO,YAAYS,EAAOx7B,EAAKoP,KAAKgE,MAAMnS,IACjD,OAAXA,IAEJ04B,EAAY,GAAGC,cAAgB7gC,KAAKy5E,aAAav2C,mBAAmBtC,EAAY/gC,KAAK,mBAAmB,GAAIqI,GAAO,GAG/H,MACI04B,EAAY,GAAGC,cAAgB7gC,KAAKy5E,aAAav2C,mBAAmBtC,EAAY/gC,KAAK,mBAAmB,GAAI4iC,EAGpH,MACA,IAAI+B,EAAMx3B,SAAS,aAAiBw3B,EAAMzJ,QAAQ,oBAAoB94B,OAAS,OAA/E,CACsBuiC,EAAMzJ,QAAQ,cACpB,GAAG8F,cAAckB,MAEjC,CACJ,EACAyoF,+BAAgC,SAAU3/G,GACtCA,EAAGa,iBACH,IAAIq2F,EAAM,GAAEl3F,EAAG4C,QAAQjO,KAAK,OACxBsiG,EAAM,GAAEj3F,EAAG4C,QAAQjO,KAAK,OACxB0qH,EAAgB,GAAEr/G,EAAG4C,QAAQjO,KAAK,SAClCuiG,GAAOD,IACP,qBAA2B,CAACC,EAAKD,GACjC,iBAAuBooB,EACvB,IAAI,oBAAwB,CAACjnF,QAASjjC,OAAO0uB,KAAK7jB,GAE1D,EAEA4/G,iBAAkB,SAAU5/G,GACxB,IACIgpD,EADU,GAAEhpD,EAAG4C,QACK/N,KAAK,YACzBkmB,EAAM5lB,KAAKy5E,aAAa27B,iBAAiBp1G,KAAK0sB,QAAQ44F,mBAAmB9iH,IAAIqxD,IAC7Ey1D,EAAuB,IAAI,wBAA4B,CAAC58F,QAAS1sB,KAAK0sB,QAAS+sD,aAAcz5E,KAAKy5E,eACtG6vC,EAAqBvpH,IAAIP,KAAK,aAAcQ,KAAK0sB,QAAQlK,SAAShgB,IAAI,UACtExC,KAAKy5E,aAAa+6B,oBAAoB5uF,EAAK5lB,KAAK0sB,QAAQ44F,mBAAmB9iH,IAAIqxD,IAC/E7zD,KAAKy5E,aAAag7B,UAAU7uF,GAC5B0jG,EAAqBr/G,KAAK2b,EAC9B,IAGJ,aAAmBzE,SAASm6C,WAAWtxD,OAAO,CAC1C8pB,MAAO,UAGX,SAAe,oBAAwB,CACnCnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKo1F,YAAc,GACnBp1F,KAAKqjB,GAAG,MAAO,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,QACtDA,KAAKqjB,GAAG,SAAU,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,UAC7D,EAEAs1F,cAAe,SAAUzrC,GACrB7pD,KAAKo1F,YAAYh0F,KAAKyoD,EAC1B,EAEAwrC,oBAAqB,SAAUr0E,EAAOiU,GAClC,GAAEn1B,KAAKE,KAAKo1F,aAAa,SAAUvrC,GAC/BA,EAAW5xB,OAAOhD,EAASjU,EAC/B,GACJ,EAEA0pG,2BAA4B,WACxB,IAAIC,EAAS1sH,MAAM2sH,OAAO,gBACtBzjH,EAAQlJ,MAAM2sH,OAAO,iBAEzB,MAAMC,UAAgBF,EAClBG,cAAcC,GACV,IAA2BrrH,EAAM+N,EAA7B4C,EAAO26G,MAAMj6E,SAWjB,OAVIg6E,EAAWE,WACXvrH,EAAOqrH,EAAWrrH,KAClB+N,EAASs9G,EAAWt9G,SAEpB/N,EAAOgnB,KAAKC,MAAMokG,GAClBt9G,EAAS/N,EAAKwY,IAAO,QAAUxY,EAAKwY,IAAQxY,EAAKkK,GAAO,OAASlK,EAAKkK,GAAM,GAC5EyG,EAAKD,UAAY1Q,EAAKilD,UAE1BjlD,EAAKkmF,OAASv1E,EAAK66G,UAAUt1B,IAAI,oBACjCvlF,EAAKqpB,aAAa,cAAejsB,GAC1B4C,CACX,CAEAy6G,aAAaz6G,GACT,OAAOA,EAAKD,SAChB,CAEA06G,eAAez6G,GACX,MAAO,CACH46G,WAAW,EACXvrH,KAAM,CACFilD,SAAUt0C,EAAKD,UACfw1E,MAAOv1E,EAAK66G,UAAUrwF,SAAS,qBAEnCptB,OAAQ4C,EAAKspB,aAAa,eAElC,EAEJkxF,EAAQM,SAAW,UACnBN,EAAQr4G,QAAU,UAClBq4G,EAAQvpH,UAAU8pH,SAAW,WAAa,EAE1C,MAAMC,UAAmBlkH,EACrB2jH,cAAc//G,GACV,GAAoB,iBAATA,EAAmB,CAC1B,IAAI5J,EAAQ,GAAE4J,EAAMxJ,QAAQ,CAACE,SAAU,SAAS,GAKhD,OAJAN,EAAM2qC,MAAMo/D,QAAU,OACtB/pG,EAAMmG,OAAS,WACXtH,KAAK8rC,MAAMo/D,QAAU,OACzB,EACO/pG,CACX,CACI,OAAO4J,CAEf,CAEA+/G,aAAaQ,GACT,OAAOA,CACX,EAEJD,EAAWF,SAAW,QACtBE,EAAWt6F,UAAY,QACvBs6F,EAAW74G,QAAU,MACrB64G,EAAW/pH,UAAU8pH,SAAW,WAAa,EAE7CntH,MAAMqhD,SAAS+rE,GACfptH,MAAMqhD,SAASurE,EACnB,IAGJ,eAAqB,oBAAwB,CACzC91F,WAAY,SAAUw2F,EAAOC,GACzB,IAAIC,EAAKF,EAAM/oH,IAAI,aACfkpH,EAAKF,EAAMhpH,IAAI,aACnB,OAAOipH,EAAKC,GAAM,EAAKD,EAAKC,EAAK,EAAI,CACzC,EAEA/pG,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKqjB,GAAG,mBAAoBrjB,KAAKg1B,KAAMh1B,KAC3C,EAEAi4B,OAAQ,SAAU/jC,EAAM8sB,GACL9sB,EAAKsO,IAAI,UAEfxC,KAAKwC,IAAItO,KACV8L,KAAK41F,IAAI1hG,GACTA,EAAKqX,QAAQ,kBAAmBrX,IAE7B8L,KAAKwC,IAAItO,KAChB8L,KAAKkR,OAAOhd,GACZA,EAAKqX,QAAQ,qBAAsBrX,GAE3C,IAGJ,eAAqB,oBAAwB,CACzC+jC,OAAQ,SAAU/jC,EAAM8sB,IACJ9sB,EAAKsO,IAAI,UAEhBxC,KAAKwC,IAAItO,KACV8L,KAAK41F,IAAI1hG,GACTA,EAAKqX,QAAQ,kBAAmBrX,IAE7B8L,KAAKwC,IAAItO,KAChB8L,KAAKkR,OAAOhd,GACZA,EAAKqX,QAAQ,qBAAsBrX,GAE3C,IAGJ,gBAAsB,oBAAwB,CAC1CytB,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK2rH,aAAe,EACpB3rH,KAAK4rH,sBAAwB,GAC7B5rH,KAAK0sB,QAAQ4I,SAASjS,GAAG,YAAarjB,KAAK69E,SAAU79E,MACrDA,KAAK0sB,QAAQ4I,SAASjS,GAAG,eAAgBrjB,KAAK6rH,YAAa7rH,MAC3DA,KAAK0sB,QAAQ4I,SAASjS,GAAG,WAAYrjB,KAAKq2D,WAAYr2D,MACtDA,KAAK0sB,QAAQ4I,SAASjS,GAAG,cAAerjB,KAAKivG,aAAcjvG,KAC/D,EAEA20B,aAAc,WACZ,IAAIzc,EAAMlY,KAAK0sB,QAAQlqB,IAAI,OACvB4U,EAAQ,CAACc,IAAKA,EAAKrU,KAAM,QAAS9E,KAAM,aAAiB,0BAA2B6K,GAAI,GAAGsO,WAC3FhkB,EAAO8L,KAAKwC,IAAI4U,EAAMxN,IAMxB,OALK1V,IACDA,EAAO,gBAAoBkjB,EAAO,CAACsV,QAAS1sB,KAAK0sB,UACjD1sB,KAAK41F,IAAI1hG,GACTA,EAAKqX,QAAQ,sBAEVrX,CACX,EAEAwhC,QAAS,SAAUT,EAAS62F,EAAYtgB,GACpC,IAAIp0F,EAAQ,KACRxN,EAAKkiH,GAAc,GAAG72F,EAAQM,WAAWu2F,IACzC53H,EAAO0V,EAAK5J,KAAKwC,IAAIoH,GAAM5J,KAAKwC,IAAIyyB,EAAQM,SAUhD,OATI3rB,IACAwN,EAAQ,CAACxN,OACM,cAAfkiH,IACA10G,EAAMvT,KAAOioH,GACZ53H,IACDA,EAAO,gBAAoBkjB,EAAO,CAAC6d,QAASA,EAASu2E,aAAcA,IACnExrG,KAAK41F,IAAI1hG,GACT+gC,EAAQlV,IAAI,SAAS,IAElB7rB,CACX,EAEA2pF,SAAU,SAAU5oD,EAASj2B,GACzBA,EAAUA,GAAW,CAAC,EACtB,GAAEoM,YAAYpM,EAAQ22B,gBAAkB32B,EAAQ22B,cAAe,GACpD31B,KAAK01B,QAAQT,EAASj2B,EAAQugB,WAAa,aACjDhU,QAAQ,OAAQ,CAACoqB,aAAc32B,EAAQ22B,aAAcyD,kBAAmBp6B,EAAQo6B,mBACzF,EAEAyyF,YAAa,SAAU52F,EAAS4+B,GAC5B,IAAI3/D,EAAO8L,KAAK01B,QAAQT,GACxB,kBAAsB,WAAY,CAACkE,MAAO,WAAYhE,UAAWjhC,EAAK0gC,YACtEi/B,GAAa3/D,EAAK6uC,kBAAkB8wB,EAAW,CAAC/7C,SAAS,GAC7D,EAEAi0G,uBAAwB,WACpB/rH,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAKgsH,cAC3ChsH,KAAKgsH,aAAehsH,KAAK0sB,QAAQK,WAAW2J,YAAYxf,IACpDlX,KAAKosG,eAAel1F,IACb,IACR,KAAM,UACb,EAEA8gE,oBAAsB,SAAUlnF,GAC5BkP,KAAK4rH,sBAAsBxqH,KAAKtQ,GAChCkP,KAAKisH,gBACT,EAEA/zC,sBAAuB,SAAUpnF,GAC7BkP,KAAK2rH,eACL3rH,KAAKisH,gBACT,EAEAA,eAAgB,WACZ,KAAOjsH,KAAK2rH,aAAe,gCAAoC,CAC3D,IAAI76H,EAAWkP,KAAK4rH,sBAAsB5gH,QAC1C,IAAKla,EAAU,MACfkP,KAAK2rH,eACL76H,EAASuX,SACb,CACJ,EAEA6jH,gBAAiB,SAAU77G,GACvB,IAAKA,EACD,OAAO,KACX,IAAI87G,EAAe97G,EAAKjM,QAAQ,KAChC,OAAsB,IAAlB+nH,EACO97G,EAAKhN,MAAM8oH,EAAe,EAAG97G,EAAKpO,QAElC,IACf,EAEAmqH,qBAAsB,SAAUv1C,GAC5B,IAAIw1C,EAAYx1C,EAASh3E,KAAK,QAAQL,KAAK,MACvC2wD,EAAW,GAAQtS,kBAAkBg5B,EAASr3E,KAAK,SACnD6Q,EAAOwmE,EAASh3E,KAAK,SAASL,KAAK,QACvC,KAAI6Q,EAAKjM,QAAQ,GAAQ8xB,GAAGmvC,QAAU,IAElCh1D,EAAKjM,QAAQ,GAAQ8xB,GAAGo2B,yBAA2B,EAAG,CACtD,IAAI29B,EAAYjqF,KAAKksH,gBAAgB77G,GACjCw9E,EAAahX,EAASh3E,KAAK,QAAQL,KAAK,OACxCy1B,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAI2tD,GACxC,GAAIl7B,GACA,GAAIg1D,EAAW,CACX,GAAIh1D,EAAQ0+C,SACHsW,GAAah1D,EAAQ0+C,QAAQnxE,IAAI,OAAW6pH,GAAYp3F,EAAQ0+C,QAAQnxE,IAAI,UAE7E,YADAyyB,EAAQ1pB,QAAQ,kBAIxB,GAAI8gH,GAAarsH,KAAK0sB,QAAQ8kD,cAAc6U,cAAc4D,IAAcoiC,EAAW,CAC/E,IAAIC,EAAc,GAAQp2F,GAAGy2B,mBAAqB,IAAMs9B,EACxDh1D,EAAQ83B,UAAUs/D,EAAUC,GAAchlC,IAClCtnF,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB0D,EAAWoiC,EAAU/kC,GAChEryD,EAAQ0+C,SACJsW,GAAah1D,EAAQ0+C,QAAQ/pE,KAC7BqrB,EAAQ0+C,QAAQ5zD,IAAI,CAACurB,OAAQ+gF,EAAUE,WAAYjlC,IACnDryD,EAAQ1pB,QAAQ,mBAGxB,IAAIq3E,EAAc3tD,EAAQ+9C,cAAgB/9C,EAAQ+9C,aAAaxwE,IAAIynF,GAC/DrH,IACAA,EAAY7iE,IAAI,CAACurB,OAAQ+gF,EAAUE,WAAYjlC,IAC/CtnF,KAAK0sB,QAAQu4D,mBAAmB6I,kBAAkB74D,EAAQzyB,IAAI,OAAQogF,EAAYtrE,YACtF,IACD,KACC,GAAIu2E,EAAJ,CACI7tF,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB0D,EAAWoiC,EAAUx+B,GAChE54D,EAAQ0+C,SACJsW,GAAah1D,EAAQ0+C,QAAQ/pE,KAC7BqrB,EAAQ0+C,QAAQ5zD,IAAI,CAACurB,OAAQ+gF,EAAUE,WAAY1+B,IACnD54D,EAAQ1pB,QAAQ,mBAGxB,IAAIq3E,EAAc3tD,EAAQ+9C,cAAgB/9C,EAAQ+9C,aAAaxwE,IAAIynF,GAC/DrH,IACAA,EAAY7iE,IAAI,CAACurB,OAAQ+gF,EAAUE,WAAY1+B,IAC/C7tF,KAAK0sB,QAAQu4D,mBAAmB6I,kBAAkB74D,EAAQzyB,IAAI,OAAQogF,EAAYtrE,YAG1F,SAEZ,CACJ,MACK,IAAKtX,KAAKwC,IAAI,oBAAsBxC,KAAKwC,IAAI,oBAAsB,GAAU3L,kBAAkBE,cAAe,CAC/G,IAAKs1H,EAAU,CACX,IAAIrxH,EAAQ,GAAO4K,iBAAiBqvB,EAAQzyB,IAAI,SAMhD,OALAyyB,EAAQ9vB,aAAe,GAAOjB,eAAelJ,GAC7Ci6B,EAAQlV,IAAI,kBAAmB,GAAUlpB,kBAAkBE,eAC3Dk+B,EAAQlV,IAAI,aAAc,MAC1BkV,EAAQlV,IAAI,QAAS/kB,QACrBi6B,EAAQy8C,kBAEZ,CACA,GAAkB,KAAb26C,GAAqBp3F,EAAQzyB,IAAI,gBAAkB6pH,EACpD,OACOx+B,IACP54D,EAAQ9vB,aAAe0oF,EACvB54D,EAAQlV,IAAI,CAACiqC,WAAYqiE,EAAUrxH,MAAO6yF,EAAWv5B,gBAAiB,GAAUz9D,kBAAkBE,iBAEtGk+B,EAAQ83B,UAAUs/D,EAAU,GAAQn2F,GAAGy2B,oBAAqBu2D,IACxDjuF,EAAQ9vB,aAAe,GAAOjB,eAAeg/G,GAC7CjuF,EAAQlV,IAAI,kBAAmB,GAAUlpB,kBAAkBE,eAC3Dk+B,EAAQlV,IAAI,aAAcssG,GAC1Bp3F,EAAQlV,IAAI,QAASmjG,GACrBjuF,EAAQy8C,kBAAkB,GAElC,OAEC,GAAIvhB,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OAAQ,CAC3C,GAAIqrF,EAAW,CACX,IAAI2+B,EAAe,CAACxiE,WAAYqiE,EAAUrxH,MAAO6yF,EAAWv5B,gBAAiB,GAAUz9D,kBAAkBE,eAGzG,OAFAiJ,KAAK0sB,QAAQvnB,aAAe0oF,OAC5B7tF,KAAK0sB,QAAQ3J,KAAKypG,EAEtB,CACA,IAAKH,EAAU,CACX,IAAIrxH,EAAQ,GAAO4K,iBAAiB5F,KAAK0sB,QAAQlqB,IAAI,SACrDxC,KAAK0sB,QAAQvnB,aAAe,GAAOjB,eAAelJ,GAClD,IAAIwxH,EAAe,CAACl4D,gBAAiB,GAAUz9D,kBAAkBE,cAAeiE,MAAOA,GAEvF,YADAgF,KAAK0sB,QAAQ3J,KAAKypG,EAEtB,CACAxsH,KAAK0sB,QAAQqgC,UAAUs/D,GAAWnJ,IAC9BljH,KAAK0sB,QAAQvnB,aAAe,GAAOjB,eAAeg/G,GAClD,IAAIsJ,EAAe,CAACl4D,gBAAiB,GAAUz9D,kBAAkBE,cAAeiE,MAAOkoH,GACvFljH,KAAK0sB,QAAQ3J,KAAKypG,EAAa,GAEvC,CACJ,CACJ,EAEApgB,eAAgB,SAAUl1F,GACtB,IAAI2/D,EAAW,GAAE3/D,GACbrT,EAAOgzE,EAASr3E,KAAK,QACrBitH,EAAO51C,EAASh3E,KAAK,iBAAiB,GAAQq2B,GAAGC,SACrD,GAAIn2B,KAAK0sB,QAAQK,WAAW01B,oBAAsB,GAAQ5E,kBAAkB,GAAE3mC,GAAS1X,KAAK,WAAaQ,KAAK0sB,QAAQlqB,IAAI,OAAQ,CAC9H,IAAIgY,EAAOq8D,EAASlpD,SAAS,QAAQnuB,KAAK,UAAYq3E,EAASlpD,SAAS,SAASnuB,KAAK,SAClFsU,EAAY/R,OAAO,GAAOyY,IAC7B1G,EAAY9T,KAAK0sB,QAAQk9B,qBAAwB5pD,KAAK0sB,QAAQk9B,mBAAqB91C,EACxF,CACA,MAAa,aAATjQ,EACO7D,KAAK0sH,uBAAuBx1G,GAE1B,SAATrT,GAA6B,WAATA,IAAwBA,IAAS4oH,EAAKxqH,OACnDjC,KAAK2zB,mBAAmBzc,GAEtB,UAATrT,EACO7D,KAAK2sH,oBAAoBz1G,QADpC,CAGJ,EAEAw1G,uBAAwB,SAAUx1G,GAC9B,IAAI2/D,EAAW,GAAE3/D,GACb06F,EAAW,GAAQ/zD,kBAAkBg5B,EAASr3E,KAAK,SACnDotH,EAAmB/1C,EAASh3E,KAAK,mBAAmB,GAAQq2B,GAAG49B,cAC/D+4D,EAAYh2C,EAASlpD,SAAS,YAAY,GAAQuI,GAAG49B,cAAcnmC,SAAS,WAChF,GAAIi/F,EAAiB3qH,OAAQ,CACzB,IAAIs1E,EAAYq1C,EAAiBj/F,SAAS,aAAanuB,KAAK,MACxDstH,EAAgBF,EAAiBj/F,SAAS,aAAauE,QAAQ1yB,KAAK,MACxE,GAAIstH,EAAe,CACf,IAAIlnG,EAAM5lB,KAAK0sB,QAAQ6G,SAAS/wB,IAAIsqH,GAAiBv1C,GACjDk3B,EAAiBme,EAAiBj/F,SAAS,QAAQnuB,KAAK,UAAY,GAAO+3E,EAAU,KAAMxjE,SAC/F,IAAK6R,EACD,OACJ,IAAImnG,EAAkB/sH,KAAK0sB,QAAQm+B,kBAAkBhrD,MAAK+lB,GAAOA,EAAIiuC,YAAci5D,GAAiBv1C,KACpG,IAAKw1C,EACD,OACJ,IAAI74H,EAAO8L,KAAK0sB,QAAQgH,MAAMlxB,IAAIuqH,EAAgBjI,cAClD,GAAI5wH,GAAQA,EAAKsO,IAAI,cACjB,QACCojB,EAAIpjB,IAAI,cAAgBojB,EAAIpjB,IAAI,cACjCojB,EAAI7F,IAAI,CAAC,UAAaw3D,IAC1B3xD,EAAI7F,IAAI,CAAC,MAAS,GAAU7pB,SAAU,KAAQu4G,EAAgB,UAAa1sG,OAAO,GAAO0sG,MACzFv6G,EAAK83G,YAAY+gB,EAAgBl5D,UAAW0jB,GAC5Cv3E,KAAK0sB,QAAQm+B,kBAAkB5Q,OAAOj6C,KAAK0sB,QAAQm+B,kBAAkBzmD,QAAQ2oH,GAAkB,EACnG,CACA,MACJ,CAEA,GAAIF,EAAU5qH,OAAQ,CAClB,GAAQ8jB,IAAI/lB,KAAK0sB,QAAQm+B,mBACzB,GAAQ9kC,IAAI/lB,KAAK0sB,QAAQm+B,kBAAkB5oD,QAC3C,IAAI6qH,EAAgBD,EAAUl/F,SAAS,aAAauE,QAAQ1yB,KAAK,MAC7DutH,EAAkB/sH,KAAK0sB,QAAQm+B,kBAAkBhrD,MAAK+lB,GAAOA,EAAIiuC,WAAai5D,IAKlF,OAJIC,GACA/sH,KAAK0sB,QAAQm+B,kBAAkB5Q,OAAOj6C,KAAK0sB,QAAQm+B,kBAAkBzmD,QAAQ2oH,GAAkB,GAEnG,GAAQhnG,IAAI/lB,KAAK0sB,QAAQm+B,kBAAkB5oD,QACpCjC,KAAK2zB,mBAAmBk5F,EAAU,GAAI,CAACxrB,UAAU,EAAM9pB,UAAWs1C,EAAUl/F,SAAS,aAAanuB,KAAK,OAClH,CAEA,IAAIwtH,EAAgBn2C,EAASlpD,SAAS,iBAAiB,GAAQuI,GAAGmsB,kBAClE,GAAI2qE,EAAc/qH,OAiBd,OAhBA+qH,EAAcr/F,SAAS,UAAU7tB,MAAK,CAAC4C,EAAKsuC,KACxC,IACI+R,EADS,GAAE/R,GACQxxC,KAAK,MAC5B,GAAKujD,EAEL,GAAI/iD,KAAK0sB,QAAQlqB,IAAI,YAAcxC,KAAK0sB,QAAQlqB,IAAI,WAAWugD,YAAcA,EACzE/iD,KAAK0sB,QAAQq9B,qBAGjB,GAAI/pD,KAAK0sB,QAAQylC,cAAe,CAC5B,IAAInhB,EAAQhxC,KAAK0sB,QAAQylC,cAActyD,MAAKmxC,GAASA,EAAM+R,WAAaA,IACpEkqE,EAAYj8E,EAAQhxC,KAAK0sB,QAAQylC,cAAc/tD,QAAQ4sC,IAAU,EACpEi8E,GAAa,GAAMjtH,KAAK0sB,QAAQylC,cAAclY,OAAOgzE,EAAW,EACrE,UAEJjtH,KAAK0sB,QAAQikC,gBAAkB3wD,KAAK0sB,QAAQikC,eAAeyB,iBAI/D,GAAIykB,EAASh3E,KAAK,gBAAgB,GAAQq2B,GAAGm2B,kBAAkBpqD,OAE3D,YADAjC,KAAKosH,qBAAqBv1C,GAI9B,IAAmD3iF,EAA/C+gC,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIovG,GAOxC,GANI38E,IACAA,IAAY/gC,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,IACzC/gC,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,cAGzEiiD,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+B1sE,OAAQ,CAChF,IAAKgzB,EACD,OACJ,IAAIi4F,EAAsBr2C,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+BnvE,KAAK,WACnG0tH,GAAuBj4F,EAAQ+9C,cAAgB/9C,EAAQ+9C,aAAa3f,QAAU65D,GAC9Ej4F,EAAQ1pB,QAAQ,sBACxB,CAEA,GAAIsrE,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAG6lC,eAAe95D,QAAU,2BAAgC,CAC1G,IAAK/N,EACD,OACJ,OAAOA,EAAKq/B,SAASq2D,oBAAoB,CAACz5B,SAAUyhD,EAAU16F,QAAS,aAAiB,8BAA+Bxd,WAAW,GACtI,CAEA,GAAIm9E,EAASh3E,KAAK,kBAAkB,GAAQq2B,GAAGk9B,oBAAoBnxD,OAAQ,CAIvE,IAHCgzB,IAAYA,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIq0E,EAASh3E,KAAK,WAAWL,KAAK,oBAAsBtL,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,IACnI4hD,EAASh3E,KAAK,WAAWL,KAAK,kBAAoBQ,KAAK0sB,QAAQlqB,IAAI,SACnEtO,EAAO8L,KAAK20B,iBACXzgC,EACD,OACJ,IAAIqjF,EAAYV,EAASh3E,KAAK,WAAWL,KAAK,MAC1C2tH,EAAWj5H,EAAKq/B,SAAS1zB,MAAK+lB,GAAOA,EAAIpjB,IAAI,cAAgB+0E,GAAa3xD,EAAIpjB,IAAI,sBAAwB+0E,IAC1G61C,EAAsB,mBAAuB,SAE7CC,GAD+C,yBAAxBD,GAAkDptH,KAAK0sB,QAAQm7D,sBAAgD,oBAAxBulC,GAA6CptH,KAAK0sB,QAAQ42E,kBAA4C,sBAAxB8pB,GAA+CptH,KAAK0sB,QAAQ43D,mBAAqB,IACjOzkF,MAAK+lB,GAAOA,EAAIpjB,IAAI,cAAgB+0E,IACpFv3E,KAAK2zB,mBAAmBkjD,EAAU,CAACmqB,UAAU,IACzCqsB,GACAA,EAAqBttG,IAAI,oBAAqB82D,EAASh3E,KAAK,YAAYo6D,OAAOz6D,KAAK,UAEpF2tH,IACAA,EAASptG,IAAI,oBAAqB82D,EAASh3E,KAAK,YAAYo6D,OAAOz6D,KAAK,UACpEy1B,GAAWA,EAAQzyB,IAAI,mBACnByyB,EAAQzyB,IAAI,kBAAkBA,IAAI,eAAiB2qH,EAAS3qH,IAAI,eAChEyyB,EAAQzyB,IAAI,kBAAkBud,IAAI,UAAWotG,EAAS3qH,IAAI,YACrDtO,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQyqD,uBAE/Bx5F,GAAQA,EAAK0gC,UAAUC,kBAAkB3gC,EAAK+kG,cAEtD,CACA,GAAIpiB,EAASh3E,KAAK,mBAAmBoC,OAAQ,CACzC,IAAIqrH,EAAgE,aAAjDz2C,EAASh3E,KAAK,mBAAmBL,KAAK,QAIzD,IAHCy1B,IAAYA,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIq0E,EAASh3E,KAAK,mBAAmBL,KAAK,oBAAsBtL,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,EAAUq4F,GAAgB,cACrKz2C,EAASh3E,KAAK,mBAAmBL,KAAK,kBAAoBQ,KAAK0sB,QAAQlqB,IAAI,SAC3EtO,EAAO8L,KAAK20B,iBACXzgC,EACD,OACJ,IAAIq5H,EAAiB12C,EAASh3E,KAAK,mBAC/B2tH,EAAmBD,EAAe/tH,KAAK,MACvC+5F,EAAkBg0B,EAAe/tH,KAAK,WACtC2tH,EAAWj5H,EAAKq/B,SAAS1zB,MAAK+lB,GAAOA,EAAIpjB,IAAI,cAAgBgrH,GAAoB5nG,EAAIpjB,IAAI,sBAAwBgrH,IACrHt5H,EAAKkkG,sBAAsBh3F,KAAKosH,GAChC,GAAQznG,IAAI7xB,EAAKkkG,uBACb+0B,IACAA,EAASptG,IAAI,aAAa,GACrB7rB,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQ08D,cAAcwtB,GACrCj5H,EAAK0gC,UAAUC,kBAAkB3gC,EAAK+kG,eAEtCM,EAAkBv5F,KAAK0sB,QAAQ88B,qBAC3Bt1D,EAAKsO,IAAI,cAAgBxC,KAAK0sB,QAAQ4mC,MACtCtzD,KAAK0sB,QAAQ4mC,MAAMm6D,oBAAoBl0B,GAEvCv5F,KAAK0sB,QAAQ88B,mBAAqB+vC,EAE9C,CACA,GAAI1iB,EAASh3E,KAAK,gBAAgBoC,OAAQ,CACtC,IACIyrH,EADuB72C,EAASh3E,KAAK,gBACIL,KAAK,MAC9C2tH,EAAWj5H,EAAKq/B,SAAS5c,QAAOiP,GAAOA,EAAIpjB,IAAI,cAAiBojB,EAAIpjB,IAAI,aAAaoH,IAAM8jH,IAC3FP,GACA,GAAEA,GAAUrtH,MAAK,CAAC4C,EAAKxB,KACnBA,EAAK6e,IAAI,aAAa,GACjB7rB,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQ08D,cAAcz+F,EAAK,IAElDhN,EAAK0gC,UAAUC,kBAAkB3gC,EAAK+kG,aAC1C,CACA,GAAIpiB,EAASh3E,KAAK,eAAeoC,OAAQ,CAErC,IADCgzB,IAAYA,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIq0E,EAASh3E,KAAK,eAAeL,KAAK,oBAAsBtL,EAAO8L,KAAK01B,QAAQT,EAAsD,aAA7C4hD,EAASh3E,KAAK,eAAeL,KAAK,SAA0B,eAC7LtL,EACD,OACJ,IAAIu7G,EAAev7G,EAAKq/B,SAASimC,OACjC,GAAEi2C,GAAc3vG,MAAK,CAAC4C,EAAKxB,KAClBhN,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQ08D,cAAcz+F,EAAK,IAE9ChN,EAAK0gC,UAAUC,mBACnB,CACA,GAAIgiD,EAASh3E,KAAK,kBAAkB,GAAQq2B,GAAG0gC,eAAe30D,OAAQ,CAClE,IAAIvB,EAAQm2E,EAASh3E,KAAK,WAAWL,KAAK,MAC1C,GAAKq3E,EAASr3E,KAAK,SAAWQ,KAAK0sB,QAAQ89B,YAAYoF,SAAainB,EAASr3E,KAAK,OAASQ,KAAK0sB,QAAQ89B,YAAYqF,WAShH,OAAO7vD,KAAK2zB,mBAAmBzc,GAR/BlX,KAAK0sB,QAAQshC,oBAAoBttD,GAAOhB,IAChC,gBAAsBM,KAAK0sB,QAAQlqB,IAAI,mBACvC,oBAAwB,QAAS9C,GACjC,gCACJ,GAMZ,CAEJ,EAEAiuH,gBAAiB,SAAU92C,EAAU73E,GACjCA,EAAQgiG,WAAanqB,EAAWA,EAASlpD,SAAS,WAAWA,SAAS,YACtE,IAAIu/E,EAAYC,EAAoB/1F,EAAQ,CAAC,EACzCi1F,EAAgBrtG,EAAQqtG,cAoB5B,OAnBIx1B,EAASlpD,SAAS,aAAa7tB,MAAK,CAAC4C,EAAK60E,KAC1CA,EAAY,GAAEA,IACVV,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,gBAAgB1sE,QAAY40E,EAASh3E,KAAK,iBAAiB,GAAQq2B,GAAG03F,4BAA4B3rH,QAAU40E,EAASh3E,KAAK,iBAAiB,GAAQq2B,GAAG23F,uBAAuB5rH,OASlNs1E,EAAU/3E,KAAK,QAAUQ,KAAK0sB,QAAQlqB,IAAI,OAC1C0qG,EAAa31B,EAEb41B,EAAqB51B,EAXrBA,EAAU/3E,KAAK,QAAU6sG,GACzBa,EAAa31B,EACb41B,EAAqB51B,GAGrB21B,EAAa31B,CAOrB,IAEJ21B,IAAe91F,EAAMmgE,UAAY21B,EAAW1tG,KAAK,OACjD2tG,IAAuB/1F,EAAMqpF,kBAAoB0M,EAAmB3tG,KAAK,OAClE4X,CACX,EAEAuc,mBAAoB,SAAUzc,EAASlY,GACnCA,EAAUA,GAAW,CAAC,EACtB,IAAI63E,EAAW,GAAE3/D,GACb42G,EAAaj3C,EAASh3E,KAAK,aAC3BogG,EAASjhG,EAAQ85F,MACjBi1B,EAASl3C,EAASr3E,KAAK,MACvBwuH,EAAc,GAAQnwE,kBAAkBkwE,GACxCE,EAAcF,GAAU,GAAQ3qE,mBAAmB2qE,GACnD59D,EAAW0mB,EAASr3E,KAAK,SAAWR,EAAQmxD,SAEhD,GAAI0mB,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAGmvC,WAAWpjE,SAAWjD,EAAQiiG,UAG/E,YAFIjhG,KAAK0sB,QAAQ4mC,OACbtzD,KAAK0sB,QAAQ4mC,MAAM3/B,mBAAmBzc,EAASlY,IAIvD,GAAI63E,EAASh3E,KAAK,UAAUoC,QACpBjD,EAAQiiG,UACR,OAGH9wC,IACDA,EAAWnwD,KAAK0sB,QAAQlqB,IAAI,QAEhC,IAAI6pG,EAAgB,GAAQxuD,kBAAkBsS,GAC1CuyC,EAAY2J,IAAkBrsG,KAAK0sB,QAAQlqB,IAAI,OAEnD,GAAIxD,EAAQiiG,aAAe6sB,EAAW7rH,QAAWjD,EAAW,KACxD,OAAOgB,KAAK0sB,QAAQ44F,mBAAmB5xC,iBAAiBmD,EAAU,CAC9D2pB,cAAc,EACdZ,kBAAmB5gG,EAAQ4gG,mBAAqB,KAChD9G,MAAOmH,EACPe,SAAUhiG,EAAQgiG,SAClB7wC,SAAUA,EACVjF,IAAKlsD,EAAQksD,MAIrB,GAAI4iE,EAAW7rH,SAAWjD,EAAQksD,IAAK,CACnC,IAAIuhE,EAAO51C,EAASh3E,KAAK,iBAAiB,GAAQq2B,GAAGC,SACrD,GAAIs2F,EAAKxqH,OAAQ,CACb6rH,EAAarB,EAAK9+F,SAAS,aACvBmgG,EAAW7rH,SACX40E,EAAWi3C,EAAWngG,SAAS,WAC/BsyE,EAAS6tB,EAAWngG,SAAS,UAEjC,IAAIugG,EAAaluH,KAAK2tH,gBAAgB92C,EAAU,CAACw1B,cAAeA,IAChE,OAAOrsG,KAAK2zB,mBAAmBkjD,EAAS,GAAI,GAAE7sE,OAAOhL,EAAS,CAC1DquG,QAAQ,EACRvU,MAAOmH,EACP1oB,UAAW22C,EAAW32C,WAAak1C,EAAKjtH,KAAK,MAC7CihG,kBAAmBytB,EAAWztB,oBAEtC,CACA,IAAI0tB,EAAWt3C,EAASh3E,KAAK,WAAW,GAAQq2B,GAAGg+B,aACnD,IAAKl1D,EAAQuhG,eAAiB4tB,EAASlsH,QAAU,CAAC,WAAY,QAAQsT,SAAS44G,EAAS,GAAG37G,SAAU,CACjG,GAAIqkE,EAASh3E,KAAK,UAAUoC,QACI,SAAxBksH,EAAS,GAAG37G,QACZ,OAER,IAAKkwF,EACD,OAIJ,GAHAorB,EAAaK,EAASxgG,SAAS,aAC3BmgG,EAAW7rH,SACX40E,EAAWi3C,EAAWngG,SAAS,YAC/BwgG,EAAStuH,KAAK,kBAAkB,GAAQq2B,GAAG49B,kBAAkBk6D,OAAiB/rH,OAC9E,OACJ,GAAIjC,KAAK0sB,QAAQk/B,iBAAoBirB,EAASr3E,KAAK,UAAYQ,KAAK0sB,QAAQk/B,gBAAgB1zC,IACxF,OACJ,OAAOlY,KAAK2zB,mBAAmBkjD,EAAS,GAAI,GAAE7sE,OAAOhL,EAAS,CAC1DuhG,eAAe,EAAM6tB,iBAAkBD,EAAS,GAAG37G,UAE3D,CACA,IAAI67G,EAAiB,GAoBrB,OAnBAP,EAAaj3C,EAASlpD,SAAS,oCAAoC,GAAQuI,GAAGqiD,eAAet2E,OACzF40E,EAASlpD,SAAS,oCAAoC,GAAQuI,GAAGqiD,eAAe5qD,SAAS,oBAAsB,GAAQuI,GAAGo4F,QAAU,MACpIz3C,EAASlpD,SAAS,YAAYA,SAAS,WAAWA,SAAS,oCAAoC,GAAQuI,GAAGqiD,eAAe5qD,SAAS,oBAAsB,GAAQuI,GAAGo4F,QAAU,MACjLR,EAAWhuH,MAAK,CAAC4C,EAAK6rH,KAClB,IAAIC,EAAiB,GAAED,GACnBE,EAAqBD,EAAe7gG,SAAS,WAC7C+gG,EAAmBF,EAAe7gG,SAAS,SAC3CiyE,EAAoB5/F,KAAK2zB,mBAAmB86F,EAAmB,GAAI,CACnExtB,WAAW,EACX3qB,eAAgBt3E,EAAQs3E,eACxB8qB,oBAAqBpiG,EAAQoiG,oBAC7Bjd,iBAAkBnlF,EAAQmlF,iBAC1BvwD,YAAa50B,EAAQ40B,YACrButE,gBAAiBniG,EAAQmiG,gBACzBhxC,SAAUA,EACV2oC,MAAO41B,IAEXL,EAAejtH,KAAKw+F,EAAkB,IAEnC5/F,KAAK2zB,mBAAmBkjD,EAAS,GAAI,GAAE7sE,OAAO,CACjD41F,kBAAmByuB,EAAepsH,OAASosH,EAAiB,KAC5DnjE,IAAK2rB,EAAS,IACf73E,GACP,EAEKA,EAAQquG,QAAU4gB,GAAeA,IAAgBjuH,KAAK0sB,QAAQy2B,WAC/D,QAAY,+BACZ,QAAYjsC,IAGhB,IAAIy3E,EAAc+T,EAAYsrB,EAAc3hB,EAG5C,GAFArtG,EAAQgiG,WAAarS,EAAc9X,EAASlpD,SAAS,WAAWnuB,KAAK,iBAEjEmvF,IAAgB3uF,KAAK0sB,QAAQlqB,IAAI,OAAQ,CACzC,GAAIxD,EAAQuhG,eAA8C,SAA7BvhG,EAAQovH,mBAAgCpvH,EAAQuhG,cAAe,CACxF,IAAIrsG,EAAO8L,KAAK20B,eACZu5F,EAAaluH,KAAK2tH,gBAAgB92C,EAAU,CAACw1B,cAAeA,EAAe9L,cAAevhG,EAAQuhG,cAAeS,SAAUhiG,EAAQgiG,WACvI,OAAO9sG,EAAKk4G,eAAev1B,EAAU,GAAE7sE,OAAOhL,EAAS,CAAC0jG,UAAWA,EAAWnrB,UAAW22C,EAAW32C,UAAWkpB,kBAAmBytB,EAAWztB,oBACjJ,CAGI,OAFA,QAAY,8BACZ,QAAYvpF,EAGpB,CAEA,IAAI+d,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa+1B,GAC7Cz6F,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,GAAUj2B,EAAQugB,WAAavgB,EAAQ2vH,gBAAkB,aAC3FT,EAAaluH,KAAK2tH,gBAAgB92C,EAAU,CAACw1B,cAAeA,EAAe9L,cAAevhG,EAAQuhG,cAAeS,SAAUhiG,EAAQgiG,WAEvI,GAAInqB,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+B1sE,OAAQ,CAChF,IAAKgzB,EACD,OACJ,IAAIi4F,EAAsBr2C,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+BnvE,KAAK,WACnG0tH,GAAuBj4F,EAAQ+9C,cAAgB/9C,EAAQ+9C,aAAa3f,QAAU65D,IAC1Er2C,EAASlpD,SAAS,YAAY,GAAQuI,GAAGy4C,+BAA+BhhD,SAAS,eAAe,GAAQuI,GAAGy4C,gBAAgB1sE,QAAU/N,EAAK+gC,QAAQzyB,IAAI,mBACtJq0E,EAASlpD,SAAS,YAAc,GAAQuI,GAAGy4C,WAAa,qBAAqB7uE,MAAK,CAAC4C,EAAK2/F,KACpF,IAAIC,EAAQ,GAAED,GAAQ10E,SAAS,eAAe,GAAQuI,GAAGy4C,gBAAgBz8C,QACzE,GAAIowE,EAAMrgG,OAAQ,CACd,IAAIsgG,EAAUD,EAAM9iG,KAAK,MACrBgjG,EAAWF,EAAM30E,SAAS,OAAOrrB,OACrC,GAAIpO,EAAK+gC,QAAQzyB,IAAI,kBAAkBA,IAAI,cAAgBggG,EAAU,CACjE,IAAIlsB,EAAiBpiF,EAAK+gC,QAAQzyB,IAAI,kBAClCg3E,EAAY,CACR5vE,GAAI24F,EACJrqF,IAAKsqF,EACL79C,SAAU29C,EAAM30E,SAAS,YAAYrrB,QAAUkgG,GAAYD,EAC3Dv9C,KAAMs9C,EAAM30E,SAAS,QAAQrrB,OAC7BgpC,OAAQg3D,EAAM30E,SAAS,mBAAmB,GAAQuI,GAAGo2B,4BAA4B3+B,SAAS,QAAQnuB,KAAK,MACvG8mF,WAAYgc,EAAM30E,SAAS,mBAAmB,GAAQuI,GAAGo2B,4BAA4B3+B,SAAS,QAAQnuB,KAAK,OAC3GmmF,MAAO2c,EAAM30E,SAAS,SAASrrB,QAEvCg0E,EAAev2D,IAAI,YAAay5D,GAChCtlF,EAAK+gC,QAAQlV,IAAI,iBAAkBu2D,EACvC,CACJ,KAGJrhD,EAAQ0gD,cAAgB1gD,EAAQ0gD,aAAalnD,aAC7CwG,EAAQ1pB,QAAQ,uBAE5B,CAMA,OAJIsrE,EAASh3E,KAAK,iBAAmB,GAAQq2B,GAAGmsB,aAAe,MAAMpgD,SAAWjD,EAAQoxD,aACpFpwD,KAAK0sB,QAAQilC,iBAGbz9D,EAAK+gC,QAAQzyB,IAAI,eAA8C,SAA7BxD,EAAQovH,kBAAgCv3C,EAASlpD,SAAS,WAAW,GAAQuI,GAAGs4C,kBAAkBvsE,OAGjI/N,EAAKk4G,eAAev1B,EAAU,GAAE7sE,OAAOhL,EAAS,CAAC0jG,UAAWA,EAAWnrB,UAAW22C,EAAW32C,UAAWkpB,kBAAmBytB,EAAWztB,0BAH7I,CAIJ,EAEAksB,oBAAqB,SAAUz1G,GAC3B,IAAIsoF,EAAQtoF,EAAQyiB,aAAa,MAC7BymE,EAAY,GAAElpF,GAASyW,SAAS,aAAanuB,KAAK,MACtD,GAAIggG,EAAO,CACP,IAAI9+F,EAAO,GAAEwW,GAASrX,KAAK,SAASL,KAAK,QACrComB,EAAM5lB,KAAK0sB,QAAQ6G,SAAS/wB,IAAI49F,GAAaZ,GAC7C55E,IACa,QAATllB,GACAklB,EAAI7F,IAAI,QAAS,GAAUhqB,aAElB,QAAT2K,GACAklB,EAAI7F,IAAI,QAAS,GAAU/pB,WAGvC,CACJ,EAEAqgE,WAAY,SAAUphC,EAASpxB,GAChB7D,KAAK01B,QAAQT,GACnBohC,WAAWxyD,EACpB,EAEAorG,aAAc,SAAUh6E,EAASpxB,GAClB7D,KAAK01B,QAAQT,GACnBg6E,aAAaprG,EACtB,IAGJ,oBAA0B,qBAAyB,CAC/CktB,UAAW,0DACXvD,SAAU,GAAUusD,YAAY60C,eAChC9xF,YAAa,GAAU7lC,aAAa43H,aACpC/gG,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,gEAAiE,gBACjE,iBAAkB,eAClB,qCAAsC,iBACtC,uBAAwB,kBACxB,oCAAqC,SACrC,oBAAqB,QACrB,0BAA2B,uBAG/BjC,OAAQ,SAAUhwB,GACd,IAAK,6BAED,YADA,GAAM+M,QAAQgC,MAAM,aAAiB,gDAGzC/O,IAAYA,EAAU,CAAC,GACvBgB,KAAK8uH,mBAAmB9vH,GACxB,IAAIooB,EAAWpoB,EAAQ0tB,QAAU,CAAC1tB,EAAQ0tB,SAAW,sBACrD1sB,KAAKrC,EAAE,eAAe2T,OAA2B,IAApB8V,EAASnlB,QACtCjC,KAAKrC,EAAE,iBAAiB4T,OAA2B,IAApB6V,EAASnlB,QACxCjC,KAAKrC,EAAE,2DAA2Dqd,QAClE,GAAElb,KAAKsnB,GAAWsF,IACd1sB,KAAKrC,EAAE,2DAA2DkP,OAC1D7M,KAAKs2C,kBAAkB5pB,GAAS,IAE5C1sB,KAAKrC,EAAE,0BAA0B4T,OAAO6V,EAASnlB,OAAS,GAC1DjC,KAAKu2C,YAAYnvB,EAAS,IAC1BpnB,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAKqpE,SAAW,aAAiB,QAAU,aAAiB,WACvFrpE,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACH,IAAI0lC,EAAoB,CACpB1oC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,QAEfuU,YAAYsG,mBACZx1C,KAAKrC,EAAE,0BAA0B28B,SAAS2oC,GAC1CjjE,KAAKrC,EAAE,oCAAoC28B,SAAS2oC,GACpDjjE,KAAKrC,EAAE,8CAA8C28B,SAAS2oC,GAC9DjjE,KAAKrC,EAAE,8DAA8D28B,SAAS2oC,GAC9EjjE,KAAKrC,EAAE,2BAA2BoR,OAAO,EAE7C5D,SAAUnL,KAAKkL,MAAM5C,KAAKtI,OAGlC,EAEA8uH,mBAAoB,SAAU9vH,GAC1BgB,KAAKrC,EAAE,sCAAsC2T,OAAOtS,EAAQ+8B,QAC5D/7B,KAAKrC,EAAE,yCAAyC2T,OAAOtS,EAAQ68B,WAC3D78B,EAAQ+8B,QACR/7B,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,iBACnDtD,EAAQ68B,WACR77B,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,2BACvDtC,KAAKrC,EAAE,wBAAwBuC,YAAY,aAAaqN,IAAI,IAC5DvN,KAAKrC,EAAE,oBAAoB4P,IAAI,IAC/BvN,KAAKrC,EAAE,yBAAyB4P,IAAI,IACpCvN,KAAKrC,EAAE,qCAAqC2E,KAAK,IACjDtC,KAAKrC,EAAE,YAAYwC,SAAS,cAC5BH,KAAK+uH,kBACL/uH,KAAKrC,EAAE,eAAe2E,KAAK,IAAInC,SAAS,UACxCH,KAAKrC,EAAE,SAASuC,YAAY,WAC5B,IAAI8uH,EAAehvH,KAAKrC,EAAE,yBACtBsxH,EAAuBD,EAAanvH,KAAK,oCAC7CmvH,EAAanvH,KAAK,qCAAqCL,KAAK,aAAcyvH,EAAqBzvH,KAAK,eAAe8C,KAAK2sH,EAAqB3sH,QAC7I,IAAI4sH,EAAmBlvH,KAAKrC,EAAE,6BAC1BwxH,EAA2BD,EAAiBrvH,KAAK,oCACrDqvH,EAAiBrvH,KAAK,yCAAyCL,KAAK,aAAc2vH,EAAyB3vH,KAAK,eAAe8C,KAAK6sH,EAAyB7sH,OACjK,EAEAi0C,YAAa,SAAU7pB,GACnB1sB,KAAK0sB,QAAUA,EACf1sB,KAAKrC,EAAE,4BAA4BwC,SAAS,UAC5CH,KAAKrC,EAAE,8DACEqT,YAAYhR,KAAKs2C,kBAAkB5pB,IAC5C,IAAIggD,EAAc1sE,KAAK0sB,QAAQlqB,IAAI,0BACnCkqE,EAAcA,EAAY13C,MAAK,CAACr0B,EAAEC,IAAeD,GAAKX,KAAK0sB,QAAQixB,QAAU,EAAI/8C,GAAKZ,KAAK0sB,QAAQixB,OAAS,EAAI,IAC5G+uB,EAAYzqE,QACZjC,KAAKrC,EAAE,yCAAyC2E,KAAKoqE,EAAY,IACjE1sE,KAAKrC,EAAE,8BAA8BuC,YAAY,UACjDF,KAAKrC,EAAE,0CAA0CuC,YAAY,WAG7DF,KAAKovH,gBAAgBpvH,KAAKrC,EAAE,8DAChCqC,KAAKrC,EAAE,iDAAiDuT,SACxD,IAAK,IAAI1N,EAAI,EAAGA,EAAIkpE,EAAYzqE,OAAQuB,IACpC,GAAE,SAAU,CAACsoE,MAAO,kDAAkDxpE,KAAKoqE,EAAYlpE,IAAIuwB,aAAa/zB,KAAKrC,EAAE,gDAEvH,EAEA24C,kBAAmB,SAAU5pB,GACzB,IAAI9e,EAAQ,GAAE,GAAUyhH,sBAAsB,CAACn3G,IAAKwU,EAAQlqB,IAAI,OAAQzD,KAAM2tB,EAAQlqB,IAAI,WAE1F,OADAoL,EAAM/N,KAAK,kBAAkBoF,UAAUynB,EAAQvnB,aAAcnF,KAAK88B,aAC3DlvB,CACX,EAEA6oC,cAAe,SAAU5rC,GACrB,IAAI+C,EAAQ,GAAE/C,EAAG4C,QAAQstB,QAAQ,sBAC7BrO,EAAU,gBAAoB9e,EAAMlO,KAAK,QAC7CM,KAAKu2C,YAAY7pB,EACrB,EAEA0iG,gBAAiB,SAAUxiD,GACvB5sE,KAAKrC,EAAE,oBAAoB4P,IAAI,IAC/BvN,KAAKrC,EAAE,8BAA8BwC,SAAS,UAC9CysE,EAAgBzsE,SAAS,UAAUmC,KAAK,IACxCtC,KAAKrC,EAAE,4BAA4BuC,YAAY,SACnD,EAEAssF,oBAAqB,SAAU3hF,GAC3B,IAAIiiE,EAAiB,GAAEjiE,EAAG4C,QACtBm/D,EAAkBE,EAAe/xC,QAAQ,mBAAmBl7B,KAAK,mBACjEitE,EAAe9/D,SAAS,qBACxBhN,KAAKovH,gBAAgBxiD,IAGhBE,EAAe9/D,SAAS,wBAC7BhN,KAAKrC,EAAE,4BAA4BwC,SAAS,UAC5CH,KAAKrC,EAAE,oBAAoB4P,IAAI,KAEnCq/D,EAAgBtqE,KAAKwqE,EAAexqE,QACpCsqE,EAAgB1sE,YAAY,UAAUV,KAAK,aAAcstE,EAAettE,KAAK,eAC7EQ,KAAKrC,EAAE,8BAA8BuC,YAAY,UACrD,EAEAgL,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,EAEAuvG,eAAgB,WAEZ,IADWtvH,KAAKrC,EAAE,wBACRqP,SAAS,aAAc,CAC7B,IAAI1K,EAAOnE,KAAK6B,KAAKrC,EAAE,gCAAgC6E,IAAI,GAAGuI,MAAO,CAACwkH,OAAO,IAC7EvvH,KAAKrC,EAAE,2BAA2BwC,SAAS,UAC3CH,KAAKrC,EAAE,8BAA8B6E,IAAI,GAAGuI,MAAQzI,CACxD,CACAtC,KAAKrC,EAAE,YAAYoP,YAAY,cAAe/M,KAAKrC,EAAE,gCAAgC6E,IAAI,GAAGuI,MAChG,EAEAgkH,gBAAiB,WACb,IAAIS,EAA0D,KAArCxvH,KAAKrC,EAAE,mBAAmB2E,OACnDtC,KAAKrC,EAAE,oCAAoC4T,QAAQi+G,EACvD,EAEAC,OAAQ,WACJ,IAAIzkF,EAAOhrC,KAAKrC,EAAE,yBACjBqtC,EAAKh+B,SAAS,cAAgBg+B,EAAK7qC,SAAS,aACvB,IAArB6qC,EAAKxoC,IAAI,GAAGuI,OAAgBigC,EAAK9qC,YAAY,YAClD,EAEAwvH,gBAAiB,WACb,IAAI3wH,EAAOiB,KAAKrC,EAAE,yBAAyB4P,MACvCoiH,EAAW3vH,KAAKrC,EAAE,wBAAwB4P,MAAQvN,KAAKrC,EAAE,wBAAwB4P,WAAQ6N,EACzF+6D,EAAUn2E,KAAKrC,EAAE,gEAAgE6B,KAAK,cACtFm+C,EAAS39C,KAAKrC,EAAE,oBAAoB4P,OAASvN,KAAKrC,EAAE,8CAA8C2E,OAClGmjD,EAAazlD,KAAKrC,EAAE,qCAAqC6B,KAAK,cAC9DylD,EAAcjlD,KAAKrC,EAAE,qCAAqC2E,QAAU,GACpEwxB,EAAQ9zB,KAAKrC,EAAE,0CAA0C6B,KAAK,cAC9Du2B,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIonC,IAASxqC,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy4C,WAAa,YAC1Ex7D,EAAE,QAAQgS,EAAEpmB,GAAMs3B,KAClBljB,EAAE,WAAWgS,EAAEgxD,GAAS9/C,KACxBljB,EAAE,SAASgS,EAAEsgC,GAAYpvB,KACzBljB,EAAE,eAAegS,EAAE8/B,GAAa5uB,KAChCljB,EAAE,cAAcgS,EAAE2O,GAAOuC,KAC1Bs5F,GACA55F,EAAG5iB,EAAE,aAAagS,EAAEwqG,GAC5B3vH,KAAK0sB,QAAQiK,WAAWZ,GAAKA,IACrB,IAAI4zD,EAAY,GAAE5zD,GAAIl2B,KAAK,mBAAmByC,OAAOkC,OAAS,IAAM,GAAEuxB,GAAIv2B,KAAK,QAAQgF,OACnFywB,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa+wB,GACjD10D,EAAQlV,IAAI,cAAc,GAC1BkV,EAAQlV,IAAI,4BAA4B,GACxCkV,EAAQ8+C,KAAK,cACb9+C,EAAQ++C,aAAa,MAAM,KAOvB,GANA/+C,EAAQ8+C,KAAK,aACb9+C,EAAQo+C,YACRrzE,KAAKkL,QACL,qCACA+pB,EAAQogD,cACRpgD,EAAQ1pB,QAAQ,YAAa0pB,IACvBj1B,KAAK0sB,QAAQK,aAAc/sB,KAAK0sB,QAAQK,WAAW01B,mBAAqB,CAC1E,IAAIqsC,EAAkB,GAAI,CAACjrF,KAAM,QAAQsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGo4C,WAClEn7D,EAAE,OAAQ,CAAC+E,IAAKyxE,EAAY,IAAM,GAAOxgF,QAC9CnJ,KAAK0sB,QAAQiK,WAAWm4D,EAC5B,IACF,IACH,KACC9uF,KAAKrC,EAAE,eAAeuC,YAAY,UAAUoC,KAAK,aAAiB,iCAClEtC,KAAKrC,EAAE,0BAA0BwC,SAAS,UAAU,GAEhE,EAEAyvH,aAAc,SAAU/kH,GACpB,GAAI,GAAEA,EAAG4C,QAAQstB,QAAQ,gBAAgB/tB,SAAS,cAE9C,YADA,GAAEnC,EAAG4C,QAAQ4b,OAGjB,IAAIwmG,EAAc7vH,KAAKrC,EAAE,oBAAoB4P,OAASvN,KAAKrC,EAAE,8CAA8C2E,OACvGgL,EAActN,KAAKrC,EAAE,wBAAwB4P,MACjD,GAA6C,IAAzCvN,KAAKrC,EAAE,yBAAyB4P,MAChCvN,KAAKrC,EAAE,eAAe2E,KAAK,aAAiB,mBAAmBpC,YAAY,UAC3EF,KAAKrC,EAAE,2BAA2BwC,SAAS,gBAE3C,GAAoB,IAAfmN,IAAwD,GAAlCA,EAAYglB,OAAO,aAAiD,GAA7BhlB,EAAYglB,OAAO,OAA8B,IAAfhlB,EAAqB,CACrHtN,KAAKrC,EAAE,eAAe2E,KAAK,IAAInC,SAAS,UACxCH,KAAKrC,EAAE,SAASuC,YAAY,WAC5B,IACI4vH,EADA/5F,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIs5G,IAAc18G,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGu6C,aAE3EzwE,KAAK0sB,QAAQiK,WAAWZ,GAAKA,IACzB,GAAEA,GAAIpI,SAAS,SAASA,SAAS,WAAW7tB,MAAK,CAACkrC,EAAM9pC,KAChD,GAAEA,GAAM1B,KAAK,QAAU,GAAQ02B,GAAGy4C,aAClCmhD,GAAsB,EAAI,IAE9BA,EACA9vH,KAAK0vH,mBAEL1vH,KAAKrC,EAAE,eAAeuC,YAAY,UAAUoC,KAAK,GAAG,aAAiB,mDACrEtC,KAAKrC,EAAE,6BAA6BwC,SAAS,WACjD,IACAszC,IACAzzC,KAAKrC,EAAE,eAAeuC,YAAY,UAAUoC,KAAK,GAAG,aAAiB,0CACrEtC,KAAKrC,EAAE,6BAA6BwC,SAAS,UAAU,GAE/D,MAEIH,KAAKrC,EAAE,eAAeuC,YAAY,UAAUoC,KAAK,GAAG,aAAiB,6CACrEtC,KAAKrC,EAAE,0BAA0BwC,SAAS,UAGtD,IAGJ,aAAmB,0BAA8B,CAC7C4wB,UAAW,mCACXjD,YAAa,kBACbG,YAAa,CAAC7E,MAAO,aACrBkL,eAAgB,aAChB9G,SAAU,GAAUuiG,YAEpBxhG,YAAa,WACTvuB,KAAKgwH,YAAc,KACnBhwH,KAAK8zB,MAAMzQ,GAAG,MAAOrjB,KAAKiwH,YAAajwH,MACvCA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAK4yG,cAAe5yG,MAC7CA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKs2G,sBAAuBt2G,MAC3DA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKkwH,oBAAqBlwH,MACzDA,KAAK8zB,MAAMzQ,GAAG,sBAAuBrjB,KAAKkwH,oBAAqBlwH,MAC/DA,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKmwH,mBAAoBnwH,MAC3D,eAAmB,eAAgBA,KAAKy8F,oBAAqBz8F,MAC7D,IAAImzG,EAAWnzG,KAAKozG,wBACpBpzG,KAAKD,IAAIsjB,GAAG8vF,EAAUnzG,KAAKqzG,aAAa/qG,KAAKtI,OAC7CA,KAAK+tB,aAAa1K,GAAG,cAAerjB,KAAK6yB,UAAUvqB,KAAKtI,OACxDA,KAAKrC,EAAE,oBAAoB8N,MAAMzL,KAAKowH,gBAAgB9nH,KAAKtI,OAC3D,MAAU,gBAAiBA,KAAK65B,gBAAiB75B,MACjD,MAAU,gBAAiBA,KAAKqwH,gBAAiBrwH,MACjDA,KAAKrC,EAAE,SAAS0lB,GAAG,QAASrjB,KAAK6xB,aAAavpB,KAAKtI,MACvD,EAEAgvB,OAAQ,SAAUhwB,QACQoc,IAAlBpc,EAAQm6B,QACRn5B,KAAKgwH,YAAc,MACvBhwH,KAAKrC,EAAE,mBAAmBoP,YAAY,eAAgB,kBAAsB,wBAAwB9K,SAC9E,SAAlBjD,EAAQm6B,OAAsC,oBAAlBn6B,EAAQm6B,OAAiD,sBAAlBn6B,EAAQm6B,OAAmD,oBAAlBn6B,EAAQm6B,OAAiD,yBAAlBn6B,EAAQm6B,OAAoCn6B,EAAQ22B,gBACvM31B,KAAK4xB,cACD,kBAAsB,WAAW5kB,SAAS,cAC1ChN,KAAK86B,eAGjB,EAEAs1F,gBAAiB,WACb,IAAI18F,EAAQ1zB,KAAK8zB,MACbw8F,EAAiB,kBAAsB,WAC3C,GAAIA,EAAetjH,SAAS,SAAU,CACd0mB,EAAM/c,QAAOziB,GAAQA,EAAKsO,IAAI,WAAatO,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,mBAC9N6P,SAASne,IACdA,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQwrD,cAAc,GAE7C,CACA,GAAI6hC,EAAetjH,SAAS,aAAc,CACtB0mB,EAAM/c,QAAOziB,GAAQA,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,mBAC3L6P,SAASne,IACVA,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQwrD,cAAc,GAE7C,CACA,GAAI6hC,EAAetjH,SAAS,eAAgB,CACtB0mB,EAAM/c,QAAOziB,GAAQA,EAAKsO,IAAI,UAAYtO,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,mBAC7N6P,SAASne,IACZA,EAAK0gC,UAAUqO,UAChB/uC,EAAK0gC,UAAUqO,QAAU,IAAI,mBAAuB,CAAC9N,UAAWjhC,EAAK0gC,aACzE1gC,EAAK0gC,UAAUqO,QAAQwrD,cAAc,GAE7C,CACA,0CACJ,EAEA50D,gBAAiB,SAAU96B,GACvBiB,KAAKrC,EAAE,oBAAoBoP,YAAY,UAAW,kBAAsB,+BAA+B9K,OAC3G,EAMAmxG,sBAAuB,WACnB,OAAK,GAAEhoG,YAAYrH,OAAOwvG,SAEd,GAAEnoG,YAAYrH,OAAOyvG,cAGtB,sBAFA,aAFA,OAMf,EAEAH,aAAc,SAAUxoG,GAGxB,EAEA0lH,kBAAmB,WACfh8F,aAAav0B,KAAKwwH,qBAClBxwH,KAAKrC,EAAE,wBAAwBwC,SAAS,UACxCH,KAAK6uB,kBACL7uB,KAAKwwH,oBAAsB,IAC/B,EAoBA/zB,oBAAqB,SAAUr1E,GAC3BpnB,KAAKD,IAAIP,KAAK,iBAAkB4nB,EAASgqB,UAAUnvC,OAAS,EAChE,EAEAguH,YAAa,SAAU/7H,GACnB8L,KAAKkvB,SAASh7B,EAAK0V,GAAI1V,EAAK0gC,WAC5B50B,KAAKmwH,mBAAmBj8H,EAC5B,EAEA0+G,cAAe,SAAU1+G,EAAM8K,GACvBgB,KAAKgwH,cAAgBhwH,KAAKivB,MAAM/6B,EAAK0V,MACrC5J,KAAKgwH,YAAc,KACnB,kBAAsB,KAAM,CAAC76F,UAAW,KAAMgE,WAAO/d,GAC7C,CAACkiF,QAAS,iBAAqB,gBAE3Ct9F,KAAKovB,YAAYl7B,EAAK0V,GAAI5K,GAC1BgB,KAAK6uB,iBACT,EAEAynF,sBAAuB,SAAUpiH,GAC7B,GAAIA,EAAKsO,IAAI,UAAW,CACpB,IAAIiuH,EAAgBzwH,KAAKgwH,YACzBhwH,KAAKgwH,YAAchwH,KAAKivB,MAAM/6B,EAAK0V,IACnC6mH,GAAiBA,EAAc38F,MAAM/T,IAAI,UAAU,EACvD,CACJ,EAEAmwG,oBAAqB,SAAUhvH,GAC3B,IAAI2sB,EAAO7tB,KAAKivB,MAAM/tB,EAAK0I,IACvB0mH,EAAiB,kBAAsB,WACtCziG,KAEAyiG,EAAetjH,SAAS,WAAcsjH,EAAetjH,SAAS,YAAc9L,EAAKsB,IAAI,WAAatB,EAAKsB,IAAI,mBAEhHqrB,EAAK/iB,UACA9K,KAAKrC,EAAE,cAAcsE,QAAUquH,EAAetjH,SAAS,WACxDsjH,EAAe7kH,SAEvB,EAEAilH,gBAAiB,SAAUxvH,EAAMwyB,EAAOi9F,GACpC,IAAI9iG,EAAO7tB,KAAKivB,MAAM/tB,EAAK0I,IAC3B,GAAIikB,GAAQ3sB,EAAKsB,IAAI,WAAoC,MAAvBtB,EAAKsB,IAAI,WAAqBmuH,EAAc,CAE1E,IAAIj2D,GADJi2D,EAAeA,EAAa37F,MAAK,CAACngB,EAAG8+C,IAAO9+C,EAAErS,IAAI,UAAYmxD,EAAEnxD,IAAI,UAAa,GAAK,KAC7D4B,QAAQlD,GACjC,GAAc,IAAVw5D,EACA16D,KAAKrC,EAAE,qBAAqBy3B,QAAQvH,EAAK9tB,SACtC,CACH,IAAI6wH,EAAa5wH,KAAKrC,EAAE,gCAAgCq2B,GAAG0mC,EAAQ,GACnE,MAAQk2D,EAAW3uH,QAAUy4D,EAAQ,GACjCA,IACAk2D,EAAa5wH,KAAKrC,EAAE,gCAAgCq2B,GAAG0mC,EAAQ,GAEnEk2D,EAAWx1D,MAAMvtC,EAAK9tB,IAC1B,CACJ,MACK,GAAI8tB,IAAS3sB,EAAKsB,IAAI,cAAgBtB,EAAKsB,IAAI,UAAW,CAC3DqrB,EAAK9tB,IAAI+K,SACT,IAAI4vD,EAAQhnC,EAAMtvB,QAAQlD,GACZ,IAAVw5D,EACA16D,KAAKrC,EAAE,cAAcy3B,QAAQvH,EAAK9tB,KAElCC,KAAKrC,EAAE,yBAAyBq2B,GAAG0mC,EAAQ,GAAGU,MAAMvtC,EAAK9tB,IAEjE,CACJ,EAEAowH,mBAAoB,SAAUjvH,GAC1B,IAAI2sB,EAAO7tB,KAAKivB,MAAM/tB,EAAK0I,IACvB0mH,EAAiB,kBAAsB,WACtCziG,KAEDyiG,EAAetjH,SAAS,WAAe9L,EAAKsB,IAAI,WAAatB,EAAKsB,IAAI,mBAE1E8tH,EAAetjH,SAAS,iBAAmB6gB,EAAKiG,MAAMtxB,IAAI,UAAYqrB,EAAKoH,QAAQzyB,IAAI,gBAAkBxC,KAAK0wH,gBAAgBxvH,EAAMlB,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAK+gC,QAAQzyB,IAAI,gBAAkBtO,EAAKsO,IAAI,eAAwC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAAaxC,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAK+gC,QAAQzyB,IAAI,gBAAkBtO,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aACzb8tH,EAAetjH,SAAS,WAAa6gB,EAAKiG,MAAMtxB,IAAI,WAAaqrB,EAAKoH,QAAQzyB,IAAI,gBAAkBxC,KAAK0wH,gBAAgBxvH,EAAMlB,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,WAAatO,EAAK+gC,QAAQzyB,IAAI,gBAAkBtO,EAAKsO,IAAI,eAAwC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAAaxC,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,WAAatO,EAAK+gC,QAAQzyB,IAAI,gBAAkBtO,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aACtb8tH,EAAetjH,SAAS,eAAiB6gB,EAAKiG,MAAMtxB,IAAI,WAAaqrB,EAAKiG,MAAMtxB,IAAI,cAAgBxC,KAAK0wH,gBAAgBxvH,EAAMlB,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,eAAwC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAAaxC,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aAChX8tH,EAAetjH,SAAS,mBAAqB6gB,EAAKiG,MAAMtxB,IAAI,UAAYqrB,EAAKiG,MAAMtxB,IAAI,cAAgBxC,KAAK0wH,gBAAgBxvH,EAAMlB,KAAK8zB,MAAMnd,QAAOziB,GAAQA,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,eAC1L8tH,EAAetjH,SAAS,kBAAoB6gB,EAAKiG,MAAMtxB,IAAI,UAAaqrB,EAAKnB,QAAQlqB,IAAI,SAAW8tH,EAAe9wH,KAAK,cAAiBQ,KAAK0wH,gBAAgBxvH,EAAMlB,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAKw4B,QAAQlqB,IAAI,SAAY8tH,EAAe9wH,KAAK,cAAiBtL,EAAKsO,IAAI,eAAwC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAAaxC,KAAK8zB,MAAMnd,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAKw4B,QAAQlqB,IAAI,SAAY8tH,EAAe9wH,KAAK,cAAiBtL,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aAC3hB,EAEAmvB,eAAgB,SAAU9gB,GACtB,IAAIgd,EACAhd,EAAUkqB,QAAQ,wBAAwB94B,QAC1CjC,KAAK4xB,cACL5xB,KAAKrC,EAAE,qBAAqBuC,YAAY,UACpC2Q,EAAU7D,SAAS,eACnB6gB,EAAO7tB,KAAKivB,MAAMpe,EAAUnR,KAAK,OACjCmuB,GAAQA,EAAK5jB,OACb4G,EAAU1Q,SAAS,WAEnB0Q,EAAU7D,SAAS,oBACnB6gB,EAAO,gBAAoBhd,EAAUnR,KAAK,YAAYg0B,MAAMgC,QAAQ,gBAAoB7kB,EAAUnR,KAAK,YAAY41B,SAAS9yB,IAAIqO,EAAUnR,KAAK,SAC/ImuB,IAASA,EAAOA,EAAK+G,WACrB/G,GAAQ,uBAA2BA,EAAM,CAAC8H,cAAc,EAAON,OAAQ,mBAAuB,UAC9FxkB,EAAU1Q,SAAS,WAEnB0Q,EAAU7D,SAAS,iBACnB6D,EAAUpF,UAIdoiB,EAAO7tB,KAAKivB,MAAMpe,EAAUnR,KAAK,OACjCmuB,GAAQA,EAAK5jB,OAErB,EAEA4zE,SAAU,SAAUhwD,EAAM7uB,GACjB6uB,EAAKoV,UACNpV,EAAKoV,QAAU,IAAI,mBAAuB,CAAC9N,UAAWtH,KAC1D7uB,EAAUA,GAAW,CAAC,EACtBgB,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxC2tB,EAAKyiF,qBACL,IAAIugB,EAAe,6BAEnB,GADA7xH,EAAQ22B,cAAgB31B,KAAK4xB,cACzB/D,EAAKoH,UAAYpH,EAAKoH,QAAQzyB,IAAI,cAAkD,GAAjCqrB,EAAKiG,MAAMtxB,IAAI,eAClEqrB,EAAKiG,MAAM/T,IAAI,WAAW,GAC1B8N,EAAKiG,MAAM/T,IAAI,UAAU,GACzB,kBAAsB,YAAa,CAACoZ,MAAO,mBAAoBlE,QAASpH,EAAKoH,cAE5E,CAMD,GALI,kBAAsB,WAAWjoB,SAAS,aAC1ChN,KAAK8wH,wBACJjjG,EAAKiG,MAAMtxB,IAAI,mBAAsBqrB,EAAKiG,MAAMP,SAAStxB,OAAS,IACnE4rB,EAAKoV,QAAQs0E,uBAEZ1pF,EAAKiG,MAAMtxB,IAAI,mBAAqBqrB,EAAKiG,MAAMP,SAAStxB,OAAQ,CACjE,IAAI02G,EAAW9qF,EAAKiG,MAAMP,SAASimC,OAAO3rC,EAAKiG,MAAMP,SAAStxB,OAAS,GACnE02G,IACKA,EAAS3f,eAAiBnrE,EAAKiG,MAAMtxB,IAAI,YAAaqrB,EAAKiG,MAAMtxB,IAAI,kBACtEqrB,EAAKiG,MAAMw5E,WAAWqL,EAASn2G,IAAI,SAAU,YAAam2G,EAASn2G,IAAI,aAAcm2G,EAASn2G,IAAI,sBAClGqrB,EAAKiG,MAAM/T,IAAI,kBAAkB,IAE7C,CACK/gB,EAAQo6B,oBACT,mBAAuB,kBAAyD,SAApC,mBAAuB,UAA2D,oBAApC,mBAAuB,WAE7GvL,EAAKiG,MAAMtxB,IAAI,SACf,kBAAuBxD,EAAQq2B,QAAU,YAAc,CAACgE,cAAe,KACnE,gCACJxL,EAAKoH,QAAQ4N,iBAAiB,YAAa,CAACC,aAAa,EAAMvjB,UAAWsO,EAAKiG,MAAMtxB,IAAI,eAEzFqrB,EAAKoH,QAAQ4N,iBAAiB,YAAa,CAACC,aAAa,KAEjE,kBAAuB9jC,EAAQq2B,QAAU,YAAc,CACnD8D,MAAO,OACPxD,aAAc32B,EAAQ22B,aACtBR,UAAWtH,EACX0jD,QAAS1jD,EAAKiG,MAAMtxB,IAAI,YAC1B,CAAC64B,mBAAoBr8B,EAAQq8B,mBAAoBjC,kBAAmBp6B,EAAQo6B,oBAC1EvL,EAAKoH,WAAapH,EAAKoH,QAAQzyB,IAAI,kBAAqBqrB,EAAKoH,QAAQzyB,IAAI,gBAAkBqrB,EAAKoH,QAAQzyB,IAAI,eAAmBqrB,EAAKoH,QAAQzyB,IAAI,mBAAqB,GAAOqrB,EAAKoH,QAAQzyB,IAAI,kBAAkB2R,QAAQ,QAAQC,OAAO,KAASD,QAAQ,WACvP0Z,EAAKoH,QAAQ8xB,UAErB,CACA,uBAA2B8pE,EAC/B,EAEA31F,eAAgB,WACZl7B,KAAKrC,EAAE,cAAcmN,SACrB,IAAI4oB,EAAQ1zB,KAAK8zB,MACb+kE,EAAY,kBAAsB,kBAAkB52F,OACpD83E,EAAc,GACdg3C,EAAqB,GACrBl4B,IACA9e,EAAcrmD,EAAM/c,QAAOziB,GAAQA,EAAK+gC,SAAW/gC,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,mBAA4C,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAC7RuuH,EAAqBr9F,EAAM/c,QAAOziB,GAAQA,EAAK+gC,SAAW/gC,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,kBAA2C,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aAEjSu3E,EAAY93E,QAAW8uH,EAAmB9uH,SAC3C83E,EAAcrmD,EAAM/c,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aACtLuuH,EAAqBr9F,EAAM/c,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAsC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,YAC3L,kBAAsB,wBAAwBtC,YAAY,UAC1DF,KAAK65B,mBAETkgD,EAAY1nE,SAASne,IACjB8L,KAAKrC,EAAE,cAAckP,OAAO3Y,EAAK0gC,UAAU70B,IAAI,IAE/CgxH,IACAA,EAAqBA,EAAmB/7F,MAAK,CAACngB,EAAG8+C,IAAO9+C,EAAErS,IAAI,UAAYmxD,EAAEnxD,IAAI,UAAa,GAAK,IAClGuuH,EAAmB1+G,SAASne,IACxB,IAAIwmE,EAAQq2D,EAAmB3sH,QAAQlQ,GACzB,IAAVwmE,EACA16D,KAAKrC,EAAE,qBAAqBy3B,QAAQlhC,EAAK0gC,UAAU70B,KAEnDC,KAAKrC,EAAE,gCAAgCq2B,GAAG0mC,EAAQ,GAAGU,MAAMlnE,EAAK0gC,UAAU70B,IAC9E,IAGZ,EAEAk7B,UAAW,WACPj7B,KAAKrC,EAAE,cAAcmN,SACrB,IAAI4oB,EAAQ1zB,KAAK8zB,MACb+kE,EAAY,kBAAsB,kBAAkB52F,OACpD+uH,EAAgB,GAChBC,EAAuB,GACvBp4B,IACAm4B,EAAgBt9F,EAAM/c,QAAOziB,GAAQA,EAAK+gC,UAAY/gC,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,mBAA4C,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAChSyuH,EAAuBv9F,EAAM/c,QAAOziB,GAAQA,EAAK+gC,UAAY/gC,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAiB/kG,EAAK+kG,aAAaz2F,IAAI,YAActO,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,kBAA2C,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aAEpSwuH,EAAc/uH,QAAWgvH,EAAqBhvH,SAC/C+uH,EAAgBt9F,EAAM/c,QAAOziB,IAASA,EAAKsO,IAAI,WAAatO,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aACzLyuH,EAAuBv9F,EAAM/c,QAAOziB,IAASA,EAAKsO,IAAI,WAAatO,EAAK+gC,QAAQzyB,IAAI,eAAiBtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAsC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,YAC9L,kBAAsB,wBAAwBtC,YAAY,UAC1DF,KAAK65B,mBAETm3F,EAAc3+G,SAASne,IACnB8L,KAAKrC,EAAE,cAAckP,OAAO3Y,EAAK0gC,UAAU70B,IAAI,IAE/CkxH,IACAA,EAAuBA,EAAqBj8F,MAAK,CAACngB,EAAG8+C,IAAO9+C,EAAErS,IAAI,UAAYmxD,EAAEnxD,IAAI,UAAa,GAAK,IACtGyuH,EAAqB5+G,SAASne,IAC1B,IAAIwmE,EAAQu2D,EAAqB7sH,QAAQlQ,GAC3B,IAAVwmE,EACA16D,KAAKrC,EAAE,qBAAqBy3B,QAAQlhC,EAAK0gC,UAAU70B,KAEnDC,KAAKrC,EAAE,gCAAgCq2B,GAAG0mC,EAAQ,GAAGU,MAAMlnE,EAAK0gC,UAAU70B,IAC9E,IAGZ,EAEAq7B,mBAAoB,SAAU1O,GAC1B,kBAAsB,aACtB1sB,KAAKrC,EAAE,cAAcmN,SACrB,IAAI4oB,EAAQ1zB,KAAK8zB,MACbo9F,EAAgBx9F,EAAM/c,QAAOziB,GAAUA,EAAKw4B,QAAQlqB,IAAI,SAAWkqB,EAAQlqB,IAAI,SAAYtO,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,eAAyC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAC7M2uH,EAAuBz9F,EAAM/c,QAAOziB,GAAUA,EAAKw4B,QAAQlqB,IAAI,SAAWkqB,EAAQlqB,IAAI,SAAYtO,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,cAAwC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,YACtNxC,KAAKrC,EAAE,6BAA6B+uB,EAAQlqB,IAAI,aAAarC,SAAS,UACtE+wH,EAAc7+G,SAASne,IACnB8L,KAAKrC,EAAE,cAAckP,OAAO3Y,EAAK0gC,UAAU70B,IAAI,IAE/CoxH,IACAA,EAAuBA,EAAqBn8F,MAAK,CAACngB,EAAG8+C,IAAO9+C,EAAErS,IAAI,UAAYmxD,EAAEnxD,IAAI,UAAa,GAAK,IACtG2uH,EAAqB9+G,SAASne,IAC1B,IAAIwmE,EAAQy2D,EAAqB/sH,QAAQlQ,GAC3B,IAAVwmE,EACA16D,KAAKrC,EAAE,qBAAqBy3B,QAAQlhC,EAAK0gC,UAAU70B,KAEnDC,KAAKrC,EAAE,gCAAgCq2B,GAAG0mC,EAAQ,GAAGU,MAAMlnE,EAAK0gC,UAAU70B,IAC9E,IAGZ,EAEAqxH,iBAAkB,WACdpxH,KAAKrC,EAAE,cAAcmN,SACT9K,KAAK8zB,MACSnd,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,cAC1D6P,SAASne,IACnB8L,KAAKrC,EAAE,cAAckP,OAAO3Y,EAAK0gC,UAAU70B,IAAI,GAEvD,EAEA+6B,aAAc,WACV96B,KAAKrC,EAAE,cAAcmN,SACrB,IAAI4oB,EAAQ1zB,KAAK8zB,MACb+kE,EAAY,kBAAsB,kBAAkB52F,OACpDovH,EAAY,GACZC,EAAmB,GACnBz4B,IACAw4B,EAAY39F,EAAM/c,QAAOziB,GAAQA,EAAK+gC,SAAW/gC,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAkB/kG,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,iBAAqBtO,EAAK+gC,QAAQzyB,IAAI,eAAkBtO,EAAK+gC,QAAQzyB,IAAI,4BAAkE,QAApCtO,EAAK+gC,QAAQzyB,IAAI,mBAAwD,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aAC1V8uH,EAAmB59F,EAAM/c,QAAOziB,GAAQA,EAAK+gC,SAAW/gC,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,aAAetO,EAAK+kG,eAAkB/kG,EAAKsO,IAAI,WAAatO,EAAKsO,IAAI,iBAAqBtO,EAAK+gC,QAAQzyB,IAAI,eAAkBtO,EAAK+gC,QAAQzyB,IAAI,4BAAkE,QAApCtO,EAAK+gC,QAAQzyB,IAAI,kBAAuD,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,aAE9V6uH,EAAUpvH,QAAWqvH,EAAiBrvH,SACvCovH,EAAY39F,EAAM/c,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,eAAwC,MAAvBtO,EAAKsO,IAAI,YAAsBtO,EAAKsO,IAAI,aACnJ8uH,EAAmB59F,EAAM/c,QAAOziB,IAASA,EAAKsO,IAAI,UAAYtO,EAAKsO,IAAI,eAAiBtO,EAAKsO,IAAI,cAAuC,MAAvBtO,EAAKsO,IAAI,WAAqBtO,EAAKsO,IAAI,YACxJ,kBAAsB,wBAAwBtC,YAAY,UAC1DF,KAAK65B,mBAETw3F,EAAUh/G,SAASne,IACf8L,KAAKrC,EAAE,cAAckP,OAAO3Y,EAAK0gC,UAAU70B,IAAI,IAE/CuxH,IACAA,EAAmBA,EAAiBt8F,MAAK,CAACngB,EAAG8+C,IAAO9+C,EAAErS,IAAI,UAAYmxD,EAAEnxD,IAAI,UAAa,GAAK,IAC9F8uH,EAAiBj/G,SAASne,IACtB,IAAIwmE,EAAQ42D,EAAiBltH,QAAQlQ,GACvB,IAAVwmE,EACA16D,KAAKrC,EAAE,qBAAqBy3B,QAAQlhC,EAAK0gC,UAAU70B,KAEnDC,KAAKrC,EAAE,gCAAgCq2B,GAAG0mC,EAAQ,GAAGU,MAAMlnE,EAAK0gC,UAAU70B,IAC9E,IAGZ,EAEA+wH,qBAAsB,WAClB,kBAAsB,iBAAiB5wH,YAAY,UAC9CyW,OAAO,cAAcxW,SAAS,UACnCH,KAAK86B,cACT,IAGF,mBAAyB,oBAAwB,CAC7C/J,UAAW,yBACXvD,SAAU,GAAU+jG,aACpBz0F,YAAa,GAAU7lC,aAAaiB,UAEpC+4B,OAAQ,CACJ,MAAS,eAGb1C,YAAa,WACTvuB,KAAKi1B,QAAUj1B,KAAK8zB,MAAMmB,QAC1Bj1B,KAAK0sB,QAAU1sB,KAAKi1B,QAAUj1B,KAAKi1B,QAAQvI,QAAU1sB,KAAK8zB,MAAMpH,QAChE1sB,KAAKD,IAAIP,KAAK,UAAWQ,KAAK8zB,MAAMlqB,GAAK,IAAM5J,KAAKqkC,KACpDrkC,KAAKD,IAAIP,KAAK,mBAAoBQ,KAAKi1B,QAAQzyB,IAAI,QACnDxC,KAAKm9B,aACLn9B,KAAK60B,oBACL70B,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAKmwG,mBACLnwG,KAAKy7E,aACLz7E,KAAK86D,eACL96D,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAKi1B,QAAQ5R,GAAG,gBAAiBrjB,KAAK86D,aAAc96D,MACpDA,KAAKi1B,QAAQ5R,GAAG,cAAerjB,KAAKm9B,WAAYn9B,KACpD,EAEAm9B,WAAY,WACRn9B,KAAKrC,EAAE,eAAe2E,KAAKtC,KAAKi1B,QAAQzyB,IAAI,QAChD,EAEAg7B,aAAc,WACV,IAAIxiC,EAAQgF,KAAKi1B,QAAQ9vB,aACzBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEAg+B,aAAc,WACV,IAAIv0C,EAASvmB,KAAKi1B,QAAQzyB,IAAI,UAC1B2mD,EAAiBnpD,KAAKi1B,QAAQu/B,mBAClCx0D,KAAKrC,EAAE,mBAAmB6B,KAAK,cAAe+mB,GAC9CvmB,KAAKrC,EAAE,cAAc6B,KAAK,cAAe+mB,GACzCvmB,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAKrC,EAAE,2BAA2B2E,KAAK,aAAiB,2BAA6BtC,KAAKrC,EAAE,2BAA2B2E,KAAK6mD,EAC5J,EAEAgnD,iBAAkB,WACd,IAAIr0B,EAAgB97E,KAAKi1B,QAAQzyB,IAAI,cACrCxC,KAAKrC,EAAE,WAAW4T,OAAOuqE,GACzB97E,KAAKy7E,aACDK,IACA97E,KAAKD,IAAII,SAAS,cAClBH,KAAKrC,EAAE,eAAe2H,IAAI,QAAS,WACnCtF,KAAK8zB,MAAM/T,IAAI,cAAc,GAErC,EAEA07D,WAAY,WACRz7E,KAAKrC,EAAE,cAAcwC,SAAS,UAC9B,IAAI46E,EAAU/6E,KAAKi1B,QAAQw9C,UAC3BsI,GAAW/6E,KAAKrC,EAAE,cAAcuC,YAAY,UAAU6M,YAAYguE,EAAqB,gBAAXA,GAAwC,UAAXA,GAAkC,WAAXA,GAAuBp7E,KAAK,GAAId,UAAUuB,IAAI26E,KAClL,EAEA35C,kBAAmB,WACf,IAAIv7B,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKD,IAAIP,KAAK,aAAcqG,EAChC,EAEAgvB,kBAAmB,SAAUjP,GAEzB,GADAA,IAAQA,EAAM5lB,KAAK8zB,QACdlO,EACD,OACJ,IAAI2rF,EAAW3rF,EAAIpjB,IAAI,QACnBsR,EAAY8R,EAAIpjB,IAAI,aACpBo9F,EAAoBh6E,EAAIpjB,IAAI,qBAC5BqvG,EAAYjsF,EAAIpjB,IAAI,UAAY,GAChCsvG,EAAalsF,EAAIpjB,IAAI,WAAa,GAClCuvG,EAAgBnsF,EAAIpjB,IAAI,cAAgB,GACxCoyE,EAAW,EAAuBhvD,EAAIpjB,IAAI,YAAc,qBAAyB,2BAA4Bo9F,EAAkB39F,QAAQwvG,UAAa7rF,EAAIk6B,UACxJkyD,EAAgBpsF,EAAIpjB,IAAI,cAAgBojB,EAAIozE,cAAgBh5F,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQr8D,YAAc,CAAC,EAAGs6F,EAAW,GAK1I,GAJAhsF,EAAIpjB,IAAI,WAAaojB,EAAIpjB,IAAI,UAAUP,SAAW4vG,EAAYA,EAAUt4B,OAAO3zD,EAAIpjB,IAAI,YACvFxC,KAAK8zB,MAAM/T,IAAI,CAACjM,UAAWA,IACvB9T,KAAK8zB,MAAMtxB,IAAI,gBACfovG,EAAWI,EAAcrtD,UAAYqtD,EAAc95F,MAAQ0N,EAAIozE,aAAeh5F,KAAK0sB,QAAQlqB,IAAI,QAAUojB,EAAIpjB,IAAI,cAAgB,IACjIqvG,EAAU5vG,QAAU6vG,EAAW7vG,QAAU8vG,EAAc9vG,OAAQ,CAC/D,IAAIgwG,EAAgB,GAAE,kCACtB,GAAIJ,EAAU5vG,QAAU6vG,EAAW7vG,OAC/B2yE,EAAWq9B,EAAc3vG,KAAK,aAAiB,yCAA0C,CAACuvG,EAAU5vG,OAAS6vG,EAAW7vG,cACvH,CACD,GAAwB,GAApB4vG,EAAU5vG,SAAgB4vG,EAAU,GAAGK,UAAYL,EAAU,GAAG35C,OAChE0c,EAAWq9B,EAAc3vG,KAAK,GAAG,aAAiB,qBAAuB,GAAMqT,gBAAgBk8F,EAAU,GAAGj8F,gBAC3G,GAAIi8F,EAAU5vG,OAAS,EAAG,CAC3B,IAAIkwG,EAAa,EACjBN,EAAUx/F,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACnDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,mCAAoCuvG,EAAU5vG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAC5K,CACA,GAAIL,EAAW7vG,OAAS,EAAG,CACvB,IAAIkwG,EAAa,EACjBL,EAAWz/F,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACpDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,oCAAqCwvG,EAAW7vG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAC9K,CACIJ,EAAc9vG,OAAS,IACvB2yE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,uCAAwCyvG,EAAc9vG,SAErH,CACAjC,KAAKrC,EAAE,aAAagC,KAAK,IAAIkN,OAAO+kG,GAAU/kG,OAAO+nE,EACzD,MAEI50E,KAAKrC,EAAE,aAAa2E,KAAK,IAAIuK,OAAO+nE,GAChCg9B,GACA5xG,KAAKrC,EAAE,aAAay3B,QAAQ,GAAE,8BAAgCw8E,EAAhC,cAEtC5xG,KAAKD,IAAIwB,QAAQ,YAAa,CAACG,WAAY,KAAKqQ,aAAa,CAACe,YAAY,IAC1E9S,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAM4R,kCAAkCq9F,IACjE/xG,KAAK,QAAS,GAAgB+xG,IACnCvxG,KAAKrC,EAAE,yBAAyB2T,OAAOsU,EAAIozE,cAAiBpzE,EAAIpjB,IAAI,WAAa,GAAUnM,cACtFmJ,KAAK,aAAcomB,EAAIi6E,WAChC,EAEA4S,YAAa,WACT,IAAIv+G,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SAC3Cj1B,KAAKD,IAAIg7B,QAAQ,yBAAyBl7B,KAAK,cAAcK,YAAY,UACzEF,KAAKD,IAAII,SAAS,UAClB,uBAA2BjM,EAAK0gC,UAAW,CAACyG,oBAAoB,EAAM1F,cAAc,IACpF,kBAAsB,mBAAuB,QAAS,CAACwD,MAAO,kBAAmBrF,MAAO5/B,IACpF,iCAAuC,mBAAuB,kBAAwD,oBAApC,mBAAuB,WACrG,gCACAA,EAAK+gC,QAAQ4N,iBAAiB,YAAa,CAACC,aAAa,IAEzD5uC,EAAK+gC,QAAQ4N,iBAAiB,YAAa,CAACC,aAAa,KAEjE9iC,KAAK8zB,MAAMtxB,IAAI,cAAgBtO,EAAK6uC,kBAAkB/iC,KAAK8zB,MAAMtxB,IAAI,aAAc,CAAC0U,SAAS,GACjG,IAIJ,oBAA0B,qBAAyB,CACjD6Z,UAAW,yCACXvD,SAAU,GAAUgkG,cACpB1jG,YAAa,kBACbG,YAAa,CAAC7E,MAAO,aAErBnf,KAAM,SAAUspB,EAAU7G,GAkBtB,GAjBA1sB,KAAKuzB,SAAWA,EAChBvzB,KAAK0sB,QAAUA,EACf1sB,KAAKrC,EAAE,mBAAmBgC,KAAK,IAC/BK,KAAK00B,YAAa,EAClB,gBAAoB,8BAA8B50B,MAAK,CAAC4C,EAAKxB,KACzD,IAAI0I,EAAK,GAAE1I,GAAMxB,KAAK,MAEtB,GADWM,KAAK0sB,QAAQgH,MAAMlxB,IAAIoH,GAE9B,GAAIA,GAAM,GAAG5J,KAAK0sB,QAAQlqB,IAAI,eAAgB,CAC1C,IAAIivH,EAAe,GAAEvwH,GAAMmW,QAAQnX,YAAY,UAC/CuxH,EAAa5xH,KAAK,aAAayC,KAAK,aAAiB,sCACrDtC,KAAK00B,YAAa,EAClB10B,KAAKrC,EAAE,mBAAmBy3B,QAAQq8F,EACtC,MACIzxH,KAAKrC,EAAE,mBAAmBkP,OAAO,GAAE3L,GAAMmW,QAAQnX,YAAY,UACrE,KAECF,KAAK00B,WAAY,CAClB,IACI+8F,EADazxH,KAAK0sB,QAAQgH,MAAMiB,eACNC,UAAU70B,IAAIsX,QAC5Co6G,EAAa5xH,KAAK,aAAayC,KAAK,aAAiB,sCACrDtC,KAAKrC,EAAE,mBAAmBy3B,QAAQq8F,EACtC,CACAzxH,KAAKrC,EAAE,mBAAmBy3B,QAAQ,GAAE,SAAU,CAAE02C,MAAO,uDAAuDxpE,KAAK,aAAiB,2BACpItC,KAAKrC,EAAE,mBAAmBkP,OAAO,GAAE,SAAU,CAAEi/D,MAAO,mDAAmDxpE,KAAK,aAAiB,6BAC/HtC,KAAKrC,EAAE,cAAcuC,YAAY,UACjCF,KAAK4xB,cACL5xB,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAK6uB,kBACL7uB,KAAKrC,EAAE,iBAAiBoR,OAAO,EAEnC5D,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,EAEA7U,MAAO,WACH,IAAIpa,EAAW,IAAI,GAAEuW,SAMrB,OALArH,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KAC5BnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,GACzBjvB,EAASuX,SAAS,IAEfvX,EAAS2X,SACpB,EAEAiqB,YAAa,SAAU7nB,GACnB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,cACnC/6B,KAAK2xB,eAAe+S,EACxB,EAEApS,OAAQ,SAAUD,GACd,IAAIna,EAAKnZ,EAAM2yH,GAAW,EAAOC,GAAoB,EAAOC,GAAuB,EACnFv/F,EAAQA,EAAMrc,cACdhW,KAAKrC,EAAE,6BAA6BuT,SACpCmhB,GAASryB,KAAK0sB,QAAQ6pC,OAAOlkD,SAAS4iB,IAClC,IAAI/c,EAAM+c,EAAQzyB,IAAI,OAClBgzB,EAAUP,EAAQM,QAElBm8F,EADOz8F,EAAQzyB,IAAI,QAAQwT,cACV5R,QAAQiuB,GAAS,GAAKna,EAAI9T,QAAQiuB,GAAS,EAChE,IAAKq/F,EACD,GAAK1xH,KAAKrC,EAAE,uCAAyC63B,EAAU,MAAMvzB,OAMjEyvH,GAAW,MAN8D,CACzE,IAAIG,EAAoB,mBAAuB,kCAAkC7xH,KAAK0sB,QAAQlqB,IAAI,sCAAsC0V,OAASga,QAAQ7a,QACzJw6G,EAAkBhyH,KAAK,eAAeivB,OACtC9uB,KAAKrC,EAAE,mBAAmBkP,OAAOglH,EACrC,EAIHH,IAAaE,GAAuB,EAAK,IAE9C5xH,KAAKrC,EAAE,mBAAmBoP,YAAY,UAAW6kH,GACjD5xH,KAAKrC,EAAE,cAAcmC,MAAK,CAAC4C,EAAKxB,KAC5B,IAAIhN,EAAO8L,KAAK0sB,QAAQgH,MAAMlxB,IAAI,GAAEtB,GAAMxB,KAAK,OAC1CxL,GAILgkB,EAAMhkB,EAAKsO,IAAI,OACfzD,EAAQ7K,EAAK+gC,QAAU/gC,EAAK+gC,QAAQzyB,IAAI,QAAUtO,EAAKsO,IAAI,QACvDzD,IACAA,EAAOA,EAAKiX,eAChB07G,KAAa3yH,GAAQA,GAASA,EAAKqF,QAAQiuB,GAAS,GAAKna,EAAI9T,QAAQiuB,GAAS,GAC9E,GAAEnxB,GAAMqQ,QAAQmgH,GAChBA,IAAaC,GAAoB,IAT7B,GAAEzwH,GAAMf,SAAS,SASiB,IAE1CH,KAAKrC,EAAE,uBAAuBoP,YAAY,UAAW4kH,GACrD3xH,KAAKrC,EAAE,yBAAyB2T,QAAQsgH,IAAyBD,GACjE3xH,KAAKiwB,aACT,EAEAsC,aAAc,WACVvyB,KAAKrC,EAAE,6BAA6BuT,SACpClR,KAAKrC,EAAE,mBAAmBwC,SAAS,UACnCH,KAAKrC,EAAE,yBAAyBwC,SAAS,UACzCH,KAAKrC,EAAE,uBAAuBwC,SAAS,SAC3C,EAEAwxB,eAAgB,SAAU9gB,GACtB,IAAIskB,EACAtkB,EAAU7D,SAAS,oBACnBmoB,EAAYn1B,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIqO,EAAUnR,KAAK,SAASk1B,WACzF/jB,EAAU7D,SAAS,eACnBmoB,EAAY,oBAAwBtkB,EAAUnR,KAAK,QACvDy1B,GAAan1B,KAAK8xH,UAAU38F,EAChC,EAEA28F,UAAW,SAAU38F,GACbA,EAAUrB,MAAMtxB,IAAI,SACpBxC,KAAKuzB,SAASlhB,SAAS6E,IACnBie,EAAU8N,QAAQsiF,SAAS,GAAI,CAACruG,GAAS,KAIxCie,EAAU8N,UACX9N,EAAU8N,QAAU,IAAI,mBAAuB,CAAC9N,UAAWA,KAC/DA,EAAU8N,QAAQyuE,OAAOqgB,qBAAqB/xH,KAAKuzB,WAEvDvzB,KAAKuzB,SAAW,GAChBvzB,KAAKkL,QAAQqd,MAAK,KACd4M,EAAUlrB,KAAK,CAAC0rB,cAAc,GAAM,GAE5C,IAGJ,uBAA6B,qBAAyB,CAClD5E,UAAW,yCACXvD,SAAU,GAAUusD,YAAYi4C,sBAChClkG,YAAa,sBACbG,YAAa,CAAC7E,MAAO,aAErBmF,YAAa,WACTvuB,KAAKiyH,qBACT,EAEAhoH,KAAM,SAAUyiB,EAASuI,GACrBj1B,KAAKkyH,kBAAoB,GACzBlyH,KAAK0sB,QAAUA,EACf1sB,KAAKi1B,QAAUA,EACfj1B,KAAKmyH,aACL,mBAAuB,kCAAkCnyH,KAAK0sB,QAAQlqB,IAAI,0BAA0B1C,MAAK,CAAC4C,EAAKxB,KAC3G,IAAIkxH,EAAa,GAAElxH,GAAMmW,QACzB,GAAE+6G,GAAYvyH,KAAK,cAAcC,MAAK,CAAC0D,EAAG6uH,KACnBryH,KAAK0sB,QAAQ4I,SAAS9yB,IAAI,GAAE6vH,GAAW7yH,KAAK,aAC9CgD,IAAI,eACb6vH,EAAUnhH,QAAQ,IAE1BkhH,EAAWzkG,SAAS,cAAc1rB,SAClCjC,KAAKrC,EAAE,uBAAuBkP,OAAOulH,GACrCA,EAAWvyH,KAAK,UAAU4L,OAAOZ,IAC7B7K,KAAKsyH,eAAeznH,EAAG,IAE3BunH,EAAWvyH,KAAK,eAAe4L,OAAOZ,IAClC7K,KAAKuyH,eAAe1nH,EAAG,IAE/B,IAEJ7K,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAK6uB,kBACL7uB,KAAKrC,EAAE,iBAAiBoR,OAAO,EAEnC5D,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAKkyH,kBAAoB,EAAE,GAGvC,EAEAM,iBAAkB,WACd,IAAKxyH,KAAKkyH,kBAAkBjwH,OAExB,YADAjC,KAAKrC,EAAE,wBAAwB0rB,OAGnC,IAAIopG,EAAuBzyH,KAAKkyH,kBAAkBjwH,OAC9CywH,EAAmB,IAAI,GAAErrH,SAAYsrH,EAAoB,EAC7DD,EAAiBnqG,MAAM5N,IACnB,IAAIi4G,EAEAA,EADAj4G,GAAS83G,EACI,qBAAyB,qCAAsCA,GAE/D,qBAAyB,8CAA+CA,GACzF,GAAMl4G,uBAAuBq4G,EAAY,KACzC5yH,KAAKi1B,QAAQ1pB,QAAQ,mBAAkB,IAE3C,GAAEvL,KAAKkyH,mBAAmBpyH,MAAK,CAAC4C,EAAKxB,KACjClB,KAAK6yH,WAAW3xH,GAAM,KAClByxH,IACIjwH,GAAO+vH,EAAuB,GAC9BC,EAAiBrqH,QAAQsqH,EAAkB,IAChD,KACKjwH,GAAO+vH,EAAuB,GAC9BC,EAAiBrqH,QAAQsqH,EAAkB,GACjD,IAEN3yH,KAAKkL,OACT,EAEAinH,WAAY,WACRnyH,KAAKrC,EAAE,yBAAyB2E,KAAK,IACrCtC,KAAKrC,EAAE,YAAY2E,KAAK,IACxBtC,KAAKrC,EAAE,uBAAuBqd,QAC9Bhb,KAAK4xB,aACT,EAEAqgG,oBAAqB,WACjBjyH,KAAKrC,EAAE,eAAe8N,OAAM,KACxBzL,KAAKkL,OAAO,IAEhBlL,KAAKrC,EAAE,YAAY8N,OAAM,KACrBzL,KAAKwyH,kBAAkB,GAE/B,EAEAM,QAAS,SAAUjoH,GACf,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,cAC/B4zD,EAAcjqD,EAAQllC,KAAK,YAC/BklC,EAAQ/E,YAAY,kBACpB,IAAIozF,EAAU/yH,KAAKkyH,kBAAkB9tH,QAAQuqF,GACzCokC,GAAW,EACX/yH,KAAKkyH,kBAAkBj4E,OAAO84E,EAAS,GAEvC/yH,KAAKkyH,kBAAkB9wH,KAAKutF,GAChC3uF,KAAKszF,eACT,EAEAu/B,WAAY,SAAUlkC,EAAa3mE,EAAUnN,GACzC,IAAIkb,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAKvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SACxE2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,sBAClCx7D,EAAE,OAAOgS,EAAEwpE,GAAat4D,KACxBljB,EAAE,QAAQgS,EAAE,SAASkR,KACrBljB,EAAE,UAAUgS,EAA8C,cAA3CnlB,KAAKi1B,QAAQzyB,IAAI,cAAc2zE,QAA2B,aAAiB,+CAAiD,aAAiB,2CAA4C,CAACwY,KAClN3uF,KAAK0sB,QAAQiK,WAAWZ,GAAI,KACxB/1B,KAAKgzH,kBAAkBrkC,GACvB3uF,KAAKkL,QACL8c,GAAYA,GAAU,IACtB+N,IACA/1B,KAAKizH,cAAcl9F,GACnBlb,GAAWA,GAAS,GAE5B,EAEAo4G,cAAe,SAAUl9F,GACrB,IAAIisD,EACA,GAAEjsD,GAAIl2B,KAAK,eAAeoC,OAAS,IACnC+/E,EAAW,GAAEjsD,GAAIl2B,KAAK,QAAQyC,QAAU,aAAiB,+CAEzD,GAAEyzB,GAAIl2B,KAAK,YAAYoC,OAAS,IAChC+/E,EAAW,GAAEjsD,GAAIl2B,KAAK,QAAQyC,QAAU,aAAiB,+CAAgD,CAAC,GAAEyzB,GAAIl2B,KAAK,UAAUA,KAAK,OAAOyC,UAE/ItC,KAAKrC,EAAE,yBAAyBuC,YAAY,UAAUoC,KAAK0/E,EAC/D,EAEAgxC,kBAAmB,SAASE,GACxB,IAAIhkH,EAAO,aAAiB,mCAAoC,CAAClP,KAAKi1B,QAAQzyB,IAAI,SAC9Eq9C,EAAS23B,GAAK,CACVjhE,GAAI28G,EACJrvH,KAAM,OACN+F,GAAI,OACLuJ,EAAE,SAAU,CAAC8iB,MAAO,GAAG,GAAQC,GAAGy4C,oBAAqBz2D,IAAKlY,KAAKi1B,QAAQzyB,IAAI,SAC3E2Q,EAAE,UAAUgS,EAA8C,cAA3CnlB,KAAKi1B,QAAQzyB,IAAI,cAAc2zE,QAA2B,aAAiB,+CAAiD,aAAiB,2CAA4C,CAAC+8C,KAAU78F,KAAKA,KACxNljB,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAGy4C,aAC1Bx7D,EAAE,WAAWgS,EAAEnlB,KAAKi1B,QAAQzyB,IAAI,cAAc2zE,SAAS9/C,KAAKA,KAC5DljB,EAAE,QAAQgS,EAAEjW,GAAMmnB,KAC3Br2B,KAAK0sB,QAAQ4+B,QAAQzL,EACzB,EAEAvtB,OAAQ,SAAUD,IACdA,EAAQA,EAAMrc,gBACLhW,KAAKrC,EAAE,cAAcmC,MAAK,CAAC4C,EAAKxB,KACrC,IAAIgX,EAAM,GAAEhX,GAAM1B,KAAK,YACnBT,EAAOiB,KAAK0sB,QAAQ4I,SAAS9yB,IAAI0V,GAAK1V,IAAI,QAAQwT,cAClDm9G,EAAcnzH,KAAKrC,EAAE,wBAAwBua,OAASjW,OAAS,IAAQjC,KAAKrC,EAAE,wBAAwBua,OAASga,QAAQ65B,GAAG,GAAE7qD,IAChI,GAAEA,GAAMqQ,OAAQxS,EAAKqF,QAAQiuB,GAAS,GAAKna,EAAI9T,QAAQiuB,GAAS,GAAM8gG,EAAW,IAErFnzH,KAAKrC,EAAE,eAAewC,SAAS,UAC/BH,KAAKrC,EAAE,yBAAyBoP,YAAY,WAAY/M,KAAKrC,EAAE,cAAcsE,SAAWjC,KAAKrC,EAAE,qBAAqBsE,SACpHjC,KAAKiwB,aACT,EAEAsC,aAAc,WACVvyB,KAAKrC,EAAE,cAAcuC,YAAY,UACjCF,KAAKrC,EAAE,eAAeuC,YAAY,SACtC,EAEAwyB,YAAa,SAAU7nB,GACnB7K,KAAK8yH,QAAQjoH,EACjB,EAEA8mB,eAAgB,SAAU9gB,GACtB,IAAI89E,EAAc99E,EAAUrR,KAAK,YAC7BuzH,EAAU/yH,KAAKkyH,kBAAkB9tH,QAAQuqF,GACzCokC,GAAW,GACX/yH,KAAKkyH,kBAAkBj4E,OAAO84E,EAAS,GAC3C/yH,KAAKkyH,kBAAkB9wH,KAAKutF,GAC5B3uF,KAAKszF,gBACLtzF,KAAKwyH,kBACT,EAEAtnH,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEAsyH,eAAgB,SAAUznH,GACtB,IAAIuoH,EAAa,GAAEvoH,EAAG4C,QAAQT,SAAS,oBACvC,GAAIomH,EAAY,CACO,GAAEvoH,EAAG4C,QAAQstB,QAAQ,iBAC3Bl7B,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACvC,GAAEA,GAAMf,SAAS,SAAS,GAElC,KAEA,CACuB,GAAE0K,EAAG4C,QAAQstB,QAAQ,iBAC3Bl7B,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACvC,GAAEA,GAAMhB,YAAY,SAAS,GAErC,CACA,GAAE2K,EAAG4C,QAAQV,YAAY,oBAAqBqmH,GAC9C,GAAEvoH,EAAG4C,QAAQV,YAAY,oBAAqBqmH,GAC9CpzH,KAAK6uB,iBACT,EAEA0jG,eAAgB,SAAU1nH,GACtB,GAAI,GAAEA,EAAG4C,QAAQT,SAAS,SACtB,OACL,IAAIqmH,EAAe,GAAExoH,EAAG4C,QAAQstB,QAAQ,iBACpCs4F,EAAarmH,SAAS,mBACtBqmH,EAAanzH,YAAY,kBACzBmzH,EAAaxzH,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACvC,IAAIytF,EAAc,GAAEztF,GAAM1B,KAAK,YAC3BuzH,EAAU/yH,KAAKkyH,kBAAkB9tH,QAAQuqF,GACzCokC,GAAW,IACX/yH,KAAKkyH,kBAAkBj4E,OAAO84E,EAAS,GACvC,GAAE7xH,GAAMhB,YAAY,kBACxB,MAKJmzH,EAAalzH,SAAS,kBACtBkzH,EAAaxzH,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACvC,IAAIytF,EAAc,GAAEztF,GAAM1B,KAAK,YACjBQ,KAAKkyH,kBAAkB9tH,QAAQuqF,IAC9B,IAGX3uF,KAAKkyH,kBAAkB9wH,KAAKutF,GAChC,GAAEztF,GAAMf,SAAS,kBAAiB,KAGzCH,KAAKszF,eACT,EAEAA,cAAe,WACX,IAAIggC,EAAmBtzH,KAAKrC,EAAE,6BAA6BsE,OAC3D,EAAqBjC,KAAKrC,EAAE,YAAYuC,YAAY,UAAUoC,KAAKgxH,GAAoBtzH,KAAKrC,EAAE,YAAY2E,KAAK,GACnH,IAIF,qBAA2B,oBAAwB,CAC/CyuB,UAAW,4BACXvD,SAAU,GAAU+lG,gBACpBtiG,OAAQ,CACJ,sBAAuB,eACvB,uBAAwB,eACxB,sBAAuB,eACvB,yBAA0B,aAC1B,wBAAyB,YACzB,6BAA8B,gBAC9B,uBAAwB,WACxB,2BAA4B,eAC5B,uBAAwB,WACxB,wBAAyB,YACzB,4BAA6B,oBAC7B,6BAA8B,qBAGlC1C,YAAa,SAAUvvB,GACnBgB,KAAKijC,QAAUjkC,EAAQikC,QACvBjjC,KAAKi1B,QAAUj1B,KAAKijC,QAAQhO,QAC5Bj1B,KAAK8zB,MAAQ9zB,KAAKijC,QAAQnP,MAC1Bga,cAAc9tC,KAAKwzH,2BACnBxzH,KAAKyzH,iBACLzzH,KAAKwzH,0BAA4B/vG,aAAY,KACzCzjB,KAAKyzH,gBAAgB,GACtB,MACHzzH,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKD,IAAIF,KAAK,oDAAoDF,KAAK,GAAId,UAAUuB,IAAI,qBACzFJ,KAAK8zB,MAAMzQ,GAAG,aAAcrjB,KAAKwuF,UAAWxuF,MAC5C,MAAU,sBAAuBA,KAAKkgC,mBAAoBlgC,MAC1D,MAAU,gBAAiBA,KAAK0zH,gBAAiB1zH,MACjD,MAAU,2BAA4BA,KAAK2zH,eAAgB3zH,MAC3D,MAAU,uBAAwBA,KAAK4zH,mBAAoB5zH,KAC/D,EAEAgvB,OAAQ,WAWJ,OAVAhvB,KAAKrC,EAAE,eAAek2H,QAAQ,CAAC/6B,MAAO,KACtC94F,KAAKrC,EAAE,aAAa28B,SAAS,CACzBC,WAAY,IACZC,YAAa,IACbE,OAAO,IAEX16B,KAAKrC,EAAE,mBAAmBmxB,OAC1B9uB,KAAKkgC,qBACLlgC,KAAK2zH,iBACL3zH,KAAK4zH,qBACE5zH,IACX,EAEAyzH,eAAgB,WACZ,IAAIK,EAAW,GAAEzgH,OAAO,EAAG,kBAAsBpR,OAAS,GACtD8xH,EAAY,kBAAsBD,GAAUjyH,QAAQ,MAAO,IAC1DkyH,EAIL/zH,KAAKrC,EAAE,cAAc2E,KAAKyxH,GAHtB/zH,KAAKyzH,gBAIb,EAEAjlC,UAAW,WACPxuF,KAAK8zB,MAAM/T,IAAI,CAAC,QAAU,EAAO,SAAW,EAAO,QAAU,IAC7D,2BACJ,EAEA0b,aAAc,WACVz7B,KAAK0sB,QAAQ+O,cACjB,EAEAu4F,WAAY,WACR,IAAIC,EAAkBj0H,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,SAClE,GAAMrnD,QAAQiC,IAAI,aAAiB,wCAAyC,aAAiB,0CACxFimH,EAAkB,GAAM,KAAO,aAAiB,wCAAyC,CAACj0H,KAAK0sB,QAAQixB,SAAS0gE,UAAU,YAAc,KAAM,CAAElwG,eAAgB8lH,EAAiB,aAAiB,UAAY,aAAiB,sDAAsD1rG,MAAMrgB,IAC5R,GAAIA,EAAQ,CAIR,GAHIlI,KAAK0sB,QAAQK,YAAc/sB,KAAK0sB,QAAQK,WAAW01B,oBACnDziD,KAAK8zB,MAAMmhD,4BAEXg/C,EACAj0H,KAAK8zB,MAAMkhD,oBAAmB,OAE7B,CACD,IAAIy6B,EAAezvG,KAAK8zB,MAAMP,SAASimC,OACvC,GAAEi2C,GAAc3vG,MAAK,CAAC4C,EAAKxB,KACvBlB,KAAKijC,QAAQ08D,cAAcz+F,EAAK,GAExC,CACAlB,KAAKwuF,YACLxuF,KAAK8zB,MAAM/T,IAAI,YAAa,EAChC,IAER,EAEAm0G,aAAc,WACV,IAAI93B,EAASp8F,KAAK8zB,MAAMtxB,IAAI,UAExB2xH,KADY/3B,GAAqB,MAAXA,GACK,KAAQ,IAAIlzF,KACvC0mG,EAAuB,CACnB13F,IAAKlY,KAAK0sB,QAAQlqB,IAAI,OACtB45F,OAAQ+3B,EACRtwH,KAAM7D,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMg8E,oBAAoB9vG,KAAK8zB,QAE1GiC,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAK0sB,QAAQlqB,IAAI,SACvC2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGqsB,kBAC9BpvC,EAAE,eAAgBy8F,GAC3B5vG,KAAK0sB,QAAQiK,WAAWZ,GACxB/1B,KAAK8zB,MAAM/T,IAAI,SAAUo0G,EAC7B,EAEAzgB,kBAAmB,WACf,IAAI0gB,EACAp0H,KAAKijC,QAAQxU,cACb2lG,EAAep0H,KAAKijC,SACxBjjC,KAAK8zB,MAAMs0D,eAAiBpoF,KAAK8zB,MAAMs0D,cAAc35D,cAAgB2lG,EAAep0H,KAAK8zB,MAAMs0D,eAC/FgsC,GAAgBA,EAAa90C,aAAag2B,YAAY,KAAK,KACN,SAA7C8e,EAAa90C,aAAah6E,IAAI,YAC9B8uH,EAAa90C,aAAaz/E,KAAK,SAASkP,OAAO,GAE3D,EAEAslH,cAAe,WACX,GAAK,uBAAL,CAEA,GAAI,mCACA,GAAK,iDAKD,iEALsD,CACtD,IAAI5xF,EAAQ,GAAE,oCAAwC5iC,KAAK,uBAAuBL,KAAK,QACvF,GAAE,oCAAwCK,KAAK,aAAaK,YAAY,eACxE,iDAAuDF,KAAKijC,QAAQC,mBAAmB,GAAE,oCAAwCrjC,KAAK,mBAAmB,GAAI4iC,EACjK,MAIA,oCACJ,WAAe,sBAXL,CAYd,EAEA6xF,SAAU,YACD,wBAA8B,uBAEnC,yBAA6BpzH,IACrBA,EAAK0/B,aACD1/B,EAAK0/B,YAAYC,eACjB3/B,EAAK0/B,YAAYC,cAAcC,UACvC,IAEA,qBACA,mCAEA,uBAA6B,KAC7B,WAAe,wBAEvB,EAEAyzF,UAAW,WACH,sBACA,oCACR,EAEAjyF,SAAU,WACN,IAAIC,EAAe,4DAAgE,wBAGnF,IAFsB,IAAlBA,GAAuB,qCACvBA,EAAe,4DAAgE,qCAC9E,wBAAgCA,GAAgB,GAAKA,EAAe,2DAAiE,EAE1I,GAAI,oDAAwDA,EAAe,GAAG3B,YAAY,CACtF,IAAI4B,EAAY,oDAAwDD,EAAe,GACvF,GAAKC,EAAU5B,YAAYC,cAKvB2B,EAAU5B,YAAYC,cAAckB,WALC,CACrC,IAAIU,EAAQ,GAAED,EAAU5B,aAAa/gC,KAAK,uBAAuBL,KAAK,QACtE,GAAEgjC,EAAU5B,aAAa/gC,KAAK,aAAaK,YAAY,eACvDsiC,EAAU5B,YAAYC,cAAgB,4DAAgE,GAAE2B,EAAU5B,aAAa/gC,KAAK,mBAAmB,GAAI4iC,EAAO,uCACtK,CAGJ,MACS,qBAID,kCAAsC,CAACtC,OAAQ,oDAAwDoC,EAAe,MAHtH,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAACpC,OAAQ,oDAAwDoC,EAAe,KAI1H,EAEAG,aAAc,WACV,IAAIH,EAAe,4DAAgE,wBAGnF,IAFsB,IAAlBA,GAAuB,qCACvBA,EAAe,4DAAgE,qCAC9E,wBAAgCA,GAAgB,4DAAkEA,EAAe,EAEtI,GAAI,oDAAwDA,EAAe,GAAG3B,YAAY,CACtF,IAAI+B,EAAY,oDAAwDJ,EAAe,GACvF,GAAKI,EAAU/B,YAAYC,cAKvB8B,EAAU/B,YAAYC,cAAckB,WALC,CACrC,IAAIU,EAAQ,GAAEE,EAAU/B,aAAa/gC,KAAK,uBAAuBL,KAAK,QACtE,GAAEmjC,EAAU/B,aAAa/gC,KAAK,aAAaK,YAAY,eACvDyiC,EAAU/B,YAAYC,cAAgB,4DAAgE,GAAE8B,EAAU/B,aAAa/gC,KAAK,mBAAmB,GAAI4iC,EAAO,uCACtK,CAGJ,MACS,qBAID,kCAAsC,CAACtC,OAAQ,oDAAwDoC,EAAe,MAHtH,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAACpC,OAAQ,oDAAwDoC,EAAe,KAI1H,EAEArC,mBAAoB,WAGhB,GAFAlgC,KAAKrC,EAAE,qBAAqB2T,OAAO,wBACnCtR,KAAKD,IAAIgN,YAAY,2BAA4B,wBAC7C,wBAA8B,oCAC9B,GAAI,iDAAqD,CACrD,IAAI8zB,EAAgB,iDACpB7gC,KAAKrC,EAAE,0BAA0B2E,KAAK,aAAiB,uBACvDtC,KAAKrC,EAAE,kCAAkC4T,OAAOsvB,EAAco+B,aAC9Dj/D,KAAKrC,EAAE,mCAAmC4T,QAAQsvB,EAAco+B,aAChEj/D,KAAKrC,EAAE,wBAAwBoP,YAAY,cAAe8zB,EAAco+B,aAExEj/D,KAAKrC,EAAE,sBAAsBoP,YAAY,qBAAsB8zB,EAAco+B,aAC7E,IAAI18B,EAAe,4DAAgE,wBACnFviC,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAcw1B,GAAgB,GAAKA,EAAe,2DAAiE,IACxJviC,KAAKrC,EAAE,sBAAsBoP,YAAY,aAAcw1B,GAAgB,4DAAkEA,EAAe,IACxJviC,KAAKrC,EAAE,yBAAyBwC,SAAS,UACzCH,KAAKrC,EAAE,kBAAkBwC,SAAS,UAClCH,KAAKrC,EAAE,gCAAgCuC,YAAY,UACnDF,KAAKrC,EAAE,gCAAgCsH,UAAU,sCAA2C,IAC5FjF,KAAK0zH,kBACL,IAAI99G,EAAWtZ,KAAKqiE,MAAM99B,EAAc+9B,eACxC5+D,KAAKrC,EAAE,gCAAgC2E,KAAK,GAAMqT,gBAAgBC,IAClE,IAAIkpD,EAAUr7C,aAAY,WACtB,IAAIs7C,EAAWziE,KAAKqiE,MAAM99B,EAAcm+B,kBACpCn+B,EAAco+B,YACdj/D,KAAKrC,EAAE,kCAAkC2E,KAAK,GAAMqT,gBAAgBopD,IAEpEjxB,cAAcgxB,EACtB,GAAG,KACF,GAAwB,mBAAK,kCAAsC,WACnE,GAAwB,mBAAK,iCAAqC,WAAWtmC,SAAS,IAAM,8BAAkC,cAAcr4B,SAAS,UAC1J,OAEC,GAAI,uBAA4B,CACjCH,KAAKrC,EAAE,kCAAkC2E,KAAK,GAAMqT,gBAAgBF,MAAM,oCAA0C,EAAI0H,SAAS,sCACjInd,KAAKrC,EAAE,gCAAgC2E,KAAK,GAAMqT,gBAAgBwH,SAAS,mCAC3End,KAAK0zH,kBACL,IAAIc,EAAS,8BACTA,GACAx0H,KAAKrC,EAAE,yBAAyBwC,SAAS,UACzCH,KAAKrC,EAAE,kBAAkBuC,YAAY,UACrCF,KAAKrC,EAAE,kBAAkB6B,KAAK,MAAOg1H,KAErCx0H,KAAKrC,EAAE,yBAAyBuC,YAAY,UAC5CF,KAAKrC,EAAE,kBAAkBwC,SAAS,WAEtCH,KAAKrC,EAAE,gCAAgCwC,SAAS,UACL,SAAvC,gCACAH,KAAKrC,EAAE,0BAA0B2E,KAAK,iCAEtCtC,KAAKrC,EAAE,0BAA0B2E,KAAK,aAAiB,uBAC3DtC,KAAKrC,EAAE,kCAAkC4T,OAAO,gCAChDvR,KAAKrC,EAAE,mCAAmC4T,QAAQ,gCAClDvR,KAAKrC,EAAE,wBAAwBoP,YAAY,cAAe,gCAE1D/M,KAAKrC,EAAE,sBAAsBoP,YAAY,qBAAsB,gCAC/D,IAAIw1B,EAAe,4DAAgE,oCACnFviC,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAcw1B,GAAgB,GAAKA,EAAe,2DAAiE,IACxJviC,KAAKrC,EAAE,sBAAsBoP,YAAY,aAAcw1B,GAAgB,4DAAkEA,EAAe,IACvJ,GAAwB,mBAAK,qCAAyC,WACtE,GAAwB,mBAAK,iCAAqC,WAAW/J,SAAS,IAAM,8BAAkC,cAAct4B,YAAY,UAC7J,CACJ,EAEAyzH,eAAgB,WACR,yBACI,wBAA8B,oCAExBl+G,MAAM,qCACZzV,KAAKrC,EAAE,kCAAkC2E,KAAK,GAAMqT,gBAAgBF,MAAM,oCAA0C,EAAI0H,SAAS,sCAE7I,EAEAu2G,gBAAiB,WACb,IAAK,uBACD,OACJ,IACI9xH,EADA6yH,EAAcz0H,KAAKrC,EAAE,wDAErB,wBAA8B,mCAC9BiE,EAAQ,8BACH,yBACLA,EAAQ,oCACJ,oCACwC,UAAxC,gCACI,wCAA4C,0CAA8C,KAAK,GAC7F,aAAiB,uBAC/B6yH,EAAYnyH,KAAKV,GACb5B,KAAKrC,EAAE,2BAA2B,IAAM,GAAMob,iBAAiB/Y,KAAKrC,EAAE,2BAA2B,KACjG82H,EAAYt0H,SAAS,iCACrBs0H,EAAYnyH,KAAKV,EAAQ,gBAAkBA,IAE3C6yH,EAAYv0H,YAAY,gCAEhC,EAEA0zH,mBAAoB,WAEhB,GADA5zH,KAAKrC,EAAE,uBAAuBoP,YAAY,cAAe,sBACrD,qBAAyB,CACzB/M,KAAKrC,EAAE,uBAAuBuC,YAAY,UAC1C,IAAIw0H,EAAc,yBAA6B,UAC3CA,EACA10H,KAAKrC,EAAE,uBAAuB6B,KAAK,aAAck1H,GAEjD10H,KAAKrC,EAAE,uBAAuB6B,KAAK,aAAc,IACjC,iBAAhBk1H,GACA10H,KAAKrC,EAAE,uBAAuBuC,YAAY,cAClD,MACIF,KAAKrC,EAAE,uBAAuBwC,SAAS,SAC/C,EAEAw0H,kBAAmB,WACX,sBACA,0CAGR,IAGJ,gBAAsB,oBAAwB,CAC5C5jG,UAAW,iBACXvD,SAAU,GAAUonG,UACpB93F,YAAa,GAAU7lC,aAAakB,UAEpC84B,OAAQ,CACJ,wBAAyB,0BACzB,2BAA4B,0BAC5B,sBAAuB,0BACvB,uBAAwB,0BACxB,+CAAgD,uBAChD,8CAA+C,qBAC/C,6BAA8B,qBAC9B,2BAA4B,eAC5B,0BAA2B,cAC3B,yBAA0B,aAC1B,4BAA6B,gBAC7B,2BAA4B,eAC5B,6BAA8B,iBAC9B,4BAA6B,gBAC7B,+BAAgC,mBAChC,8BAA+B,qBAC/B,iCAAkC,oBAClC,+BAAgC,kBAChC,sBAAuB,UACvB,0BAA2B,cAC3B,4BAA6B,gBAC7B,6BAA8B,oBAC9B,4BAA6B,oBAC7B,2BAA4B,WAC5B,iCAAkC,aAClC,wBAAyB,YACzB,6BAA8B,gBAC9B,uBAAwB,WACxB,2BAA4B,eAC5B,uBAAwB,WACxB,wBAAyB,aAG7B1C,YAAa,SAAUvvB,GACnBgB,KAAKijC,QAAUjkC,EAAQikC,QACvBjjC,KAAKi1B,QAAUj1B,KAAKijC,QAAQhO,QAC5Bj1B,KAAK8zB,MAAQ9zB,KAAKijC,QAAQnP,MAC1B9zB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK48E,eAAiB,IAAI,6BAAiC,CAAC9oD,MAAO9zB,KAAKi1B,QAAQpQ,YAChF7kB,KAAKm9B,aACLn9B,KAAK86D,eACL96D,KAAKowG,kBACLpwG,KAAKw9B,eACLx9B,KAAKy+E,sBACLz+E,KAAK60H,iBACL70H,KAAKiwG,eACLjwG,KAAK8zB,MAAMzQ,GAAG,mBAAoBrjB,KAAKowG,gBAAiBpwG,MACxDA,KAAK8zB,MAAMzQ,GAAG,aAAcrjB,KAAKwuF,UAAWxuF,MAC5CA,KAAK8zB,MAAMzQ,GAAG,SAAUrjB,KAAK80H,QAAS90H,MACtCA,KAAK8zB,MAAMzQ,GAAG,eAAgBrjB,KAAKy+E,oBAAqBz+E,MACxDA,KAAK8zB,MAAMzQ,GAAG,kBAAmBrjB,KAAK60H,eAAgB70H,MACtDA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKiwG,aAAcjwG,MAClDA,KAAKi1B,QAAQ5R,GAAG,SAAUrjB,KAAK2yF,iBAAkB3yF,MACjDA,KAAKi1B,QAAQ5R,GAAG,eAAgBrjB,KAAK08G,YAAa18G,MAClDA,KAAKi1B,QAAQ5R,GAAG,cAAerjB,KAAKm9B,WAAYn9B,MAChDA,KAAKi1B,QAAQ5R,GAAG,gBAAiBrjB,KAAK86D,aAAc96D,MACpDA,KAAKi1B,QAAQ5R,GAAG,wBAAyBrjB,KAAK86D,aAAc96D,MAC5DA,KAAKi1B,QAAQ5R,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACnDA,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAK+0H,iBAAkB/0H,MACzDA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAKg1H,oBAAqBh1H,MAC/DA,KAAKi1B,QAAQ5R,GAAG,sBAAuBrjB,KAAKi1H,WAAYj1H,MACxDA,KAAKi1B,QAAQ5R,GAAG,mBAAoBrjB,KAAKi1H,WAAYj1H,MACrDA,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAK8wG,qBAAsB9wG,MAC7D,MAAU,eAAgBA,KAAKg1H,oBAAqBh1H,MACpD,MAAU,sBAAuBA,KAAKkgC,mBAAoBlgC,MAC1D,MAAU,gBAAiBA,KAAK0zH,gBAAiB1zH,MACjD,MAAU,2BAA4BA,KAAK2zH,eAAgB3zH,MAC3D,MAAU,uBAAwBA,KAAK4zH,mBAAoB5zH,KAC/D,EAEAgvB,OAAQ,SAAUhwB,GAwBd,OAvBAgB,KAAKrC,EAAE,eAAek2H,QAAQ,UAC9B7zH,KAAKrC,EAAE,eAAek2H,QAAQ,CAAC/6B,MAAO,KACtC94F,KAAKrC,EAAE,aAAa28B,SAAS,CACzBC,WAAY,IACZC,YAAa,IACbE,OAAO,IAEX16B,KAAKrC,EAAE,sBAAsB28B,SAAS,CAClCC,WAAY,IACZC,YAAa,IACbE,OAAO,EACPgJ,aAAa,IAEjB1jC,KAAKrC,EAAE,mBAAmBmxB,OAC1B9uB,KAAK27E,kBACL37E,KAAKg1H,sBACDh1H,KAAKi1B,QAAQzyB,IAAI,cACjBxC,KAAKrC,EAAE,2BAA2BwC,SAAS,iBAE3CH,KAAKrC,EAAE,2BAA2BwC,SAAS,kBAC/CH,KAAKkgC,qBACLlgC,KAAK2zH,iBACL3zH,KAAK4zH,qBACE5zH,IACX,EAEAowG,gBAAiB,WACbpwG,KAAKD,IAAIgN,YAAY,YAAa/M,KAAK8zB,MAAMtxB,IAAI,aACrD,EAEAsuG,qBAAsB,SAAUvxF,GAC5Bvf,KAAKD,IAAIP,KAAK,aAAc+f,EAChC,EAEA4d,WAAY,WACRn9B,KAAKrC,EAAE,iBAAiB2E,KAAKtC,KAAKi1B,QAAQzyB,IAAI,QAClD,EAEAs4D,aAAc,WACV,IAAIv0C,EAASvmB,KAAKi1B,QAAQzyB,IAAI,UAC1B2mD,EAAiBnpD,KAAKi1B,QAAQu/B,mBAClCx0D,KAAKrC,EAAE,mBAAmB6B,KAAK,cAAe+mB,GAC9CvmB,KAAKrC,EAAE,cAAc6B,KAAK,cAAe+mB,GACzCvmB,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAKrC,EAAE,2BAA2B2E,KAAK,mBAAqBtC,KAAKrC,EAAE,2BAA2B2E,KAAK6mD,EACnI,EAEAwyB,gBAAiB,WACb37E,KAAKrC,EAAE,2BAA2B2E,KAAKtC,KAAKi1B,QAAQu/B,mBACxD,EAEAh3B,aAAc,WACV,IAAIxiC,EAAQgF,KAAKi1B,QAAQ9vB,aACzBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YACnD,EAEA61D,iBAAkB,WACd,IAAIr5D,EAAUt5B,KAAKi1B,QAAQqE,SACvB,GAAExI,IAAIwI,EAAS,4BAA8B,GAAExI,IAAIwI,EAAS,6BAA+B,GAAExI,IAAIwI,EAAS,iBAAmB,GAAExI,IAAIwI,EAAS,oBAC5It5B,KAAK27E,mBACL,GAAE7qD,IAAIwI,EAAS,iBAAmB,GAAExI,IAAIwI,EAAS,mBAAqB,GAAExI,IAAIwI,EAAS,gBACrFt5B,KAAKy7E,YACb,EAEAs5C,iBAAkB,WACd/0H,KAAKi1H,aACLj1H,KAAK27E,kBACL37E,KAAKy7E,YACT,EAEAw5C,WAAY,WACR,IAAIn5C,EAAgB97E,KAAKi1B,QAAQzyB,IAAI,cACrCxC,KAAKrC,EAAE,qBAAqB2T,OAAOwqE,IAAkB97E,KAAKi1B,QAAQzyB,IAAI,iBAAuD,QAApCxC,KAAKi1B,QAAQzyB,IAAI,iBAC1GxC,KAAKrC,EAAE,uBAAuB4T,OAAOuqE,GAAiB97E,KAAK8zB,MAAMtxB,IAAI,cACrExC,KAAKrC,EAAE,sBAAsB4T,OAAOuqE,GACpC97E,KAAKrC,EAAE,yBAAyB2T,QAAQwqE,GAAiB97E,KAAK0sB,QAAQ4mC,QAAUtzD,KAAK8zB,MAAMtxB,IAAI,eAAiBxC,KAAK0sB,QAAQgH,MAAMlxB,IAAI,GAAGxC,KAAKi1B,QAAQM,sBACvJv1B,KAAKrC,EAAE,4BAA4B2T,QAAQwqE,GAAiB97E,KAAK0sB,QAAQ4mC,QAAUtzD,KAAK8zB,MAAMtxB,IAAI,cAAgBxC,KAAK0sB,QAAQgH,MAAMlxB,IAAI,GAAGxC,KAAKi1B,QAAQM,sBACzJv1B,KAAKrC,EAAE,0BAA0B2T,OAAOtR,KAAK8zB,MAAMtxB,IAAI,cACvDxC,KAAKrC,EAAE,0BAA0B2T,QAAQwqE,GAAiB97E,KAAK0sB,QAAQ4mC,OAAStzD,KAAK8zB,MAAMtxB,IAAI,cAC/FxC,KAAKrC,EAAE,6BAA6B2T,OAAOwqE,GAC3C97E,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAKi1B,QAAQzyB,IAAI,YACrDxC,KAAKrC,EAAE,wBAAwB2T,OAAOtR,KAAKi1B,QAAQzyB,IAAI,YACvDxC,KAAKrC,EAAE,uBAAuB2T,OAAOtR,KAAKi1B,QAAQzyB,IAAI,eAAiBs5E,GACvE97E,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAKi1B,QAAQzyB,IAAI,YACrDxC,KAAKrC,EAAE,uBAAuB4T,QAAQvR,KAAKi1B,QAAQzyB,IAAI,YAAcs5E,IAAkB,qBAC3F,EAEA43B,kBAAmB,WACf1zG,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACh/B,KAAM,UACtD,EAEAqxH,mBAAoB,WAChBl1H,KAAKi1B,QAAQmlD,YAAY,YAC7B,EAEA+6C,wBAAyB,WACrBn1H,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACtjB,UAAWvf,KAAK8zB,MAAMtxB,IAAI,cAC1E,EAEA4yH,qBAAsB,WAClBp1H,KAAK48E,eAAe3yE,MACxB,EAEAorH,mBAAoB,WAChBr1H,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACh/B,KAAM,WACtD,EAEAosG,aAAc,WACV,IAAI7T,EAASp8F,KAAK8zB,MAAMtxB,IAAI,aACZ45F,GAAqB,MAAXA,GAEtBp8F,KAAKrC,EAAE,2BAA2B2E,KAAK,aAAiB,sBAExDtC,KAAKrC,EAAE,2BAA2B2E,KAAK,aAAiB,mBAChE,EAEAm8E,oBAAqB,WACbz+E,KAAK8zB,MAAMuI,WACXr8B,KAAKrC,EAAE,gCAAgC2E,KAAK,aAAiB,uBAC7DtC,KAAKrC,EAAE,sBAAsBwC,SAAS,WAGtCH,KAAKrC,EAAE,gCAAgC2E,KAAK,aAAiB,qBAC7DtC,KAAKrC,EAAE,sBAAsBuC,YAAY,UAE7CF,KAAKrC,EAAE,sBAAsB4T,OAAOvR,KAAK8zB,MAAMuI,WAC/Cr8B,KAAKrC,EAAE,wBAAwB4T,QAAQvR,KAAK8zB,MAAMuI,UACtD,EAEE+hD,SAAU,SAAUvzE,GAChB,GAAI7K,KAAKi1B,QAAQzyB,IAAI,WACjB,OACJ,IACI28E,EADAC,EAAY,GAAEv0E,EAAG4C,QAAQstB,QAAQ,sBAAsBr7B,KAAK,QAE9C,cAAd0/E,IACAD,EAAgB,KACF,WAAdC,IACAD,EAAgB,MACF,WAAdC,IACAD,EAAgB,MACF,QAAdC,IACAD,EAAgB,OACF,YAAdC,IACAD,EAAgB,GACpBn/E,KAAK8zB,MAAMsqD,SAASe,EACxB,EAEAE,WAAY,SAAUx0E,GACd7K,KAAKi1B,QAAQzyB,IAAI,YAErBxC,KAAK8zB,MAAMsqD,SAAS,GACxB,EAEFk3C,cAAe,SAAUzqH,GACrB,IAAI+a,EAAM4xD,GAAK,CAAC3zE,KAAM,WAAY0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,SAClD2Q,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAG6lC,YACvC/7D,KAAK0sB,QAAQ4+B,QAAQ1lC,GACrB5lB,KAAK8zB,MAAMP,SAASq2D,oBAAoB,CACpCz5B,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B0U,QAAS,aAAiB,4BAElC,EAGA29G,eAAgB,WACZ,IAAIzjB,GAAYpxG,KAAK8zB,MAAMtxB,IAAI,YAC3B4tD,IAAcghD,EACbhhD,EAGDpwD,KAAKrC,EAAE,+BAA+B2E,KAAK,aAAiB,wBAF5DtC,KAAKrC,EAAE,+BAA+B2E,KAAK,aAAiB,0BAGhEtC,KAAKrC,EAAE,0BAA0BoP,YAAY,kBAAmBqjD,GAChEpwD,KAAKrC,EAAE,0BAA0BoP,YAAY,mBAAoBqjD,GAC7DpwD,KAAK8zB,MAAMc,WAAaw8E,KACvBpxG,KAAK8zB,MAAMP,SAAStxB,QAAUjC,KAAK8zB,MAAMc,UAAUC,oBACpD70B,KAAK0sB,QAAQ8kD,cAAc+jD,uBAAuBv1H,KAAKi1B,QAAQzyB,IAAI,OAAQ4uG,GACvEpxG,KAAK8zB,MAAMtxB,IAAI,WACf,qCAGZ,EAEAk6G,YAAa,SAAU7xG,EAAI2qH,GACvB,IAAIpkB,GAAYpxG,KAAK8zB,MAAMtxB,IAAI,YAE/B,IAAKgzH,EAAO,CACR,IAAIC,IAFUrkB,EAEyB,WAAa,SAChDxB,EAAuB,CACnB13F,IAAKlY,KAAKi1B,QAAQzyB,IAAI,OACtB+jB,OAAQkvG,EACR5xH,KAAM7D,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMg8E,oBAAoB9vG,KAAK8zB,QAE1GiC,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAK0sB,QAAQlqB,IAAI,SACvC2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGqsB,kBAC9BpvC,EAAE,eAAgBy8F,GAC3B5vG,KAAK0sB,QAAQiK,WAAWZ,GACxB/1B,KAAK8zB,MAAM/T,IAAI,WAAYqxF,EAC/B,CACJ,EAEA0jB,QAAS,WACL,IAAI14B,EAASp8F,KAAK8zB,MAAMtxB,IAAI,UAExB2xH,KADY/3B,GAAqB,MAAXA,GACK,KAAQ,IAAIlzF,KACvC0mG,EAAuB,CACnB13F,IAAKlY,KAAKi1B,QAAQzyB,IAAI,OACtB45F,OAAQ+3B,EACRtwH,KAAM7D,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMtxB,IAAI,aAAexC,KAAK8zB,MAAMg8E,oBAAoB9vG,KAAK8zB,QAE1GiC,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAK0sB,QAAQlqB,IAAI,SACvC2Q,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGqsB,kBAC9BpvC,EAAE,eAAgBy8F,GACvB5vG,KAAK0sB,QAAQiK,WAAWZ,GACxB/1B,KAAK8zB,MAAM/T,IAAI,SAAUo0G,EACjC,EAEAuB,kBAAmB,WACX,qBACA,4CAGJ,4BACA,6BACC11H,KAAKi1B,QAAQzyB,IAAI,eAAiBxC,KAAKijC,QAAQ+6C,oBACpD,EAEAvpB,UAAW,YACe,IAAI,2BACVxqD,KAAKjK,KAAKi1B,QAC9B,EAEAo/F,cAAe,WACX,GAAK,uBAAL,CAEA,GAAI,mCACA,GAAK,iDAKD,iEALsD,CACtD,IAAI5xF,EAAQ,GAAE,oCAAwC5iC,KAAK,uBAAuBL,KAAK,QACvF,GAAE,oCAAwCK,KAAK,aAAaK,YAAY,eACxE,iDAAuDF,KAAKijC,QAAQC,mBAAmB,GAAE,oCAAwCrjC,KAAK,mBAAmB,GAAI4iC,EACjK,MAIA,oCACJ,WAAe,sBAXL,CAYd,EAEA6xF,SAAU,YACD,wBAA8B,uBAEnC,yBAA6BpzH,IACrBA,EAAK0/B,aACD1/B,EAAK0/B,YAAYC,eACjB3/B,EAAK0/B,YAAYC,cAAcC,UACvC,IAEA,qBACA,mCAEA,uBAA6B,KAC7B,WAAe,wBAEvB,EAEAyzF,UAAW,WACH,sBACA,oCACR,EAEAjyF,SAAU,WACN,IAAIC,EAAe,4DAAgE,wBAGnF,IAFsB,IAAlBA,GAAuB,qCACvBA,EAAe,4DAAgE,qCAC9E,wBAAgCA,GAAgB,GAAKA,EAAe,2DAAiE,EAE1I,GAAI,oDAAwDA,EAAe,GAAG3B,YAAY,CACtF,IAAI4B,EAAY,oDAAwDD,EAAe,GACvF,GAAKC,EAAU5B,YAAYC,cAKvB2B,EAAU5B,YAAYC,cAAckB,WALC,CACrC,IAAIU,EAAQ,GAAED,EAAU5B,aAAa/gC,KAAK,uBAAuBL,KAAK,QACtE,GAAEgjC,EAAU5B,aAAa/gC,KAAK,aAAaK,YAAY,eACvDsiC,EAAU5B,YAAYC,cAAgB,4DAAgE,GAAE2B,EAAU5B,aAAa/gC,KAAK,mBAAmB,GAAI4iC,EAAO,uCACtK,CAGJ,MACS,qBAID,kCAAsC,CAACtC,OAAQ,oDAAwDoC,EAAe,MAHtH,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAACpC,OAAQ,oDAAwDoC,EAAe,KAI1H,EAEAG,aAAc,WACV,IAAIH,EAAe,4DAAgE,wBAGnF,IAFsB,IAAlBA,GAAuB,qCACvBA,EAAe,4DAAgE,qCAC9E,wBAAgCA,GAAgB,4DAAkEA,EAAe,EAEtI,GAAI,oDAAwDA,EAAe,GAAG3B,YAAY,CACtF,IAAI+B,EAAY,oDAAwDJ,EAAe,GACvF,GAAKI,EAAU/B,YAAYC,cAKvB8B,EAAU/B,YAAYC,cAAckB,WALC,CACrC,IAAIU,EAAQ,GAAEE,EAAU/B,aAAa/gC,KAAK,uBAAuBL,KAAK,QACtE,GAAEmjC,EAAU/B,aAAa/gC,KAAK,aAAaK,YAAY,eACvDyiC,EAAU/B,YAAYC,cAAgB,4DAAgE,GAAE8B,EAAU/B,aAAa/gC,KAAK,mBAAmB,GAAI4iC,EAAO,uCACtK,CAGJ,MACS,qBAID,kCAAsC,CAACtC,OAAQ,oDAAwDoC,EAAe,MAHtH,qBAA2B,IAAI,uBAA2B,CAAC,GAC3D,0BAA8B,CAACpC,OAAQ,oDAAwDoC,EAAe,KAI1H,EAEArC,mBAAoB,WAGhB,GAFAlgC,KAAKrC,EAAE,qBAAqB2T,OAAO,wBACnCtR,KAAKD,IAAIgN,YAAY,2BAA4B,wBAC7C,wBAA8B,oCAC9B,GAAI,iDAAqD,CACrD,IAAI8zB,EAAgB,iDACpB7gC,KAAKrC,EAAE,0BAA0B2E,KAAK,aAAiB,uBACvDtC,KAAKrC,EAAE,kCAAkC4T,OAAOsvB,EAAco+B,aAC9Dj/D,KAAKrC,EAAE,mCAAmC4T,QAAQsvB,EAAco+B,aAChEj/D,KAAKrC,EAAE,wBAAwBoP,YAAY,cAAe8zB,EAAco+B,aAExEj/D,KAAKrC,EAAE,sBAAsBoP,YAAY,qBAAsB8zB,EAAco+B,aAC7E,IAAI18B,EAAe,4DAAgE,wBACnFviC,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAcw1B,GAAgB,GAAKA,EAAe,2DAAiE,IACxJviC,KAAKrC,EAAE,sBAAsBoP,YAAY,aAAcw1B,GAAgB,4DAAkEA,EAAe,IACxJviC,KAAKrC,EAAE,yBAAyBwC,SAAS,UACzCH,KAAKrC,EAAE,kBAAkBwC,SAAS,UAClCH,KAAKrC,EAAE,gCAAgCuC,YAAY,UACnDF,KAAKrC,EAAE,gCAAgCsH,UAAU,sCAA2C,IAC5FjF,KAAK0zH,kBACL,IAAI99G,EAAWtZ,KAAKqiE,MAAM99B,EAAc+9B,eACxC5+D,KAAKrC,EAAE,gCAAgC2E,KAAK,GAAMqT,gBAAgBC,IAClE,IAAIkpD,EAAUr7C,aAAY,WACtB,IAAIs7C,EAAWziE,KAAKqiE,MAAM99B,EAAcm+B,kBACpCn+B,EAAco+B,YACdj/D,KAAKrC,EAAE,kCAAkC2E,KAAK,GAAMqT,gBAAgBopD,IAEpEjxB,cAAcgxB,EACtB,GAAG,KACF,GAAwB,mBAAK,kCAAsC,WACnE,GAAwB,mBAAK,iCAAqC,WAAWtmC,SAAS,IAAM,8BAAkC,cAAcr4B,SAAS,UAC1J,OAEC,GAAI,uBAA4B,CACjCH,KAAKrC,EAAE,kCAAkC2E,KAAK,GAAMqT,gBAAgBF,MAAM,oCAA0C,EAAI0H,SAAS,sCACjInd,KAAKrC,EAAE,gCAAgC2E,KAAK,GAAMqT,gBAAgBwH,SAAS,mCAC3End,KAAK0zH,kBACL,IAAIc,EAAS,8BACTA,GACAx0H,KAAKrC,EAAE,yBAAyBwC,SAAS,UACzCH,KAAKrC,EAAE,kBAAkBuC,YAAY,UACrCF,KAAKrC,EAAE,kBAAkB6B,KAAK,MAAOg1H,KAErCx0H,KAAKrC,EAAE,yBAAyBuC,YAAY,UAC5CF,KAAKrC,EAAE,kBAAkBwC,SAAS,WAEtCH,KAAKrC,EAAE,gCAAgCwC,SAAS,UACL,SAAvC,gCACAH,KAAKrC,EAAE,0BAA0B2E,KAAK,iCAEtCtC,KAAKrC,EAAE,0BAA0B2E,KAAK,aAAiB,uBAC3DtC,KAAKrC,EAAE,kCAAkC4T,OAAO,gCAChDvR,KAAKrC,EAAE,mCAAmC4T,QAAQ,gCAClDvR,KAAKrC,EAAE,wBAAwBoP,YAAY,cAAe,gCAE1D/M,KAAKrC,EAAE,sBAAsBoP,YAAY,qBAAsB,gCAC/D,IAAIw1B,EAAe,4DAAgE,oCACnFviC,KAAKrC,EAAE,kBAAkBoP,YAAY,aAAcw1B,GAAgB,GAAKA,EAAe,2DAAiE,IACxJviC,KAAKrC,EAAE,sBAAsBoP,YAAY,aAAcw1B,GAAgB,4DAAkEA,EAAe,IACvJ,GAAwB,mBAAK,qCAAyC,WACtE,GAAwB,mBAAK,iCAAqC,WAAW/J,SAAS,IAAM,8BAAkC,cAAct4B,YAAY,UAC7J,CACJ,EAEAyzH,eAAgB,WACR,yBACI,wBAA8B,oCAExBl+G,MAAM,qCACZzV,KAAKrC,EAAE,kCAAkC2E,KAAK,GAAMqT,gBAAgBF,MAAM,oCAA0C,EAAI0H,SAAS,sCAE7I,EAEAu2G,gBAAiB,WACb,IAAK,uBACD,OACJ,IACI9xH,EADA6yH,EAAcz0H,KAAKrC,EAAE,wDAErB,wBAA8B,mCAC9BiE,EAAQ,8BACH,yBACLA,EAAQ,oCACJ,oCACwC,UAAxC,gCACI,wCAA4C,0CAA8C,KAAK,GAC7F,aAAiB,uBAC/B6yH,EAAYnyH,KAAKV,GACb5B,KAAKrC,EAAE,2BAA2B,IAAM,GAAMob,iBAAiB/Y,KAAKrC,EAAE,2BAA2B,KACjG82H,EAAYt0H,SAAS,iCACrBs0H,EAAYnyH,KAAKV,EAAQ,gBAAkBA,IAE3C6yH,EAAYv0H,YAAY,gCAEhC,EAGA0zH,mBAAoB,WAEhB,GADA5zH,KAAKrC,EAAE,uBAAuBoP,YAAY,cAAe,sBACrD,qBAAyB,CACzB/M,KAAKi1B,QAAQzyB,IAAI,eAAiBxC,KAAKrC,EAAE,uBAAuBuC,YAAY,UAC5E,IAAIw0H,EAAc,yBAA6B,UAC3CA,EACA10H,KAAKrC,EAAE,uBAAuB6B,KAAK,aAAck1H,GAEjD10H,KAAKrC,EAAE,uBAAuB6B,KAAK,aAAc,IACjC,iBAAhBk1H,GACA10H,KAAKrC,EAAE,uBAAuBuC,YAAY,cAClD,MAAWF,KAAKi1B,QAAQzyB,IAAI,eACxBxC,KAAKrC,EAAE,uBAAuBwC,SAAS,SAC/C,EAEAw1H,gBAAiB,WACb,IAAIC,EAAgB,kBAAsB,WAC1C51H,KAAKrC,EAAE,eAAeuC,YAAY,UAC9B01H,EAAc5oH,SAAS,iBACvB,8BAGA4oH,EAAc5oH,SAAS,aACvB,+BAGA4oH,EAAc5oH,SAAS,SACvB,4BAGA4oH,EAAc5oH,SAAS,eACvB,iCAGA4oH,EAAc5oH,SAAS,iBACvB,oCAGR,EAEAgoH,oBAAqB,WACjB,IAAIl5C,EAAgB97E,KAAKi1B,QAAQzyB,IAAI,cACrCxC,KAAKy7E,aACLz7E,KAAKrC,EAAE,uBAAuB2T,QAAQwqE,GAAiB,OAAW,UAAY,sBAC9E97E,KAAKrC,EAAE,mBAAmB4T,OAAOuqE,GACjC97E,KAAKi1H,YACT,EAEAx5C,WAAY,WACRz7E,KAAKrC,EAAE,cAAcwC,SAAS,UAC9B,IAAI46E,EAAU/6E,KAAKi1B,QAAQw9C,UAC3BsI,GAAW/6E,KAAKrC,EAAE,cAAcuC,YAAY,+BAA+B6M,YAAYguE,EAAqB,gBAAXA,GAAwC,UAAXA,GAAkC,WAAXA,GAAuBp7E,KAAK,GAAId,UAAUuB,IAAI26E,KACvM,EAEA86C,YAAa,WACJ,kBACD,gBAAsB,IAAI,uBAA2B,CAAE/hG,MAAO,mBAClE,qBAAyB9zB,KAAK0sB,QAAS1sB,KAAKi1B,QAChD,EAEA8rD,aAAc,WACV/gF,KAAKijC,QAAQ89C,eACb,2BACJ,EAEAR,eAAgB,WACZvgF,KAAKi1B,QAAQu/C,sBACbx0E,KAAKi1B,QAAQk/C,mBACbn0E,KAAKi1B,QAAQlV,IAAI,aAAa,EAClC,EAEAyuE,UAAW,WACPxuF,KAAK8zB,MAAM/T,IAAI,CAAC,QAAU,EAAO,SAAW,EAAO,QAAU,IAC7D,2BACJ,EAEAi0G,WAAY,WACR,GAAIh0H,KAAKi1B,QAAQzyB,IAAI,cACjB,GAAMuJ,QAAQiC,IAAI,aAAiB,eAAgB,aAAiB,gCAAiC,KAAM,CAAEG,eAAgB,aAAiB,YAAYoa,MAAMrgB,IACxJA,IACClI,KAAK0sB,QAAQK,YAAc/sB,KAAK0sB,QAAQK,WAAW01B,oBAAuBziD,KAAK8zB,MAAMmhD,4BACtFj1E,KAAKugF,iBACLvgF,KAAKwuF,YACT,QAGH,CACD,IAAIylC,EAAkBj0H,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,SAClE,GAAMrnD,QAAQiC,IAAI,aAAiB,eAAgB,aAAiB,+BACnEimH,EAAkB,GAAK,KAAK,aAAiB,4DAA6D,CAACj0H,KAAK0sB,QAAQixB,SAAS0gE,UAAU,cAAe,KAAM,CAAElwG,eAAgB8lH,EAAiB,aAAiB,UAAY,aAAiB,sDAAsD1rG,MAAMrgB,IAC1S,GAAIA,EAAQ,CAIR,GAHI+rH,GACAj0H,KAAK8zB,MAAMkhD,oBAAmB,GAE9Bh1E,KAAK0sB,QAAQK,YAAc/sB,KAAK0sB,QAAQK,WAAW01B,mBACnDziD,KAAK8zB,MAAMmhD,gCAEV,CACD,IAAIw6B,EAAezvG,KAAK8zB,MAAMP,SAASimC,OACvC,GAAEi2C,GAAc3vG,MAAK,CAAC4C,EAAKxB,KACvBlB,KAAKijC,QAAQ08D,cAAcz+F,EAAK,GAExC,CACAlB,KAAKwuF,WACT,IAER,CACJ,EAEAvQ,cAAe,WACXj+E,KAAKi1B,QAAQy/C,kBACjB,EAEA7O,aAAc,WACV7lE,KAAKi1B,QAAQigD,iBACjB,EAEAgJ,eAAgB,WACZl+E,KAAKi1B,QAAQkgD,mBACjB,EAEA2gD,cAAe,WAEf,EAEAC,iBAAkB,WACd,IAAK/1H,KAAK0sB,QAAQ4mC,MACd,OACOtzD,KAAK0sB,QAAQ4mC,MAAM0jD,QAAQh3G,KAAKi1B,QAAQzyB,IAAI,QAClDy0G,aAAahtG,MACtB,EAEA+rH,mBAAoB,WAChBh2H,KAAK0sB,QAAQgH,MAAMmqD,SAAS79E,KAAKi1B,QAAS,CAAC1V,WAAW,IACtD,IAAIrrB,EAAO8L,KAAK0sB,QAAQgH,MAAMlxB,IAAIxC,KAAKi1B,QAAQM,QAAU,cACzDrhC,EAAK6rB,IAAI,YAAa,GAAO5W,OAC7BjV,EAAK0gC,UAAUC,mBACnB,EAEAohG,kBAAmB,WACfj2H,KAAK8zB,MAAM/T,IAAI,UAAU,GACzB/f,KAAK0sB,QAAQgH,MAAMmqD,SAAS79E,KAAKi1B,QAAS,CAAC1V,WAAW,GAC1D,EAEA22G,gBAAiB,WACbl2H,KAAK8zB,MAAM/T,IAAI,UAAU,GACzB/f,KAAK0sB,QAAQgH,MAAMmqD,SAAS79E,KAAKi1B,QACrC,IAIF,iBAAuB,oBAAwB,CAC3ClE,UAAW,kDACXvD,SAAU,GAAU2oG,WACpBroG,YAAa,iBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,kBAAmB,mBACnB,kCAAmC,iBACnC,4BAA6B,qBAC7B,kBAAmB,iBACnB,iBAAkB,WAClB,oBAAqB,SAGzB1C,YAAa,WACTvuB,KAAKrC,EAAE,aAAa,GAAGoqC,QAAU/nC,KAAKgoC,QAAQ1/B,KAAKtI,KACvD,EAEAgvB,OAAQ,SAAUhwB,GACdgB,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKytB,OAASzuB,EAAQyuB,OACtBztB,KAAKioC,gBACLjoC,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,wCAAwCwC,SAAS,UACxDH,KAAKrC,EAAE,sBAAsB2E,KAAK,aAAiB,mCACnDtC,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKrC,EAAE,kBAAkBqwB,iBAAiB,CAAC5E,MAAO,aAAa,EAEnEje,SAAUnL,KAAKkL,MAAM5C,KAAKtI,QAE9B,IAAIkoC,EAAYloC,KAAKrC,EAAE,gBACvBuqC,EAAU,GAAGC,YAAc,SAAUt9B,GACjCA,EAAGa,iBACHw8B,EAAU/nC,SAAS,YACvB,EACA+nC,EAAU,GAAGE,WAAa,SAAUv9B,GAChCA,EAAGa,gBACP,EACAw8B,EAAU,GAAGG,YAAc,SAAUx9B,GAC7B,GAAEA,EAAGy9B,eAAevN,QAAQ,gBAAgB94B,SAEhD4I,EAAGa,iBACHw8B,EAAUhoC,YAAY,aAC1B,EACAgoC,EAAU,GAAGK,OAAU19B,IACnBA,EAAGa,iBACHb,EAAGsmB,kBACH+W,EAAUhoC,YAAY,aACtB,IAAIsoC,EAAQ39B,EAAG49B,aAAaD,OAAS,GACrCxoC,KAAKytB,OAAOI,KAAKk4F,eAAev9E,GAChCxoC,KAAKkL,OAAO,CAEpB,EAEA88B,QAAS,SAAUn9B,GACf,IAAIrV,EAAMqV,EAAG4+B,cAAcC,QAAQ,QAAQllC,OAC3CxE,KAAKrC,EAAE,sBAAsB,GAAG2J,OAAS,KACrCtH,KAAKrC,EAAE,sBAAsBuC,YAAY,UACzCF,KAAK2pC,oBAAoB,EAE7B3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM5R,EACzDwK,KAAK2pC,oBACT,EAEAC,iBAAkB,SAAU/+B,GACxB,IAAIg/B,EAAch/B,EAAG4C,OAAOksB,aAAa,oBACzC35B,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,+BAA+BksC,OAAiB1pC,SAAS,UAChEH,KAAK8pC,aAAaD,EACtB,EAEAC,aAAc,SAAU/qC,GACpBiB,KAAKrC,EAAE,gBAAgBwC,SAAS,UAChCH,KAAKrC,EAAE,6BAA6BoB,OAAUmB,YAAY,UAC1DF,KAAKiwB,cACLjwB,KAAK2pC,oBACT,EAEAA,mBAAoB,WAChB,IAAII,EAAiB/pC,KAAKrC,EAAE,6BACxBqsC,GAAa,EACyB,SAAtCD,EAAevqC,KAAK,gBAAmE,SAAtCuqC,EAAevqC,KAAK,eACrEuqC,EAAelqC,KAAK,cAAcoC,SAAW+nC,GAAa,GAE1DD,EAAelqC,KAAK,oBAAoBoC,SAAW+nC,GAAa,GAEpEhqC,KAAKrC,EAAE,0BAA0BoP,YAAY,aAAci9B,EAC/D,EAEAi2B,YAAa,SAAUxsB,GACnBzzC,KAAKrC,EAAE,8BAA8B81C,EAAS5vC,6BAA6BqN,SACvEuiC,EAAS8I,MAAMt6C,QACfwxC,EAAS8I,MAAMlqC,SAASnR,IACpB,IAAImoC,EAAM,GAAE,6BACZA,EAAI/jC,IAAI,mBAAoB,QAAQpE,EAAKooC,UAAU9zC,SACnD6zC,EAAI7pC,KAAK,WAAY0B,EAAK+F,MAC1BoiC,EAAI7pC,KAAK,YAAa0B,EAAKnC,MAC3BiB,KAAKrC,EAAE,8BAA8B81C,EAAS5vC,UAAUgJ,OAAOw8B,EAAI,GAG/E,EAEApB,cAAe,WACXjoC,KAAK8zB,MAAMojC,wBAAuB,KAC1Bl3D,KAAK8zB,MAAMtxB,IAAI,kBAAoBxC,KAAK8zB,MAAMtxB,IAAI,iBAClDxC,KAAKrC,EAAE,iBAAiBgC,KAAK,GAAId,UAAUy2B,SAASO,aACpD,GAAEuT,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK8zB,MAAMtxB,IAAI,kBACtDhN,IAAKwK,KAAK8zB,MAAMtxB,IAAI,eAAiB,YACrCwmC,SAAU,OACVtpC,KAAM,CAACqgE,aAAc,GAAIlC,SAAU,MAAOh6D,KAAM,SAChDolC,QAAUwK,IACN,GAAQ1tB,IAAI0tB,GACZA,EAAS5vC,KAAO,QAChB7D,KAAKigE,YAAYxsB,EAAQ,EAE7B1lC,MAAQ0lC,IACJzzC,KAAK8zB,MAAMyjC,0BAA0B9jB,GACrC,GAAQ1tB,IAAI0tB,GACZzzC,KAAKrC,EAAE,yDAAyDuT,QAAO,IAG/E,GAAEk4B,KAAK,CACHvlC,KAAM,MACN2mC,QAAS,CAAC,cAAiB,UAAYxqC,KAAK8zB,MAAMtxB,IAAI,kBACtDhN,IAAKwK,KAAK8zB,MAAMtxB,IAAI,eAAiB,YACrCwmC,SAAU,OACVtpC,KAAM,CAACqgE,aAAc,GAAIlC,SAAU,MAAOh6D,KAAM,SAChDolC,QAAUwK,IACN,GAAQ1tB,IAAI0tB,GACZA,EAAS5vC,KAAO,QAChB7D,KAAKigE,YAAYxsB,EAAQ,EAE7B1lC,MAAQ0lC,IACJzzC,KAAK8zB,MAAMyjC,0BAA0B9jB,GACrC,GAAQ1tB,IAAI0tB,GACZzzC,KAAKrC,EAAE,yDAAyDuT,QAAO,IAGnF,GAER,EAEAi5B,eAAgB,SAAUt/B,GACtB,IAAI65B,EAAU,GAAE75B,EAAG4C,QACEzN,KAAKrC,EAAE,6BACxB+mC,EAAQ13B,SAAS,UACjB03B,EAAQxkC,YAAY,WAEpBF,KAAKrC,EAAE,qBAAqBuC,YAAY,UACxCwkC,EAAQvkC,SAAS,WAErBH,KAAK2pC,oBACT,EAEAS,mBAAoB,SAAUv/B,GAC1B,IAAI4C,EAAS5C,EAAG4C,OACZ+6B,EAAQ,GACZ,IAAK,IAAIhlC,EAAI,EAAGA,EAAIiK,EAAO+6B,MAAMvmC,OAAQuB,IACrCglC,EAAMpnC,KAAKqM,EAAO+6B,MAAMhlC,IAGxBglC,GAASA,EAAMvmC,SACfjC,KAAKytB,OAAOI,KAAKk4F,eAAev9E,GAChC,GAAE/6B,GAAQF,IAAI,IACdvN,KAAKkL,QAEb,EAEAo/B,eAAgB,SAAUz/B,GACtB,GAAIA,EAAG4C,OAAO1C,MAAMvG,QAAUxE,KAAKrC,EAAE,sBAAsB,GAAGyJ,IAE9D,GAAIyD,EAAG4C,OAAO1C,MAAMvG,QAAUqG,EAAGW,UAAY,GAAUhZ,UAAYqY,EAAGW,UAAY,GAAUjZ,WAAasY,EAAGW,UAAY,GAAU5Y,cAAgBiY,EAAGW,UAAY,GAAU1Y,gBAAkB+X,EAAGW,UAAY,GAAU3Y,iBAAmBgY,EAAGW,UAAY,GAAU7Y,eAAgB,CAC9Q,IAAI6C,EAAMqV,EAAG4C,OAAO1C,MAAMvG,OAC1BxE,KAAKrC,EAAE,sBAAsB,GAAG2J,OAAS,KACrCtH,KAAKrC,EAAE,sBAAsBuC,YAAY,UACzCF,KAAK2pC,oBAAoB,EAE7B3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM5R,EACzDwK,KAAK2pC,oBACT,MACI3pC,KAAKrC,EAAE,sBAAsBwC,SAAS,UAAU,GAAGiH,IAAM,GACzDpH,KAAK2pC,oBAEb,EAEAysF,SAAU,WACN,GAAIp2H,KAAKrC,EAAE,YAAYqP,SAAS,cAC5B,OACJ,IAAI/F,EAAMynC,EAAUxN,EAAM,IAAI,GAAE75B,SAAY0iC,EAAiB/pC,KAAKrC,EAAE,6BACpEujC,EAAI3Y,MAAM8tG,IACNr2H,KAAKytB,OAAOI,KAAKk4F,eAAe,CAACsQ,IACjCr2H,KAAKkL,OAAO,IAEhBlL,KAAKrC,EAAE,yBAAyBgC,KAAK,GAAId,UAAUy2B,SAASO,aAC5D71B,KAAKrC,EAAE,YAAYwC,SAAS,mBACc,SAAtC4pC,EAAevqC,KAAK,gBAAmE,SAAtCuqC,EAAevqC,KAAK,gBAAmE,eAAtCuqC,EAAevqC,KAAK,gBACtHyH,EAA6C,SAAtC8iC,EAAevqC,KAAK,gBAAmE,SAAtCuqC,EAAevqC,KAAK,eACxEuqC,EAAelqC,KAAK,cAAcL,KAAK,YACvCuqC,EAAelqC,KAAK,oBAAoB,GAAGuH,IAC/CsnC,EAAiD,SAAtC3E,EAAevqC,KAAK,gBAAmE,SAAtCuqC,EAAevqC,KAAK,eAC5EuqC,EAAelqC,KAAK,cAAcL,KAAK,aAAe,GAE1DQ,KAAKonE,kBAAkBngE,EAAMynC,GAAUr0B,MAAMpT,IACzCi6B,EAAI74B,QAAQpB,EAAK,KAGrBi6B,EAAI74B,QAAQrI,KAAKinE,aACzB,EAEAG,kBAAmBjrD,eAAgB3mB,EAAKk5C,GACpC,IAAI+E,QAAiBlxB,MAAM/sB,GACvBkK,QAAa+zC,EAAS1rC,OACtBuuH,EAAW,CACXzyH,KAAMnE,EAAKmE,MAGf,OADW,IAAImF,KAAK,CAACtJ,GAAOgvC,GAAYl5C,EAAI0J,MAAM,KAAK8L,QAAQ9L,MAAM,KAAK8L,QAAQ9L,MAAM,KAAK9F,OAAS,OAAQk9H,EAElH,EAEAprH,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,IAGN,oBAA0B,oBAAwB,CAC9CgR,UAAW,kCACXvD,SAAU,GAAU+oG,eAEpBtlG,OAAQ,CACJ,oBAAqB,QACrB,mBAAoB,eACpB,oBAAqB,oBACrB,mCAAoC,sBACpC,sCAAuC,oBAG3C1C,YAAa,SAAUvvB,GACnBgB,KAAK6tB,KAAO7uB,EAAQikC,QACpBjjC,KAAK8zB,MAAQ9zB,KAAK6tB,KAAKiG,MACvB9zB,KAAK0sB,QAAU1sB,KAAK6tB,KAAKnB,OAE7B,EAEAsC,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACf4xB,MAAO,KACHv9B,KAAKw2H,UACLtnF,YAAYsG,kBAAkB,EAElCrqC,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OAEjC,EAEAw2H,QAAS,WACL,yDAAmBn8G,MAAKs/F,IACpBA,EAAKA,EAAGt6G,QAAUs6G,EAAGt6G,QAAUs6G,EAC/B35G,KAAKD,IAAIF,KAAK,kBAAkBkN,YAAY,QAAS,sBAErD,IAAI4tG,EAAS,CAAE,IAAIhB,EAAGiB,MAAMC,KAAK,CAAEp5E,OAAQ,IAAIk4E,EAAGl4E,OAAOq5E,OACrD2b,EAAc,qBAA2B9c,EAAGI,KAAKC,UAAU,qBAA0B,YAAa,aAAe,EAAE,kBAAmB,kBACtIl5C,EAAO,qBAA2B,GAAK,EACvC41D,EAAY,IAAI/c,EAAGgd,QAAQC,UAAW,CAElCC,aAAc,OACdC,SAAS,EACTn3H,KAAM,i1BACNo3H,QAAQ,EACRC,iBAAkB,CAAEphH,SAAU,OAElCqhH,EAAwB,IAAItd,EAAGgd,QAAQC,UAAW,CAE9CC,aAAc,OACdC,SAAS,EACTn3H,KAAM,sTACNo3H,QAAQ,EACRC,iBAAkB,CAAEphH,SAAU,OAGlCyb,EAAM,IAAIsoF,EAAGE,IAChB,CAAEpsG,OAAQ,MACPogB,KAAM,IAAI8rF,EAAGpsF,KACZ,CAAEuzC,KAAMA,EACLg5C,OAAQ2c,IAEZxc,aAAcN,EAAGO,qBAAqB,CAAEC,oBAAmB,EAAOM,aAAY,IAC9EE,OAAQA,EACRuc,SAAU,CAACR,EAAWO,KAOtBj4H,EAAU,CACVm4H,oBAAoB,EACpBzoE,QAAS,IACT0oE,WAAY,GAGhB,SAASnuF,EAAQouF,GACb,IAAIC,EAAMD,EAAI5rF,OACdpa,EAAIkmG,UAAUC,UAAU7d,EAAGI,KAAKC,UAAU,CAACsd,EAAIG,UAAWH,EAAII,UAAW,YAAa,cACtFT,EAAsBvoG,KAAKirF,EAAGI,KAAKC,UAAU,CAACsd,EAAIG,UAAWH,EAAII,UAAW,YAAa,cACzFrmG,EAAIkmG,UAAUI,QAAQ,IACtBC,EAAmBxnH,UAAY,g7BACnC,CAEA,SAASrC,EAAMua,GACX,GAAQxC,KAAK,SAASwC,EAAI5nB,UAAU4nB,EAAIpR,UAC5C,CAEA,IAAI0gH,EAAqBz8H,SAASiL,cAAc,UAChDwxH,EAAmBxnH,UAAY,4iCAG/BwnH,EAAmBvtH,iBAAiB,SA1BJ,SAAUyH,GACtC+G,UAAUg/G,YAAYC,mBAAmB7uF,EAASl7B,EAAO/O,EAC7D,IAwBwE,GAExE,IAAI+4H,EAA0B58H,SAASiL,cAAc,OAEjD,qBACA2xH,EAAwBhnG,UAAY,yDAGpCgnG,EAAwBhnG,UAAY,yCAExCgnG,EAAwB7qH,YAAY0qH,GAEpC,IAAII,EAAc,IAAIre,EAAGse,QAAQC,QAAQ,CACrCnnG,UAAW,YACX/X,QAAS++G,EACTtqH,OAAQtS,SAASygH,eAAe,qBAKpC,GAFAvqF,EAAI8mG,WAAWH,GAEX,qBAA0B,CAC1BtB,EAAUhoG,KAAKirF,EAAGI,KAAKC,UAAU,qBAA0B,YAAa,cACxE,GAAE,uCAAuC75G,SAAS,mBAClD,IAAIi4H,EAA8B,SAAUtmH,GACxCuf,EAAIkmG,UAAUC,UAAU7d,EAAGI,KAAKC,UAAU,qBAA0B,YAAa,cACjF3oF,EAAIkmG,UAAUI,QAAQ,IACtB,GAAE,gBAAgBjpG,MAEtB,EAEI2pG,EAA4Bl9H,SAASiL,cAAc,UACvDiyH,EAA0BjoH,UAAY,i1BAGtCioH,EAA0BhuH,iBAAiB,QAAS+tH,GAA6B,GAEjF,IAAIE,EAAoCn9H,SAASiL,cAAc,OAC/DkyH,EAAkCvnG,UAAY,gDAC9CunG,EAAkCprH,YAAYmrH,GAE9C,IAAIE,EAAqB,IAAI5e,EAAGse,QAAQC,QAAQ,CAC5CnnG,UAAW,YACX/X,QAASs/G,EACT7qH,OAAQtS,SAASygH,eAAe,qBAGpCvqF,EAAI8mG,WAAWI,GAEf,IAAIC,EAAoCr9H,SAASiL,cAAc,OAC/DoyH,EAAkCpoH,UAAY,kBAAwB,GAGtEooH,EAAkCznG,UAAY,yCAE9C,IAAI0nG,EAAqB,IAAI9e,EAAGse,QAAQC,QAAQ,CAC5CnnG,UAAW,YACX/X,QAASw/G,EACT/qH,OAAQtS,SAASygH,eAAe,qBAGpCvqF,EAAI8mG,WAAWM,EAEnB,CAEA,IAAK,qBAA0B,CAE3B,IAAIC,EAAcv9H,SAASiL,cAAc,UACzCsyH,EAAY3nG,UAAY,kCAExB,IAAI4nG,EAAmBx9H,SAASiL,cAAc,OAC9CuyH,EAAiBj/F,aAAa,KAAM,gBACpCi/F,EAAiB5nG,UAAY,kBAE7B,IAAI6nG,EAAWz9H,SAASiL,cAAc,OACtCwyH,EAASl/F,aAAa,KAAM,aAC5Bk/F,EAAS7nG,UAAY,eAErB,IAAI8nG,EAAsB19H,SAASiL,cAAc,OACjDyyH,EAAoB9nG,UAAY,qCAChC8nG,EAAoB3rH,YAAYyrH,GAChCE,EAAoB3rH,YAAY0rH,GAChCC,EAAoB3rH,YAAYwrH,GAEhC,IAAI7xG,EAAO,IAAI8yF,EAAGse,QAAQC,QAAQ,CAC9BnnG,UAAW,YACX/X,QAAS6/G,EACTprH,OAAQtS,SAASygH,eAAe,qBAGpCvqF,EAAI8mG,WAAWtxG,GAEf,IAAIiyG,EAAS,IAAInf,EAAGiB,MAAMme,OAAO,CAC7Bt3F,OAAQ,IAAIk4E,EAAGl4E,OAAOs3F,OACtBjtF,MAAO,IAAI6tE,EAAG7tE,MAAMktF,MAAM,CACtBh+H,MAAO,IAAI2+G,EAAG7tE,MAAMmtF,OAAO,CACvBC,OAAQ,EACRC,OAAQ,IAAIxf,EAAG7tE,MAAMstF,OAAQ,CACzBvzH,MAAO,iBACPf,MAAO,IAEX4B,KAAM,IAAIizG,EAAG7tE,MAAMutF,KAAK,CACpBxzH,MAAO,yBAGfszH,OAAQ,IAAIxf,EAAG7tE,MAAMstF,OAAQ,CACzBvzH,MAAO,iBACPf,MAAO,IAEX4B,KAAM,IAAIizG,EAAG7tE,MAAMutF,KAAK,CACpBxzH,MAAO,2BAKnBwrB,EAAIioG,SAASR,GAEb,IAAIxmG,EAAS,IAAIqnF,EAAGse,QAAQsB,gBACxB,CACIC,QAAS,GAAE,YAAYjvH,KAAK,WAC5BmC,SAAS,EACTkgC,UAAU,IAgClB,SAAS6sF,EAAejzG,GACpB,GAAKA,EAAK,GAAGzY,MAmBT,GAAE,iBAAiBzL,KAAK,aAAiB,gDAnBzB,CAChB,IAAIo3H,EAAelzG,EAAK,GAAG8+B,QAAQo0E,aAAe,IAAMlzG,EAAK,GAAG8+B,QAAQo0E,aAAe,GACnFC,EAAOnzG,EAAK,GAAG8+B,QAAQq0E,KAAOnzG,EAAK,GAAG8+B,QAAQq0E,KAAOD,EAAe,KAAO,GAC3EjgG,EAAQjT,EAAK,GAAG8+B,QAAQ7rB,MAAQjT,EAAK,GAAG8+B,QAAQ7rB,MAAQ,KAAO,GAC/DmgG,EAAgBpzG,EAAK,GAAG8+B,QAAQs0E,cAAgBpzG,EAAK,GAAG8+B,QAAQs0E,cAAgB,KAAO,GACvFC,EAAarzG,EAAK,GAAG8+B,QAAQu0E,WAAarzG,EAAK,GAAG8+B,QAAQu0E,WAAa,KAAO,GAC9EC,EAAUtzG,EAAK,GAAG8+B,QAAQw0E,QAAUtzG,EAAK,GAAG8+B,QAAQw0E,QAAU,KAAO,GACrEC,EAAOvzG,EAAK,GAAG8+B,QAAQy0E,KAAOvzG,EAAK,GAAG8+B,QAAQy0E,KAAO,KAAO,GAC5DtzE,EAAUjgC,EAAK,GAAG8+B,QAAQmB,QAAUhtB,EAAQjT,EAAK,GAAG8+B,QAAQmB,QAAU,GACtEuzE,EAAa,GAKbA,EAJEL,EAIWA,EAAOC,EAAgBC,EAAaC,EAAUC,EAAOtgG,EAAM53B,QAAQ,KAAK,IAHxE+3H,EAAgBC,EAAaC,EAAUC,EAAOtzE,EAK/D,GAAE,iBAAiBnkD,KAAK03H,EAC5B,CAIJ,CAnDA3oG,EAAI8mG,WAAY7lG,GAEhBA,EAAOjP,GAAG,UAAU,SAASvR,GAGzB,GAFAgnH,EAAOmB,YAAYzlF,QAEf1iC,EAAEwgB,OAAO4nG,QAAS,CAClB,IACIh/C,GADS,IAAIy+B,EAAG5lG,OAAOomH,SACZC,YAAYtoH,EAAEwgB,OAAO4nG,QAAS,CAAEG,eAAgB,YAAaC,kBAAmBjpG,EAAIkmG,UAAUgD,kBAC7GzB,EAAOmB,YAAY59E,WAAW6+B,GAC9B,IAAIrtD,EAAOwD,EAAIkmG,UACXiD,EAAa3sG,EAAK4sG,uBAAuBv/C,EAAEw/C,cAAcC,YAAatpG,EAAI2pF,WAC1El6C,EAAOjzC,EAAK+sG,qBAAqBJ,GACjC1gB,EAASH,EAAGkhB,OAAOC,UAAU5/C,EAAEw/C,cAAcC,aAEjDvwH,YAAW,WACPyjB,EAAKmxD,QAAQ,CACT86B,OAAQA,EACRh5C,KAAMxkE,KAAK8qC,IAAK05B,EAAM,KAE9B,GAAG,IACP,MAEIzvC,EAAIkmG,UAAUv4C,QAAQ,CAClB86B,OAAOhoG,EAAEipH,WACTj6D,KAAMxkE,KAAKw5B,IAAKzE,EAAIkmG,UAAUyD,UAAU,KAGpD,IA0BA3pG,EAAIhO,GAAG,SAAS,SAASvR,GACrB4kH,EAAUhoG,KAAK5c,EAAEipH,YACjBzoG,EAAOmnG,eAAe3nH,EAAEipH,WAAYtB,GACpC,IAAIhD,EAAc9c,EAAGI,KAAKC,UAAUloG,EAAEipH,WAAY1pG,EAAIkmG,UAAUgD,gBAAiB,aACjF,GAAE,uBAAuB7rG,OACzB,GAAE,cAAcpsB,KAAKm0H,EAAY,GAAG/gH,QAAQ,GAAK,IAAM+gH,EAAY,GAAG/gH,QAAQ,IAC9E,GAAE,WAAWpT,KAAK,OAASm0H,EAAY,GAAK,IAAMA,EAAY,IAC9D,GAAE,QAAQn0H,KAAKm0H,EAAY,IAC3B,GAAE,QAAQn0H,KAAKm0H,EAAY,GAC/B,GACJ,CACA1yH,OAAOqG,YAAW,WAAcinB,EAAI4pG,YAAc,GAAG,IAAG,GAEhE,EAEAC,aAAc,SAAUppH,GACpB,GAAI9R,KAAKrC,EAAE,WAAW4P,MAAO,CACzB,IAAI2B,EAAOlP,KAAKrC,EAAE,WAAW4P,MACzB02G,EAAc,GACdlsG,EAAYksG,EAAYhiH,OACxB+V,GAAW9I,EAAO+0G,GAAahiH,OAC/B6/F,EAAM9hG,KAAKrC,EAAE,QAAQ4P,MACrBw0F,EAAM/hG,KAAKrC,EAAE,QAAQ4P,MACrB6rE,EAAY,CAAC,CACL0oB,IAAKA,EACLC,IAAKA,IAEbtqF,EAAkB,CAAC,CACfV,MAAOgB,EACPf,IAAKgB,EACLnU,KAAM,gBAEVuT,EAAQ,CACJ+4C,SAAUnwD,KAAK0sB,QAAQlqB,IAAI,OAC3B42E,UAAWA,EACX3hE,gBAAiBA,EACjBP,QAASlX,KAAKrC,EAAE,WAAW4P,MAC3Bi0F,MAAOzpF,EACPf,IAAKgB,GAETd,EAAUlX,KAAK8zB,MAAMP,SAASwd,OAAO35B,GACrC82F,EAASh3F,EAAQ1U,IAAI,SACrBq9C,EAAS23B,GAAK,CACVjhE,GAAIvW,KAAK8zB,MAAMtxB,IAAI,OACnBqB,KAAM,OACN+F,GAAIskG,IAEZruD,EAAO1sC,EAAE,YAAYiE,MAAM,CAAC,MAAS,GAAQ8e,GAAGs4C,eAAen4C,KAC/DwpB,EAAO1sC,EAAE,YAAa,CAACvJ,GAAIskG,EAAQj4E,MAAO,mBAAmBI,KAC7DwpB,EAAO1sC,EAAE,YAAa,CAClB8iB,MAAO,GAAQC,GAAGqiD,UAClB10E,KAAM,UACN29F,MAAOzpF,EACPf,IAAKgB,IACN7E,EAAE,SAAU,CACX8iB,MAAO,GAAQC,GAAGu4C,SACnBt7D,EAAE,OAAOgS,EAAE28E,GAAKzrE,KAAKljB,EAAE,OAAOgS,EAAE48E,GAAK1rE,KAAKA,KAAKA,KAClDwpB,EAAO1sC,EAAE,QAAQgS,EAAEjW,GAAMmnB,KACrBr2B,KAAK8zB,MAAMtxB,IAAI,cAAgBxC,KAAK0sB,QAAQ4mC,OAC5CzT,EAAO1sC,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAG6uF,MAAM5xG,EAAE,WAC5C,GAAE0sC,EAAOjvB,QAAQjD,SAAS,QAAQ1rB,SAClC49C,EAAOvpB,MAAM,GAAEupB,EAAOjvB,QAAQjD,SAAS,QAAQ,IAAIvW,MAAM,CAAC,MAAS,GAAQ8e,GAAG8uF,SAAS3uF,KACvF,GAAEwpB,EAAOjvB,QAAQjD,SAAS,QAAQ7iB,UAElC,GAAE+0C,EAAOjvB,QAAQjD,SAAS,aAAa1rB,SACvC,GAAE49C,EAAOjvB,QAAQjD,SAAS,aAAa7tB,MAAK,CAAC4C,EAAK81E,KAC9C34B,EAAOvpB,MAAM,GAAEupB,EAAOjvB,QAAQjD,SAAS,aAAajrB,IAAM2zB,IAAG,IAEjE,GAAEwpB,EAAOjvB,QAAQjD,SAAS,aAAa7iB,UAE3C+0C,EAAOxpB,KAAKljB,EAAE,QAAQgS,EAAE,IAAIjjB,OAAO,KAAKmB,MAAM,EAAG/G,KAAKoI,MAAuB,IAAhBpI,KAAK+W,SAAkB,KAAKgjB,KACzFwpB,EAAO1sC,EAAE,OAAQ,CAAC+E,IAAKlY,KAAK0sB,QAAQlqB,IAAI,SAAS6zB,KAAKA,KACtDnf,EAAQ6I,IAAI,CAACmrC,IAAK,GAAErL,EAAOjvB,QAAQvZ,QAAQ,KAC3CrX,KAAK0sB,QAAQ4mC,MAAMl0C,QAAQpf,KAAK8zB,MAAMmB,QAAS4qB,GAAQxlC,MAAMuL,IACrDA,IACAi6B,EAASj6B,EAAI1O,QACbA,EAAQ6I,IAAI,UAAW6F,EAAI27E,aAE/BvhG,KAAK0sB,QAAQ4+B,QAAQzL,EAAO,MAGhC3oC,EAAQ6I,IAAI,CAACmrC,IAAK,GAAErL,EAAOjvB,QAAQvZ,QAAQ,KAC3CrX,KAAK0sB,QAAQ4+B,QAAQzL,GAE7B,CACA7/C,KAAKkL,OACT,EAEAiwH,kBAAmB,SAAUrpH,GACzB9R,KAAKD,IAAIF,KAAK,gBAAgBivB,MAClC,EAEAC,OAAQ,WACJ/uB,KAAKD,IAAI+K,QACb,EAEAI,MAAO,WACHlL,KAAKD,IAAI6L,WAAW,CAAET,SAAUnL,KAAK8uB,KAAKxmB,KAAKtI,OACnD,EAEAo7H,oBAAqB,WACjBp7H,KAAK+tB,aAAe/tB,KAAKrC,EAAE,wBAC3BqC,KAAK+tB,aAAaC,iBACd,GAAEhkB,OAAOhK,KAAKiuB,aAAe,CAAC,EAAG,gBAEzC,EAEAotG,iBAAkB,WACdr7H,KAAK+tB,aAAe/tB,KAAKrC,EAAE,wBAC3BqC,KAAK+tB,aAAaC,iBAAiB,UACvC,IAGJ,kBAAwB,oBAAwB,CAC5C+C,UAAW,mBACXjD,YAAa,uCACbN,SAAU,GAAU8tG,YACpBx+F,YAAa,GAAU7lC,aAAaoB,YACpCkjI,oBAAqB,GAAUtkI,aAAaK,aAE5C25B,OAAQ,CACJ,MAAS,gBACT,mBAAoB,eACpB,mBAAoB,sBACpB,sCAAuC,QACvC,wCAAyC,UACzC,4BAA6B,qBAC7B,yBAA0B,oBAC1B,sBAAuB,iBACvB,+BAAgC,0BAChC,kCAAmC,oBACnC,sBAAuB,uBACvB,uBAAwB,yBACxB,2BAA4B,oBAC5B,sBAAuB,SACvB,qBAAsB,oBACtB,uBAAwB,gBACxB,yBAA0B,kBAC1B,qBAAsB,aACtB,sBAAuB,eACvB,sBAAuB,gBACvB,wBAAyB,iBACzB,6BAA8B,wBAC9B,sBAAuB,eACvB,qBAAsB,oBACtB,2CAA4C,sBAC5C,+DAAgE,2BAChE,wDAAyD,oBACzD,4BAA6B,qBAGjC1C,YAAa,SAAUvvB,GACnBgB,KAAK6tB,KAAO7uB,EAAQikC,QACpBjjC,KAAK8zB,MAAQ9zB,KAAK6tB,KAAKiG,MACvB9zB,KAAK0yG,cAAgB,EACrB,IAAI8oB,EAAqBx7H,KAAKrC,EAAE,uBAC5B89H,EAAW,CACXC,MAAO,CACHrlH,IAAK,GACLogB,QAAS,SAASjnB,GACkB,UAA5B,qBACAxP,KAAKupH,MAAMoS,WAAWnsH,EAAMkrD,MAAO,KAC3C,GAEJkhE,SAAU,CACNvlH,IAAK,GAAUzjB,aACf6jC,QAAUjnB,IACN,GAAgD,SAA5CxP,KAAKrC,EAAE,kBAAkB2H,IAAI,WAAuB,CACpD,IAAIu2H,EAAc77H,KAAKrC,EAAE,kBAAkBgwB,SAAS,wBACpD,GAAIkuG,EAAY55H,OAAS,CACrB,IAAI65H,EAAaD,EAAYl+C,KAAK,iBAClCk+C,EAAY37H,YAAY,UACnB47H,EAAW75H,SACZ65H,EAAa97H,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiBssC,OAAO95D,SAAS,UAChFH,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAYhwB,KAAKrC,EAAE,kBAAkB,GAAGyb,cAExE0iH,EAAW37H,SAAS,UAChB27H,EAAW75H,QAAW65H,EAAW,GAAG3pG,WAAanyB,KAAKrC,EAAE,kBAAkB,GAAGqyB,YAC7EhwB,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAY8rG,EAAW,GAAG3pG,UAC9D,MAEInyB,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAYhwB,KAAKrC,EAAE,kBAAkB,GAAGyb,aACpEpZ,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiBssC,OAAO95D,SAAS,UAEvE,OAAO,CACX,CAEI,OAAO,CAAI,GAGvB47H,WAAY,CACR1lH,IAAK,GAAUvjB,eACf2jC,QAAUjnB,IACN,GAAgD,SAA5CxP,KAAKrC,EAAE,kBAAkB2H,IAAI,WAAuB,CACpD,IAAIu2H,EAAc77H,KAAKrC,EAAE,kBAAkBgwB,SAAS,wBACpD,GAAIkuG,EAAY55H,OAAQ,CACpB,IAAI+5H,EAAaH,EAAY5d,KAAK,iBAClC4d,EAAY37H,YAAY,UACnB87H,EAAW/5H,SACZ+5H,EAAah8H,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiBuE,QAChElyB,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAY,GAE5CgsG,EAAW77H,SAAS,UAChB67H,EAAW/5H,QAAW+5H,EAAW,GAAG7pG,UAAY6pG,EAAW,GAAG3iH,cAAgBrZ,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAYhwB,KAAKrC,EAAE,kBAAkB,GAAG0b,eAClJrZ,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAYgsG,EAAW,GAAG7pG,UAAYnyB,KAAKrC,EAAE,kBAAkB,GAAG0b,aAAe2iH,EAAW,GAAG3iH,aACnI,MAEIrZ,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAY,EACxChwB,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiBuE,QAAQ/xB,SAAS,UAExE,OAAO,CACX,CAEI,OAAO,CAAI,GAGvB87H,WAAY,CACR5lH,IAAK,GAAU1jB,eACf8jC,QAAUjnB,GAC0C,SAA5CxP,KAAKrC,EAAE,kBAAkB2H,IAAI,YAMzC42H,YAAa,CACT7lH,IAAK,GAAUxjB,gBACf4jC,QAAUjnB,GAC0C,SAA5CxP,KAAKrC,EAAE,kBAAkB2H,IAAI,aAO7CtF,KAAKupH,MAAQ,IAAItrH,MAAMu9H,EAAmB,GAAI,CAC1CW,QAAS,CACL9hB,SAAU,CACNohB,SAAUA,GAEdjiG,QAAS,CACL,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1Cx5B,KAAK8zB,MAAMtxB,IAAI,cAAgB,CAAC,WAAa,GAC7C,CAAC,WAGT45H,QAAS,CAAC,OAAQ,SAAU,YAAa,SAAU,aAAc,QAAS,QAAS,WACnFnlG,YAAa,aAAiBj3B,KAAK8zB,MAAMtxB,IAAI,aAAe,sCAAwC,6BACpG65H,mBAAoB,iBACpBjzG,MAAO,SAEXppB,KAAKupH,MAAMnqD,UAAU3uD,WAAWy6G,UAAUt1B,IAAI,iBAC9C51F,KAAKrC,EAAE,eAAe4M,KAAK,YAAY,GACvCvK,KAAKrC,EAAE,eAAekP,OAAO,yCAC7B7M,KAAKi1B,QAAUj1B,KAAK6tB,KAAKoH,QACzBj1B,KAAK0sB,QAAU1sB,KAAK6tB,KAAKnB,QACzB1sB,KAAKwlH,aAAe,GACpBxlH,KAAKs8H,aAAe,KACpBt8H,KAAKu8H,gCAAiC,EACtCv8H,KAAKshG,gBAAkB,GACvBthG,KAAKw8H,wBAA0B,GAC/Bx8H,KAAKy8H,iCAAmC,GACxCz8H,KAAK0lH,eAAiB,GACtB1lH,KAAK08H,wBAAyB,EAC9B18H,KAAKrC,EAAE,gBAAgB2E,KAAKtC,KAAK0sB,QAAQlqB,IAAI,QAC7CxC,KAAKw9B,eACLx9B,KAAKupH,MAAMlmG,GAAG,cAAerjB,KAAK28H,cAAe38H,MACjDA,KAAK0sB,QAAQrJ,GAAG,eAAgBrjB,KAAKw9B,aAAcx9B,MACnDA,KAAK0sB,QAAQrJ,GAAG,mBAAoBrjB,KAAKowG,gBAAiBpwG,MACtDA,KAAKi1B,UACLj1B,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAK48H,gBAAiB58H,MACxDA,KAAKi1B,QAAQ5R,GAAG,iBAAkBrjB,KAAK68H,mBAAoB78H,OAE/DA,KAAK8zB,MAAMzQ,GAAG,0BAA2BrjB,KAAK88H,cAAe98H,MAC7DA,KAAK8zB,MAAMzQ,GAAG,4BAA6BrjB,KAAK+8H,gBAAiB/8H,MACjEA,KAAK8zB,MAAMzQ,GAAG,yBAA0BrjB,KAAKg9H,aAAch9H,MAC3DA,KAAK8zB,MAAMzQ,GAAG,2BAA4BrjB,KAAKi9H,eAAgBj9H,MAC/DA,KAAK8zB,MAAMzQ,GAAG,wBAAyBrjB,KAAKk9H,cAAel9H,MAC3DA,KAAK8zB,MAAMzQ,GAAG,uBAAwBrjB,KAAKm9H,WAAYn9H,MACvDA,KAAK8zB,MAAMzQ,GAAG,0BAA2BrjB,KAAKo9H,sBAAuBp9H,MACrEA,KAAK+9G,cAAgB/9G,KAAK6tB,KAAKnuB,KAAK8C,IAAI,WAAaxC,KAAK6tB,KAAO7tB,KAAK8zB,MAAMs0D,gBAAkBpoF,KAAK6tB,KACnG,IAAIwvG,EAAiBr9H,KAAKrC,EAAE,iCACxB2/H,EAAgBD,EAAe,GAC/BE,EAAsBF,EAAe5vG,OAAO,uBAC5C+vG,EAAeH,EAAe7kG,SAAS,gBAC3C8kG,EAAcv1F,QAAU/nC,KAAKgoC,QAAQ1/B,KAAKtI,MAC1Cs9H,EAAcG,MAAQz9H,KAAK09H,MAAMp1H,KAAKtI,MACtCs9H,EAAcn1F,YAAet9B,IACzBA,EAAGa,iBACH8xH,EAAal7H,KAAK,aAAiB,qDACnCi7H,EAAoBp9H,SAAS,YAAY,EAE7Cm9H,EAAcl1F,WAAcv9B,IACxBA,EAAGa,gBAAgB,EAEvB4xH,EAAcj1F,YAAex9B,IACrB,GAAEA,EAAGy9B,eAAevN,QAAQ,kBAAkB94B,SAElD4I,EAAGa,iBACH8xH,EAAal7H,KAAK,aAAiB,8BACnCi7H,EAAoBr9H,YAAY,aAAY,EAEhDo9H,EAAc/0F,OAAU19B,IACpBA,EAAGa,iBACHb,EAAGsmB,kBACHqsG,EAAal7H,KAAK,aAAiB,8BACnCi7H,EAAoBr9H,YAAY,aAChC,IAAIsoC,EAAQ39B,EAAG49B,aAAaD,OAAS,GACrCxoC,KAAK6tB,KAAKk4F,eAAev9E,EAAM,EAEnC,IAGIijD,EAHAC,EAAmB1rF,KAAKrC,EAAE,oBAC1BguF,EAAoB3rF,KAAKrC,EAAE,yBAC3BiuF,EAAe5rF,KAAKrC,EAAE,oBAGtBggI,EAAmB,EACnBn6H,EAAI,EACJo6H,EAAcznH,OAAOC,KAAK,GAAM7T,KAAKN,OACzC,IAAK,IAAIzH,KAAc,GAAM+H,IAAK,CAC9B,IAAIspF,EAAmB,GAAE,kCACzB,GAAE,WAAWrxF,+BAAwC,aAAiB,GAAUD,gBAAgBC,aAAsB6O,SAASwiF,GAC/H,GAAE/rF,KAAK,GAAMyC,IAAI/H,IAAa,SAAU2G,GACpC,GAAE,6BAA6BxB,KAC3BwB,EAAMI,QAAQ,CAACG,WAAY,GAAIF,OAAQhH,KACzC6O,SAASwiF,EACf,IACAA,EAAiBxiF,SAASuiF,GAC1BA,EAAapzD,SAAS,eAAe3rB,OAAO,GAAMtK,IAAI/H,GAAY,GAAG+G,QAAQ,CAACI,KAAMnH,EAAYoH,MAAO,aAAiB,GAAUrH,gBAAgBC,IAAciH,SAAU,IAAKC,WAAY,MAC3L,IAAI2nC,EAAM,IAAIliC,MACdkiC,EAAI/hC,OAAS,KACTq2H,IACCA,IAAqBC,GAAgBjyC,EAAkB9rF,KAAK,wBAAwBiL,QAAQ,EAEjGu+B,EAAIjiC,IAAM,oCAAsC5D,IAAM,MAC1D,CACA,IAAIq6H,EAAiB,SAAUhzH,GACvB,GAAEA,EAAG4C,QAAQstB,QAAQ,yBAAyB94B,QAAU,GAAE4I,EAAG4C,QAAQstB,QAAQ,oBAAoB94B,SAErG0pF,EAAkBzrF,YAAY,UAC9B6D,OAAOuH,oBAAoB,QAAUuyH,GACzC,EACAjyC,EAAa59D,iBACL,GAAEhkB,OAAO,CAACof,MAAO,aAAc,iBACvCppB,KAAKrC,EAAE,sBAAsB8N,OAAOZ,IAChC+gF,EAAa,GAAG57D,UAAYhwB,KAAKrC,EAAE,oBAAsBkN,EAAG4C,OAAO6J,WAAW3V,KAAKoJ,OAAO,GAAGonB,UAAY,CAAC,IAE9Gu5D,EAAiBjgF,OAAOZ,IAChB4gF,GACAl3D,aAAak3D,GACb5gF,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9BigF,EAAkB3+E,SAAS,WAC3B2+E,EAAkBzrF,YAAY,UAC9B6D,OAAOuH,oBAAqB,QAAUuyH,KAGtClyC,EAAkBxrF,SAAS,UAC3B4D,OAAOsG,iBAAkB,QAAUwzH,IAEvCjyC,EAAa59D,iBAAiB,SAAS,IAE3C29D,EAAkBjxD,MAAM,MAAO7vB,IACvBA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GAEjBA,EAAWrhF,YAAW,KAClBuhF,EAAkBzrF,YAAY,SAAS,GACxC,IAAI,IAEXyrF,EAAkB9tD,WAAWhzB,IAIzB,GAHIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B+/E,GACAl3D,aAAak3D,GACb5gF,EAAGqyE,OACH,OACJ,IAAIx4C,EAAU,GAAE75B,EAAG4C,QACfqwH,EAAgBp5F,EAAQ3J,QAAQ,eAAel7B,KAAK,UACpD6kC,EAAQ3J,QAAQ,eAAe94B,QAEnC67H,EAAc77H,QAAUjC,KAAKwrF,aAAasyC,EAAcp+H,KAAK,SAAS,IAE1EM,KAAK+9H,qBACT,EAEA/uG,OAAQ,SAAUhwB,GACdgB,KAAKrC,EAAE,wBAAwB4T,OAAOvS,EAAQuyE,SAC9CvxE,KAAKrC,EAAE,gBAAgB2T,OAAOtS,EAAQuyE,SACtCvxE,KAAKD,IAAIgN,YAAY,2BAA4B/N,EAAQuyE,SACzDvxE,KAAKw9B,eACLx9B,KAAKowG,kBACL,IAAI4tB,EAAch+H,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAG+2C,aAoB9D,OAnBAjtE,KAAK+9G,cAAgB/9G,KAAK6tB,KAAKnuB,KAAK8C,IAAI,WAAaxC,KAAK6tB,KAAO7tB,KAAK8zB,MAAMs0D,gBAAkBpoF,KAAK6tB,KACnG7tB,KAAKi+H,aAAej+H,KAAK+9G,aAAah+G,IAAIiN,SAAS,8BAAgChN,KAAK0sB,QAAQm7D,sBAAwB7nF,KAAK+9G,aAAah+G,IAAIiN,SAAS,0BAA4BhN,KAAK0sB,QAAQ42E,kBAAoBtjG,KAAK8zB,MAAMP,SAC/NvzB,KAAK+9H,sBACL/9H,KAAKrC,EAAE,gBAAgB2T,OAAO0sH,GAC9Bh+H,KAAKrC,EAAE,oBAAoB2T,OAAO,6BAClCtR,KAAKrC,EAAE,iBAAiB2T,OAAOtR,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBACrFxC,KAAKrC,EAAE,uBAAuBoP,YAAY,iBAAkB,+BAAqC/M,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,iBACvJxC,KAAKrC,EAAE,uBAAuBoP,YAAY,wBAAwB,6BAAqC/M,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,iBACzJxC,KAAK8zB,MAAMtxB,IAAI,cACfxC,KAAK68H,sBAGL78H,KAAKrC,EAAE,qBAAqBmxB,OAC5B9uB,KAAKrC,EAAE,kBAAkBmxB,OACzB9uB,KAAKrC,EAAE,iBAAiBmxB,QAE5B9uB,KAAKk+H,eACLl+H,KAAKk+G,yBACL,4BACOl+G,IACX,EAEAg9E,gBAAiB,WACb,IAAIC,EAAS,GACbj9E,KAAKrC,EAAE,uCAAuCmC,MAAK,CAAC0D,EAAG05E,KAAYD,EAAO77E,KAAK87E,EAAOhkE,YAAW,IACjGlZ,KAAKrC,EAAE,uCAAuC2H,IAAI,QAAS,GAAGhJ,KAAKw5B,IAAIlH,MAAM,KAAMquD,OACvF,EAEAmzB,gBAAiB,WACbpwG,KAAKD,IAAI4tB,SAAS,sBAAsB7iB,SACxC9K,KAAKD,IAAI4tB,SAAS,mBAAmB7iB,SACrC9K,KAAK6tB,KAAK9tB,IAAIG,YAAY,aAC1BF,KAAK6tB,KAAKlwB,EAAE,sBAAsBqP,SAAS,uBAAyBhN,KAAK6tB,KAAKlwB,EAAE,sBAAsBwC,SAAS,UAAUD,YAAY,sBAAsBP,KAAK,IAChKK,KAAKD,IAAIP,KAAK,aAAc,MAC5BQ,KAAKD,IAAIP,KAAK,qBAAsB,MACpCQ,KAAKD,IAAIF,KAAK,iBAAiBiL,SAC1B9K,KAAK8zB,MAAMtxB,IAAI,eAEhBxC,KAAK0sB,QAAQ4mC,OACbtzD,KAAKD,IAAII,SAAS,WAClBH,KAAKD,IAAIq1B,QAAQ,GAAIv2B,UAAUy2B,SAASO,aACxC71B,KAAK0sB,QAAQ4mC,MAAM6qE,uBAAuB9jH,MAAMknF,IAC5C,GAAkB,QAAdA,GAAsC,SAAdA,EAAuB,CAC/C,IAAI68B,EAAqBp+H,KAAK6tB,KAAK8C,qBACnC3wB,KAAKD,IAAIP,KAAK,aAAc+hG,GAC5BvhG,KAAK6tB,KAAKlwB,EAAE,6CAA6C6B,KAAK,aAAc+hG,GAC5EvhG,KAAK6tB,KAAKlwB,EAAE,sDAAsD6B,KAAK,aAAc+hG,GACrFvhG,KAAK6tB,KAAK9tB,IAAIP,KAAK,aAAc+hG,GACjCvhG,KAAKD,IAAIG,YAAY,WACrBF,KAAKD,IAAI4tB,SAAS,sBAAsB7iB,SACtB,QAAdy2F,EACAvhG,KAAKD,IAAIq1B,QAAQ,GAAUipG,mBAAmB,CAACx4H,MAAO,QAASqR,QAAS,aAAiB,qDAEzFlX,KAAKD,IAAIq1B,QAAQ,GAAUipG,mBAAmB,CAACx4H,MAAO,MAAOqR,QAAS,aAAiB,yDAC3F,4BACAknH,GAAsBp+H,KAAK6tB,KAAKqC,iBAChClwB,KAAK0sB,QAAQ4mC,MAAMgrE,yBAAyBt+H,KAAKi1B,SAChDj1B,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAK8zB,MAAMtxB,IAAI,YAAexC,KAAKk+H,cACpE,MACIl+H,KAAK0sB,QAAQ4mC,MAAMgrE,yBAAyBt+H,KAAKi1B,SAAS5a,MAAMkkH,IAC5D,IAAIH,EAAqBp+H,KAAK6tB,KAAK8C,qBAGnC,GAFA3wB,KAAKD,IAAIG,YAAY,WACrBF,KAAKD,IAAI4tB,SAAS,sBAAsB7iB,SACb,QAAvByzH,EAGA,OAFAv+H,KAAKD,IAAIq1B,QAAQ,GAAE,6CAA6C,aAAiB,mEACjFp1B,KAAKD,IAAIP,KAAK,qBAAsB++H,GAGb,UAAvBA,GACAv+H,KAAKD,IAAIP,KAAK,qBAAsB++H,GACpCv+H,KAAKD,IAAIq1B,QAAQ,GAAUipG,mBAAmB,CAACx4H,MAAO,MAAOqR,QAAS,aAAiB,6DAE5D,SAAvBqnH,IACAv+H,KAAK6tB,KAAK9tB,IAAII,SAAS,aACvBH,KAAK6tB,KAAKlwB,EAAE,sBAAsBuC,YAAY,UAAUC,SAAS,sBAAsBR,KAAK,GAAU6+H,2BAA2B,CAACtnH,QAAS,aAAiB,wDAEhKlX,KAAKD,IAAIP,KAAK,qBAAsB++H,IAExCv+H,KAAK6tB,KAAK9tB,IAAIP,KAAK,aAAc++H,GACjCv+H,KAAK6tB,KAAKlwB,EAAE,6CAA6C6B,KAAK,aAAc++H,GAC5Ev+H,KAAK6tB,KAAKlwB,EAAE,sDAAsD6B,KAAK,aAAc++H,GACrF,4BACAH,GAAsBp+H,KAAK6tB,KAAKqC,iBAC/BlwB,KAAK8zB,MAAMtxB,IAAI,WAAaxC,KAAK8zB,MAAMtxB,IAAI,YAAexC,KAAKk+H,cAAc,GAEtF,MAGJl+H,KAAKD,IAAII,SAAS,WAClBH,KAAKD,IAAIq1B,QAAQ,GAAE,8CAA8C9yB,KAAK,aAAiB,mDAE/F,EAEAqiE,kBAAmB,WACf,GAAI3kE,KAAK0sB,QAAQ4mC,OACb,QAAoCl4C,IAAhCpb,KAAKD,IAAIP,KAAK,cACTQ,KAAK4kE,gBACN5kE,KAAK4kE,cAAgB,IAAI,gBAAoB,CAAC9wC,MAAO9zB,KAAK0sB,QAAQ4mC,SACtEtzD,KAAK4kE,cAAc36D,YAChB,QAA4CmR,IAAxCpb,KAAKD,IAAIP,KAAK,sBAAqC,CAC/CQ,KAAK0sB,QAAQ4mC,MAAM0jD,QAAQh3G,KAAKi1B,QAAQzyB,IAAI,QAClDy0G,aAAahtG,MACtB,OAEA,GAAM8B,QAAQgC,MAAM,aAAiB,gDAC7C,EAEA6uH,gBAAiB,WACb,IAAK58H,KAAKyuB,YACN,OACJ,IAAI0uD,EAAan9E,KAAK8zB,MAAMtxB,IAAI,WAChCxC,KAAKrC,EAAE,wBAAwB4T,OAAO4rE,GACtCn9E,KAAKrC,EAAE,gBAAgB2T,OAAO6rE,GAC9Bn9E,KAAKD,IAAIgN,YAAY,2BAA4BowE,EACrD,EAEAshD,cAAe,SAAU5zH,GACpB7K,KAAKD,IAAIiN,SAAS,8BAAgC,GAAEnC,EAAG4C,QAAQstB,QAAQ,0BAA0B94B,QAAWjC,KAAKi1B,QAAQmlD,YAAY,mBAAuB,SACzJ,GAAEvvE,EAAG4C,QAAQstB,QAAQ,4BAA4B94B,SAC5CjC,KAAKupH,MAAMzpE,UAAUt7C,OAAOvC,QACA,KAAvBjC,KAAK0yG,gBACP1yG,KAAK0yG,cAAgB,EACrB1yG,KAAK0+H,eAIrB,EAEA7B,mBAAoB,WAChB,GAAI78H,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ0+C,QAAS,CACtC,IAAIhvB,EAAW3kD,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,YACpCmjF,EAAQ3lF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,SACjC8oC,EAAStrC,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,cAClCwiD,EAAOhlD,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,QAChCmiD,GACA3kD,KAAKrC,EAAE,gBAAgBmxB,OACvB9uB,KAAKrC,EAAE,qBAAqB+wB,OAAOpsB,KAAKqiD,IAGxC3kD,KAAKrC,EAAE,qBAAqBmxB,OAC5B62D,EACA3lF,KAAKrC,EAAE,kBAAkB+wB,OAAOpsB,KAAKqjF,GAErC3lF,KAAKrC,EAAE,kBAAkBmxB,OACzBk2B,GAAgB,UAARA,EACRhlD,KAAKrC,EAAE,iBAAiB+wB,OAAOpsB,KAAK,GAAMwT,YAAYkvC,IAEtDhlD,KAAKrC,EAAE,iBAAiBmxB,OAC5B9uB,KAAKrC,EAAE,kBAAkB4D,QAAQ,iBAAkB,CAACG,WAAY,MAC3D4pC,GAAUtrC,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBACpC8oC,EAAStrC,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBACjC8oC,GAAUtrC,KAAK0sB,QAAQvnB,eACxBmmC,EAAStrC,KAAK0sB,QAAQvnB,eACzBmmC,IAAWA,EAAS,GAAO1lC,iBAAiB++C,IAC7C3kD,KAAKrC,EAAE,4BAA4BsH,UAAUqmC,EAAQtrC,KAAK88B,YAC9D,MAEI98B,KAAKrC,EAAE,gBAAgB+wB,OACvB1uB,KAAKrC,EAAE,qBAAqBmxB,OAC5B9uB,KAAKrC,EAAE,kBAAkBmxB,OACzB9uB,KAAKrC,EAAE,iBAAiBmxB,MAEhC,EAEA0O,aAAc,WACV,IAAIxiC,EACAgF,KAAKi1B,SAAWj1B,KAAKi1B,QAAQzyB,IAAI,eAC7BxC,KAAKi1B,QAAQ0+C,UACT3zE,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBACzBxH,EAAQgF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBAChCxH,GAASgF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBACnCxH,EAAQgF,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,gBAChCxH,GAASgF,KAAK0sB,QAAQvnB,eACvBnK,EAAQgF,KAAK0sB,QAAQvnB,gBAE5BnK,IAAUA,EAAQ,GAAO4K,iBAAiB5F,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQhvB,UAAY3kD,KAAK0sB,QAAQlqB,IAAI,UAGrHxH,EAAQgF,KAAK0sB,QAAQvnB,aACzBnF,KAAKrC,EAAE,4BAA4BsH,UAAUjK,EAAOgF,KAAK88B,YAC7D,EAEAohG,aAAc,WAQV,OAPK,qBAAyB,WAAWvwG,SAAS,sDAAsD1rB,QAIpGjC,KAAKupH,MAAMlgG,OACXrpB,KAAKupH,MAAMoV,YAJX3+H,KAAKupH,MAAMqV,SACX5+H,KAAKupH,MAAMx6G,SAKR/O,IACX,EAEA6+H,gBAAiB,WACb,IAAIrvH,EAAQrU,SAAS8T,cACjBS,EAAM3L,OAAOiL,eACbvB,EAASzN,KAAKupH,MAAMuV,KACxBtvH,EAAMC,mBAAmBhC,GACzB+B,EAAMF,UAAS,GACfI,EAAIC,kBACJD,EAAIE,SAASJ,GACb/B,EAAOsB,QACPS,EAAM1E,SACN2C,EAAOuiB,UAAYviB,EAAO2L,YAC9B,EAEAse,QAAS,SAAU7sB,GACf,IAAIwyH,EAAiBr9H,KAAKrC,EAAE,iCAC5B,IAAIkN,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,mBAC3DoY,EAAGW,UAAY,GAAUpZ,eACzByY,EAAGW,UAAY,GAAUzY,WAFjC,CAKA,GAAI8X,EAAGW,UAAY,GAAUlZ,WAA4B,KAAfuY,EAAGW,QAAgB,CACzD,GAAgD,SAA5CxL,KAAKrC,EAAE,kBAAkB2H,IAAI,WAAuB,CACpD,IAAIu2H,EAAc77H,KAAKrC,EAAE,kBAAkBgwB,SAAS,wBAGpD,OAFAkuG,EAAY55H,QAAU45H,EAAYpwH,aAClCZ,EAAGa,gBAEP,CACA,IAAIqzH,EAA4C,UAA5B,oBACpB,GAAKA,GAAiBl0H,EAAGW,UAAY,GAAUlZ,YAAcuY,EAAGm0H,WACtDD,GAAiBl0H,EAAGo0H,QAG1B,OAFAp0H,EAAGa,sBACH1L,KAAKy1C,QAGb,CACI4nF,EAAevtH,0BAA0BtL,SAAWxE,KAAK6tB,KAAK66F,aAAe1oH,KAAK6tB,KAAKyuG,cAAgB,kCACvGt8H,KAAK6tB,KAAK6pF,cAAc,YAjB5B,CAkBJ,EAEAwnB,kBAAmB,WACfl/H,KAAKrC,EAAE,aAAawC,SAAS,UAC7BH,KAAKrC,EAAE,yBAAyBuC,YAAY,SAChD,EAEAi/H,YAAa,WACTn/H,KAAKrC,EAAE,aAAauC,YAAY,UAChCF,KAAKrC,EAAE,yBAAyBwC,SAAS,SAC7C,EAEAi/H,kBAAmB,SAAUv0H,GACzB,IAAIw0H,EAAa,GAAEx0H,EAAG4C,QAAQstB,QAAQ,gBACtCskG,EAAW1/F,YAAY,UACnB0/F,EAAWryH,SAAS,WACpBhN,KAAKrC,EAAE,uBAAuB+wB,OAC9B1uB,KAAKrC,EAAE,mBAAmBmxB,SAG1B9uB,KAAKrC,EAAE,uBAAuBmxB,OAC9B9uB,KAAKrC,EAAE,mBAAmB+wB,OAElC,EAEAgwG,YAAa,WACT,IAAI5K,EAAW,GAAEzgH,OAAO,EAAG,kBAAsBpR,OAAS,GACtDg1B,EAAc,kBAAsB68F,GAAUjyH,QAAQ,MAAO,IAC5Do1B,EAILj3B,KAAKs/H,kBAAkBroG,GAHnBj3B,KAAK0+H,aAIb,EAEA/rB,sBAAuB,WACnB,IAAI17E,EAAcj3B,KAAK8zB,MAAMtxB,IAAI,aAAe,aAAiB,uCAAyC,aAAiB,6BAC3HxC,KAAKs/H,kBAAkBroG,EAC3B,EAEAqoG,kBAAmB,SAAUroG,GACzBj3B,KAAKupH,MAAMuV,KAAKplG,aAAa,mBAAoBzC,EACrD,EAEAsoG,iBAAkB,WACdv/H,KAAK8zB,MAAM/T,IAAI,aAAc/f,KAAK8zB,MAAMtxB,IAAI,aAChD,EAEA2qF,oBAAqB,WACjB,IAAIz6E,EAAO,GAIX,OAHA1S,KAAKi1B,QAAQ+9C,aAAalzE,MAAM8iF,IAC5BlwE,EAAKtR,KAAKwhF,EAAYpgF,IAAI,aAAeogF,EAAYpgF,IAAI,QAAUogF,EAAYpgF,IAAI,MAAM,IAEtFkQ,EAAKtT,KAAK,KACrB,EAEAu9H,cAAe,WACX,IAAI6C,EAAiBx/H,KAAKD,IAAIgF,SAC1B06H,EAAiB,GAAEz/H,KAAKupH,MAAMnqD,WAAWv/D,KAAK,kBAC9C6/H,EAAuBD,EAAel1H,KAAK,gBAC3Cm1H,IAAyB1/H,KAAK2/H,oBAC1B3/H,KAAK2/H,kBAAoBD,GACzBD,EAAezvG,UAAU0vG,GAE7B1/H,KAAK2/H,kBAAoBD,GAGzBF,IAAmBx/H,KAAK4/H,gBACxB5/H,KAAK4/H,cAAgBJ,EACrBx/H,KAAK6tB,KAAKgyG,mBAAqB7/H,KAAK6tB,KAAK8C,sBAE7C4D,aAAav0B,KAAK8/H,qBAClB9/H,KAAK8/H,oBAAsB11H,YAAW,KAClCpK,KAAK+/H,yBAAyB//H,KAAKupH,MAAMzpE,UAAS,GACnD,IACP,EAEAkgF,mBAAoB,SAAUC,GAC1BA,GAAgBA,GAAgB,IAAIjqH,cACpChW,KAAKi1B,QAAQilD,qBAAqB+lD,GAAejtD,IAC7C,GAAIA,EAAa/wE,QAAU,aAAiB,6CAA6C+T,cAAc5R,QAAQ67H,IAAiB,GAAsB,MAAjBA,GAAwB,MAAM77H,QAAQ67H,IAAiB,GAAK,MAAM77H,QAAQ67H,IAAiB,EAAG,CAC/NjgI,KAAKrC,EAAE,kBAAkBgC,KAAK,IAAI+uB,OAAOV,iBAAiB,CAAC5E,MAAO,cAClEppB,KAAKrC,EAAE,kBAAkB,GAAGqyB,UAAY,EACxCgjD,EAAa3gE,SAASuwE,IAClB,IAAIxrE,EAAQ,GAAEC,MAAMurE,EAAYtrE,YAChC,IAAKF,EAAMxN,GACP,OACJwN,EAAMutC,SAAWvtC,EAAMutC,SAAW,GAAQ+jC,UAAUtxE,EAAMutC,UAAYvtC,EAAMxN,GAC5E,IAAIs2H,EAAe,GAAE,GAAUnmD,YAAYmmD,aAAa9oH,IACxD8oH,EAAargI,KAAK,kBAAkBoF,UAAU29E,EAAYpgF,IAAI,eAAiB,GAAMke,OAAO9a,iBAAiBg9E,EAAYpgF,IAAI,aAAeogF,EAAYpgF,IAAI,QAAUogF,EAAYpgF,IAAI,OAAQxC,KAAKu7H,qBACnM2E,EAAargI,KAAK,aAAayC,OAAOT,QAAQo+H,EAAcA,EAAaprD,QACzE70E,KAAKrC,EAAE,kBAAkBkP,OAAOqzH,EAAa,IAEjD,IAAIC,EAAc,GAAE,GAAUpmD,YAAYmmD,aAAa,CAAChoH,IAAK,GAAIysC,SAAU,aAAiB,6CAA8C/6C,GAAI,MAC9Iu2H,EAAYtgI,KAAK,kBAAkBoF,UAAUjF,KAAKi1B,QAAQ9vB,aAAcnF,KAAKu7H,qBAC7E4E,EAAYtgI,KAAK,iBAAiByC,KAAKtC,KAAKmtF,uBAC5CntF,KAAKrC,EAAE,kBAAkBkP,OAAOszH,GAChCngI,KAAKrC,EAAE,kBAAkBgwB,SAAS,iBAAiBuE,QAAQ/xB,SAAS,SACxE,MACIH,KAAKrC,EAAE,kBAAkBgC,KAAK,IAAImvB,MAAM,GAEpD,EAEAsxG,qBAAsB,WAClB,GAAIpgI,KAAKrC,EAAE,eAAeqP,SAAS,aAK/B,OAJAhN,KAAKrC,EAAE,eAAe4M,KAAK,YAAY,GACvCvK,KAAKrC,EAAE,eAAe8N,aACtBzL,KAAKrC,EAAE,eAAe4M,KAAK,YAAY,GAI3C,IAAIsG,EAAY7Q,KAAKupH,MAAMv6G,eAAiBhP,KAAKupH,MAAMv6G,eAAe0rD,MAAS16D,KAAKupH,MAAM8W,YAAc,EACxGrgI,KAAKupH,MAAMoS,WAAW9qH,EAAW,MAAO,QACxC7Q,KAAKupH,MAAM+W,aAAazvH,EAAY,EAAG,GAEnC7Q,KAAKi1B,QAAQ+9C,aAAa/wE,QAAUjC,KAAKi1B,QAAQ+9C,aAAa3f,QAAU,GAAMrzD,KAAKi1B,QAAQzyB,IAAI,eAAiBxC,KAAKi1B,QAAQ+9C,cAAgBhzE,KAAKi1B,QAAQzyB,IAAI,cAAcmjD,aAAe3lD,KAAKi1B,QAAQ+9C,aAAa/wE,OACrNjC,KAAKggI,mBAFU,IAIfhgI,KAAKi1B,QAAQ+9C,aAAaM,oBAAoB,CAACjgB,QAAS,IAAI,KACxDrzD,KAAKggI,mBALM,GAK0B,GAIjD,EAEAO,aAAc,SAAU11H,GACpBA,GAAMA,EAAGa,iBACT,IAAI2xH,EAAiBr9H,KAAKrC,EAAE,kBACxB6iI,EAAoB,GAAE31H,EAAG4C,QAAQstB,QAAQ,iBACzC4pB,EAAW67E,EAAkB9gI,KAAK,YAClCkK,EAAK42H,EAAkB9gI,KAAK,OAAS,GACrCwY,GAAOlY,KAAKi1B,QAAQzyB,IAAI,mBAAqBg+H,EAAkB9gI,KAAK,QAAU,GAC9E4C,EAAO+6H,EAAevtH,0BAA0BjO,QAAQ,MAAO,IAC/D2nH,EAAiBxpH,KAAKupH,MAAM14G,UAAU4vH,WAAazgI,KAAKupH,MAAM14G,UAAU4vH,UAAU/lE,MAGlFgmE,EAAgBn9H,MAAMqP,KAAKtQ,GAAMe,MAAM,EAAGmmH,GAAgBpqH,KAAK,IAAIgD,eACnEu+H,EAAcD,GAAiBn9H,MAAMqP,KAAK8tH,EAAcE,SAHpC,oBAGoE,GACxFC,EAAgBH,GAAiBn9H,MAAMqP,KAAK8tH,EAAcE,SAHpC,sBAGsE,GAC5FE,EAAcH,EAAY1+H,OAAS0+H,EAAYt9H,OAAO,GAAG,GAAGq3D,OAAS,EACrEqmE,EAAgBF,EAAc5+H,OAAS4+H,EAAcx9H,OAAO,GAAG,GAAGq3D,OAAS,EAC3EsmE,EAAmB1kI,KAAKw5B,IAAIgrG,EAAaC,GACzCd,EAAe18H,MAAMqP,KAAK8tH,GAAer9H,MAAM29H,EAAkBxX,GAAgBpqH,KAAK,IAK1F,GAJC6gI,EAAah+H,QAAUg+H,EAAa,GAAGttH,MAAM,OAAUquH,IACxDf,EAAeA,EAAap+H,QAAQ,aAAc,IAClD7B,KAAKrC,EAAE,kBAAkBmxB,OACzB9uB,KAAKupH,MAAM0X,WAAWD,EAAmBf,EAAah+H,OAAS,IAC1D0iD,EAAS1iD,OAAQ,CAClB,IAAI2H,EAAG3H,OAGH,OAFA0iD,EAAW/6C,CAGnB,CACA5J,KAAK0pH,cAAc,CAACxxG,IAAKA,EAAKtO,GAAIA,EAAI+6C,SAAUA,EAAU/X,SAAUo0F,IACpEhhI,KAAKk+H,cACT,EAEAxU,cAAe,SAAU1qH,GACrB,IAAKA,EACD,OACJ,IAAI4K,EAAK5K,EAAQ4K,GAAIsO,EAAMlZ,EAAQkZ,IAAKysC,EAAW3lD,EAAQ2lD,SACvDihC,GAASh8E,IAAOsO,GAAOlY,KAAK0sB,QAAQlqB,IAAI,SAAW0V,GAAOlY,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,QAAUoH,EACrHwN,EAAQ,CAACc,IAAKA,EAAKtO,GAAIA,EAAI+6C,SAAU,GAAQ+jC,UAAU/jC,GAAWihC,MAAOA,GACzEh5C,EAAW5tC,EAAQ4tC,SACvB5sC,KAAKupH,MAAM2X,YAAYt0F,EAAU,UAAWlmB,KAAK6rB,UAAUn7B,IAC3DpX,KAAKupH,MAAMz4G,UAAU87B,EAAW+X,EAAS1iD,OAAQ,kBACjDjC,KAAKupH,MAAM+W,aAAa1zF,EAAW+X,EAAS1iD,OAAS,EAAG,EAC5D,EAEAk/H,oBAAqB,WACbnhI,KAAKi1B,QAAQzyB,IAAI,cACbxC,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ4+C,WACrC7zE,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACh/B,KAAM,gBAClD7D,KAAKi1B,QAAQslD,mBAAmBvH,aAAa+R,6BAA6B96E,KAAKjK,KAAKi1B,QAAQ0+C,QAAS3zE,KAAKi1B,QAAQ4+C,YAElH7zE,KAAKi1B,QAAQo+C,WAAU,KACnBrzE,KAAKi1B,QAAQ4N,iBAAiB,YAAa,CAACh/B,KAAM,gBAClD7D,KAAKi1B,QAAQslD,mBAAmBvH,aAAa+R,6BAA6B96E,KAAKjK,KAAKi1B,QAAQ0+C,QAAS3zE,KAAKi1B,QAAQ4+C,UAAU,IAGpI7zE,KAAK0sB,QAAQ+O,cAErB,EAEA5D,MAAO,SAAUhtB,GACb,IAAIwyH,EAAiB,GAAExyH,EAAG4C,QAAQstB,QAAQ,kBACtCz4B,EAAO+6H,EAAevtH,0BAA0BjO,QAAQ,MAAO,IAKnE,GAJIS,IACAtC,KAAK0yG,cAAgB,EACrB1yG,KAAK2yG,yBAEL9nG,EAAGW,UAAY,GAAU5Y,eACpB0P,EAAM,CACP,IAAIk1E,EAAOx3E,KAAK6tB,KAAKlwB,EAAE,4BAA4BqC,KAAK0sB,QAAQlqB,IAAI,YAAYy3D,QAC9Eud,EAAKv1E,QAAUjC,KAAKi1B,QAAQ+9C,eAAkBwE,EAAOx3E,KAAK6tB,KAAKlwB,EAAE,4BAA4BqC,KAAKi1B,QAAQ+9C,aAAanzE,MAAK+W,GAAKA,EAAEpU,IAAI,SAAWxC,KAAK0sB,QAAQlqB,IAAI,SAAQA,IAAI,WAAWy3D,QAC5L,IAAImnE,EAAWphI,KAAKi+H,aAAaz7H,IAAIg1E,EAAK93E,KAAK,aAC/C,IAAK0hI,EACD,OACJphI,KAAKs8H,aAAe8E,EACpBphI,KAAK2nH,4BAA4ByZ,GACjCphI,KAAKqhI,iBAAiBD,EAC1B,CAMJ,GAJM9+H,GAAgB,MAARA,GAAkBtC,KAAKs8H,cAAkBt8H,KAAK0lH,gBAAkB1lH,KAAK0lH,eAAezjH,QAAajC,KAAKshG,iBAAmBthG,KAAKshG,gBAAgBr/F,OAGxJjC,KAAKm/H,cAFLn/H,KAAKk/H,oBAGLr0H,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,kBAAqBuN,KAAKs8H,aAoBtF,GAAIzxH,EAAGW,UAAY,GAAU/Y,YAAe,mBAAuB,iBAGnE,CACH,GAAIoY,EAAGW,UAAY,GAAU5Y,cAAgBiY,EAAGW,UAAY,GAAU1Y,eAClE,OAEJ,IAAK+X,EAAGW,UAAY,GAAU7Y,gBAAkBkY,EAAGW,UAAY,GAAU3Y,kBAAgE,SAA5CmN,KAAKrC,EAAE,kBAAkB2H,IAAI,WAEtH,YADAtF,KAAKrC,EAAE,kBAAkBmxB,OAY7B,GATKjkB,EAAGW,UAAY,GAAUpZ,eAAiByY,EAAGW,UAAY,GAAUzY,YAAgBiN,KAAKs8H,cAAkBt8H,KAAK0lH,gBAAkB1lH,KAAK0lH,eAAezjH,QAAajC,KAAKshG,iBAAmBthG,KAAKshG,gBAAgBr/F,QAC3MK,GAAgB,MAARA,IACLtC,KAAKrC,EAAE,yBAAyBqP,SAAS,UACzChN,KAAKk/H,oBAELl/H,KAAKm/H,cACT9B,EAAettH,qBAGnBlF,EAAGW,UAAY,GAAU9Y,UAAW,CACpC,IAAI82H,EAAiBxpH,KAAKupH,MAAM14G,UAAU4vH,WAAazgI,KAAKupH,MAAM14G,UAAU4vH,UAAU/lE,MAClFgmE,EAAgBn9H,MAAMqP,KAAKtQ,GAAMe,MAAM,EAAGmmH,GAAgBpqH,KAAK,IAAIgD,eACvE,GAAIs+H,EAAclX,EAAiB,IAAMkX,EAAclX,EAAiB,GAAG72G,MAAM,SAE7E,YADA3S,KAAKrC,EAAE,kBAAkBmxB,MAGjC,CACA,GAAI9uB,KAAK8zB,MAAMtxB,IAAI,cAAe,CAC9B,IAAIgnH,EAAiBxpH,KAAKupH,MAAM14G,UAAU4vH,WAAazgI,KAAKupH,MAAM14G,UAAU4vH,UAAU/lE,MAClF4mE,EAAoB,iBACpBC,EAAsB,mBACtBb,EAAgBn9H,MAAMqP,KAAKtQ,GAAMe,MAAM,EAAGmmH,GAAgBpqH,KAAK,IAAIyC,QAAQ,MAAO,IAAIO,eACtFu+H,EAAcp9H,MAAMqP,KAAK8tH,EAAcE,SAASU,IAChDT,EAAgBt9H,MAAMqP,KAAK8tH,EAAcE,SAASW,IAClDT,EAAcH,EAAY1+H,OAAS0+H,EAAYt9H,OAAO,GAAG,GAAGq3D,OAAS,EACrEqmE,EAAgBF,EAAc5+H,OAAS4+H,EAAcx9H,OAAO,GAAG,GAAGq3D,OAAS,EAC3EsmE,EAAmB1kI,KAAKw5B,IAAIgrG,EAAaC,GAC7C,GAAI/gI,KAAKupH,MAAM14G,UAAU4vH,WAAkH,YAArGzgI,KAAKupH,MAAMiY,QAAQxhI,KAAKupH,MAAM14G,UAAU4vH,UAAU/lE,OAAO,GAAGjtC,OAAO69F,QAAQ94G,QAAQwD,cAErH,YADAhW,KAAKrC,EAAE,kBAAkBmxB,OAM7B,GAHM06F,GAAkB,IAA4B,IAAtBwX,GAC1BhhI,KAAKrC,EAAE,kBAAkBmxB,OAEzBkyG,GAAoB,EAAG,CACvB,IAAIf,EAAe18H,MAAMqP,KAAK8tH,GAAer9H,MAAM29H,EAAkBxX,GAAgBpqH,KAAK,IAAIyC,QAAQ,aAAc,IAC5G7B,KAAKi1B,QAAQ+9C,aAAa/wE,QAAUjC,KAAKi1B,QAAQ+9C,aAAa3f,QAAU,GAAMrzD,KAAKi1B,QAAQzyB,IAAI,eAAiBxC,KAAKi1B,QAAQ+9C,cAAgBhzE,KAAKi1B,QAAQzyB,IAAI,cAAcmjD,aAAe3lD,KAAKi1B,QAAQ+9C,aAAa/wE,OACrNjC,KAAKggI,mBAAmBC,GAExBjgI,KAAKi1B,QAAQ+9C,aAAaM,oBAAoB,CAACjgB,QAAS,IAAI,KACxDrzD,KAAKggI,mBAAmBC,EAAa,GAGrD,MAEIjgI,KAAKrC,EAAE,kBAAkBmxB,MACjC,CACJ,MAzDIjkB,EAAGa,iBACH1L,KAAKyhI,8BApBL,GADA52H,EAAGa,iBACC1L,KAAKrC,EAAE,wCAAwCgwB,SAAS,0CAA0C1rB,OAAS,EAAG,CAC9G,IAAIuiC,EAAQxkC,KAAKrC,EAAE,wCAAwCgwB,SAAS,0CAA0CssC,OAC9G,GAAIz1B,EAAMx3B,SAAS,0BAA0B,CACzC,IAAIxX,EAAMgvC,EAAMhlC,KAAK,qBACjBhK,IACAgvC,EAAMtzB,SACNlR,KAAK0hI,yBAAyBlsI,GAEtC,KAAO,CACH,IAAIoU,EAAK46B,EAAMhlC,KAAK,WAChBoK,IACA46B,EAAMtzB,SACNlR,KAAK2hI,sBAAsB/3H,GAEnC,CACJ,MACI5J,KAAKyhI,yBA6DbpE,EAAextH,qBACf7P,KAAKk+H,eACL,2BACJ,EAEAR,MAAO,WACC19H,KAAKrC,EAAE,yBAAyBqP,SAAS,UACzChN,KAAKk/H,oBAELl/H,KAAKm/H,aAEb,EAEAn3F,QAAS,SAAUn9B,GACfA,EAAGa,iBACH,IAAI2xH,EAAiB,GAAExyH,EAAG4C,QACtBm0H,EAAiB/2H,EAAG4+B,cACxB,GAAIm4F,EACA,GAAIA,EAAep5F,MAAMvmC,OAAS,EAAG,CACjC,IAAI4/H,EAAuBD,EAAep5F,MAAMo5F,EAAep5F,MAAMvmC,OAAS,GAC7D8B,OAAOC,IAAIC,gBAAgB,IAAIL,KAAK,CAACi+H,KAEtD7hI,KAAK6tB,KAAKk4F,eAAe,CAAC8b,IAC1B7hI,KAAKk+H,cACT,MACK,GAAI0D,EAAerlF,MAAMt6C,OAAS,EAAG,CACtC,IAAI4/H,EAAuBD,EAAerlF,MAAMqlF,EAAerlF,MAAMt6C,OAAS,GAC9E,GAAkC,SAA9B4/H,EAAqBz5G,KAAiB,CACtC,IAAIrgB,EAAO85H,EAAqBC,YAC5B95H,EAAS,IAAIC,WAAcnX,EAAW,IAAI,GAAEuW,SAChDW,EAAOV,OAAS,SAAS0Z,GACsBA,EAAMvT,OAAOvF,OACxDpX,EAASuX,UACTrI,KAAKk+H,cACT,EACAptI,EAASy3B,MAAK,KACVxgB,EAAKhJ,KAAO,gBACZiB,KAAK6tB,KAAKk4F,eAAe,CAACh+G,GAAM,IAEpCC,EAAOO,cAAcR,EACzB,KACK,CACD,IAAIzF,EAAO,GAAEuP,OAAO+vH,EAAel4F,QAAQ,SACvCq4F,EAAWx+H,MAAMqP,KAAKtQ,GAC1By/H,EAAS1vH,SAAQ,CAACnR,EAAMwB,KACR,MAARxB,GACA6gI,EAAS9nF,OAAOv3C,EAAK,EAAG,UAAU,IAE1CJ,EAAO,MAAQy/H,EAAS3iI,KAAK,IAAImC,QAAQ,CAACE,SAAU,SAAW,OAC/DsC,OAAO5I,SAAS6mI,YAAY,cAAc,EAAO1/H,EACrD,CACJ,KACK,CACD,IAAIA,EAAO,GAAEuP,OAAO+vH,EAAel4F,QAAQ,SACvCq4F,EAAWx+H,MAAMqP,KAAKtQ,GAC1By/H,EAAS1vH,SAAQ,CAACnR,EAAMwB,KACR,MAARxB,GACA6gI,EAAS9nF,OAAOv3C,EAAK,EAAG,WAChB,KAARxB,GACA6gI,EAAS9nF,OAAOv3C,EAAK,EAAG,QAAQ,IAExCJ,EAAO,MAAQy/H,EAAS3iI,KAAK,IAAImC,QAAQ,CAACE,SAAU,SAAW,OAC/DsC,OAAO5I,SAAS6mI,YAAY,cAAc,EAAO1/H,EACrD,CAEA+6H,EAAevtH,0BAA0BjO,QAAQ,MAAO,MAAQ7B,KAAK6tB,KAAK66F,aAAe1oH,KAAK6tB,KAAKyuG,cAAgB,kCACnHt8H,KAAK6tB,KAAK6pF,cAAc,aAC5B13G,KAAKk+H,eACL,2BACJ,EAEA9zF,mBAAoB,SAAUv/B,GAC1B,IAAI4C,EAAS5C,EAAG4C,OACZ+6B,EAAQ,GACZ,IAAK,IAAIhlC,EAAI,EAAGA,EAAIiK,EAAO+6B,MAAMvmC,OAAQuB,IACrCglC,EAAMpnC,KAAKqM,EAAO+6B,MAAMhlC,IAGxBglC,GAASA,EAAMvmC,SACfjC,KAAK6tB,KAAKk4F,eAAev9E,GACzB,GAAE/6B,GAAQF,IAAI,IAEtB,EAEAwyH,yBAA0B,SAAUz9H,GAChC,IAAMtC,KAAK0sB,QAAQlqB,IAAI,mBAAoBxC,KAAK0sB,QAAQlqB,IAAI,eACxD,OACJ,IACIkQ,EAAOpQ,GAAQA,EAAKqQ,MADP,kGAIjB,GAFAD,EAAO,GAAEuvH,WAAWvvH,EAAM1S,KAAKw8H,yBAC/B9pH,EAAO,GAAEuvH,WAAWvvH,EAAM1S,KAAKy8H,kCAC3B/pH,GAAQA,EAAKzQ,OAAO,CACpBjC,KAAKu8H,gCAAiC,EACtCv8H,KAAKrC,EAAE,gCAAgCuC,YAAY,UACnD,IAAIgiI,EAAgB,EACpBliI,KAAKmiI,iCAAmCj5H,KAAKC,MAC7C,IAAIi5H,EAAoBpiI,KAAKmiI,iCAC7BzvH,EAAKL,SAAQ,CAACnR,EAAMwB,KAChB1C,KAAK0sB,QAAQ4rC,iBAAiBp3D,GAAO3B,IACjC,GAAIS,KAAKu8H,gCAAoC6F,IAAsBpiI,KAAKmiI,iCACpE,OACJ,GAAIniI,KAAKy8H,iCAAiClnH,SAASrU,GAI/C,OAHAghI,SACIA,IAAkBxvH,EAAKzQ,QACvBjC,KAAKrC,EAAE,gCAAgCwC,SAAS,WAGxD,IAAI+gC,EAAM,IAAI,GAAE75B,SAkChB,GAjCA65B,EAAI3Y,MAAK,KACL25G,IACAliI,KAAKm/H,cACLn/H,KAAKrC,EAAE,8BAA8BuC,YAAY,UAC7CgiI,IAAkBxvH,EAAKzQ,QACvBjC,KAAKrC,EAAE,gCAAgCwC,SAAS,UACpDZ,EAAI4iG,cAAgBjhG,EACpBlB,KAAKrC,EAAE,wCAAwCkP,OAAO,GAAE,GAAU0mB,SAASqxF,eAAe,CACtF1jH,KAAM3B,EACNo+C,OAAQp+C,EAAI/J,IAAM,GAAMof,iBAAiBrV,EAAI/J,KAAO+J,EAAIkiH,UACxDjsH,IAAK,SAETwK,KAAKrC,EAAE,mBAAmBsE,QAAUjC,KAAKrC,EAAE,mBAAmBc,cAAc,CACxEoF,KAAM,QACN48D,qBAAqB,EACrBC,iBAAiB,EACjBC,UAAW,+BACX3lE,MAAO,CACH4lE,aAAa,EACbC,SAAU,SAAS3/D,GACf,MAAO,sCAAsCA,EAAK4N,GAAGtP,KAAK,OAAO,qBAAuB0B,EAAKnC,KAAO,MACxG,GAEJ+hE,KAAM,CACF5X,SAAS,EACTtzC,SAAU,OAGlB5V,KAAKshG,gBAAkBthG,KAAKshG,gBAAgB/nB,OAAOh6E,GACnDS,KAAKy8H,iCAAmCz8H,KAAKy8H,iCAAiCljD,OAAO,CAACr4E,IACtF,4BACAlB,KAAKkwB,gBAAgB,IAEpB3wB,EAAIk5D,cAAgBl5D,EAAIm5D,cAAiBn5D,EAAIvE,MAC9CkmC,EAAI74B,cACD,CACH,IAAIghC,EAAM,IAAIliC,MACdkiC,EAAI/hC,OAAUtM,IACVuE,EAAIk5D,aAAepvB,EAAItkC,OACvBxF,EAAIm5D,YAAcrvB,EAAIvkC,MACtBo8B,EAAI74B,SAAQ,EAEhBghC,EAAI7gC,QAAU6gC,EAAI09E,QAAW/rH,IACzBuE,EAAIvE,WAAQogB,EACZ8lB,EAAI74B,SAAQ,EAEhBghC,EAAIjiC,IAAM7H,EAAIvE,KAClB,KACAstB,IACAtoB,KAAKw8H,wBAA0Bx8H,KAAKw8H,wBAAwBjjD,OAAO,CAACr4E,IACpEghI,IACIA,IAAkBxvH,EAAKzQ,QACvBjC,KAAKrC,EAAE,gCAAgCwC,SAAS,SAAS,GAChE,GAGT,CACJ,EAEAkiI,kBAAmB,WACfriI,KAAKsiI,wBACLtiI,KAAKuiI,yBACT,EAEAC,yBAA0B,WACtBxiI,KAAKrC,EAAE,gCAAgCwC,SAAS,UAChDH,KAAKu8H,gCAAiC,CAC1C,EAEAkG,oBAAqB,SAAU53H,GAC3B,IAAI25B,EAAQ,GAAE35B,EAAG4C,QAAQstB,QAAQ,2BAC7BvlC,EAAMgvC,EAAMhlC,KAAK,qBACrBglC,EAAMtzB,SACNlR,KAAK0hI,yBAAyBlsI,EAClC,EAEAksI,yBAA0B,SAAUlsI,GAC1BwK,KAAKrC,EAAE,wCAAwCgwB,SAAS,0CAA0C1rB,OAAS,GAC7GjC,KAAKrC,EAAE,8BAA8BwC,SAAS,UAClDH,KAAKshG,gBAAkBthG,KAAKshG,gBAAgB3qF,QAAOzV,GAAQA,EAAKihG,eAAiB3sG,IACjFwK,KAAKy8H,iCAAmCz8H,KAAKy8H,iCAAiC9lH,QAAOzV,GAAQA,GAAQ1L,IACrGwK,KAAKw8H,wBAA0Bx8H,KAAKw8H,wBAAwBjjD,OAAO,CAAC/jF,IACpE,4BACAwK,KAAKkwB,gBACT,EAEAqyG,wBAAyB,WACrBviI,KAAKwiI,2BACLxiI,KAAKrC,EAAE,gEAAgEuT,SACjElR,KAAKrC,EAAE,wCAAwCgwB,SAAS,0CAA0C1rB,OAAS,GAC7GjC,KAAKrC,EAAE,8BAA8BwC,SAAS,UAClDH,KAAKshG,gBAAkB,GACvBthG,KAAKy8H,iCAAmC,GACxC,4BACAz8H,KAAKkwB,gBACT,EAEAm2F,gBAAiB,SAAU79E,GACnBA,GAAUxoC,KAAK0lH,eAAezjH,OAASumC,EAAMvmC,OAAU,GACvD,GAAM8J,QAAQgC,MAAM,aAAiB,2BAGrC/N,KAAKs8H,eAET9zF,GAASA,EAAMvmC,QAAUjC,KAAKrC,EAAE,8BAA8BuC,YAAY,UAC1EsoC,GAASA,EAAMvmC,QAAUjC,KAAKm/H,cAC9B32F,EAAMn2B,SAASpL,IACX,IAAI2C,EAAK,KACT3C,EAAKy7H,IAAM94H,EACX5J,KAAKrC,EAAE,wCAAwCkP,OAAO,GAAE,GAAU0mB,SAASovG,cAAc,CACrF17H,KAAMA,EACNy7H,IAAK94H,EACL7B,KAAM,GAAM4M,YAAY1N,EAAKpD,MAAQoD,EAAKoP,IAAMpP,EAAKojC,WAAWjjC,IAAMrD,OAAOC,IAAIC,gBAAgB,IAAIL,KAAK,CAACqD,KAAU,KACrHu5D,SAAU,GAAMhrD,YAAYvO,EAAKrC,MACjCg+H,SAAU,GAAM3tH,eAAehO,EAAKpD,MACpCsR,SAAU,GAAMC,iBAAiBnO,EAAKpD,UAE1C7D,KAAK0lH,eAAiB1lH,KAAK0lH,eAAensC,OAAO,CAACtyE,IAClD,4BACAjH,KAAKkwB,gBAAgB,IAEzBsY,GAASA,EAAMvmC,QAAUjC,KAAKrC,EAAE,mBAAmBsE,QAAUjC,KAAKrC,EAAE,mBAAmBc,cAAc,CACjGoF,KAAM,QACN48D,qBAAqB,EACrBC,iBAAiB,EACjBC,UAAW,+BACX3lE,MAAO,CACH4lE,aAAa,EACbC,SAAU,SAAS3/D,GACf,MAAO,sCAAsCA,EAAK4N,GAAGtP,KAAK,OAAO,qBAAuB0B,EAAKnC,KAAO,MACxG,GAEJ+hE,KAAM,CACF5X,SAAS,EACTtzC,SAAU,OAGtB,EAEAitH,kBAAmB,SAAUh4H,GACzB,IAAI25B,EAAQ,GAAE35B,EAAG4C,QAAQstB,QAAQ,wCAC7BnxB,EAAK46B,EAAMhlC,KAAK,WACpBglC,EAAMtzB,SACNlR,KAAK2hI,sBAAsB/3H,EAC/B,EAEA+3H,sBAAuB,SAAU/3H,GACvB5J,KAAKrC,EAAE,wCAAwCgwB,SAAS,0CAA0C1rB,OAAS,GAC7GjC,KAAKrC,EAAE,8BAA8BwC,SAAS,UAClDH,KAAK0lH,eAAiB1lH,KAAK0lH,eAAe/uG,QAAOzV,GAAQA,EAAKwhI,KAAO94H,IACrE,4BACA5J,KAAKkwB,gBACT,EAEAoyG,sBAAuB,SAAUz3H,GAC7B7K,KAAKrC,EAAE,mEAAmEuT,SACpElR,KAAKrC,EAAE,wCAAwCgwB,SAAS,0CAA0C1rB,OAAS,GAC7GjC,KAAKrC,EAAE,8BAA8BwC,SAAS,UAClDH,KAAK0lH,eAAiB,GACtB,4BACA1lH,KAAKkwB,gBACT,EAEAy3F,4BAA6B,SAAUyZ,EAAU0B,IAC5CA,GAAa9iI,KAAKrC,EAAE,sBAAsB6B,KAAK,YAAY,GAC5DQ,KAAKsiI,wBACLtiI,KAAKuiI,0BACL,IAAI/5F,EAAQ44F,EAAS5+H,IAAI,UAAY,GACjCke,EAAS0gH,EAAS5+H,IAAI,WAAa,GACnCg7D,EAAS4jE,EAAS5+H,IAAI,WAAa,GACnC8+F,EAAkB8/B,EAAS5+H,IAAI,oBAAsB,GACzDgmC,EAAQA,EAAM+wC,OAAO74D,GAAQ64D,OAAO/b,IAC/B8jC,GAAmBA,EAAgBr/F,QAAYumC,GAASA,EAAMvmC,UAC/DjC,KAAKrC,EAAE,8BAA8BuC,YAAY,UACjDF,KAAKm/H,eAET79B,EAAgBjvF,SAASnR,IACrBlB,KAAKshG,gBAAkBthG,KAAKshG,gBAAgB/nB,OAAO,CAACr4E,IACpDlB,KAAKy8H,iCAAmCz8H,KAAKy8H,iCAAiCljD,OAAOr4E,EAAKihG,eAC1FniG,KAAKrC,EAAE,wCAAwCy3B,QAAQ,GAAE,GAAU7B,SAASqxF,eAAe,CACvF1jH,KAAMA,EACNy8C,OAAQz8C,EAAK1L,IAAM,GAAMof,iBAAiB1T,EAAK1L,KAAO0L,EAAKugH,UAC3DjsH,IAAK,SAET,2BAA+B,IAEnCgzC,EAAMn2B,SAASpL,IACX,IAAKA,EACD,OACJ,IAAI2C,EAAK,KACT3C,EAAKy7H,IAAM94H,EACX5J,KAAK0lH,eAAiB1lH,KAAK0lH,eAAensC,OAAO,CAACtyE,IAC9C67H,EACA9iI,KAAKrC,EAAE,wCAAwCkP,OAAO,GAAE,GAAU0mB,SAASovG,cAAc,CACrF17H,KAAMA,EACNy7H,IAAK94H,EACL7B,KAAM,GAAM4M,YAAY1N,EAAKpD,MAAQoD,EAAKoP,IAAMpP,EAAKojC,WAAWjjC,IAAMrD,OAAOC,IAAIC,gBAAgB,IAAIL,KAAK,CAACqD,KAAU,KACrHu5D,SAAU,GAAMhrD,YAAYvO,EAAKrC,MACjCg+H,SAAU,GAAM3tH,eAAehO,EAAKpD,MACpCsR,SAAU,GAAMC,iBAAiBnO,EAAKpD,UAG1C7D,KAAKrC,EAAE,wCAAwCkP,OAAO,GAAE,GAAU0mB,SAASovG,cAAc,CACrF17H,KAAMA,EACNy7H,IAAK94H,EACL7B,KAAMd,EAAKy6B,QAAQz/B,QAAUgF,EAAKy6B,QAAQ,IAAM,GAAM/sB,YAAY1N,EAAKpD,MAAQoD,EAAKy6B,QAAQ,GAAK,KACjG8+B,SAAU,GAAMhrD,YAAYvO,EAAKrC,MACjCg+H,SAAU,GAAM3tH,eAAehO,EAAKpD,MACpCsR,SAAU,GAAMC,iBAAiBnO,EAAKpD,UAG9C,2BAA+B,KAEjCy9F,GAAmBA,EAAgBr/F,QAAYumC,GAASA,EAAMvmC,SAAYjC,KAAKrC,EAAE,mBAAmBsE,QAAUjC,KAAKrC,EAAE,mBAAmBc,cAAc,CACpJoF,KAAM,QACN48D,qBAAqB,EACrBC,iBAAiB,EACjBC,UAAW,+BACX3lE,MAAO,CACH4lE,aAAa,EACbC,SAAU,SAAS3/D,GACf,MAAO,sCAAsCA,EAAK4N,GAAGtP,KAAK,OAAO,qBAAuB0B,EAAKnC,KAAO,MACxG,GAEJ+hE,KAAM,CACF5X,SAAS,EACTtzC,SAAU,MAGtB,EAEAmtH,kBAAmB,SAAUl4H,GACpB,8BAEL,0BAA2BuQ,EAC3B,sBAAuBA,EACvB,IAAI,oBAAwB,CAAC6nB,QAASjjC,OAAO0uB,KAAK7jB,GACtD,EAEAm4H,eAAgB,SAAUn4H,GACtB,IAAI7K,KAAKs8H,cAELt8H,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,eAAgB,EACrD,IAAI,kBACVwsB,OAAO,CAACvB,OAAQztB,KAAM8zB,MAAO9zB,KAAK0sB,SACjD,CACJ,EAEAu2G,wBAAyB,SAAUp4H,GAC/B,IAAIq4H,EAAgBljI,KAAKrC,EAAE,wBACvBulI,EAAcrjI,KAAK,cAAcoC,OAAS,GAC1CihI,EAAcrjI,KAAK,cAAcK,YAAY,YAGrD,EAEAijI,kBAAmB,SAAUt4H,GACzB,IAAI25B,EAAQ,GAAE35B,EAAG4C,QACb+2B,EAAMx3B,SAAS,aACfw3B,EAAMtkC,YAAY,cAElBskC,EAAMrkC,SAAS,6BACVH,KAAK8zB,MAAMtxB,IAAI,4BAChBxC,KAAKojI,YAEjB,EAEAA,UAAW,WAEP,GADAvqH,UAAUkvD,aAAgBlvD,UAAUwqH,iBAAmBxqH,UAAUyqH,gBAAkBzqH,UAAU0qH,oBAAsB1qH,UAAUkvD,aACzHlvD,UAAUkvD,aAAc,CACxB/nE,KAAK8zB,MAAM/T,IAAI,2BAA2B,GAC1C,IAAIyjH,EAAc,CAAEvoI,OAAO,EAAMwoI,aAAc,GAC3CC,EAAS,GACTC,EAAO3jI,KAAKrC,EAAE,oCACdimI,EAAa57D,IACb,IAAK27D,EAAK53E,GAAG,UAGT,OAFA43E,EAAKzjI,YAAY,kCACjBF,KAAK8zB,MAAM/T,IAAI,2BAA2B,GAG9C,IACe8jH,EAAYC,EADvBC,EAAgB,IAAIC,cAAch8D,GAClCwtC,EAAQ,EACRyuB,GAAY,EACZF,EAAcG,QAAU,KAChB,mCACAlkI,KAAK6tB,KAAK6pF,cAAc,YAAa,SACrC13G,KAAKyoH,wBAA0BhlG,aAAY,KACvCzjB,KAAK6tB,KAAK6pF,cAAc,YAAa,QAAQ,GAC9C,GAAUhjH,qCAEjBmvI,EAAa,GAAO16H,MACpB,IAAI+5H,EAAgBljI,KAAKrC,EAAE,wBACvBwmI,EAAcnkI,KAAKrC,EAAE,+BACrBymI,EAAcpkI,KAAKrC,EAAE,0CACrB0mI,EAAoBrkI,KAAKrC,EAAE,0CAC/BwmI,EAAY7hI,KAAK,QACjB8hI,EAAY9+H,IAAI,QAAS,WAAWhD,KAAK,aAAiB,iDAC1D4gI,EAAc/iI,SAAS,2BAEvB,IAAI2+D,EAAUr7C,aAAY,KACdkgH,EAAK32H,SAAS,cAAiBwoG,EAAQ,GAAUtiH,gBAC7CsiH,EAAM,GAAK,GACX2uB,EAAY7hI,KAAK,GAAMqT,gBAAgB6/F,IAC3CA,GAAe,GAANA,EAAW,GAAG,GACvByuB,EAAYf,EAAcn3E,GAAG,UACxBk4E,EAGDG,EAAY9+H,IAAI,QAAS,WAAWhD,KAAK,aAAiB,iDAF1D8hI,EAAY9+H,IAAI,QAAS,WAAWhD,KAAK,aAAiB,yDAM9D2hI,EAAYf,EAAcn3E,GAAG,UAC7Bg4E,EAAcj8D,OACd67D,EAAKzjI,YAAY,6BACjBgjI,EAAchjI,YAAY,2BAC1BF,KAAK8zB,MAAM/T,IAAI,2BAA2B,GAC1C+tB,cAAcgxB,GAClB,GACD,KACH1yD,GAAO,EACPk4H,EAAa7gH,aAAY,KACjBkgH,EAAK32H,SAAS,cACVZ,EACAi4H,EAAkB/+H,IAAI,mBAAoB,QAE1C++H,EAAkB/+H,IAAI,mBAAoB,WAC9C8G,GAAQA,GAGR0hC,cAAcw2F,EAAW,GAC9B,IAAI,EAGfP,EAAchtH,QAEdgtH,EAAcQ,OAAS,KAIvB,GAHAz2F,cAAc9tC,KAAKyoH,yBAClB,YAAoC,sBAAKzoH,KAAK6tB,KAAK6pF,cAAc,UAClEosB,EAAW,GAAO36H,MACd86H,IAAeH,EAAWD,GAAY,KAAQ,IAAM,CACpD,IAAIW,EAAc,iBAAmB,KAASzwH,OAAO,uBAAyB,OAAS0wH,EAAa,yBAChG18H,EAAO,IAAInE,KAAK8/H,EAAQ,CAAE,KAASe,IACnCx9H,EAAO,IAAI+B,KAAK,CAACjB,GAAOy8H,EAAY,CAChC3gI,KAAM4gI,IAEdx9H,EAAKixD,OAAQ,EACbjxD,EAAK2O,SAAWtZ,KAAKqiE,OAAOmlE,EAAWD,GAAY,KACnD7jI,KAAK6tB,KAAKk4F,eAAe,CAAC9+G,IAAO,EACrC,CACAy8H,EAAS,EAAE,EAGfK,EAAcW,gBAAmB5yH,IAC7B4xH,EAAOtiI,KAAK0Q,EAAEpS,MACdsoE,EAAOJ,YAAYv1D,SAAQw1D,GAASA,EAAMC,QAAQ,CACrD,EAGD68D,EAAW52H,IACX,GAAQgY,IAAI,aAAiB,qBAAsB,CAAChY,KACpD41H,EAAKzjI,YAAY,4BAA4B,EAGjD6D,OAAO8U,UAAUkvD,aAAay7D,EAAaI,EAAWe,EAC1D,CACJ,EAEAn5C,aAAc,SAAUrqF,GACA,iBAATA,IACPA,EAAQY,OAAOZ,GAAOa,YAC1B,IAAI4iI,GAAa,EACb5kI,KAAKupH,MAAM14G,UAAU4vH,UACrBmE,EAAY5kI,KAAKupH,MAAM14G,UAAU4vH,UAAU/lE,MACtC16D,KAAKupH,MAAM14G,UAAUg0H,aAC1BD,EAAY5kI,KAAKupH,MAAM14G,UAAUg0H,WAAWnqE,OAChD16D,KAAKupH,MAAMx6G,QACN/O,KAAKs8H,cACNt8H,KAAKm/H,eACPn/H,KAAK6tB,KAAK66F,YAAc,kCAAyC1oH,KAAK6tB,KAAK6pF,cAAc,aAC3F13G,KAAKupH,MAAM2X,YAAY0D,EAAW,QAASzjI,GACvCnB,KAAKupH,MAAMub,UAAUF,EAAW,GAAG9sH,SACnC9X,KAAKupH,MAAMwb,WAAWH,EAAW,EAAG,WAAW,GAEnD5kI,KAAKupH,MAAM+W,aAAasE,EAAY,GACpC,2BACJ,EAEA7G,oBAAqB,WACjB,IACyD58H,EADrD6jI,EAAoBhlI,KAAK0sB,QAAQ8kD,cAAcyzD,eAC/CC,EAAkBllI,KAAKrC,EAAE,mBAAmBqd,QAChD,GAAIgqH,EAAkB/iI,OAAS,EAC3B,IAAK,IAAIS,EAAM,EAAGA,EAAM,EAAGA,IACvBvB,EAAQ,GAAMsB,WAAWC,GACzB1C,KAAK0sB,QAAQ8kD,cAAc2zD,gBAAgBhkI,GAGnD6jI,EAAoBhlI,KAAK0sB,QAAQ8kD,cAAcyzD,eAC/C,IAAK,IAAIviI,EAAM,EAAGA,EAAM,EAAGA,IACvB,GAAE,6BAA6B/C,KAC3BqlI,EAAkBtiI,IAAQsiI,EAAkBtiI,GAAKnB,QAAQ,CAACE,SAAU,MAAOC,WAAY,MACzF2H,SAAS67H,GAEfA,EAAgBrlI,KAAK,eAAeg+B,WAAWhzB,IAE3C,GADIA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9Bb,EAAGqyE,OACH,OAEJ,IAAIx4C,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAAel7B,KAAK,UACvDG,KAAKwrF,aAAa9mD,EAAQhlC,KAAK,SAAS,GAEhD,EAEA+1C,OAAQ,SAAU5qC,GACd,IAAIwyH,EAAiBr9H,KAAKrC,EAAE,iCACxB4Z,EAAW,GACXkuG,EAAoB,GACpB/tG,EAAc,GACd4pF,EAAkBthG,KAAKshG,gBACvBokB,EAAiB1lH,KAAK0lH,eACtBpjH,EAAO+6H,EAAevtH,0BAC1B9P,KAAKrC,EAAE,kBAAkBgC,KAAK,IAAImvB,OAClCuuG,EAAex9H,KAAK,UAAUC,MAAK,CAAC4C,EAAK0iI,KACrC,IAAIjkI,EAAQikI,EAAWC,UACvBrlI,KAAK0sB,QAAQ8kD,cAAc2zD,gBAAgBhkI,EAAM,IAErD,IAAImkI,EAAiB,GACrB,GAAIhjI,EAAKL,QAAU,GAAU5F,gBAGzB,OAFA,GAAM0P,QAAQgC,MAAM,aAAiB,mCACrCsvH,EAAettH,oBAGfzN,EAAKL,QACLjC,KAAKupH,MAAMgc,cAAclzH,SAAS4wB,IAC9B,GAAIA,EAAQ3rB,WAAY,CACpB,IAAIkuH,EAAgB,GAChBztH,EAAYutH,EAAerjI,OAC3B+V,EAAUD,GAAckrB,EAAQwiG,QAAUxiG,EAAQwiG,OAAOtkI,MAAS,EAAI,GAAE0Q,OAAOoxB,EAAQwiG,QAAQxjI,QACnG,IAAK,IAAIzC,KAAQyjC,EAAQ3rB,WACX,QAAT9X,GAA2B,eAATA,GAA0BgmI,EAAcpkI,KAAK5B,GACpE,GAAIgmI,EAAcphI,QAAQ,YAAc,EAAG,CACvC,IAAIshI,EAAcF,EAAcphI,QAAQ,WACpC6T,EAAQjY,KAAKi1B,QAAQzyB,IAAI,cACzBiL,EAAS,GAAE4vH,EAAex9H,KAAK,WAAW0X,EAAStV,SAASzC,KAAK,eACrEgmI,EAAcvrF,OAAOyrF,EAAaA,EAAc,GAChDj4H,EAASwK,EAAS,QAAUjY,KAAKi1B,QAAQzyB,IAAI,OAASiL,EAAW,QAAUA,EAC3E8J,EAASnW,KAAK,CACV2V,MAAOgB,EACPf,IAAKgB,EACLvK,OAAQA,EACRwK,MAAOA,GAEf,CACIgrB,EAAQ3rB,WAAWktG,YACf8gB,EAAerjI,QACfsB,MAAMqP,KAAKqwB,EAAQwiG,QAAQpzH,SAASszH,IAChC,IAAIC,EAAmBN,EAAexhC,YAAY,MAAQ,EAAK,EAAKwhC,EAAexhC,YAAY,MAAQ,EACnG+hC,EAAgBP,EAAerjI,OACnCyV,EAAYtW,KAAK,CACb0kI,OAAQ,GAAUrrI,aAClBsc,MAAO6uH,EACP5uH,IAAK6uH,EAAgB,GAAUprI,aAAawH,SAEhDK,EAAOiB,MAAMqP,KAAK,GAAEf,OAAOvP,IAEvBsjI,IAAoBC,GACpBvjI,EAAKsjI,EAAkB,IAAM,GAAUnrI,aACvC6qI,EAAeM,GAAmB,GAAUnrI,eAG5C6H,EAAKsjI,GAAmB,GAAUnrI,aAAe6H,EAAKsjI,GACtDN,EAAeM,GAAmB,GAAUnrI,aAAe6qI,EAAeM,IAE7EC,EAAgBvjI,EAAKL,SAAY4jI,EAAgBvjI,EAAKL,QACvDK,EAAKujI,EAAgB,IAAM,KAE3BvjI,EAAO,GAAEmR,SAASnR,EAAKlD,KAAK,KAC5BkmI,EAAiB/hI,MAAMqP,KAAK0yH,EAAelmI,KAAK,KAEhDqmH,EAAkBpzG,SAAS0zH,IACnBA,EAAWhvH,OAAS6uH,IACpBG,EAAWhvH,OAAS,GAAUtc,aAAawH,OAC3C8jI,EAAW/uH,KAAO,GAAUvc,aAAawH,OAC7C,IAGJqjI,EAAiBA,EAAe/rD,OAAOh2E,MAAMqP,KAAK,GAAEf,OAAO8zH,IAAM,IAI7EH,EAAcvjI,QAAUwjH,EAAkBrkH,KAAK,CAC3C2V,MAAOgB,EACPf,IAAKgB,EACLI,OAAQotH,GAEhB,CACIviG,EAAQwiG,QAAUxiG,EAAQwiG,OAAOtkI,MACjCmkI,EAAiBA,EAAe/rD,OAAOh2E,MAAMqP,KAAK,GAAEqwB,EAAQwiG,OAAOtkI,OAAOzB,KAAK,WAE1EujC,EAAQ3rB,YAAc2rB,EAAQ3rB,WAAWktG,aAG9C8gB,EAAiBA,EAAe/rD,OAAOh2E,MAAMqP,KAAK,GAAEf,OAAOoxB,EAAQwiG,UAAS,IAGxF,IAAIO,EAAe1jI,EAAKL,OAExB,GADAK,EAAOA,EAAKwkB,YACRk/G,EAAe1jI,EAAKL,OAAQ,CAC5B,IAAIgkI,EAAQD,EAAe1jI,EAAKL,OAChCsV,EAASlF,SAASyF,IACdA,EAAQf,OAASkvH,EACjBnuH,EAAQd,KAAOivH,CAAK,IAExBxgB,EAAkBpzG,SAAS6zH,IACvBA,EAAiBnvH,OAASkvH,EAC1BC,EAAiBlvH,KAAOivH,CAAK,IAEjCvuH,EAAYrF,SAASmyG,IACjBA,EAAWztG,OAASkvH,EACpBzhB,EAAWxtG,KAAOivH,CAAK,GAE/B,CAoBA,GAnBI3kC,GAAmBA,EAAgBr/F,SACnCq/F,EAAkBA,EAAgB3qF,QAAOzV,GAAQA,EAAKihG,gBACtDb,EAAgBjvF,SAASuyG,IACjBA,GAAkBA,EAAeziB,gBACjCyiB,EAAe7tG,MAAQzU,EAAK8B,QAAQwgH,EAAeziB,gBACtB,GAAzByiB,EAAe7tG,QACf6tG,EAAe7tG,MAAQ,EACvB6tG,EAAe5tG,IAAM,GAE7B,KAGRhX,KAAKuiI,0BACLviI,KAAKw8H,wBAA0B,GAC/Bx8H,KAAKsiI,wBACLhgI,EAAOA,EAAKykB,UACZs2G,EAAettH,oBACf/P,KAAKupH,MAAMx6G,QACX/O,KAAKk/H,oBACDl/H,KAAKs8H,aAGL,OAFAt8H,KAAKmmI,YAAY7jI,EAAM,CAACiV,SAAUA,EAAUkuG,kBAAmBA,EAAmBnkB,gBAAiBA,EAAiBokB,eAAgBA,EAAgBhuG,YAAaA,SACjK2lH,EAAexuH,mBAGfvM,GAAQtC,KAAKwlH,aAAavjH,QAAWyjH,GAAkBA,EAAezjH,QAAYq/F,GAAmBA,EAAgBr/F,UACjHjC,KAAK8zB,MAAMtxB,IAAI,UAAYxC,KAAKwlH,aAAavjH,SAAWK,EACxDtC,KAAKwlH,aAAanzG,SAAS6E,IACvBlX,KAAK6tB,KAAK03F,SAAS,GAAI,CAACruG,GAAS,IAGrClX,KAAK6tB,KAAK03F,SAASjjH,EAAMtC,KAAKwlH,aAAc,CAACjuG,SAAUA,EAAUkuG,kBAAmBA,EAAmBnkB,gBAAiBA,EAAiBokB,eAAgBA,EAAgBhuG,YAAaA,KAE9L1X,KAAKyhI,yBACL,4BACIzhI,KAAK8zB,MAAMs0D,eACPpoF,KAAK8zB,MAAMs0D,cAAc1oF,KAAK8C,IAAI,YAClC,uBAA2BxC,KAAK8zB,MAAMc,UAAW,CAACyG,oBAAoB,EAAM1F,cAAc,EAAMN,OAAQ,mBAAuB,UACvIgoG,EAAexuH,iBACnB,EAEAwyH,iBAAkB,SAAUnqH,GACxBlX,KAAK0yG,cAAgB,EACrB1yG,KAAK2yG,wBACL,IAAI/9B,EAAW19D,EAAQ1U,IAAI,YAAc,GACzCxC,KAAKrC,EAAE,yBAAyB2T,OAAOtR,KAAKs8H,cAC5Ct8H,KAAKrC,EAAE,qCAAqC2E,KAAK,aAAiB,yBAClEtC,KAAKrC,EAAE,mCAAmCgC,KAAK,GAAQ+oF,UAAU9T,IACjE50E,KAAKrC,EAAE,yBAAyB4D,QAAQ,YAAa,CAACG,WAAY,KAClE1B,KAAKm/H,cACL,4BACA,IACIpzC,EADc,GAAM90E,kBAAkBC,EAAS,WACtB3V,QAAQ,CAACE,SAAU,QAC5CsgI,EAAWh2C,EAAW7sF,MAAM,MAChC6iI,EAAS1vH,SAAQ,CAACnR,EAAMwB,KACfxB,EAAKqU,SAAS,mBACfwsH,EAASr/H,GAAO,MAAQq/H,EAASr/H,GAAO,OAAM,IAEtDqpF,EAAag2C,EAAS3iI,KAAK,IAC3BY,KAAKupH,MAAM6c,QAAQ,IACnBpmI,KAAKupH,MAAMuV,KAAK1uH,UAAY27E,EAC5B/rF,KAAK6+H,kBACL7+H,KAAKk+H,cACT,EAEAtW,yBAA0B,SAAU1wG,GAChClX,KAAK0yG,cAAgB,EACrB1yG,KAAK2yG,wBACUz7F,EAAQ1U,IAAI,WAC3BxC,KAAKm/H,cACL,4BACA,IACIpzC,EADc,GAAM90E,kBAAkBC,EAAS,WACtB3V,QAAQ,CAACE,SAAU,QAC5CsgI,EAAWh2C,EAAW7sF,MAAM,MAChC6iI,EAAS1vH,SAAQ,CAACnR,EAAMwB,KACfxB,EAAKqU,SAAS,mBACfwsH,EAASr/H,GAAO,MAAQq/H,EAASr/H,GAAO,OAAM,IAEtDqpF,EAAag2C,EAAS3iI,KAAK,IAC3BY,KAAKupH,MAAM6c,QAAQ,IACnBpmI,KAAKupH,MAAMuV,KAAK1uH,UAAY27E,EAC5B/rF,KAAK6+H,kBACL7+H,KAAKk+H,cACT,EAEAnM,qBAAsB,SAAUx+F,GAG5B,GAFAvzB,KAAKwlH,aAAejyF,GAAY,GAChCvzB,KAAKrC,EAAE,yBAAyB2T,OAAOiiB,EAAStxB,QAC5CsxB,EAAStxB,OAAQ,CACjB,IACIokI,EAAYzxD,EAAU0xD,EAAeC,EADrC3gH,EAAM2N,EAAS,GAEnB,GAAIA,EAAStxB,OAAS,EAClB2yE,EAAW,qBAAyB,2BAA4BrhD,EAAStxB,aAEzE,GAAI2jB,EAAIpjB,IAAI,qBACRoyE,EAAW,qBAAyB,2BAA4BrhD,EAAStxB,YAExE,CACD2yE,GAAYhvD,EAAIpjB,IAAI,YAAcojB,EAAIpjB,IAAI,qBAAqBjB,UAC/D,IAAIy7G,EAAap3F,EAAIpjB,IAAI,WAAa,GAClCgkI,EAAY5gH,EAAIpjB,IAAI,UAAY,GAChCikI,EAAgB7gH,EAAIpjB,IAAI,aAE5B,GADAojB,EAAIpjB,IAAI,WAAaojB,EAAIpjB,IAAI,UAAUP,SAAWukI,EAAYA,EAAUjtD,OAAO3zD,EAAIpjB,IAAI,YAClFw6G,GAAcA,EAAW/6G,QAAYukI,GAAaA,EAAUvkI,OAC7D2yE,EAAWooC,EAAW/6G,OAASukI,EAAUvkI,OAAS,mBAEjD,CAUD,GATI+6G,GAAcA,EAAW/6G,SACrB+6G,EAAW/6G,OAAS,EACpB2yE,EAAU,qBAAyB,oCAAqCooC,EAAW/6G,SAGnFqkI,EAAgB,GAAEjvH,MAAMuO,EAAIpjB,IAAI,UAAU,IAC1C+jI,EAAoBvmI,KAAK0mI,mBAAmBJ,KAGhDE,GAAaA,EAAUvkI,OACvB,GAAIukI,EAAUvkI,OAAS,EACnB2yE,EAAW,qBAAyB,mCAAoC4xD,EAAUvkI,YAEjF,CACD,IAAIu+D,EAAWgmE,EAAU,GAAG5hI,KAC5BgwE,EAAWpU,EAAWgmE,EAAU,GAAGznI,KAAO,OAASyhE,EAAWgmE,EAAU,GAAGznI,IAC/E,CAEA0nI,GAAiBA,EAAcxkI,SAE3B2yE,EADA6xD,EAAcxkI,OAAS,EACZ,qBAAyB,uCAAwCwkI,EAAcxkI,QAG/E,aAAiB,iDAGxC,CACJ,CAEJ,IAAIkuD,EAAWvqC,EAAIpjB,IAAI,YAEnB6jI,EADAzgH,EAAIozE,aACSh5F,KAAK0sB,QAAQlqB,IAAI,QAEhBojB,EAAIpjB,IAAI,cAAgBojB,EAAIpjB,IAAI,aAAamiD,WAAc3kD,KAAK0sB,QAAQ4I,SAAS9yB,IAAI2tD,GAAYnwD,KAAK0sB,QAAQ4I,SAAS9yB,IAAI2tD,GAAU3tD,IAAI,QAAU2tD,GAErKnwD,KAAKrC,EAAE,qCAAqC2E,KAAK+jI,GAC7C,GAAEj7H,YAAYk7H,GACdtmI,KAAKrC,EAAE,mCAAmCgC,KAAKi1E,GAG/C50E,KAAKrC,EAAE,mCAAmCgC,KAAK4mI,EAEvD,CACA,4BACAvmI,KAAKm/H,aACT,EAEAwH,kBAAmB,SAAU97H,GACzB,IAAI+7H,EAAgB,GAAE/7H,EAAG4C,QACrBo5H,EAAkBD,EAAc55H,SAAS,UAC7ChN,KAAKrC,EAAE,mBAAmB2T,OAAOu1H,GACjC7mI,KAAKrC,EAAE,iBAAiB2T,QAAQu1H,GAChCD,EAAc75H,YAAY,UAAW85H,EACzC,EAEAH,mBAAoB,SAAS1rI,GACzB,IAAIotH,EAAa,IAAIjhH,MAGrB,OAFIihH,EAAWhhH,IAAMpM,EAAM0mC,QAAQ,GACnC,GAAE0mF,GAAYjoH,SAAS,mBAChBioH,CACX,EAEAqZ,uBAAwB,SAAU52H,GAC9BA,GAAMA,EAAGa,gBAAkBb,EAAGa,iBAC9B,IAAI2xH,EAAiBr9H,KAAKrC,EAAE,iCAC5BqC,KAAKwlH,aAAe,GAChBxlH,KAAKs8H,eACLt8H,KAAKsiI,wBACLtiI,KAAKuiI,0BACLviI,KAAKrC,EAAE,sBAAsB6B,KAAK,YAAY,GAC9C69H,EAAettH,qBAEnB/P,KAAKs8H,aAAe,KACpBt8H,KAAKrC,EAAE,yBAAyBwC,SAAS,UACzC,IAAImC,EAAO+6H,EAAevtH,0BACrBxN,GAAgB,MAARA,EAGTtC,KAAKm/H,cAFLn/H,KAAKk/H,oBAGT,4BACAl/H,KAAKk+H,cACT,EAEAd,sBAAuB,WACnBp9H,KAAK+9G,aAAapgH,EAAE,0BAA0BuC,YAAY,YAC1DF,KAAKk+G,wBACT,EAEAA,uBAAwB,WACpB,IAAI4oB,EAAiB9mI,KAAK+9G,aAAapgH,EAAE,0BACrCopI,EAAe/mI,KAAKrC,EAAE,wBACtBqpI,EAAmBhnI,KAAKrC,EAAE,0BAK9B,GAJIsE,OAAS6kI,EAAe7kI,OAC5B8kI,EAAax1H,OAAOvR,KAAK8zB,MAAMtxB,IAAI,YAAcP,QACjD+kI,EAAiB11H,OAAOrP,QACxBjC,KAAK8zB,MAAMtxB,IAAI,YAAcxC,KAAKrC,EAAE,gBAAgB4T,OAAOtP,QACvDA,OAAQ,CACRjC,KAAKg9E,kBACL,IAAIiqD,GAAS,EACE,IAAXhlI,SACI6kI,EAAe50G,QAAQxyB,KAAK,UAAYM,KAAK0sB,QAAQlqB,IAAI,SACzDykI,GAAS,GACTjnI,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ0+C,SACzBmzD,EAAe50G,QAAQxyB,KAAK,UAAYM,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,QACjEykI,GAAS,GACbH,EAAe50G,QAAQryB,KAAK,aAAaoC,SACzCglI,GAAS,IAEjBD,EAAiBnnI,KAAK,qBAAqByR,OAAOtR,KAAK8zB,MAAMtxB,IAAI,eAAeuK,YAAY,aAA2B,IAAX9K,QAAiBjC,KAAK8zB,MAAMtxB,IAAI,eAC5IwkI,EAAiBnnI,KAAK,uBAAuBkN,YAAY,aAAc/M,KAAK8zB,MAAMtxB,IAAI,YACtFwkI,EAAiBnnI,KAAK,sBAAsBkN,YAAY,eAA4B,IAAX9K,QAAiBglI,IAAWjnI,KAAK+9G,aAAapgH,EAAE,qCAAqCsE,QAAUjC,KAAK8zB,MAAMtxB,IAAI,aACtLxC,KAAK6tB,KAAKlwB,EAAE,sBAAsBqP,SAAS,uBAAyBhN,KAAK6tB,KAAKlwB,EAAE,sBAAsBuC,YAAY,UAAUC,SAAS,gBAAgBmC,KAAK,qBAAyB,qDAAsDL,QAC9O,MACKjC,KAAK6tB,KAAKlwB,EAAE,sBAAsBqP,SAAS,uBAAyBhN,KAAK6tB,KAAKlwB,EAAE,sBAAsBwC,SAAS,UAAUD,YAAY,gBAAgBoC,KAAK,IAC3JtC,KAAKk+H,cAEb,EAEAf,WAAY,WACR,IAAKn9H,KAAK8zB,MAAMtxB,IAAI,UAChB,OACJ,GAAIxC,KAAKrC,EAAE,qBAAqBqP,SAAS,cACrC,OACJ,IAAIwqE,EAAOx3E,KAAK+9G,aAAapgH,EAAE,0BAA0Bu0B,QAErDg8E,EADaluG,KAAKi+H,aAAaz7H,IAAIg1E,EAAK93E,KAAK,aACzB8C,IAAI,aAC5BxC,KAAKo9H,wBACL,IAAIrnG,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAIvW,KAAKi1B,QAAQzyB,IAAI,aAAexC,KAAKi1B,QAAQzyB,IAAI,SAC3E2Q,EAAE,SAAU,CAAC8iB,MAAO,GAAQC,GAAGy4C,aAC/Bx7D,EAAE,kBAAkBgS,EAAE+oF,GAC3BluG,KAAK0sB,QAAQiK,WAAWZ,GAAI,SACvBhoB,IACO,GAAEA,GAAOlO,KAAK,eAAeoC,QAC7B,GAAM8J,QAAQgC,MAAM,aAAiB,8CAA8C,GAEnG,EAEAivH,aAAc,WACV,IAAKh9H,KAAK8zB,MAAMtxB,IAAI,UAChB,OACJ,IAAI0kI,EAAQlnI,KAAK+9G,aAAapgH,EAAE,0BAC5B6+B,EAAO,GACX0qG,EAAMpnI,MAAK,CAAC4C,EAAKxB,KACb,IAAI0kB,EAAM5lB,KAAKi+H,aAAaz7H,IAAItB,EAAKimI,QAAQnuD,UAC7CpzD,GAAO4W,EAAKp7B,KAAKwkB,EAAI,IAEzB5lB,KAAKo9H,wBACLp9H,KAAKonI,wBAAwB5qG,EACjC,EAEA2pG,YAAa,SAAU7jI,EAAM+kI,GACzB,IAAIC,EAAgB/jI,MAAMqP,KAAK,GAAQ81E,UAAU1oF,KAAKs8H,aAAa95H,IAAI,qBAAuB,KAC1F+kI,EAAiB,GACjB7wH,EAAe1W,KAAKs8H,aAAa95H,IAAI,oBAAsB,GAC3DglI,EAAgB9wH,GAAgBA,EAAa7W,MAAKqB,GAAsB,cAAdA,EAAK2C,OAC/D0zE,EAAYv3E,KAAKs8H,aAAa95H,IAAI,aAClCilI,EAAc/wH,GAAgBA,EAAaC,QAAOzV,GAAsB,YAAdA,EAAK2C,OAC/D2T,EAAU6vH,EAAa5hB,mBAAqB,GAC5Cj9E,EAAQ6+F,EAAa3hB,gBAAkB,GACvCpkB,EAAkB+lC,EAAa/lC,iBAAmB,GAClD5pF,EAAc2vH,EAAa3vH,aAAe,GAC1CH,EAAW8vH,EAAa9vH,UAAY,GACpCwe,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAKvW,KAAKi1B,SAAWj1B,KAAKi1B,QAAQzyB,IAAI,cAAiBxC,KAAKi1B,QAAQzyB,IAAI,OAASxC,KAAK0sB,QAAQlqB,IAAI,SAAS2Q,EAAE,UAAW,CAAC8iB,MAAO,GAAQC,GAAGk9B,QAASxpD,GAAI2tE,IAC/KV,EAAWl1B,OAAO,WAAWvqC,MAAM,CAAC6e,WAAO7a,IA+F/C,GA9FAqsH,GAAeA,EAAYp1H,SAAQ,CAACgyG,EAAK3hH,KACrC,IAAIq6G,EAAU/8G,KAAKs8H,aAAa95H,IAAI,qBAAqBE,GACrDglI,EAAYF,GAAkBA,EAAczwH,MAAQywH,EAAcxwH,IACtE6/D,EAAS1jE,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGqiD,UAAWipB,MAAQgmC,EAAiBnjB,EAAIttG,MAAQ2wH,EAAarjB,EAAIttG,MAAQC,IAAMwwH,EAAiBnjB,EAAIrtG,IAAM0wH,EAAarjB,EAAIrtG,IAAMnT,KAAM,YAC7KsP,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGo4F,UAClCn7G,EAAE,QAAS,CACR8iB,MAAO,iBACP+C,MAAO+jF,EAAQv6G,IAAI,UACpB6zB,KAAKC,MAAMymF,EAAQv6G,IAAI,QAAQ6zB,KAAKA,KAAKA,KAChDkxG,GAAkBD,EAAcjkI,MAAMghH,EAAIttG,MAAOstG,EAAIrtG,KAAK5X,KAAK,GAAG,IAEtEoY,EAAQnF,SAAS+F,IACby+D,EAAS1jE,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGqiD,UAAWipB,MAAOppF,EAAOrB,MAAQxT,MAAMqP,KAAK20H,GAAgBtlI,OAAQ+U,IAAKoB,EAAOpB,IAAMzT,MAAMqP,KAAK20H,GAAgBtlI,OAAQ4B,KAAM,eAC1K,IAAK,IAAInB,KAAO0V,EAAOA,OACnBy+D,EAAS1jE,EAAEiF,EAAOA,OAAO1V,GAAM,CAACuzB,MAAO,GAAQC,GAAGurE,SAASprE,KAC/DwgD,EAASxgD,IAAI,IAEjB3e,EAAYrF,SAASmyG,IACjB3tC,EAAS1jE,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGqiD,UAAWipB,MAAOgjB,EAAWztG,MAAQxT,MAAMqP,KAAK20H,GAAgBtlI,OAAQ+U,IAAKwtG,EAAWxtG,IAAMzT,MAAMqP,KAAK20H,GAAgBtlI,OAAQ4B,KAAM,eAC7KsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGurE,SAASprE,KAAKA,IAAI,IAEzD9e,EAASlF,SAASyF,IACd,IAAIysG,EAAgB,CAACtuF,MAAO,GAAQC,GAAGurE,QACvC3pF,EAAQG,QAAUssG,EAAcl0G,KAAO,GAAQ6lB,GAAGy4C,YAClDkI,EAAS1jE,EAAE,YAAa,CAAC8iB,MAAO,GAAQC,GAAGqiD,UAAWipB,MAAO1pF,EAAQf,MAAQxT,MAAMqP,KAAK20H,GAAgBtlI,OAAQ+U,IAAKc,EAAQd,IAAMzT,MAAMqP,KAAK20H,GAAgBtlI,OAAQ4B,KAAM,eACvKsP,EAAE,UAAWoxG,GAAep/F,EAAErN,EAAQrK,QAAQ4oB,KAAKA,IAAI,IAG5DmS,GAASA,EAAMvmC,SACfyU,EAAeA,EAAaC,QAAOzV,GAAsB,SAAdA,EAAK2C,OAChD2kC,EAAMn2B,SAAQ,CAACpL,EAAMvE,KACR,IAARA,IAAeJ,GAAQ,MACxB,IAAI2hH,EAAch9G,EAAKy6B,QAAQ,IAAOh/B,GAAO8lC,EAAMvmC,OAAS,EAAK,KAAO,IACpE8V,EAAYxU,MAAMqP,KAAK,GAAEf,OAAOvP,IAAOL,OAASsB,MAAMqP,KAAK20H,GAAgBtlI,OAC3E+V,EAAUD,EAAYksG,EAAYhiH,OACtC40E,EAAS1jE,EAAE,YAAa,CACpB8iB,MAAO,GAAQC,GAAGqiD,UAClB10E,KAAM,UACN29F,MAAOzpF,EACPf,IAAKgB,IAET/Q,EAAKixD,OAAS2e,EAAS1jE,EAAE,gBAAiB,CAAC8iB,MAAO,GAAQC,GAAG0iD,gBAC7D/B,EAAS1jE,EAAE,eAAgB,CAAC8iB,MAAO,GAAQC,GAAGyiD,QAAQxlE,EAAE,QACxDlM,EAAKpD,MAAQgzE,EAAS1jE,EAAE,cAAcgS,EAAEle,EAAKpD,MAAMwyB,KACnDpvB,EAAS,IAAK4vE,EAAS1jE,EAAE,cAAcgS,EAAEle,EAAS,IAAGovB,KACrDpvB,EAAKqiC,WAAautC,EAAS1jE,EAAE,iBAAiBgS,EAAEle,EAAKqiC,WAAWjT,KAChEpvB,EAAKy9G,SAAW7tC,EAAS1jE,EAAE,WAAWgS,EAAEle,EAAKy9G,SAASruF,KACtDpvB,EAAKlI,MAAQ83E,EAAS1jE,EAAE,QAAQgS,EAAEle,EAAKlI,MAAMs3B,KAC7CpvB,EAAKrC,MAAQiyE,EAAS1jE,EAAE,QAAQgS,EAAEle,EAAKrC,MAAMyxB,KAC7CpvB,EAAKlC,QAAU8xE,EAAS1jE,EAAE,UAAUgS,EAAEle,EAAKlC,QAAQsxB,KACnDpvB,EAAKnC,OAAS+xE,EAAS1jE,EAAE,SAASgS,EAAEle,EAAKnC,OAAOuxB,KAChDpvB,EAAK2O,UAAYihE,EAAS1jE,EAAE,YAAYgS,EAAEle,EAAK2O,UAAUygB,KACzDpvB,EAAKg+C,aAAe4xB,EAAS1jE,EAAE,QAAQgS,EAAEle,EAAKg+C,aAAa5uB,KAC3DwgD,EAASxgD,KAAKljB,EAAE,WAChBlM,EAAKy6B,QAAQrvB,SAASsyG,IACd19G,EAAKoP,MACLsuG,EAAIA,EAAE9iH,QAAQ,gBAAiB,UAAY,IAAM,GAAMma,oBAAoB/U,EAAKoP,MACpFwgE,EAAS1jE,EAAE,OAAOgS,EAAEw/F,GAAGtuF,IAAI,IAE/BwgD,EAASxgD,KAAKA,KAAKA,KACnBpvB,EAAKixD,OAAS2e,EAASxgD,KACvB/zB,GAAQ2hH,EACRvtG,EAAatV,KAAK,CAAC2V,MAAOgB,EAAWf,IAAKgB,GAAS,KAIvDspF,GAAmBA,EAAgBr/F,SACnCyU,EAAeA,EAAaC,QAAOzV,GAAsB,mBAAdA,EAAK2C,OAChDy9F,EAAgBjvF,SAAQ,CAACuyG,EAAgBliH,MACP,IAA1BkiH,EAAe7tG,QACf6tG,EAAe7tG,MAAQxT,MAAMqP,KAAK,GAAEf,OAAOvP,IAAOL,OAASsB,MAAMqP,KAAK20H,GAAgBtlI,OACtFK,EAAOA,EAAO,KAAOsiH,EAAeziB,cACpCyiB,EAAe5tG,IAAM4tG,EAAe7tG,MAAQ6tG,EAAeziB,cAAclgG,OAAS,GAEtF40E,EAAS1jE,EAAE,YAAa,CACpB8iB,MAAO,GAAQC,GAAGqiD,UAClBipB,MAAOojB,EAAe7tG,MACtBC,IAAK4tG,EAAe5tG,IACpBnT,KAAM,YACPsP,EAAE,MAAO,CAAE8iB,MAAO,GAAQC,GAAG8rE,IAAKxsG,IAAKovH,EAAeziB,gBACzDyiB,EAAersD,MAAQse,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,eAAgB5hF,QAAS2hF,EAAersD,OAAOliC,KACrGuuF,EAAe/gH,MAAQgzE,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,UAAW5hF,QAAS2hF,EAAe/gH,OAAOwyB,KAChGuuF,EAAehjH,OAASi1E,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,WAAY5hF,QAAS2hF,EAAehjH,QAAQy0B,KACnGuuF,EAAepvH,KAAOqhF,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,SAAU5hF,QAAS2hF,EAAepvH,MAAM6gC,KAC7FuuF,EAAe3/D,aAAe4xB,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,iBAAkB5hF,QAAS2hF,EAAe3/D,cAAc5uB,KACrHuuF,EAAe5pH,OAAS67E,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,WAAY5hF,QAAS2hF,EAAe5pH,QAAQq7B,KACnGuuF,EAAelsD,aAAeme,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,iBAAkB5hF,QAAS2hF,EAAelsD,cAAcriC,KACrHuuF,EAAensD,cAAgBoe,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,kBAAmB5hF,QAAS2hF,EAAensD,eAAepiC,KACxHuuF,EAAejsD,WAAake,EAAS1jE,EAAE,OAAQ,CAAE0xG,SAAU,eAAgB5hF,QAAS2hF,EAAejsD,YAAYtiC,KAC/GwgD,EAASxgD,KAAKA,KACd3f,EAAatV,KAAK,CAAC2V,MAAO6tG,EAAe7tG,MAAOC,IAAK4tG,EAAe5tG,KAAK,KAGjFN,GAAgBA,EAAazU,QAAUjC,KAAKs8H,aAAav8G,IAAI,CAACtI,gBAAiBf,IACzE,GAAQ0tC,YAAYmjF,GAAkBjlI,EAM5C,GAFAu0E,EAAS1jE,EAAE,QAAQgS,EAAE,GAAQi/B,YAAYmjF,GAAkBjlI,GAAM+zB,KACjEr2B,KAAKyhI,yBACDzhI,KAAK8zB,MAAMtxB,IAAI,aAAc,CAC7B,IAAImlI,EAAgB9wD,EAASjmD,OAAOxgB,UACpCymE,EAAS1jE,EAAE,WAAY,CAAC8iB,MAAO,GAAQC,GAAG6uF,MAAM5xG,EAAE,WAC9C,GAAE0jE,EAASjmD,QAAQjD,SAAS,QAAQ1rB,SACpC40E,EAASvgD,MAAM,GAAEugD,EAASjmD,QAAQjD,SAAS,QAAQ,IAAIvW,MAAM,CAAC,MAAS,GAAQ8e,GAAG8uF,SAAS3uF,KAC3F,GAAEwgD,EAASjmD,QAAQjD,SAAS,QAAQ7iB,UAEpC,GAAE+rE,EAASjmD,QAAQjD,SAAS,aAAa1rB,SACzC,GAAE40E,EAASjmD,QAAQjD,SAAS,aAAa7tB,MAAK,CAAC4C,EAAK81E,KAChD3B,EAASvgD,MAAM,GAAEugD,EAASjmD,QAAQjD,SAAS,aAAajrB,IAAM2zB,IAAG,IAErE,GAAEwgD,EAASjmD,QAAQjD,SAAS,aAAa7iB,UAE7C+rE,EAASxgD,KAAKljB,EAAE,QAAQgS,EAAE,IAAIjjB,OAAO,KAAKmB,MAAM,EAAG/G,KAAKoI,MAAuB,IAAhBpI,KAAK+W,SAAkB,KAAKgjB,KAC3FwgD,EAAS1jE,EAAE,OAAQ,CAAC+E,IAAKlY,KAAK0sB,QAAQlqB,IAAI,SAAS6zB,KAAKA,KACxDr2B,KAAK0sB,QAAQ4mC,MAAMl0C,QAAQpf,KAAKi1B,QAAS4hD,GAAUx8D,MAAMuL,IACrDmQ,EAAGO,MAAM1Q,EAAI1O,QAAQ0Z,QACrB5wB,KAAK0sB,QAAQ4mC,MAAMs0E,gBAAgBC,WAAW7nI,KAAKi1B,QAASsiD,EAAWowD,GACvE3nI,KAAK0sB,QAAQiK,WAAWZ,EAAG,GAEnC,MACIA,EAAGO,MAAMugD,EAASjmD,QAClB5wB,KAAK0sB,QAAQiK,WAAWZ,QA3BxB/1B,KAAKi9H,eAAe,KAAM,CAACj9H,KAAKs8H,cA6BxC,EAEAY,cAAe,WACX,IAAKl9H,KAAK8zB,MAAMtxB,IAAI,UAChB,OACJ,GAAIxC,KAAKrC,EAAE,sBAAsBqP,SAAS,cACtC,OACJ,IAAIwqE,EAAOx3E,KAAK+9G,aAAapgH,EAAE,0BAA0Bu0B,QACrDkvG,EAAWphI,KAAKi+H,aAAaz7H,IAAIg1E,EAAK93E,KAAK,aAC/CM,KAAKs8H,aAAe8E,EACpBphI,KAAKo9H,wBACLp9H,KAAK2nH,4BAA4ByZ,GACjCphI,KAAKqhI,iBAAiBD,EAC1B,EAEAnE,eAAgB,SAAUpyH,EAAI0oB,GAC1B,IAAKvzB,KAAK8zB,MAAMtxB,IAAI,UAChB,OACJ,IAAI0kI,EAAQlnI,KAAK+9G,aAAapgH,EAAE,0BAC5B6+B,EAAO,GACPsrG,EAAU,EACV37H,EAAiB,GAUrB,GATA+6H,EAAMpnI,MAAK,CAAC4C,EAAKxB,KACb,IAAI0kB,EAAM5lB,KAAKi+H,aAAaz7H,IAAItB,EAAKimI,QAAQnuD,UAC7CpzD,GAAO4W,EAAKp7B,KAAKwkB,GACjBA,EAAIozE,cAAgB8uC,GAAS,IAEjCv0G,GAAYA,EAASlhB,SAAQ,CAACnR,EAAMwB,KAChC85B,EAAKp7B,KAAKF,GACVA,EAAK83F,cAAgB8uC,GAAS,IAE9B9nI,KAAK0sB,QAAQ81B,gBAAgBhgD,IAAI,GAAQ0zB,GAAGk9B,UAAYpzD,KAAK8zB,MAAMtxB,IAAI,cAAe,CACtF,IAAI0+B,EAAM,IAAI,GAAE75B,SAChB65B,EAAI3Y,MAAK,KACL,GAAMxc,QAAQiC,IAAI,aAAiB,kCAAmC,qBAAyB,0BAA2BwuB,EAAKv6B,QAC3HkK,EAAgB,CAACgC,eAAgB,aAAiB,YAAYoa,MAAMhpB,IACpE,IAAKA,EAGD,OAFAS,KAAKm+G,mBAAoB,OACzB5qF,GAAYA,EAAStxB,QAAUjC,KAAKk+H,gBAGxC,IAAI/uB,IAAanvG,KAAK8zB,MAAMtxB,IAAI,iBAAyBjD,EAAIwoI,mBAC7D/nI,KAAKo9H,wBACDp9H,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBACtDxC,KAAKuoH,wBAAwB/rF,GACjCx8B,KAAK8zB,MAAMo7E,gBAAgB1yE,EAAMx8B,KAAK8zB,MAAMtxB,IAAI,cAAe2sG,GAC/D57E,GAAYA,EAAStxB,QAAUjC,KAAKyhI,wBAAwB,GAC9D,KAEDzhI,KAAK8zB,MAAMtxB,IAAI,gBAAkBxC,KAAK8zB,MAAMtxB,IAAI,UAAYslI,GAAWZ,EAAMjlI,QAAUjC,KAAKi1B,SAAWj1B,KAAKi1B,QAAQ0oB,OACjH39C,KAAKi1B,QAAQzyB,IAAI,uBACjB2J,EAAiB,CAAC,CACdpN,KAAM,qBACNqkC,SAAS,EACT9gC,KAAM,aAAiB,sDAE3B4+B,EAAI74B,WAEJrI,KAAK0sB,QAAQK,WAAWqvB,MAAMz9B,KAAK3e,KAAKi1B,QAAQ0oB,OAAQ,MAAO5nB,IAC5C,GAAEA,GAAIl2B,KAAK,gBAAkB,GAAQq2B,GAAGk9B,QAAU,MACpDnxD,QACTkK,EAAiB,CAAC,CACdpN,KAAM,qBACNqkC,SAAS,EACT9gC,KAAM,aAAiB,sDAE3BtC,KAAKi1B,QAAQlV,IAAI,sBAAsB,GACvCmhB,EAAI74B,WAEJ64B,EAAI74B,SACR,IAIR64B,EAAI74B,SACZ,MAEI,GAAM0D,QAAQiC,IAAI,aAAiB,kCAAmC,GAAG,qBAAyB,0BAA2BwuB,EAAKv6B,YAAY,aAAiB,4DAA6D,CAACjC,KAAK0sB,QAAQixB,SAAS0gE,UAAU,aACzPlyG,EAAgB,CAACgC,eAAgB,aAAiB,sDAAsDoa,MAAMhpB,IAC9G,IAAKA,EAGD,OAFAS,KAAKm+G,mBAAoB,OACzB5qF,GAAYA,EAAStxB,QAAUjC,KAAKk+H,gBAGxCl+H,KAAKo9H,wBACDp9H,KAAK0sB,QAAQlqB,IAAI,kBAAoBxC,KAAK0sB,QAAQlqB,IAAI,gBACtDxC,KAAKuoH,wBAAwB/rF,GACjCA,EAAKnqB,SAASnR,IAAWlB,KAAK6tB,KAAK8xE,cAAcz+F,EAAK,IACtDqyB,GAAYA,EAAStxB,QAAUjC,KAAKyhI,wBAAwB,GAGxE,EAEAlZ,wBAAyB,SAAUh1F,GAC/BA,EAASlhB,SAASnR,IACTA,EAAK83F,eAEV93F,EAAKsB,IAAI,UAAY,GAAE0oB,QAAQhqB,EAAKsB,IAAI,WAAatB,EAAKsB,IAAI,SAAS6P,SAASnR,IAC5EA,GAAQA,EAAK0I,IAAM5J,KAAK0sB,QAAQ0rC,WAAWl3D,EAAK0I,IAAI6pC,IAChDvyC,EAAK0I,GAAK,IAAI,IACd0e,IACApnB,EAAK0I,GAAK,IAAI,GAChB,IAEN1I,EAAKsB,IAAI,WAAa,GAAE0oB,QAAQhqB,EAAKsB,IAAI,YAActB,EAAKsB,IAAI,UAAU6P,SAASnR,IAC/EA,GAAQA,EAAK0I,IAAM5J,KAAK0sB,QAAQ0rC,WAAWl3D,EAAK0I,IAAI6pC,IAChDvyC,EAAK0I,GAAK,IAAI,IACd0e,IACApnB,EAAK0I,GAAK,IAAI,GAChB,IAEN1I,EAAKsB,IAAI,WAAa,GAAE0oB,QAAQhqB,EAAKsB,IAAI,YAActB,EAAKsB,IAAI,UAAU6P,SAASnR,IAC/EA,GAAQA,EAAK0I,IAAM5J,KAAK0sB,QAAQ0rC,WAAWl3D,EAAK0I,IAAI6pC,IAChDvyC,EAAK0I,GAAK,IAAI,IACd0e,IACApnB,EAAK0I,GAAK,IAAI,GAChB,IACJ,GAEV,EAEAw9H,wBAAyB,SAAU7zG,GAC/B,IACIy0G,EAAkBhoI,KAAKmkH,kBAAkB5wF,EADrB,IAExB,GAAMvZ,oBAAoB,GAAEvG,SAASu0H,GACzC,EAEA7jB,kBAAmB,SAAU5wF,EAAU00G,GACnC,IAAIC,EAAe,GACnB,IAAK,IAAI1kI,EAAI,EAAGA,EAAI+vB,EAAStxB,OAAQuB,IAAK,CACtC,IAAIg0E,EAAOjkD,EAAS/vB,GAChBxD,KAAK8zB,MAAMtxB,IAAI,UAAYg1E,EAAKh1E,IAAI,sBAAiE,IAAzCg1E,EAAKh1E,IAAI,qBAAqBP,SAAiBu1E,EAAKh1E,IAAI,aACpHg1E,EAAOA,EAAKh1E,IAAI,qBAAqB,IACzC,IAAI2lI,EAAe,GAAO3wD,EAAKh1E,IAAI,cAAc2R,QAAQ,OAErDi0H,EAAa,IADD,EAAM,GAAO70G,EAAS/vB,EAAI,GAAGhB,IAAI,cAAc2R,QAAQ,OAAS,GAAO,IAErEJ,OAAO,MAAQo0H,EAAap0H,OAAO,OAC7Cm0H,IAAiBD,EAAkBhmI,OAASgmI,EAAoB,IAAM,IAAMj0H,GAAYm0H,GAAgB,MAE5GC,EAAa5wD,EAAKwhB,aAAeh5F,KAAK0sB,QAAQlqB,IAAI,QAAWg1E,EAAKh1E,IAAI,cAAgBg1E,EAAKh1E,IAAI,aAAamiD,WAAa3kD,KAAK0sB,QAAQ4I,SAAS9yB,IAAIg1E,EAAKh1E,IAAI,aAAexC,KAAK0sB,QAAQ4I,SAAS9yB,IAAIg1E,EAAKh1E,IAAI,aAAaA,IAAI,QAAUg1E,EAAKh1E,IAAI,aAClP0lI,IAAiBD,EAAkBhmI,OAASgmI,EAAoB,IAAM,IAAM,IAAM,GAAMp0H,YAAY2jE,EAAKh1E,IAAI,cAAgB,KAAO4lI,EAAa,MACjJH,EAAkBhmI,SAAWimI,GAAgBD,GAC7C,IAAIrwH,EAAmB,GAAEnE,SAAU+jE,EAAKh1E,IAAI,oBAAsBg1E,EAAKh1E,IAAI,mBAAmB3C,MAAKiX,GAAoB,cAAbA,EAAIjT,OAAyB2zE,EAAKh1E,IAAI,oBAAoBa,MAAMm0E,EAAKh1E,IAAI,mBAAmB3C,MAAKiX,GAAoB,cAAbA,EAAIjT,OAAsBmT,KAAOwgE,EAAKh1E,IAAI,qBAC5PylI,EAAkBhmI,SAAW2V,EAAmBA,EAAiB/V,QAAQ,MAAO,YAC/EomI,EAAkBhmI,QAA+C,IAArC2V,EAAiBxT,QAAQ,UAAmB8jI,GAAgB,KACxFtwH,EAAmB,GAAEnE,SAASmE,EAAiB/V,QAAQ,eAAgB,eACxEqmI,GAAgB,GAAEr2H,OAAO+F,GAAoB,IACrD,CACA,OAAOswH,EAAa1jI,MACxB,EAEAs4H,cAAe,WACX,IAAK98H,KAAK8zB,MAAMtxB,IAAI,UAChB,OACJ,IAAI0kI,EAAQlnI,KAAK+9G,aAAapgH,EAAE,0BAC5B6+B,EAAO,GACX0qG,EAAMpnI,MAAK,CAAC4C,EAAKxB,KACb,IAAI0kB,EAAM5lB,KAAKi+H,aAAaz7H,IAAItB,EAAKimI,QAAQnuD,UACzCpzD,IACI5lB,KAAK8zB,MAAMtxB,IAAI,UAAYojB,EAAIpjB,IAAI,sBAAwBojB,EAAIpjB,IAAI,qBAAqBP,SAAW2jB,EAAIpjB,IAAI,WAC3Gg6B,EAAOA,EAAK+8C,OAAO3zD,EAAIpjB,IAAI,sBAE3Bg6B,EAAKp7B,KAAKwkB,GAClB,IAEJ5lB,KAAKo9H,wBACLp9H,KAAK+xH,qBAAqBv1F,EAC9B,EAEAugG,gBAAiB,WACb,IAAK/8H,KAAK8zB,MAAMtxB,IAAI,UAChB,OACJ,IAAI0kI,EAAQlnI,KAAK+9G,aAAapgH,EAAE,0BAC5B6+B,EAAO,GACX0qG,EAAMpnI,MAAK,CAAC4C,EAAKxB,KACb,IAAI0kB,EAAM5lB,KAAKi+H,aAAaz7H,IAAItB,EAAKimI,QAAQnuD,UACzCpzD,IACI5lB,KAAK8zB,MAAMtxB,IAAI,UAAYojB,EAAIpjB,IAAI,sBAAwBojB,EAAIpjB,IAAI,qBAAqBP,SAAW2jB,EAAIpjB,IAAI,WAC3Gg6B,EAAOA,EAAK+8C,OAAO3zD,EAAIpjB,IAAI,sBAE3Bg6B,EAAKp7B,KAAKwkB,GAClB,IAEJ5lB,KAAKo9H,wBACA,mBACD,iBAAuB,IAAI,oBAAwB,CAAEtpG,MAAO,mBAChE,sBAA0B0I,EAAMx8B,KAAK0sB,QACzC,EAEAirF,qBAAsB,SAAUzgG,EAASmxH,GAChCroI,KAAK6tB,KAAKlwB,EAAE,sBAAsBqP,SAAS,iBAAoBhN,KAAK6tB,KAAKlwB,EAAE,sBAAsBqP,SAAS,uBAC3GhN,KAAK6tB,KAAKlwB,EAAE,sBAAsBoP,YAAY,UAAWmK,GAAS5U,KAAK4U,GAClEnK,YAAY,iBAAkBs7H,EAE3C,IAGJ,qBAA2B,oBAAwB,CAC/Ct3G,UAAW,4CAGf,qBAA2B,oBAAwB,CAC/CA,UAAW,sBAGXu3G,aAAc,WACV,IAAI1I,EAAgB,4BAAkCziH,SAAS,uBAA2B,WAC1F,GAAIyiH,EAAe,CACf,IAAI2I,EAAiBprH,SAASnd,KAAKD,IAAIuF,IAAI,WAC3CtF,KAAKD,IAAIuF,IAAI,CAACosG,OAAQkuB,IAClB5/H,KAAK6tB,OACL7tB,KAAK6tB,KAAKgB,kBACT+wG,GAAiB2I,IAAoBvoI,KAAK6tB,KAAK8C,sBAAwB3wB,KAAK6tB,KAAKkC,SAAS/vB,KAAK6tB,KAAKE,aAAa,GAAGiC,WAAa4vG,EAAgB2I,IAE1J,CACJ,IAGJ,4BAAkC,oBAAwB,CACtDx3G,UAAW,4BACXE,OAAQ,CACJ,mCAAoC,uBACpC,mBAAoB,SAGxB1C,YAAa,SAAUvvB,GACnBgB,KAAKD,IAAIJ,KAAK,GAAG,aAAiB,4CAA6C,CAAC,GAAU/C,yDAAyD,aAAiB,gIAAgI,aAAiB,0BACrToD,KAAKD,IAAI8M,OAAO,GAAE,QAAQ1M,SAAS,2BACnC,MAAU,gBAAiBH,KAAK65B,gBAAiB75B,KACrD,EAEA0rB,qBAAsB,WAClB3nB,OAAOooB,aAAawY,mBAAmBvY,IACnC,eAAmB,CAAC,cAAiC,YAAfA,EAA2B,8BAAgC,IACjGpsB,KAAKkL,OAAO,GAEpB,EAEA2uB,gBAAiB,WACR,+BAEL75B,KAAKD,IAAI+K,SACT,gCAAoC9K,KAAKD,KACzC,sBAA0B,iBAAkB,mCAChD,EAEAmL,MAAO,WACH,eAAmB,gCAAgC,GACnDlL,KAAKkR,SACL,kCAAmCkK,EACnC,sBAA0B,iBAAkB,kCAChD,IAGJ,uBAA6B,oBAAwB,CACjD2V,UAAW,0BAGf,uBAA6B,oBAAwB,CACjDA,UAAW,kDACXvD,SAAU,GAAUg7G,mBAGxB,gBAAsBrnH,SAAS0B,iBAAiB7Y,OAAO,CACnDqX,SAAU,CACNonH,WAAY,GACZ5wH,MAAO,GACPu5F,SAAU,GACVngC,WAAY,GACZy3D,eAAgB,GAChBC,yBAA0B,IAG9B1D,aAAc,WACV,OAAO,GAAE5tH,MAAMrX,KAAKwC,IAAI,cAC5B,EAEA2iI,gBAAiB,SAAUhkI,GACvB,IAAIynI,EAAmB,GAAEvxH,MAAMrX,KAAKwC,IAAI,eACxC,GAAIomI,EAAiB3mI,OAAS,EAAG,CAC7B,IAAIy4D,EAAQkuE,EAAiBxkI,QAAQjD,GAIrC,KAHc,GAAVu5D,GACAkuE,EAAiB3uF,OAAOygB,EAAO,GACnCkuE,EAAiBxnI,KAAKD,GACfynI,EAAiB3mI,OAAS,GAC7B2mI,EAAiB59H,OACzB,MAEI49H,EAAiBxnI,KAAKD,GAC1BnB,KAAK+iB,KAAK,aAAc6lH,EAC5B,EAEArwC,gBAAiB,SAAUrgF,EAAKL,GAC5B,IAAIgxH,EAAa,GAAExxH,MAAMrX,KAAKwC,IAAI,UAC9Bk4D,EAAQmuE,EAAWzkI,QAAQ8T,GAC3BL,GAAS6iD,EAAQ,GACjBmuE,EAAWznI,KAAK8W,IAEfL,GAAS6iD,GAAS,GACnBmuE,EAAW5uF,OAAOygB,EAAO,GAE7B16D,KAAK+iB,KAAK,QAAS8lH,EACvB,EAEAtT,uBAAwB,SAAUr9G,EAAKk5F,GACnC,IAAI03B,EAAgB,GAAEzxH,MAAMrX,KAAKwC,IAAI,aACjCk4D,EAAQouE,EAAc1kI,QAAQ8T,GAC9Bk5F,GAAY12C,EAAQ,GACpBouE,EAAc1nI,KAAK8W,IAElBk5F,GAAY12C,GAAS,GACtBouE,EAAc7uF,OAAOygB,EAAO,GAEhC16D,KAAK+iB,KAAK,WAAY+lH,EAC1B,EAEApzD,qBAAsB,SAAUx9D,EAAK+4D,GACjC,IAAI83D,EAAkB,GAAE1xH,MAAMrX,KAAKwC,IAAI,eACnCk4D,EAAQquE,EAAgB3kI,QAAQ8T,GAChC+4D,GAAcvW,EAAQ,GACtBquE,EAAgB3nI,KAAK8W,IAEpB+4D,GAAcvW,GAAS,GACxBquE,EAAgB9uF,OAAOygB,EAAO,GAElC16D,KAAK+iB,KAAK,aAAcgmH,EAC5B,EAEAxiD,oBAAqB,SAAU38E,EAAIpC,EAAM8jC,GACrC,IAAI09F,EAAc,GAAE3xH,MAAMrX,KAAKwC,IAAI,mBAC/B2jF,EAAS6iD,EAAY5kI,QAAQ4kI,EAAYnpI,MAAKsmF,GAAUA,EAAOv8E,KAAOA,MAC3D,GAAXu8E,GACA6iD,EAAY/uF,OAAOksC,EAAQ,GAE/B6iD,EAAY5nI,KAAK,CAACwI,GAAIA,EAAIuiD,YAAa3kD,EAAMosE,WAAYtoC,IACzDtrC,KAAK+iB,KAAK,iBAAkBimH,EAChC,EAEAv1D,kBAAmB,SAAU7pE,GAGzB,OAFkB,GAAEyN,MAAMrX,KAAKwC,IAAI,mBACV3C,MAAKsmF,GAAUA,EAAOv8E,KAAOA,GAE1D,EAEAw8E,aAAc,SAAUx8E,GACpB,IAAI1B,EAASlI,KAAKyzE,kBAAkB7pE,GACpC,OAAI1B,EACOA,EAAO0rE,gBAEd,CACR,EAEAyS,cAAe,SAAUz8E,GACrB,IAAI1B,EAASlI,KAAKyzE,kBAAkB7pE,GACpC,GAAI1B,EACA,OAAOA,EAAOikD,WACtB,IAGJ,0BAA6B,WACzBnsD,KAAKwxE,cAAgB,IAAI,gBAAoB,CAAC5nE,GAAI,iBAAkB,CAChE8iB,QAAS1sB,KACTqiB,aAAc,oBAA0BriB,KAAKwC,IAAI,OACjD+f,MAAO,UAEXviB,KAAKuzB,SAAW,IAAI,YAAgB,KAAM,CAAC7G,QAAS1sB,OACpDA,KAAKslH,mBAAqB,IAAI,YAAgB,KAAM,CAAC54F,QAAS1sB,OAC9DA,KAAKojG,gBAAkB,IAAI,YAAgB,KAAM,CAAC12E,QAAS1sB,OAE3DA,KAAK0zB,MAAQ,IAAI,gBAAoB,KAAM,CAAChH,QAAS1sB,MACzD,IAEA,0BAA6B,WACzB,IAAI8T,EAAY9T,KAAK4pD,oBAAsB5pD,KAAK+zD,uBAChD/zD,KAAK0zB,MAAMq4F,yBACX/rH,KAAK0zB,MAAM5zB,MAAM5L,IACR8L,KAAK+sB,WAAW01B,qBACbvuD,EAAKq/B,SAAStxB,OACd/N,EAAKqX,QAAQ,qBAAsBuI,GAEnC5f,EAAKqX,QAAQ,qBACrB,IAEEvL,KAAK0pD,WAAa1pD,KAAK0pD,UAAUhqD,KAAK8C,IAAI,mBAC5CxC,KAAK40D,eAET50D,KAAK+sB,WAAWk8G,mBAAmBjpI,KAAKkpI,kBACxClpI,KAAKkpI,iBAAmBlpI,KAAK+sB,WAAWo8G,gBAAgB,KAAO,KAC3D,GAAInpI,KAAK+sB,aAAe/sB,KAAK+sB,WAAWq8G,SAASvpI,MAAKwpI,IAAMA,EAAErtE,KAAOqtE,EAAErqI,QAAQugB,WAAwB,YAAX8pH,EAAEtqI,OAAqB,CAC/G,IAAI6qD,EAAqB5pD,KAAK4pD,mBAC9B5pD,KAAK0zB,MAAMq4F,yBACX/rH,KAAKu2D,QAAUv2D,KAAKu2D,OAAO6/B,eAAe,CAACp9D,MAA4B,IAArB4wB,IAA4B,GAAO,GACrF5pD,KAAKu2D,QAAUv2D,KAAKu2D,OAAOqjC,WAC/B,CACA,OAAO,CAAI,IAEX,GAAExuF,YAAYpL,KAAKwiB,SAAShgB,IAAI,YAAcxC,KAAKspI,2BACnDtpI,KAAKspI,yBAA2B,IAAI,0BAA8B,CAAC58G,QAAS1sB,OAEpF,IAAG,GAAM,GAET,8BAAiC,WAC7BA,KAAK+mD,WACC/mD,KAAK0pD,WAAa1pD,KAAK0pD,UAAUhqD,KAAK8C,IAAI,mBAC5CxC,KAAKuL,QAAQ,sBACrB,IAAG,GAAM,GAET,QAAY,SAAS,WACjB,CAAC,WAAW8G,SAAS2O,IACjBjd,OAAOsG,iBAAiB2W,GAAQlP,IAC5B3W,SAASouI,cAAgB,WACrB,SAAUz3H,EAAEmtH,SAAWntH,EAAE03H,UAAY13H,EAAEtG,SAAW,GAAUjZ,WAAauf,EAAEktH,UAAYltH,EAAEtG,SAAW,GAAUhZ,UAAYsf,EAAEtG,SAAW,GAAUjZ,UACrJ,IACF,IAEN,CAAC,SAAS8f,SAAS2O,IACfjd,OAAOsG,iBAAiB2W,GAAQlP,IAC5B3W,SAASouI,cAAgB,WACrB,OAAO,CACX,IACF,IAENvpI,KAAK0zB,MAAQ,IAAI1zB,KAAKypI,MACtBzpI,KAAK0zB,MAAM4hE,cAAct1F,KAAK0pI,aAAe,IAAI1pI,KAAK2pI,aACtD3pI,KAAK0zB,MAAM4hE,cAAct1F,KAAK4pI,aAAe,IAAI5pI,KAAK6pI,aACtD7pI,KAAK0zB,MAAMg3F,6BAEX1qH,KAAK8pI,WAAa9pI,KAAK6vC,WAAW3gB,SAAS,QACnClvB,KAAK+pI,UAAW,CAACj2G,MAAO9zB,KAAK0pI,eACrC1pI,KAAK40H,UAAY50H,KAAK8vC,YAAY5gB,SAAS,YACnClvB,KAAKgqI,mBACbhqI,KAAKiqI,UAAYjqI,KAAK8vC,YAAY5gB,SAAS,YACnClvB,KAAKkqI,mBACblqI,KAAKs7H,YAAct7H,KAAK8vC,YAAY5gB,SAAS,cACrClvB,KAAKmqI,qBACbnqI,KAAKwoI,iBAAmBxoI,KAAK8vC,YAAY5gB,SAAS,mBAC1ClvB,KAAKoqI,qBAEbpqI,KAAKqjB,GAAG,kBAAkB,SAAUjM,GAC3BpX,KAAKqqI,sBACNrqI,KAAKqqI,oBAAsB,IAAIrqI,KAAKsqI,kBACxCtqI,KAAKqqI,oBAAoB37G,KAAKtX,EAClC,GAAGpX,MAEHA,KAAKqjB,GAAG,kBAAkB,WACtB,GAAIrjB,KAAKwC,IAAI,WAAY,CACrB,IAAIqrB,EAAO7tB,KAAK8pI,WAAW9Z,YACvBniG,GAAQA,EAAKiG,MAAMtxB,IAAI,aACvBqrB,EAAKoV,QAAQwrD,gBACyB,IAAlC5gE,EAAKiG,MAAMtxB,IAAI,gBACfqrB,EAAKoV,QAAQyuE,OAAOwsB,eAEhC,CACJ,GAAGl+H,MAEHA,KAAKqjB,GAAG,oBAAoB,WACxBrjB,KAAK8pI,WAAW5uG,gBACpB,GAAGl7B,MAEHA,KAAKqjB,GAAG,cAAc,WAClBrjB,KAAK8pI,WAAW7uG,WACpB,GAAGj7B,MAEHA,KAAKqjB,GAAG,kBAAkB,WACtBrjB,KAAK8pI,WAAWhvG,cACpB,GAAG96B,MAEHA,KAAKqjB,GAAG,sBAAsB,SAAUxY,EAAI6hB,GACxC1sB,KAAK8pI,WAAW1uG,mBAAmB1O,EACvC,GAAG1sB,MAEHA,KAAKqjB,GAAG,sBAAsB,WAC1BrjB,KAAK8pI,WAAW1Y,kBACpB,GAAGpxH,MAEHA,KAAKqjB,GAAG,gBAAgB,WACpBrjB,KAAKg/F,cAAcptE,cACnB5xB,KAAK8pI,WAAWl4G,aACpB,GAAG5xB,KACP,GAAG,IAEH,YCttYA,IAAI,GAAM,OACN,GAAY,GAAI7O,UAChB,GAAY,GAAI0N,UAAU0rI,UAC1B,GAAQ,GAAIt3H,MACZ,GAAI,GAAItV,EACR,GAAM,GAAIq4B,IACV,GAAU,GAAIt3B,QACd,GAAI,GAAId,EACR,GAAS,GAAM8iB,OAEnB,mBAAyB,oBAAwB,CAC7CqQ,UAAW,0BACXvD,SAAU,GAAUg9G,eACpB18G,YAAa,mBACbG,YAAa,CACT4kF,kBAAkB,EAClBzpF,MAAO,uBAGX0T,YAAa,GAAU7lC,aAAaI,yBAEpC45B,OAAQ,CACJ,yCAA0C,gBAC1C,oBAAqB,QACrB,oBAAqB,SACrB,4BAA6B,oBAC7B,sBAAuB,SAG3B1C,YAAa,WACTvuB,KAAKN,KAAK2jB,GAAG,eAAgBrjB,KAAKyqI,aAAczqI,MAChDA,KAAKrC,EAAE,gDAAgD0lB,GAAG,SAAS,KAC/DrjB,KAAK0qI,kBAAkB,GAE/B,EAEA17G,OAAQ,SAAUhwB,GACdgB,KAAK2qI,iBACL3qI,KAAKN,KAAKqgB,IAAI,QAAQ,WACtB/gB,IAAYA,EAAU,CAAC,GACvB,IAAIooB,EAAW,sBACLpoB,EAAQkZ,IAiBlB,OAhBAlY,KAAKrC,EAAE,eAAe2T,OAA2B,IAApB8V,EAASnlB,QACtCjC,KAAKrC,EAAE,iBAAiB4T,OAA2B,IAApB6V,EAASnlB,QACxCjC,KAAKrC,EAAE,oCAAoCqd,QAC3C,GAAElb,KAAKsnB,GAAWsF,IACd1sB,KAAKrC,EAAE,oCAAoCkP,OACvC7M,KAAKs2C,kBAAkB5pB,GAAS,IAEpCtF,EAASnlB,QACTjC,KAAKu2C,YAAYnvB,EAAS,IAC9BpnB,KAAKrC,EAAE,gEAAgE28B,SAAS,CAC5EC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACPC,UAAW,SAER36B,IACX,EAEA0qI,iBAAkB,WACd,IAAItX,EAAapzH,KAAK4qI,sBACtB5qI,KAAKrC,EAAE,gCAAgC23G,YAAY,QACnDt1G,KAAKrC,EAAE,UAAUoP,YAAY,kBAAmBqmH,GAChDpzH,KAAKrC,EAAE,UAAUoP,YAAY,mBAAoBqmH,EACrD,EAEAwX,oBAAqB,WACjB,MAA8D,SAA1D5qI,KAAKrC,EAAE,gCAAgC2H,IAAI,UAInD,EAEAulI,SAAU,WACN,IAAIltF,EAAS,GAAE9rC,OAAO7R,KAAKrC,EAAE,oCAAoC4P,OACjE,GAAIowC,EAAQ,CACJ39C,KAAK4qI,uBACL5qI,KAAK0qI,mBACT1qI,KAAKrC,EAAE,mBAAmBgC,KAAK,IACTK,KAAKrC,EAAE,6BAA6B4P,MAClCvN,KAAKrC,EAAE,+BAA+B4P,MAC9DvN,KAAKrC,EAAE,6CAA6C+wB,OACpD1uB,KAAK8qI,yBAAyBntF,EAClC,CACJ,EAEAtW,SAAU,WACN,GAAIrnC,KAAK0sB,QAAS,CACd,IAAI7mB,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKN,KAAKqgB,IAAI,QAASla,EAC3B,CACJ,EAEA4kI,aAAc,WACV,IAAI5kI,EAAQ7F,KAAKN,KAAK8C,IAAI,SAC1BxC,KAAKD,IAAIP,KAAK,aAAcqG,EAChC,EAEAgyB,MAAO,SAAUhtB,GACyB,KAAlC7K,KAAKrC,EAAE,iBAAiB4P,MACxBvN,KAAKrC,EAAE,eAAewC,SAAS,eAE/BH,KAAKrC,EAAE,eAAeuC,YAAY,eAClC2K,EAAGW,UAAY,GAAUlZ,WACzB0N,KAAK6qI,UACb,EAEAC,yBAA0B,SAAUntF,GAChC39C,KAAK0sB,QAAQK,WAAWqvB,MAAMG,MAAM,EAAU,KAAMv8C,KAAK+qI,oBAAoBziI,KAAKtI,MAAOA,KAAKgrI,mBAAmB1iI,KAAKtI,MAC1H,EAEAgrI,mBAAoB,SAAUj9H,GAC1B/N,KAAK2qI,iBACL3qI,KAAKrC,EAAE,eAAegC,KAAK,IAC3BK,KAAKrC,EAAE,kBAAkB2E,KAAK,aAAiB,uBAAwB,CAAC,GAAEyL,GAAOvO,KAAK,UAC1F,EAEAmrI,eAAgB,WACZ3qI,KAAKrC,EAAE,6CAA6CmxB,MACxD,EAEAi8G,oBAAqB,SAAUlrF,GAC3B,GAAEA,GAAQhgD,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACpC,GAAI,GAAEA,GAAM1B,KAAK,UAAY,GAAQ02B,GAAGy4C,WAAY,CAChD,IAAIz2D,EAAM,GAAEhX,GAAM1B,KAAK,OACvBQ,KAAKirI,qBAAqB/yH,EAC9B,KAEJlY,KAAK2qI,gBACT,EAEAM,qBAAsB,SAAU/yH,GAC5B,IAAI6d,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAI2B,IAC1B/E,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGu6C,WAAYpgE,KAAM,GAAQ6lB,GAAGy4C,aAChE3uE,KAAK0sB,QAAQiK,WAAWZ,EAAI/1B,KAAKkrI,cAAc5iI,KAAKtI,MAAOA,KAAKgrI,mBAAmB1iI,KAAKtI,MAC5F,EAEAkrI,cAAe,SAAUrrF,GACrB,GAAEA,GAAQhgD,KAAK,kBAAkBC,MAAK,CAAC4C,EAAKxB,KACxC,IAAI0M,EAAQ,GAAE1M,GACd,GAAgC,eAA3B0M,EAAMpO,KAAK,aAAyD,WAAvBoO,EAAMpO,KAAK,QAAuB,CAChF,IAAI0Y,EAAM,GAAE2nC,GAAQrgD,KAAK,QACzBQ,KAAKmrI,kBAAkBjzH,EAC3B,IAER,EAEAizH,kBAAmB,SAAUjzH,GACzB,IAAI6d,EAAK,GAAI,CAAClyB,KAAM,MAAO0S,GAAI2B,IAAM/E,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGy6C,YAAatgE,KAAM,GAAQ6lB,GAAGy4C,aACjG3uE,KAAK0sB,QAAQiK,WAAWZ,GAAK8pB,IACzB7/C,KAAKrC,EAAE,eAAegC,KAAK,IAC3B,GAAEkgD,GAAQhgD,KAAK,cAAcC,MAAK,CAAC4C,EAAKxB,KACpC,IAAI0M,EAAQ,GAAE1M,GACVnC,EAAO6O,EAAMpO,KAAK,QAClB0Y,EAAMtK,EAAMpO,KAAK,OACjB4rI,EAAkB,GAAE,GAAUC,wBAAwB,CAACtsI,KAAMA,EAAMmZ,IAAKA,EAAKrS,MAAO7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,YAC9G8oC,EAAS,GAAO1lC,iBAAiB7G,GACrCqsI,EAAgBvrI,KAAK,kBAAkBoF,UAAUqmC,EAAQ,IACzD8/F,EAAgB/hI,SAASrJ,KAAKrC,EAAE,sCAAsC,IAE1EqC,KAAKrC,EAAE,kBAAkB2E,KAAK,aAAiB,mCAAoC,CAAC,GAAEu9C,GAAQhgD,KAAK,cAAcoC,OAAQjC,KAAK0sB,QAAQlqB,IAAI,SAAS,GAE3J,EAEA+zC,YAAa,SAAU7pB,GACnB1sB,KAAK0sB,QAAUA,EACf1sB,KAAKrC,EAAE,sDACFqT,YAAYhR,KAAKs2C,kBAAkB5pB,IACxC1sB,KAAKqnC,UACT,EAEAiP,kBAAmB,SAAU5pB,GAEzB,OADY,GAAE,GAAU4+G,uBAAuB,CAACpzH,IAAKwU,EAAQlqB,IAAI,SAErE,EAEAi0C,cAAe,SAAU5rC,GACrB,IAAI+C,EAAQ,GAAE/C,EAAG4C,QAAQstB,QAAQ,sBAC7BrO,EAAU,gBAAoB9e,EAAMlO,KAAK,QAC7CM,KAAKu2C,YAAY7pB,EACrB,EAEA6+G,kBAAmB,SAAU1gI,GACzB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,uBAC/B7iB,EAAMwsB,EAAQhlC,KAAK,OACnBX,EAAO2lC,EAAQhlC,KAAK,QACpB8rI,EAAa,GAAI,CAAC3nI,KAAM,MAAO0S,GAAI2B,IAC9B/E,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAGu6C,aACvCzwE,KAAK0sB,QAAQiK,WAAW60G,GAAa9hD,IACjC,IAAI+hD,EAAe,GAAE/hD,GACjBzkC,EAAcwmF,EAAa5rI,KAAK,kCAAkCyC,OAClE6zE,EAAUs1D,EAAa5rI,KAAK,gCAAgCyC,OAC5DkwF,EAAai5C,EAAa5rI,KAAK,4BAA4ByC,OAC3DopI,EAAkB,CAACxzH,IAAKA,EAAKnZ,KAAMA,EAAMo3E,QAASA,EAASlxB,YAAaA,EAAautC,WAAYA,GACrGxyF,KAAK2rI,eAAiB3rI,KAAKkvB,SAAS,uBAAwB,gBACxD,CAAC4E,MAAO9zB,KAAM0rI,gBAAiBA,EAAiB58H,GAAI9O,KAAKrC,EAAE,mBAAmB,IAAG,GAE7F,IAGJ,gBAAsB,oBAAwB,CAC1CozB,UAAW,0BACXvD,SAAU,GAAUo+G,gCAEpB36G,OAAQ,CACJ,uBAAwB,YAG5B1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAK0rI,gBAAkB1sI,EAAQ0sI,gBAC/B1rI,KAAKD,IAAIJ,KAAKK,KAAKwtB,SAASxtB,KAAK0rI,iBACrC,EAEA18G,OAAQ,SAAUhwB,GAElB,EAEA6sI,SAAU,WACN,IAAI52G,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAa54D,KAAK0rI,gBAAgBxzH,KACtE+c,EAAQlV,IAAI,cAAc,GAC1BkV,EAAQm/C,gBACRn/C,EAAQ++C,aAAa,MAAM,KACvB/+C,EAAQo/C,aACRp/C,EAAQo+C,YACRp+C,EAAQogD,aAAa,IAEzBpgD,EAAQ1pB,QAAQ,YAAa0pB,EACjC,IAGJ,aAAmB9T,SAASC,MAAMpX,OAAO,CAErC2X,WAAY,SAAU3iB,GAClBgB,KAAK0sB,QAAU1tB,EAAQ0tB,OAC3B,EAEAo/G,mBAAoB,WAChB,IACIC,EAAS,GAAI,CAACloI,KAAM,MAAO0S,GAAI,qBAAyBpD,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG81G,MAAQ,eAClGhsI,KAAK0sB,QAAQiK,WAAWo1G,EAAQ/rI,KAAKisI,qBACzC,EAEAA,qBAAsB,SAAUC,GAC5B,IACIC,EADU,GAAED,GACMrsI,KAAK,cAAc,GAAQq2B,GAAGk2G,iBAChDC,EAAmB,GACvBF,EAAQrsI,MAAK,CAAC4C,EAAKgX,KACf,IAAI2zC,EAAS,GAAE3zC,GACa,WAAxB2zC,EAAO7tD,KAAK,SACZ6sI,EAAiBjrI,KAAK,CAAC2Y,IAAKszC,EAAO7tD,KAAK,OAAQoa,MAAOyzC,EAAO7tD,KAAK,UAAU,GAEzF,IAGJ,sBAA4B,oBAAwB,CAChDuxB,UAAW,GAGXE,OAAQ,CAER,EAEA1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1tB,EAAQ0tB,OAC3B,EAEAsC,OAAQ,WAER,EAEAsD,OAAQ,SAAUD,GAClB,IAGJ,uBAA6B,oBAAwB,CACjDtB,UAAW,GAGXE,OAAQ,CAER,EAEA1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKssI,cAAgB,EACzB,EAEAt9G,OAAQ,WAER,EAEAsD,OAAQ,SAAUD,GACdryB,KAAKssI,cAAgB,GACrB,IAAIC,EAAY,GAAI,CAACh2H,GAAG,mBAAoB1S,KAAM,QAC7CsP,EAAE,QAAS,CAAC8iB,MAAO,GAAQC,GAAG81G,MAAQ,eACtC74H,EAAE,IAAK,CAAC8iB,MAAO,GAAQC,GAAGk2G,MAAOvoI,KAAM,SACvCsP,EAAE,QAAS,CAAC4G,IAAK,YAAalW,KAAK,WACnCsP,EAAE,SAASgS,EAAE,GAAQ+Q,GAAG81G,MAAQ,cAAc31G,KAAKA,KACpDhE,EAAM4yB,aACNsnF,EAAUp5H,EAAE,QAAS,CAAC4G,IAAK,gBACtB5G,EAAE,SAASgS,EAAEkN,EAAM4yB,aAAa5uB,KAAKA,KAC1ChE,EAAMtzB,MACNwtI,EAAUp5H,EAAE,QAAS,CAAC4G,IAAK,SACtB5G,EAAE,SAASgS,EAAEkN,EAAMtzB,MAAMs3B,KAAKA,KACnChE,EAAMyB,OACNy4G,EAAUp5H,EAAE,QAAS,CAAC4G,IAAK,UACtB5G,EAAE,SAASgS,EAAEkN,EAAMyB,OAAOuC,KAAKA,KACpChE,EAAMm6G,UACND,EAAUp5H,EAAE,QAAS,CAAC4G,IAAK,aACtB5G,EAAE,SAASgS,EAAEkN,EAAMm6G,UAAUn2G,KAAKA,KAC3Cr2B,KAAK0sB,QAAQiK,WAAW41G,EAAWvsI,KAAKysI,WAAWnkI,KAAKtI,MAC5D,EAEAysI,WAAY,SAAUvkI,GAClB,IAAI65E,EAAU,GAAE75E,GACH,GAAE65E,EAAQliF,KAAK,yBACrBC,MAAK,CAAC4C,EAAKxO,KACd,IAAIw4I,EAAQ,GAAEx4I,GAEVkjB,EAAQ,CAACc,IADEw0H,EAAMltI,KAAK,QAERktI,EAAM/+G,WACZ7tB,MAAK,CAAC4C,EAAKmiH,KACnB,IAAI8nB,EAAY,GAAE9nB,GACd+nB,EAAgBD,EAAU,GAAGn6H,QAAQ3Q,QAAQ,KAAM,KACnDgrI,EAAiBF,EAAUrqI,OAC/B,GAAE0H,OAAOoN,EAAO,CAAC,CAACw1H,GAAgBC,GAAgB,IAEtD7sI,KAAKssI,cAAclrI,KAAKgW,EAAM,GAEtC,IAGJ,QAAY,SAAS,WACjBpX,KAAK8sI,YAAc9sI,KAAKgwC,WAAW9gB,SAAS,mBACxClvB,KAAK+sI,gBAGb,GAAG,IAEH,YCvVA,IAAI,GAAM,OACN,GAAY,GAAI57I,UAChB,GAAY,GAAI0N,UAAU0Y,SAC1B,GAAQ,GAAItE,MACZ,GAAI,GAAItV,EACR,GAAU,GAAIe,QACd,GAAI,GAAId,EACR,GAAS,GAAM8iB,OAInB,WAAiBS,SAASC,MAAMpX,OAAO,CACnCqX,SAAU,CACN4hE,QAAQ,EACRioB,SAAS,EACTp3F,UAAW,GAGf6N,WAAY,SAAUvK,EAAOpY,GACzBgB,KAAKi1B,QAAUj2B,EAAQi2B,QACvBj1B,KAAKkX,QAAUlY,EAAQkY,QACvBlX,KAAK4J,GAAK5J,KAAKkX,QAAQ1U,IAAI,aAC3BxC,KAAK+f,IAAI,YAAa/f,KAAKkX,QAAQ1U,IAAI,cACvCxC,KAAK0sB,QAAU1sB,KAAKi1B,QAAQvI,QAC5B1sB,KAAK40B,UAAY,IAAI,mBAAuB,CAACd,MAAO9zB,OACpDA,KAAKi1B,QAAQ5R,GAAG,UAAWrjB,KAAKwxD,QAASxxD,MACzCA,KAAKkX,QAAQmM,GAAG,2BAA4BrjB,KAAKgtI,iBAAkBhtI,KACvE,EAEAgtI,iBAAkB,WACVhtI,KAAKkX,QAAQ1U,IAAI,aAAexC,KAAKkX,QAAQ1U,IAAI,YAAYP,OAC7DjC,KAAKkX,QAAQ1U,IAAI,YAAY6P,SAASyF,IAClC,IAAIukG,EAAiBvkG,EAAQrK,QAAU,GACnC7D,EAAKyyG,EAAe1pG,MAAM,YAC1BuF,EAAMmkG,EAAe1pG,MAAM,YAE3B0pG,EADAzyG,EACiBA,EAAG,GAAGvG,MAAM,GACxB6U,EACYA,EAAI,GAAG7U,MAAM,GAEb,GACjBuG,EACI5J,KAAKi1B,QAAQ0+C,QACT0oC,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,MAC5CxC,KAAK40B,UAAUC,oBAEf70B,KAAKwxD,UAEJxxD,KAAKi1B,QAAQzyB,IAAI,gBAClBxC,KAAK48G,iBACL58G,KAAK48G,iBAAiBr0F,MAAK,KACnB8zF,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,MAC5CxC,KAAK40B,UAAUC,oBAEf70B,KAAKwxD,UACTxxD,KAAK48G,iBAAmB,IAAI,KAIhC58G,KAAK48G,iBAAmB,IAAI,GAAEv1G,SAC9BrH,KAAKi1B,QAAQo+C,WAAU,KACfgpC,IAAmBr8G,KAAKi1B,QAAQ0+C,QAAQnxE,IAAI,MAC5CxC,KAAK40B,UAAUC,oBAEf70B,KAAKwxD,UACTxxD,KAAK48G,iBAAiBv0G,SAAS,MAIpC6P,GAAOmkG,IAAmBr8G,KAAK0sB,QAAQlqB,IAAI,OAClDxC,KAAK40B,UAAUC,oBAGf70B,KAAKwxD,SAAS,IAGtBxxD,KAAKwxD,SACb,IAGJ,gBAAsBrwC,SAASm6C,WAAWtxD,OAAO,CAC7C8pB,MAAO,aAGX,mBAAyB,uBAA2B,CAChDnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKqjB,GAAG,MAAOrjB,KAAKitI,eAAgBjtI,KACxC,EAEAitI,eAAgB,SAAUn1H,GACtB,gBAAoBA,EACxB,IAGJ,YAAkB,uBAA2B,CACzCid,WAAY,YACZpT,WAAY,WACR3hB,KAAKo1F,YAAc,GACnBp1F,KAAKqjB,GAAG,MAAO,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,QACtDA,KAAKqjB,GAAG,SAAU,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,UAC7D,EAEAs1F,cAAe,SAAUzrC,GACrB7pD,KAAKo1F,YAAYh0F,KAAKyoD,EAC1B,EAEAwrC,oBAAqB,SAAUr0E,EAAOiU,GAClC,GAAEn1B,KAAKE,KAAKo1F,aAAa,SAAUvrC,GAC/BA,EAAW5xB,OAAOhD,EAASjU,EAC/B,GACJ,IAGJ,gBAAsB,0BAA8B,CAChD+P,UAAW,+BACXjD,YAAa,sBACbwG,eAAgB,iBAChBrG,YAAa,CAAC7E,MAAO,aACrBoE,SAAU,GAAU0/G,eAEpB3+G,YAAa,WACTvuB,KAAKmtI,eAAiB,KACtBntI,KAAKw0B,cAAgB,KACrBx0B,KAAK8zB,MAAMzQ,GAAG,MAAOrjB,KAAKitI,eAAgBjtI,MAC1CA,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKs2G,sBAAuBt2G,MAC3DA,KAAK8zB,MAAMzQ,GAAG,UAAWrjB,KAAKotI,iBAAkBptI,MAChD,eAAmB,eAAgBA,KAAKy8F,oBAAqBz8F,MAC7DA,KAAK+tB,aAAa1K,GAAG,cAAerjB,KAAK6yB,UAAUvqB,KAAKtI,OACxDA,KAAKrC,EAAE,SAAS0lB,GAAG,QAASrjB,KAAK6xB,aAAavpB,KAAKtI,MACvD,EAEAgvB,OAAQ,SAAUhwB,IACTA,EAAQm6B,OAASn5B,KAAKmtI,iBACvBntI,KAAKmtI,eAAer5G,MAAM/T,IAAI,UAAU,GACxC/f,KAAKmtI,eAAiB,OAEP,SAAlBnuI,EAAQm6B,OAAsC,oBAAlBn6B,EAAQm6B,OAAiD,oBAAlBn6B,EAAQm6B,OAAiD,yBAAlBn6B,EAAQm6B,OAAoCn6B,EAAQ22B,cAAkC,SAAlB32B,EAAQm6B,QAAqBn5B,KAAK4xB,aACrN,EAEAq7G,eAAgB,SAAUn1H,GACtB9X,KAAKkvB,SAASpX,EAAQlO,GAAIkO,EAAQ8c,WAClC50B,KAAKqtI,sBAAsBv1H,EAC/B,EAEAs1H,iBAAkB,SAAUt1H,EAAS9Y,GACjCA,EAAUA,GAAW,CAAC,EAClBgB,KAAKmtI,iBAAmBntI,KAAKivB,MAAMnX,EAAQlO,MAC3C5J,KAAKmtI,eAAiB,MAE1BntI,KAAKovB,YAAYtX,EAAQlO,GAAI5K,GAC7BgB,KAAK6uB,iBACT,EAEAkD,WAAY,SAAUnoB,GAClB5J,KAAKiyB,uBACL,IAAIV,EAAavxB,KAAKrC,EAAE,uBAAuBiM,EAAG,MAC9C2nB,EAAWtvB,OACXjC,KAAK8xB,aAAeloB,GAEpB2nB,EAAavxB,KAAKrC,EAAE,sBAAsBu0B,QAC1ClyB,KAAK8xB,aAAeP,EAAW7xB,KAAK,OAExC6xB,EAAW1xB,KAAK,sBAAsBM,SAAS,WACnD,EAEA8xB,qBAAsB,SAAUpnB,GAC5B7K,KAAK8xB,aAAe,KACpB9xB,KAAKrC,EAAE,uBAAuBuC,YAAY,YAC1CF,KAAKrC,EAAE,wBAAwBuC,YAAY,WAC/C,EAEAyxB,eAAgB,SAAU9gB,GACtB,IAAIgd,EACAhd,EAAUkqB,QAAQ,wBAAwB94B,QAC1CjC,KAAK4xB,cACL5xB,KAAKrC,EAAE,qBAAqBuC,YAAY,UACpC2Q,EAAU7D,SAAS,eACnB6gB,EAAO,oBAAwBhd,EAAUnR,KAAK,OAC9CmuB,GAAQA,EAAK5jB,KAAK,CAACorB,OAAQ,mBAAuB,QAASM,cAAc,IACzE9kB,EAAU1Q,SAAS,WAEnB0Q,EAAU7D,SAAS,oBACnB6gB,EAAO,gBAAoBhd,EAAUnR,KAAK,YAAYg0B,MAAMlxB,IAAI,gBAAoBqO,EAAUnR,KAAK,YAAY41B,SAAS9yB,IAAIqO,EAAUnR,KAAK,QAAQ61B,SACnJ1H,IAASA,EAAOA,EAAK+G,WACrB/G,GAAQ,uBAA2BA,EAAM,CAAC8H,cAAc,EAAON,OAAQ,mBAAuB,UAC9FxkB,EAAU1Q,SAAS,WAEnB0Q,EAAU7D,SAAS,iBACnB6D,EAAUpF,SAIdoF,EAAUhR,KAAK,sBAAsB4L,OAE7C,EAEA6hI,mBAAoB,SAAUpsI,EAAMqW,GAChC,IAAIsW,EAAO7tB,KAAKivB,MAAM/tB,EAAK0I,IAC3B,GAAIikB,GAAQ3sB,EAAKsB,IAAI,aAAc,CAC/BqrB,EAAK9tB,IAAI+K,SACT,IAAI4vD,EAAQnjD,EAASnT,QAAQlD,GACf,IAAVw5D,EACA16D,KAAKrC,EAAE,kBAAkBkP,OAAOghB,EAAK9tB,KAErCC,KAAKrC,EAAE,iBAAiBq2B,IAAI0mC,GAAOtnC,OAAOvF,EAAK9tB,KAEnD,IAAIwtI,EAAW1/G,EAAK9tB,IAAI49E,KAAK,iBACzB6vD,EAAW3/G,EAAK9tB,IAAIk+G,KAAK,iBACzBtvB,EAAc9gE,EAAK9tB,IAAIL,KAAK,eAC5B,GAAI6tI,EAAStrI,OAAQ,CACMsrI,EAAS7tI,KAAK,iBACZivF,GACrB9gE,EAAK9tB,IAAIF,KAAK,0BAA0BK,YAAY,SAC5D,MAEI2tB,EAAK9tB,IAAIF,KAAK,0BAA0BK,YAAY,UACxD,GAAIstI,EAASvrI,OAAQ,CACMurI,EAAS9tI,KAAK,iBACZivF,EACrB6+C,EAAS3tI,KAAK,0BAA0BM,SAAS,UAGjDqtI,EAAS3tI,KAAK,0BAA0BK,YAAY,SAC5D,MAEI2tB,EAAK9tB,IAAIF,KAAK,0BAA0BK,YAAY,SAChE,CACJ,EAEAutI,gBAAiB,WACb,+BAAmC/gH,IAC/B,IAAInV,EAAW,GAAEF,MAAMqV,EAAQ6P,gBAAgBi9B,QAC/C,GAAE15D,KAAKyX,GAAYO,IACf,IAAI0nF,EAAQ1nF,EAAQZ,QAAQ1U,IAAI,SAC5B29F,EAAaroF,EAAQZ,QAAQ1U,IAAI,cACjCkrI,EAAqB51H,EAAQZ,QAAQ1U,IAAI,sBACzCtO,EAAOw4B,EAAQgH,MAAMgC,QAAQ5d,EAAQmd,SACzCnd,EAAQZ,QAAQ6I,IAAI,aAAa,GACjC7rB,EAAKo5G,WAAW9N,EAAO,YAAaW,EAAYutC,EACnD,GAAE,GAEX,EAEAjxC,oBAAqB,SAAUr1E,GAC3BpnB,KAAKD,IAAIP,KAAK,iBAAkB4nB,EAASgqB,UAAUnvC,OAAS,EAChE,EAEAorI,sBAAuB,SAAUnsI,GAClBlB,KAAKivB,MAAM/tB,EAAK0I,KAG3B5J,KAAKstI,mBAAmBpsI,EAAMlB,KAAK8zB,MACvC,EAEAwiF,sBAAuB,SAAUx+F,GAC7B,GAAIA,EAAQtV,IAAI,UAAW,CACvB,IAAImrI,EAAmB3tI,KAAKmtI,eAC5BntI,KAAKmtI,eAAiBntI,KAAKivB,MAAMnX,EAAQlO,IACzC+jI,GAAoBA,EAAiB75G,MAAM/T,IAAI,UAAU,EAC7D,CACJ,IAGJ,mBAAyB,oBAAwB,CAC7CgR,UAAW,yBACXvD,SAAU,GAAU0yG,aACpBpjG,YAAa,GAAU7lC,aAAaiB,UAEpC+4B,OAAQ,CACJ,2BAA4B,eAGhC1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKi1B,QAAUj1B,KAAK8zB,MAAMmB,QAC1Bj1B,KAAKD,IAAIP,KAAK,UAAWQ,KAAK8zB,MAAMlqB,IACpC5J,KAAKD,IAAIP,KAAK,mBAAoBQ,KAAKi1B,QAAQzyB,IAAI,QACnDxC,KAAK4tI,oBACL5tI,KAAKw7E,kBACLx7E,KAAKm9B,aACLn9B,KAAK60B,oBACL70B,KAAKw9B,eACLx9B,KAAKohC,oBACLphC,KAAKszF,gBACLtzF,KAAKy7E,aACLz7E,KAAK8zB,MAAMzQ,GAAG,gBAAiBrjB,KAAKswG,mBAAoBtwG,MACxDA,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAKi1B,QAAQ5R,GAAG,cAAerjB,KAAK4tI,kBAAmB5tI,MACvDA,KAAKi1B,QAAQ5R,GAAG,oBAAqBrjB,KAAKw7E,gBAAiBx7E,MAC3DA,KAAK8zB,MAAM5c,QAAQmM,GAAG,mBAAoBrjB,KAAKszF,cAAetzF,KAClE,EAEAm9B,WAAY,WACR,IAAIjmB,EAAUlX,KAAK8zB,MAAM5c,QACrBsiE,EAAYtiE,EAAQ1U,IAAI,cAAgB0U,EAAQ8hF,cAAgBh5F,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQr8D,WAC7Gu2H,EAAe7tI,KAAKi1B,QAAQzyB,IAAI,QAChCg3E,IACAq0D,EAAer0D,EAAU70B,UAAY60B,EAAUthE,KAAOshE,EAAU5vE,IAAM5J,KAAK8zB,MAAM5c,QAAQ1U,IAAI,aACjGxC,KAAKrC,EAAE,eAAe2E,KAAKurI,EAC/B,EAEApyD,WAAY,WACRz7E,KAAKrC,EAAE,kCAAkC4T,QAAQvR,KAAKi1B,QAAQzyB,IAAI,eAAiBxC,KAAKi1B,QAAQzyB,IAAI,SAAWxC,KAAK0sB,QAAQixB,QAC5H39C,KAAKrC,EAAE,8BAA8B4T,OAAOvR,KAAKi1B,QAAQzyB,IAAI,SAAWxC,KAAK0sB,QAAQixB,OACzF,EAEAiwF,kBAAmB,WACf,IAAIC,EAAe7tI,KAAKi1B,QAAQzyB,IAAI,QAEpC,GADAxC,KAAKrC,EAAE,oBAAoB2E,KAAKurI,IAC3B7tI,KAAKi1B,QAAQzyB,IAAI,gBAClBxC,KAAKm9B,cACAn9B,KAAKi1B,QAAQzyB,IAAI,eAAe,CACjC,IAAIsrI,EAAiB,GAAOloI,iBAAiBioI,GAC7C7tI,KAAKrC,EAAE,kBAAkBsH,UAAU6oI,EAAgB9tI,KAAK88B,YAC5D,CAER,EAEA0+C,gBAAiB,WACbx7E,KAAKy7E,YACT,EAEA6X,cAAc,WACV,IAAIgY,EAAStrG,KAAK8zB,MAAM5c,QAAQ1U,IAAI,aACpCxC,KAAKrC,EAAE,gBAAgBoP,YAAY,UAAWu+F,GAC1CA,EACAtrG,KAAK0sB,QAAQ6P,gBAAgBq5D,IAAI51F,KAAK8zB,OAEtC9zB,KAAK0sB,QAAQ6P,gBAAgBrrB,OAAOlR,KAAK8zB,OAC7C,0CACJ,EAEAe,kBAAmB,WACf,IAAIjP,EAAM5lB,KAAK8zB,MAAM5c,QACrB,IAAK0O,EACD,OACJ,IAAI2rF,EAAW3rF,EAAIpjB,IAAI,QACnBsR,EAAY8R,EAAIpjB,IAAI,aACpBo9F,EAAoBh6E,EAAIpjB,IAAI,qBAC5BqvG,EAAYjsF,EAAIpjB,IAAI,UAAY,GAChCsvG,EAAalsF,EAAIpjB,IAAI,WAAa,GAClCuvG,EAAgBnsF,EAAIpjB,IAAI,cAAgB,GACxCoyE,EAAW,EAAuBhvD,EAAIpjB,IAAI,YAAc,aAAiB,2BAA4Bo9F,EAAkB39F,QAAQwvG,UAAa7rF,EAAIk6B,UAGpJ,GAFAl6B,EAAIpjB,IAAI,WAAaojB,EAAIpjB,IAAI,UAAUP,SAAW4vG,EAAYA,EAAUt4B,OAAO3zD,EAAIpjB,IAAI,YACvFxC,KAAK8zB,MAAM/T,IAAI,CAACjM,UAAWA,IACvB+9F,EAAU5vG,QAAU6vG,EAAW7vG,QAAU8vG,EAAc9vG,OAAQ,CAC/D,IAAIgwG,EAAgB,GAAE,kCACtB,GAAIJ,EAAU5vG,QAAU6vG,EAAW7vG,OAC/B2yE,EAAWq9B,EAAc3vG,KAAK,aAAiB,yCAA0C,CAACuvG,EAAU5vG,OAAS6vG,EAAW7vG,cACvH,CACD,GAAI4vG,EAAU5vG,OAAS,EAAG,CACtB,IAAIkwG,EAAa,EACjBN,EAAUx/F,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACnDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,mCAAoCuvG,EAAU5vG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAC5K,CACA,GAAIL,EAAW7vG,OAAS,EAAG,CACvB,IAAIkwG,EAAa,EACjBL,EAAWz/F,SAAS6oE,IAAOi3B,GAAYpwG,OAAOm5E,EAAEt2E,KAAI,IACpDgwE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,oCAAqCwvG,EAAW7vG,SAAWkwG,EAAa,EAAI,KAAK,GAAM38F,YAAY28F,KAAgB,IAC9K,CACIJ,EAAc9vG,OAAS,IACvB2yE,EAAWq9B,EAAc3vG,KAAK,qBAAyB,uCAAwCyvG,EAAc9vG,SAErH,CACAjC,KAAKrC,EAAE,aAAa2E,KAAK,IAAIuK,OAAO+nE,EACxC,MAEI50E,KAAKrC,EAAE,aAAa2E,KAAKsyE,GAE7B50E,KAAKD,IAAIwB,QAAQ,YAAa,CAACG,WAAY,KAC3C1B,KAAKrC,EAAE,kBAAkB2E,KAAK,GAAMgS,sBAAsBi9F,IACrD/xG,KAAK,QA5WI,CAACsU,GAAuB,GAAMG,gBAAgBH,GAAwC,SAA5B,sBAAmE,WAA5B,sBAA2E,SAAlC,OAAW,sBAAmC,wBA4WnL,CAAgBy9F,GACvC,EAEAjB,mBAAoB,WAChBtwG,KAAKD,IAAIF,KAAK,sBAAsBkN,YAAY,SAAU/M,KAAK8zB,MAAMtxB,IAAI,UAC7E,EAEAg7B,aAAc,WACV,IAEIxiC,EAFAkc,EAAUlX,KAAK8zB,MAAM5c,QACrBsiE,EAAYtiE,EAAQ1U,IAAI,cAAgB0U,EAAQ8hF,cAAgBh5F,KAAKi1B,QAAQ0+C,SAAW3zE,KAAKi1B,QAAQ0+C,QAAQr8D,WAEjH,GAAIkiE,EACA,GAAIA,EAAUluC,OAEV,GADAtwC,EAAQw+E,EAAU+yC,YAAcvsH,KAAK0sB,QAAQ8kD,cAAc4U,aAAa5M,EAAU5vE,IAC9E5O,EACAgF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,iBAE9C,CACD,IAAIzsB,EAAO,GAAQ6lB,GAAGy2B,mBAAqB,IAAM6sB,EAAU5vE,GAC3D5J,KAAKi1B,QAAQ83B,UAAUysB,EAAUluC,OAAQj7B,GAAO6yG,IAC5CloH,EAAQkoH,EACRljH,KAAK0sB,QAAQ8kD,cAAc+U,oBAAoB/M,EAAU5vE,GAAI4vE,EAAUluC,OAAQ43E,GAC/EljH,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YAAY,IAC5D,KACC,IAAIgxG,EAAiB,GAAOloI,iBAAiB4zE,EAAU70B,UAAY60B,EAAUthE,KAAOshE,EAAU5vE,IAC9F5J,KAAKrC,EAAE,kBAAkBsH,UAAU6oI,EAAgB9tI,KAAK88B,YAAY,GAE5E,KAEC,CACD,IAAIgxG,EAAiB,GAAOloI,iBAAiB4zE,EAAU70B,UAAY60B,EAAUthE,KAAOshE,EAAU5vE,IAC9F5J,KAAKrC,EAAE,kBAAkBsH,UAAU6oI,EAAgB9tI,KAAK88B,YAC5D,MAGA9hC,EAAQgF,KAAKi1B,QAAQ9vB,aACrBnF,KAAKrC,EAAE,kBAAkBsH,UAAUjK,EAAOgF,KAAK88B,YAEvD,EAEA21E,YAAa,WACT,IAAIv7F,EAAUlX,KAAK8zB,MAAM5c,QACrBhjB,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQ11B,KAAKi1B,SAC3Cj1B,KAAK8zB,MAAM5c,QAAQ6I,IAAI,aAAa,GACpC7rB,EAAKo5G,WAAWp2F,EAAQ1U,IAAI,aAAc,YAAa0U,EAAQ1U,IAAI,aAAc0U,EAAQ1U,IAAI,sBAC7FxC,KAAK8zB,MAAM/T,IAAI,UAAU,GACzB/f,KAAKi1B,QAAQ1pB,QAAQ,eAAgBvL,KAAKi1B,QAAS/d,EAAQ1U,IAAI,aACnE,EAEA4+B,kBAAmB,WACf,IAAIv7B,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKD,IAAIP,KAAK,aAAcqG,EAChC,IAIJ,2BAAiC,oBAAwB,CACrDkrB,UAAW,sDACXvD,SAAU,GAAUugH,uBAGxB,0BAA6B,WAC1B/tI,KAAKuX,SAAW,IAAI,mBAAuB,KAAM,CAACmV,QAAS1sB,OAC3DA,KAAKu8B,gBAAkB,IAAI,YAAgB,KAAM,CAAC7P,QAAS1sB,MAC9D,IAEA,QAAY,SAAS,WACjBA,KAAKuX,SAAW,IAAIvX,KAAKguI,SACzBhuI,KAAKiuI,cAAgBjuI,KAAK6vC,WAAW3gB,SAAS,WAC1ClvB,KAAKkuI,aAAc,CAACp6G,MAAO9zB,KAAKuX,WACpCvX,KAAK+tI,qBAAuB/tI,KAAK8vC,YAAY5gB,SAAS,uBAClDlvB,KAAKmuI,wBACb,GAAG,IAEH,YC7bA,IAAI,GAAM,OACN,GAAY,GAAIh9I,UAChB,GAAI,GAAIwM,EAEZ,QAAY,SAAS,WACjB,GAAEoG,QAAQsf,GAAG,WAAYxY,KAChBA,EAAGo0H,SAAWp0H,EAAG2+H,UAAY3+H,EAAGW,SAAW,GAAUjZ,WAAasY,EAAGm0H,UAAYn0H,EAAGW,SAAW,GAAUhZ,UAC1GwN,KAAKouI,cAAgB,KACrBpuI,KAAKquI,mBAAoB,EACzBxjI,EAAGa,kBACIb,EAAGW,SAAW,GAAUjZ,YAC/ByN,KAAKouI,eAAgB,EACrBvjI,EAAGa,kBAEP,IAAI0L,EAAQ,0BACZ,GAAIvM,EAAGW,UAAY,GAAU/Y,aAAe,mBAAuB,iBAAkB,CACjF,GAAI,qBAAyB,WAAWk7B,SAAS,SAAS1rB,OACtD,OACe,cAAfmV,EAAMrY,MAAwC,oBAAhBqY,EAAM+hB,OACpC/hB,EAAM6d,QAAQ1pB,QAAQ,YAAa6L,EAAM6d,QACjD,CACA,GAAI7d,EAAM+d,YAA6B,aAAf/d,EAAMrY,MAAsC,aAAfqY,EAAMrY,MAAsC,cAAfqY,EAAMrY,QAA0C,SAAhBqY,EAAM+hB,OAAoC,yBAAhB/hB,EAAM+hB,OAAoD,oBAAhB/hB,EAAM+hB,OAA+C,sBAAhB/hB,EAAM+hB,SACxNp1B,OAAOpG,EAAE,0BAA0BqP,SAAS,YACxCnC,EAAGo0H,UAAYp0H,EAAG2+H,QAAS,CAC5B,OAAQ3+H,EAAGW,SACP,KAAK,GACD4L,EAAM+d,UAAUrB,MAAMvoB,QAAQ,0BAC9B,MACJ,KAAK,GACD6L,EAAM+d,UAAUrB,MAAMvoB,QAAQ,4BAC9B,MACJ,KAAK,GACD6L,EAAM+d,UAAUrB,MAAMvoB,QAAQ,yBAC9B,MACJ,KAAK,GACD6L,EAAM+d,UAAUrB,MAAMvoB,QAAQ,6BAC9B,MACJ,KAAK,GACD6L,EAAM+d,UAAUrB,MAAMvoB,QAAQ,wBAC9B,MACJ,KAAK,GACD6L,EAAM+d,UAAUrB,MAAMvoB,QAAQ,2BAC9B,MACJ,KAAK,GAAU9Y,WACN,mBAAuB,kBACxB2kB,EAAM+d,UAAUrB,MAAMvoB,QAAQ,2BAG1CV,EAAGa,gBACP,CAER,IAEJ,GAAE3H,QAAQsf,GAAG,SAAUxY,IACbA,EAAGm0H,UAAYn0H,EAAGo0H,UACpBj/H,KAAKquI,kBAAoB,MACzBxjI,EAAGm0H,WAAan0H,EAAGo0H,UACnBj/H,KAAKouI,eAAgB,GACpBvjI,EAAGm0H,WACJh/H,KAAKouI,cAAgB,KAAI,IAGjCpuI,KAAKm8F,aAAe,SAAUn9F,GAC1BA,IAAYA,EAAU,CAAC,GACnBgB,KAAK48F,YAAYnuE,aACjBzuB,KAAKsuI,mBAAmBtvI,GAE5B,WAAe,aAAcA,GAC7BgB,KAAKkP,KAAKvR,EAAE,iBAAiBqwB,iBAAiB,SAClD,EAEAhuB,KAAKsuI,mBAAqB,SAAUtvI,GAChC,IAAI8F,EAAQ9E,KAAKkP,KAAKnP,IAAI+E,QACtBypI,EAAUzpI,GAAS,GAAUnT,aAC7B68I,EAAY1pI,EAAQ,GAAUnT,aAE9BknD,GADkB,GAAUhnD,WACjBmO,KAAK48F,YAAYl9F,KAAK8C,IAAI,aACrC45F,EAASp8F,KAAK48F,YAAYl9F,KAAK8C,IAAI,UAIvC,GAHAxC,KAAK48F,YAAYj/F,EAAE,mBAAmB4T,OAAOsnC,GAC7C74C,KAAK48F,YAAYj/F,EAAE,kBAAkB2T,OAAOunC,GAC5C74C,KAAK48F,YAAYj/F,EAAE,YAAYmxB,OAC3B0/G,GAAapyC,EAEb,YADAp8F,KAAK48F,YAAYl9F,KAAKqgB,IAAI,CAAC84B,UAAU,EAAOujD,QAAQ,IAGxD,IAAIqyC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAA6B,CAAC,EAC9BR,IAAaC,IAAapyC,GAC1BsyC,EAAc,KACdD,EAAe,KACRD,GACPE,EAAc5pI,EANE,GAMsB,GAAK,GAC3C2pI,EAAe,MAEfC,EAA6C,GAA9B5pI,EATC,GASuB,IAAU,EACjD2pI,EAA8C,GAA9B3pI,EAVA,GAUwB,IAAU,GAEjD+zC,IACD41F,EAAeF,EAAU,GAAK,IAElCI,EAAmBE,EAA4B,IAC/CD,EAAoBF,GAAeC,EAAmBE,GACtDC,EAA0B,OACtBN,IACAK,EAA4BF,EAAkC,KAAdD,EAAuB,IAAM,IAAoB,KAAdA,GAGnFE,EAAoB,KACpBA,EAAoBF,EAAcC,EAClC3uI,KAAKgvI,8BAA+B,EACpCD,EAA6B,CACzBniG,SAAW,WACXzT,MAAQ,EACR,UAAY,KAEXy1G,EAAoB,IAAO,KAC5BC,EAA4BD,EAC5B5uI,KAAK+vC,oBAAoBhwC,IAAIG,YAAY,sBAGzC2uI,EAA4B,IAC5B7uI,KAAK+vC,oBAAoBhwC,IAAII,SAAS,uBAI1CH,KAAKgvI,8BAA+B,EACpCD,EAA6B,CACzBniG,SAAW,SACX,UAAY,GAEhB5sC,KAAK+vC,oBAAoBhwC,IAAIG,YAAY,qBAG7CF,KAAK6uI,0BAA4BA,EAE5B7uI,KAAKkP,KAAKmmB,OAAO7yB,IAAI,mBACtBqsI,EAA4B,EAC5BD,EAAoBF,EAAcC,GAElCC,EAAoB,MACpBE,EAA0BF,GAG9B,IAAIK,GAAanqI,EAAQ4pI,GAAe,EAEpCQ,EAAYD,EAAYR,EAC5BzuI,KAAK48F,YAAYj/F,EAAE,kBAAkBoP,YAAY,SACvCqvF,KAAYmyC,GAAWW,EAAY,IAC7CH,EAA2BjqI,MAAQ+pI,EACnC7uI,KAAK40H,UAAU70H,IAAIgN,YAAY,yBAA0B6hI,GAAqB,KAC9E5uI,KAAK40H,UAAU70H,IAAIgN,YAAY,mBAAoB6hI,EAAoB,KACvE5uI,KAAK40H,UAAU70H,IAAIgN,YAAY,mBAAqB6hI,EAAoB,KAAOA,GAAqB,KACpG5uI,KAAK40H,UAAU70H,IAAIgN,YAAY,wBAA0B6hI,EAAoB,KAAQA,GAAqB,KAC1G5uI,KAAK40H,UAAU70H,IAAIgN,YAAY,iBAAkB6hI,EAAoB,KACrE5uI,KAAK4vC,WAAWpgB,aAAa,CACzB1qB,MAAO4pI,IAEX1uI,KAAK6vC,WAAWrgB,aAAa,CACzB1qB,MAAO6pI,IAEX3uI,KAAK8vC,YAAYtgB,aAAa,CAC1B1qB,MAAO8pI,IAEX5uI,KAAK+vC,oBAAoBvgB,aAAau/G,GACtC/uI,KAAKs7H,YAAY9rG,aAAa,CAC1B1qB,MAAOgqI,IAEX9uI,KAAK48F,YAAYptE,aAAa,CAAC1qB,MAAO2pI,GAC1C,EAEAzuI,KAAKqjB,GAAG,gBAAiBrjB,KAAKm8F,aAAcn8F,MAE5CA,KAAKkP,KAAKqpB,UAAU,QAAS,CAAC,GAE9Bv4B,KAAKkP,KAAKqpB,UAAU,QAAS,CACzBwb,MAAO,CAAEq2B,WAAY,QAGzBpqE,KAAKkP,KAAKqpB,UAAU,WAAY,CAC5BoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFwvB,KAAM,CAAE3sH,SAAU,MAClB4sH,aAAc,MAElB74E,OAAQ,OAGZv2D,KAAKkP,KAAKqpB,UAAU,cAAe,CAC/BoX,aAAc,KACdnW,QAAS,KACTua,MAAO,OAGX/zC,KAAKkP,KAAKqpB,UAAU,QAAS,CACzBoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFwvB,KAAM,CAAE1kG,MAAO,MACf2kG,aAAc,MAElB74E,OAAQ,OAGZ,IAAI84E,EAAyB,IAAIrvI,KAAKsvI,SAAS,yBAC3CC,EAA0B,IAAIvvI,KAAKsvI,SAAS,0BAC5CE,EAAsB,IAAIxvI,KAAKsvI,SAAS,sBAE5CtvI,KAAKkP,KAAKqpB,UAAU,mBAAoB,CACpCoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFwvB,KAAM,CACF5hE,iBAAkB,CACdnvC,KAAMixG,EACNl2G,MAAOo2G,IAGfH,aAAc,MAElB74E,OAAQ,OAGZv2D,KAAKutE,iBAAiB18C,UAAY,SAAUD,EAAM5xB,GAC9C,GAAsB,eAAlBA,EAAQm6B,MACR,MAAO,CACHiF,KAAMixG,EACNl2G,MAAOq2G,EAGnB,EAGA,IAAIC,EAAiB,IAAIzvI,KAAKsvI,SAAS,0BACnCI,EAAiB,IAAI1vI,KAAKsvI,SAAS,qBACnCK,EAAmB,IAAI3vI,KAAKsvI,SAAS,4BACrCM,EAAwB,IAAI5vI,KAAKsvI,SAAS,sBAC1CO,EAAmB,IAAI7vI,KAAKsvI,SAAS,wCACrCQ,EAAuB,IAAI9vI,KAAKsvI,SAAS,wBACzCS,EAA6B,IAAI/vI,KAAKsvI,SAAS,8BAC/CU,EAAuC,IAAIhwI,KAAKsvI,SAAS,wCACzDW,EAA4B,IAAIjwI,KAAKsvI,SAAS,uBAC9CY,EAA4B,IAAIlwI,KAAKsvI,SAAS,qCAElDtvI,KAAKkP,KAAKqpB,UAAU,WAAY,CAC5BoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFvhF,KAAM,CAAE9I,SAAU,MAClB6D,MAAO,CAAE6jE,oBAAqB,MAC9B3jE,cAAe,CAAC,EAChB+1G,aAAc,MAElB74E,OAAQ,OAGZv2D,KAAKkP,KAAKqpB,UAAU,SAAU,CAC1BoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFwvB,KAAM,CAAEgB,iBAAkB,MAC1Bf,aAAc,MAElB74E,OAAQ,OAGZv2D,KAAKkP,KAAKqpB,UAAU,WAAY,CAC5BoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFvhF,KAAM,CAAE7mB,SAAU,MAClB4hB,MAAO,CAAE40G,qBAAsB,MAC/B10G,cAAe,CAAC,EAChB+1G,aAAc,MAElB74E,OAAQ,OAGZv2D,KAAKkP,KAAKqpB,UAAU,YAAa,CAC7BoX,aAAc,KACdnW,QAAS,KACTmmF,KAAM,CACFvhF,KAAM,CAAE1K,MAAO,MACfyF,MAAO,CAAEqvG,iBAAkB,MAC3BnvG,cAAe,CAAC,EAChB+1G,aAAc,MAElB74E,OAAQ,OAIZv2D,KAAK8vC,YAAYjf,UAAY,SAAUD,EAAM5xB,GACzC,QAAsBoc,IAAlBpc,EAAQm6B,MAEZ,MAAuB,oBAAlBn6B,EAAQm6B,OAAmD,yBAAlBn6B,EAAQm6B,OAAwD,sBAAlBn6B,EAAQm6B,MACzF,CACHy7F,UAAW6a,EACXxF,UAAWgG,EACX3U,YAAaqU,GAGC,qBAAlB3wI,EAAQm6B,MACD,CAAEi3G,QAASR,GAEA,oBAAlB5wI,EAAQm6B,MACD,CAAEi3G,QAASN,GAEU,iBAA5B9wI,EAAQqxI,gBACD,CAAEA,gBAAiBH,GAC1BlxI,EAAQm2B,UACD,CACHy/F,UAAW6a,EACXxF,UAAWyF,EACXpU,YAAaqU,GAGC,sBAAlB3wI,EAAQm6B,OAAiCn6B,EAAQsxI,WAC1C,CAAEF,QAASP,QADtB,CAGJ,EAGA7vI,KAAK+vC,oBAAoBlf,UAAY,SAAUD,EAAM5xB,GACjD,QAA8Boc,IAA1Bpc,EAAQq6B,cAEZ,MAA8B,oBAA1Br6B,EAAQq6B,cACD,CAAE+2G,QAASL,GAEQ,8BAA1B/wI,EAAQq6B,cACD,CAAE+2G,QAASJ,GAEU,iBAA5BhxI,EAAQqxI,gBACD,CAAEA,gBAAiBH,QAD9B,CAEJ,EAEAlwI,KAAKkP,KAAK2pB,UAAU,SAGhB74B,KAAK+6C,aACL/6C,KAAK+6C,YAAYpZ,KAAK,mBAAmB,SAAUz5B,GAChC,OAAXA,GAAoBlI,KAAKonB,SAASnlB,OAE3BjC,KAAKkP,KAAKgqB,SAAS,UAC1Bl5B,KAAKkP,KAAK2pB,UAAU,aAFpB74B,KAAKkP,KAAK2pB,UAAU,QAI5B,GAAG74B,MAEHA,KAAK+6C,YAAYxd,MAAMljB,KAAKra,KAAK+6C,YAAYhkC,MAAMzO,KAAKtI,KAAK+6C,gBAExD/6C,KAAKonB,SAASnlB,OAEVjC,KAAKkP,KAAKgqB,SAAS,UACxBl5B,KAAKkP,KAAK2pB,UAAU,aAFpB74B,KAAKkP,KAAK2pB,UAAU,SAGxB,WAAe,sBAGvB,GAAG,IAEH,Y,gBC5WA,IAAI,GAAM,OACN,GAAY,GAAI1nC,UAChB,GAAQ,GAAI8hB,MACZ,GAAI,GAAItV,EACR,GAAY,GAAIkB,UAAUwuB,KAC1B,GAAU,GAAI3uB,QACd,GAAI,GAAId,EACR2yI,GAAY,GAAIryI,UAAUqyI,UAC1BC,GAAwB,GAAItyI,UAAUsyI,sBACtCC,GAAiB,GAAIvyI,UAAUuyI,eAC/BC,GAAgB,GAAIxyI,UAAUwyI,cAElC,QAAcvvH,SAASC,MAAMpX,OAAO,CAChCqmC,YAAa,MAEb1uB,WAAY,SAAUvK,EAAOpY,GACzBoY,EAAQA,GAAS,CAAC,EAClBpX,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKkoB,QAAU,CAAC,EAChBloB,KAAKkjE,MAAQljE,KAAK0sB,QAAQ4mC,MAAM4P,MAChCljE,KAAKi3G,aAAe,IAAI,gBAAoB,CAACnjF,MAAO9zB,OACpDA,KAAK2wI,cAAcv5H,EAAM8Q,SACzBloB,KAAK+f,IAAI,CACL7H,IAAKd,EAAMc,KAEnB,EAEAy4H,cAAe,SAAUzoH,GACrB,GAAKA,EAAL,CAEA,IAAK,IAAI0oH,KAAK5wI,KAAKkoB,QACVA,EAAQ0oH,KACT5wI,KAAK0sB,QAAQ4mC,MAAMu9E,cAAc,UAAY7wI,KAAKkoB,QAAQ0oH,GAAGtrF,QAAQtjD,mBAC9DhC,KAAKkoB,QAAQ0oH,IAG5B,IAAK,IAAIA,KAAK1oH,EAAS,CACnB,IAAIC,EAASnoB,KAAK8wI,UAAUF,GACxBh3H,EAAQsO,EAAQ0oH,GAAGh3H,MACvBA,GAASuO,EAAOpI,IAAI,QAASnG,EACjC,CAXU,CAYd,EAEAm3H,eAAgB50H,iBACZ,OAAKnc,KAAKgxI,iBAgBC,IAAIhtH,SAAQ,CAAC3b,EAAS4b,KACzBjkB,KAAKixI,aAAa1oH,MAAK,KACnBlgB,GAAS,GACX,KAlBNrI,KAAKgxI,kBAAmB,EACxBhxI,KAAKixI,aAAe,IAAI,GAAE5pI,SACnB,IAAI2c,SAAQ,CAAC3b,EAAS4b,KACzBjkB,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMy9E,eAAe/wI,KAAKwC,IAAI,QAAS0uI,IACrElxI,KAAK2wI,cAAc3wI,KAAK0sB,QAAQi/B,qBAAqB2H,MAAM69E,iBAAiB,GAAED,KAC9ElxI,KAAKgxI,kBAAmB,EACxBhxI,KAAKixI,aAAa5oI,UAClBA,GAAS,IACV,KACCrI,KAAKgxI,kBAAmB,EACxBhxI,KAAKixI,aAAa5oI,UAClBA,GAAS,GACX,IASd,EAEA+W,QAASjD,eAAgBjF,GACrB,IAAIk6H,EAAe,GACfC,QAAY,GAAMvzH,IAAIsB,QAAQlI,GAC9BqqF,GAAa,EAEZ,GAAEnrF,KAAKpW,KAAKkoB,SAASjmB,cAChBjC,KAAK+wI,iBACf,IAAK,IAAI5oH,KAAUnoB,KAAKkoB,QACpBkpH,EAAahwI,KAAKpB,KAAKkoB,QAAQC,GAAQ/I,QAAQiyH,EAAI5xH,UAGvD,IAAK,IAAI0I,KAAUnoB,KAAK0sB,QAAQ4mC,MAAM2R,YAClCmsE,EAAahwI,KAAKpB,KAAK0sB,QAAQ4mC,MAAM2R,YAAY98C,GAAQ/I,QAAQiyH,EAAI5xH,UAGzE,IAAIrJ,QAAa4N,QAAQzhB,IAAI6uI,GAE7Bh7H,EAAOA,EAAKO,QAAON,GAAe,OAARA,IAE1B,IAAK,IAAIyuD,KAAa9kE,KAAKkoB,QAAS,CAChC,IAAIC,EAASnoB,KAAKkoB,QAAQ48C,GACD,OAArB38C,EAAO3lB,IAAI,QAEe,OAA1B2lB,EAAO3lB,IAAI,aACX++F,EAAa,SACbA,QAAwCnmF,IAA1B+M,EAAO3lB,IAAI,aACzB++F,EAAa,QACrB,CAEA,MAAO,CACHnrF,KAAMA,EACNmI,QAAS8yH,EAAI9yH,QACbgjF,WAAYA,EAEpB,EAEAnjF,QAASjC,eAAgBm1H,EAAUC,EAAYC,GAG3C,OAFaxxI,KAAK8wI,UAAUQ,GAEdlzH,QAAQmzH,EAAYC,EACtC,EAEAV,UAAW,SAAUlnI,GAKjB,OAJK5J,KAAKkoB,QAAQte,KACd5J,KAAKkoB,QAAQte,GAAM,IAAI,UAAc,CAACsO,IAAKlY,KAAKwC,IAAI,OAAQoH,GAAIA,GAAM,CAAE8iB,QAAS1sB,KAAK0sB,QAASw2C,MAAOljE,KAAKkjE,SAGxGljE,KAAKkoB,QAAQte,EACxB,IAGJ,SAAeuX,SAASm6C,WAAWtxD,OAAO,CACtC8pB,MAAO,QAEPnS,WAAY,SAAU63C,EAAQx6D,GAC1BgB,KAAKo1F,YAAc,GACnBp1F,KAAKqjB,GAAG,MAAO,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,QACtDA,KAAKqjB,GAAG,SAAU,GAAE/a,KAAKtI,KAAKq1F,oBAAqBr1F,KAAM,UAC7D,EAEAs1F,cAAe,SAAUzrC,GACrB7pD,KAAKo1F,YAAYh0F,KAAKyoD,EAC1B,EAEAwrC,oBAAqB,SAAUr0E,EAAOiU,GAClC,GAAEn1B,KAAKE,KAAKo1F,aAAa,SAAUvrC,GAC/BA,EAAW5xB,OAAOhD,EAASjU,EAC/B,GACJ,IAGJ,gBAAsB,oBAAwB,CAC1C+P,UAAW,qCACXvD,SAAU,GAAUypF,aACpBnpF,YAAa,wBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACJ,mBAAoB,cACpB,oBAAqB,eACrB,oBAAqB,eACrB,yBAA0B,YAC1B,oBAAqB,SAGzB1C,YAAa,WACLvuB,KAAK8zB,MAAMmxC,aACXjlE,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKszD,MAAQtzD,KAAK8zB,MAClB9zB,KAAKkY,IAAMlY,KAAK0sB,QAAQlqB,IAAI,OAC5BxC,KAAKyxI,gBAAiB,IAEtBzxI,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKszD,MAAQtzD,KAAK0sB,QAAQ4mC,MAC1BtzD,KAAKkY,IAAMlY,KAAK8zB,MAAMtxB,IAAI,OAElC,EAEAyH,KAAM,WACFjK,KAAKszD,MAAQtzD,KAAK0sB,QAAQ4mC,MAC1B,IAAIv0D,EAAO,GACX,GAAIiB,KAAKyxI,eACL1yI,EAAOiB,KAAK0sB,QAAQlqB,IAAI,YACvB,CACD,IAAIyyB,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIxC,KAAKkY,KAC7CnZ,EAAOk2B,EAAUA,EAAQzyB,IAAI,QAAUxC,KAAKkY,GAChD,CACAlY,KAAKrC,EAAE,WAAW2E,KAAK,aAAiB,qCAAsC,CAACvD,KAC/EiB,KAAKN,KAAKqgB,IAAI,WAAW,GACzB/f,KAAK0uB,OACL1uB,KAAKrC,EAAE,4BAA4BgC,KAAK,GAAId,UAAUy2B,SAASO,aAC3D71B,KAAKyxI,eACLzxI,KAAKmkE,mBAELnkE,KAAK0xI,eACb,EAEAA,cAAe,WACX1xI,KAAK8zB,MAAMi9G,iBAAiB12H,MAAK,KACT,GAAEjE,KAAKpW,KAAK8zB,MAAM5L,SAASjmB,OAC/CjC,KAAK2xI,mBAAmB3xI,KAAK8zB,MAAM5L,QAAQ,IAE/CloB,KAAK4xI,sBACT,EAEAztE,iBAAkB,WACdnkE,KAAKszD,MAAMu+E,eAAex3H,MAAK,KACP,GAAEjE,KAAKpW,KAAK8zB,MAAMmxC,aAAahjE,OACnDjC,KAAK2xI,mBAAmB3xI,KAAK8zB,MAAMmxC,aACnCjlE,KAAK4xI,sBAAsB,GAEnC,EAEA5iH,OAAQ,WACJhvB,KAAKD,IAAI4L,UAAU,CACfR,SAAU,KACNnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,EAAM,GAG3C,EAEA+xH,UAAW,WACP9xI,KAAKrC,EAAE,cAAcuC,YAAY,UACjCF,KAAKrC,EAAE,cAAcoR,QACrB,IAAIgjI,EAAalnI,IACb,IAAI+O,EAAQ/O,EAAG4C,OAAO1C,MAAMvG,OAC5BxE,KAAK+xI,UAAUn4H,EAAM,EAEzB5Z,KAAKrC,EAAE,cAAc,GAAGq0I,OAASD,EACjC/xI,KAAKrC,EAAE,mBAAmB,GAAGs0I,UAAapnI,IAClCA,EAAGW,SAAW,GAAUlZ,WACxBy/I,EAAUlnI,EAAG,CAEzB,EAEAknI,UAAW,SAAUn4H,GACjB5Z,KAAKrC,EAAE,cAAcwC,SAAS,UAC1ByZ,GAAS5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,uBAEvCxC,KAAK0sB,QAAQlK,SAASO,KAAK,oBAAqBnJ,GAChD5Z,KAAK0sB,QAAQi/B,qBAAqB2H,MAAM4+E,cAAclyI,KAAKszD,MAAM9wD,IAAI,aAAcoX,GAAO,KACtF5Z,KAAK4xI,sBAAsB,IAEnC,EAEAD,mBAAoBx1H,eAAgB+L,GAChC,IAAI7L,EAAU,EACV81H,EAAgB,GAAE/7H,KAAK8R,GAASjmB,OAChCi/B,EAAM,IAAI,GAAE75B,SACZ+qI,EAAapyI,KAAKrC,EAAE,4BACxBujC,EAAI3Y,MAAM8pH,IACDA,EAGDryI,KAAKrC,EAAE,oBAAoB28B,SAAS,CAChCC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACP0kC,UAAWp/D,KAAKrC,EAAE,yBAAyB,GAC3Cg9B,UAAW,SARfy3G,EAAWzyI,KAAK,GAAE,4BAA4B,aAAiB,8DAUnEK,KAAKkY,KAAOlY,KAAK0sB,QAAQlqB,IAAI,QAAU6vI,IACvCryI,KAAKrC,EAAE,oBAAoB2E,KAAK,qBAAyB,iDAAkD+vI,EAAS,CAACryI,KAAKkY,IAAKm6H,KAC/HD,EAAWvyI,KAAK,sBAAsBiL,QAAQ,IAElD,IAAK,IAAIg6D,KAAa58C,EAAS,CAC3B,GAAI48C,GAAa9kE,KAAKszD,MAAM9wD,IAAI,aAAc,CAC1C6Z,IACI81H,GAAiB91H,GACjB6kB,EAAI74B,QAAQ+pI,EAAWvyI,KAAK,WAAWoC,QAC3C,QACJ,CACA,IAAIkmB,EAASD,EAAQ48C,GACrB,GAAI38C,EAAO3lB,IAAI,MAAO,CAClB,IAAIxD,EAAU,CAAC,EACXk8E,EAAI/yD,EAAOmqH,sBACXC,GAAQvyI,KAAKszD,MAAM9wD,IAAI,gBAAgBxC,KAAKkY,MAAQ,IAAI4sD,GACxDy8B,EAAagxC,EAAQA,EAAKptE,aAAe+V,EAAI,QAAWq3D,EAAKl7B,QAAU,QAAU,SAAa,UACnF,UAAf9V,IAA2BviG,EAAQwzI,gBAAkBD,EAAKptE,aAC1DitE,EAAWvlI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU++F,EAAYrmB,EAAGl8E,IAC7Eqd,IACI81H,GAAiB91H,GACjB6kB,EAAI74B,QAAQ+pI,EAAWvyI,KAAK,WAAWoC,OAC/C,MAEIjC,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMo/E,cAAc,CAACx6H,IAAKiQ,EAAOjQ,IAAKtO,GAAIue,EAAOve,KAAKuS,MAAO4Z,IAC3F,IAEImvC,EAFM,GAAEnvC,GACMl2B,KAAK,YAAYsoB,EAAOve,sBAAsB,GAAQssB,GAAGmvC,WAC1DxlE,KAAK,MAAMyC,OAC5B,GAAI4iE,EAAI,CACJ/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C,IAAIlmE,EAAU,CAAC,EACXk8E,EAAI/yD,EAAOmqH,sBACXC,GAAQvyI,KAAKszD,MAAM9wD,IAAI,gBAAgBxC,KAAKkY,MAAQ,IAAIiQ,EAAOve,IAC/D23F,EAAagxC,EAAQA,EAAKptE,aAAe+V,EAAI,QAAWq3D,EAAKl7B,QAAU,QAAU,SAAa,UACnF,UAAf9V,IAA2BviG,EAAQwzI,gBAAkBD,EAAKptE,aAC1DitE,EAAWvlI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU++F,EAAYrmB,EAAGl8E,GACjF,CACAqd,IACI81H,GAAiB91H,GACjB6kB,EAAI74B,QAAQ+pI,EAAWvyI,KAAK,WAAWoC,OAAO,IACnD,KACCoa,IACI81H,GAAiB91H,GACjB6kB,EAAI74B,QAAQ+pI,EAAWvyI,KAAK,WAAWoC,OAAO,GAG9D,CACJ,EAEA2vI,qBAAsBz1H,iBAClBnc,KAAKrC,EAAE,wBAAwBgC,KAAK,IACpC,IAAI2zD,EAAQtzD,KAAK0sB,QAAQ4mC,MACzB,GAAIA,EAAO,CACP,IAAInrC,EAASmrC,EAAM2R,YAAY3R,EAAM9wD,IAAI,cACrC2lB,EACIA,EAAO3lB,IAAI,eACXxC,KAAKrC,EAAE,wBAAwBkP,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU,KAAM2lB,EAAO3lB,IAAI,iBAC5F2lB,EAAO3lB,IAAI,OAClB2lB,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjCtyI,KAAKrC,EAAE,wBAAwBkP,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU,KAAM2lB,EAAO3lB,IAAI,kBAEnG2lB,EAAOwqH,YAAYt4H,MAAK,EAAEu4H,KAAIC,MAAK3tE,SAC/B/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C,IAAIC,EAAch9C,EAAOmqH,sBACpBnqH,EAAO3lB,IAAI,gBAAkB2lB,EAAO3lB,IAAI,iBAAmB2iE,GAC5Dh9C,EAAOpI,IAAI,cAAeolD,GAC9BnlE,KAAKrC,EAAE,wBAAwBkP,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU,KAAM2lB,EAAO3lB,IAAI,gBAAgB,IAI3H8wD,EAAM4P,MAAM4vE,qBAAqBz4H,MAAM6qD,IACnC,IAAI6tE,EAAS7tE,EAAG6tE,OACS,IAArBA,EAAO9zH,aACP8zH,EAASA,EAAO1vI,MAAM,IAC1B,IAAI8hE,EAAc5hE,MAAMqP,KAAK,IAAIjP,WAAWovI,IAAS1hH,KAAIsiC,GAAKA,EAAE3xD,SAAS,IAAIgxI,SAAS,EAAG,OAAM5zI,KAAK,IACpGY,KAAKrC,EAAE,wBAAwBkP,OAAO7M,KAAKyyI,OAAOn/E,EAAM9wD,IAAI,aAAcxC,KAAK0sB,QAAQlK,SAAShgB,IAAI,qBAAsB,KAAM2iE,GAAa,GAIzJ,CACJ,EAEAj6D,MAAO,WACH,IAAIpa,EAAW,IAAI,GAAEuW,SAMrB,OALArH,KAAKD,IAAI6L,WAAW,CAAET,SAAU,KACxBnL,KAAKD,IAAI+K,SACT9K,KAAKN,KAAKqgB,IAAI,WAAW,GACzBjvB,EAASuX,SAAS,IAEnBvX,EAAS2X,SACpB,EAEA66D,YAAa,SAAUz4D,GACnB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,WAC/BoqC,EAAczgC,EAAQ7kC,KAAK,gBAAgByC,OAAOT,QAAQ,KAAM,IAChE0/F,EAAa78D,EAAQ/W,SAAS,wBAAwBnuB,KAAK,cAC3DslE,EAAY/iE,OAAO2iC,EAAQ7kC,KAAK,iBAAiByC,QACrDoiC,EAAQ/W,SAAS,wBAAwBnuB,KAAK,aAAc,SAC5DklC,EAAQ7kC,KAAK,oBAAoB8tB,WAAWnuB,KAAK,aAAc,SAAS8C,KAAK,aAAiB,6CAC9FtC,KAAKszD,MAAMq+E,mBAAmB3xI,KAAKkY,IAAK4sD,EAAWK,GAAa,GAChE,IAAIh9C,EAASnoB,KAAKyxI,eAAiBzxI,KAAK0sB,QAAQ4mC,MAAM2R,YAAYH,GAAa9kE,KAAK8zB,MAAM5L,QAAQ48C,GAC9F38C,GAAwB,WAAdo5E,IACS,UAAfA,GACA78D,EAAQ7kC,KAAK,oBAAoBiL,SACrCqd,EAAOpI,IAAI,WAAW,GACtBoI,EAAO8qH,sBAAuB,EAC9B9qH,EAAO68C,QAAU,KACjBhlE,KAAK0sB,QAAQnhB,QAAQ,oBAE7B,EAEAi4D,aAAc,SAAU34D,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,WAC/BoqC,EAAczgC,EAAQ7kC,KAAK,gBAAgByC,OAAOT,QAAQ,KAAM,IAChE0/F,EAAa78D,EAAQ/W,SAAS,wBAAwBnuB,KAAK,cAC3DslE,EAAY/iE,OAAO2iC,EAAQ7kC,KAAK,iBAAiByC,QACrDoiC,EAAQ/W,SAAS,wBAAwBnuB,KAAK,aAAc,UAC5DklC,EAAQ7kC,KAAK,oBAAoB8tB,WAAWnuB,KAAK,aAAc,UAAU8C,KAAK,aAAiB,8CAC/FtC,KAAKszD,MAAMq+E,mBAAmB3xI,KAAKkY,IAAK4sD,EAAWK,GAAa,GAChE,IAAIh9C,EAASnoB,KAAKyxI,eAAiBzxI,KAAK0sB,QAAQ4mC,MAAM2R,YAAYH,GAAa9kE,KAAK8zB,MAAM5L,QAAQ48C,GAC9F38C,GAAwB,UAAdo5E,IACS,UAAfA,GACA78D,EAAQ7kC,KAAK,oBAAoBiL,SACrCqd,EAAOpI,IAAI,WAAW,GACtBoI,EAAO8qH,sBAAuB,EAC9B9qH,EAAO68C,QAAU,KACjBhlE,KAAK0sB,QAAQnhB,QAAQ,oBAE7B,EAEAknI,OAAQ,SAAU7oI,EAAIgQ,EAAOs5H,EAAO/tE,EAAanmE,GAC7CA,EAAUA,GAAW,CAAC,EACtB,IAGI+O,EAHAolI,IAAgBnzI,KAAKyxI,eACrB2B,EAAexpI,GAAM5J,KAAKszD,MAAM9wD,IAAI,aACpCgwI,EAAkBxzI,EAAQwzI,gBAE9B,GAAIrtE,EAAYxyD,MAAM,WAClBwyD,EAAcA,EAAYxyD,MAAM,WAAWvT,KAAK,SAC/C,CACD+lE,EAAc,GACdp3D,EAAQ,aAAiB,mDACzB,IAAIoa,EAASnoB,KAAKyxI,eAAiBzxI,KAAK0sB,QAAQ4mC,MAAM2R,YAAYr7D,GAAM5J,KAAK8zB,MAAM5L,QAAQte,GACvFue,GAAmB,UAAT+qH,IACVA,EAAQ,SACRlzI,KAAKszD,MAAMq+E,mBAAmB3xI,KAAKkY,IAAKtO,EAAIu7D,GAAa,GACzDh9C,EAAOpI,IAAI,WAAW,GACtBoI,EAAO8qH,sBAAuB,EAC9B9qH,EAAO68C,QAAU,KACjBhlE,KAAK0sB,QAAQnhB,QAAQ,oBAE7B,CAGA,OAFAinI,IAAoBA,EAAkBA,EAAgB7/H,MAAM,WAAWvT,KAAK,MACjE,GAAUi0I,iBAAiB,CAACzpI,KAAGgQ,QAAMs5H,QAAM/tE,cAAaguE,gBAAeC,eAAcZ,kBAAiBzkI,SAErH,EAEA01D,aAAc,SAAU54D,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,WAC/B+pC,EAAY/iE,OAAO2iC,EAAQ7kC,KAAK,iBAAiByC,QACrD,GAAMyJ,QAAQiC,IAAI,aAAiB,uCAAwC,aAAiB,oCAAqC,CAAC82D,IAAa,KAAM,CAAE32D,eAAgB,aAAiB,gDAAgDoa,MAAMrgB,IAC1O,GAAIA,EAAQ,CACRw8B,EAAQ55B,SACR,IAAIunI,EAAUryI,KAAKrC,EAAE,4BAA4BkC,KAAK,WAAWoC,OAC5DowI,GACDryI,KAAKrC,EAAE,4BAA4BgC,KAAK,GAAE,4BAA4B,aAAiB,8DAC3FK,KAAKkY,KAAOlY,KAAK0sB,QAAQlqB,IAAI,QAAU6vI,IACvCryI,KAAKrC,EAAE,oBAAoB2E,KAAK,qBAAyB,iDAAkD+vI,EAAS,CAACryI,KAAKkY,IAAKm6H,YACxHryI,KAAK8zB,MAAMmxC,YAAYH,GAC9B,IAAIlpB,EAAO57C,KAAK0sB,QAAQi/B,qBACpB/P,GAAQA,EAAK0X,eACN1X,EAAK0X,MAAMprC,QAAQ48C,GAC1BlpB,EAAK0X,MAAM4+E,cAAc,KAAM,MAAM,KACjCxtG,EAAQ55B,QAAQ,IAEpB8wC,EAAK0X,MAAM8R,mBAAmB,GAAG,GAAQlvC,GAAGmvC,gBAAiBP,GAErE,IAER,IAGJ,0BAAgC,oBAAwB,CACpD/zC,UAAW,qCACXvD,SAAU,GAAUypF,aACpBnpF,YAAa,wBACbG,YAAa,CAAC7E,MAAO,aAErB6H,OAAQ,CACR,EAEA1C,YAAa,WACTvuB,KAAK0sB,QAAU1sB,KAAK8zB,MAAMpH,QAC1B1sB,KAAKszD,MAAQtzD,KAAK8zB,MAClB9zB,KAAKkY,IAAMlY,KAAK0sB,QAAQlqB,IAAI,MAChC,EAEA2hE,iBAAkB,SAAU3/B,GACxBxkC,KAAKszD,MAAMu+E,eAAex3H,MAAK,KACP,GAAEjE,KAAKpW,KAAK8zB,MAAMmxC,aAAahjE,OACnDjC,KAAK2xI,mBAAmB3xI,KAAK8zB,MAAMmxC,YAAazgC,GAChDxkC,KAAK4xI,qBAAqBptG,EAAM,GAExC,EAEAxV,OAAQ,WACR,EAEA8iH,UAAW,WACP9xI,KAAKrC,EAAE,cAAcuC,YAAY,UACjCF,KAAKrC,EAAE,cAAcoR,QACrB,IAAIgjI,EAAalnI,IACb,IAAI+O,EAAQ/O,EAAG4C,OAAO1C,MAAMvG,OAC5BxE,KAAK+xI,UAAUn4H,EAAM,EAEzB5Z,KAAKrC,EAAE,cAAc,GAAGq0I,OAASD,EACjC/xI,KAAKrC,EAAE,mBAAmB,GAAGs0I,UAAapnI,IAClCA,EAAGW,SAAW,GAAUlZ,WACxBy/I,EAAUlnI,EAAG,CAEzB,EAEAknI,UAAW,SAAUn4H,GACjB5Z,KAAKrC,EAAE,cAAcwC,SAAS,UAC1ByZ,GAAS5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,uBAEvCxC,KAAK0sB,QAAQlK,SAASO,KAAK,oBAAqBnJ,GAChD5Z,KAAK0sB,QAAQi/B,qBAAqB2H,MAAM4+E,cAAclyI,KAAKszD,MAAM9wD,IAAI,aAAcoX,GAAO,KACtF5Z,KAAK4xI,sBAAsB,IAEnC,EAEAD,mBAAoBx1H,eAAgB+L,EAASsc,GACrB,GAAEpuB,KAAK8R,GAASjmB,OAApC,IACImwI,EAAa5tG,EACb8uG,EAAwB,GAC5BlB,EAAWvyI,KAAK,6BAA6BC,MAAK,CAAC4C,EAAKxB,KACpDoyI,EAAsBlyI,KAAK,CAAC0jE,UAAW/iE,OAAO,GAAEb,GAAM1B,KAAK,kBAAkB6D,MAAM,EAAE,IAAKmhC,MAAO,GAAEtjC,IAAO,IAE9GkxI,EAAWvyI,KAAK,0BAA0BM,SAAS,UACnD,IAAK,IAAI2kE,KAAa58C,EAAS,CAC3B,IAIIqrH,EAJAprH,EAASD,EAAQ48C,GACjB0uE,EAAkBF,EAAsBzzI,MAAKmS,GAClCA,EAAI8yD,WAAa/iE,OAAO+iE,KAGvC,GAAIA,GAAa9kE,KAAKszD,MAAM9wD,IAAI,aAShC,GAPIgxI,EACAD,EAAoBC,EAAgBhvG,OAEpC+uG,EAAoB,GAAE,kCACtBnB,EAAWvyI,KAAK,sDAAsDgN,OAAO0mI,GAC7EnB,EAAWvyI,KAAK,0BAA0BK,YAAY,WAEtDioB,EAAO3lB,IAAI,MAAO,CAClB,IAAIxD,EAAU,CAAC,EACXk8E,EAAI/yD,EAAOmqH,sBACXC,GAAQvyI,KAAKszD,MAAM9wD,IAAI,gBAAgBxC,KAAKkY,MAAQ,IAAI4sD,GACxDy8B,EAAagxC,EAAQA,EAAKptE,aAAe+V,EAAI,QAAWq3D,EAAKl7B,QAAU,QAAU,SAAa,UAClGr4G,EAAQy0I,YAAcD,EACP,UAAfjyC,IAA2BviG,EAAQwzI,gBAAkBD,EAAKptE,aAC1DouE,EAAkB1zI,KAAK,6BAA6BqR,SACpDqiI,EAAkB1mI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU++F,EAAYrmB,EAAGl8E,IACpFu0I,EAAkB1zI,KAAK,oBAAoBy6B,SAAS,CAChDC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACP0kC,UAAWp/D,KAAKrC,EAAE,yBAAyB,GAC3Cg9B,UAAW,QAEnB,MAEI36B,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMo/E,cAAc,CAACx6H,IAAKiQ,EAAOjQ,IAAKtO,GAAIue,EAAOve,KAAKuS,MAAO4Z,IAC3F,IAEImvC,EAFM,GAAEnvC,GACMl2B,KAAK,YAAYsoB,EAAOve,sBAAsB,GAAQssB,GAAGmvC,WAC1DxlE,KAAK,MAAMyC,OAC5B,GAAI4iE,EAAI,CACJ/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C,IAAIlmE,EAAU,CAAC,EACXk8E,EAAI/yD,EAAOmqH,sBACXC,GAAQvyI,KAAKszD,MAAM9wD,IAAI,gBAAgBxC,KAAKkY,MAAQ,IAAIiQ,EAAOve,IAC/D23F,EAAagxC,EAAQA,EAAKptE,aAAe+V,EAAI,QAAWq3D,EAAKl7B,QAAU,QAAU,SAAa,UAClGr4G,EAAQy0I,YAAcD,EACP,UAAfjyC,IAA2BviG,EAAQwzI,gBAAkBD,EAAKptE,aAC1DouE,EAAkB1zI,KAAK,6BAA6BqR,SACpDqiI,EAAkB1mI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU++F,EAAYrmB,EAAGl8E,IACpFu0I,EAAkB1zI,KAAK,oBAAoBy6B,SAAS,CAChDC,WAAY,IACZC,YAAa,IACbC,gBAAgB,EAChBC,OAAO,EACP0kC,UAAWp/D,KAAKrC,EAAE,yBAAyB,GAC3Cg9B,UAAW,QAEnB,KACD,QAGX,CACJ,EAEAi3G,qBAAsBz1H,eAAgBqoB,GAClC,IAAI8uB,EAAQtzD,KAAK0sB,QAAQ4mC,MACrB8+E,EAAa5tG,EAAM3kC,KAAK,gCAC5B,GAAIyzD,EAAO,CACP,IAAInrC,EAASmrC,EAAM2R,YAAY3R,EAAM9wD,IAAI,cACrC2lB,EACIA,EAAO3lB,IAAI,gBACX4vI,EAAWvyI,KAAK,6BAA6BqR,SAC7CkhI,EAAWvlI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU,KAAM2lB,EAAO3lB,IAAI,kBACxE2lB,EAAO3lB,IAAI,OAClB2lB,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjCF,EAAWvyI,KAAK,6BAA6BqR,SAC7CkhI,EAAWvlI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU,KAAM2lB,EAAO3lB,IAAI,kBAE/E2lB,EAAOwqH,YAAYt4H,MAAK,EAAEu4H,KAAIC,MAAK3tE,SAC/B/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C,IAAIC,EAAch9C,EAAOmqH,sBACpBnqH,EAAO3lB,IAAI,gBAAkB2lB,EAAO3lB,IAAI,iBAAmB2iE,GAC5Dh9C,EAAOpI,IAAI,cAAeolD,GAC9BitE,EAAWvyI,KAAK,6BAA6BqR,SAC7CkhI,EAAWvlI,OAAO7M,KAAKyyI,OAAOtqH,EAAOve,GAAIue,EAAO3lB,IAAI,SAAU,KAAM2lB,EAAO3lB,IAAI,gBAAgB,IAIvG8wD,EAAM4P,MAAM4vE,qBAAqBz4H,MAAM6qD,IACnC,IAAI6tE,EAAS7tE,EAAG6tE,OACS,IAArBA,EAAO9zH,aACP8zH,EAASA,EAAO1vI,MAAM,IAC1B,IAAI8hE,EAAc5hE,MAAMqP,KAAK,IAAIjP,WAAWovI,IAAS1hH,KAAIsiC,GAAKA,EAAE3xD,SAAS,IAAIgxI,SAAS,EAAG,OAAM5zI,KAAK,IACpGgzI,EAAWvyI,KAAK,6BAA6BqR,SAC7CkhI,EAAWvlI,OAAO7M,KAAKyyI,OAAOn/E,EAAM9wD,IAAI,aAAcxC,KAAK0sB,QAAQlK,SAAShgB,IAAI,qBAAsB,KAAM2iE,GAAa,GAIrI,CACJ,EAEA7B,YAAa,SAAUz4D,GACnB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAC/BoqC,EAAczgC,EAAQ7kC,KAAK,uBAAuByC,OAAOT,QAAQ,KAAM,IACvE0/F,EAAa78D,EAAQ/W,SAAS,wBAAwBnuB,KAAK,cAC3DslE,EAAY/iE,OAAO2iC,EAAQ7kC,KAAK,wBAAwByC,QAC5DoiC,EAAQ/W,SAAS,wBAAwBnuB,KAAK,aAAc,SAC5DklC,EAAQ7kC,KAAK,oBAAoB8tB,WAAWnuB,KAAK,aAAc,SAAS8C,KAAK,aAAiB,6CAC9FtC,KAAKszD,MAAMq+E,mBAAmB3xI,KAAKkY,IAAK4sD,EAAWK,GAAa,GAChE,IAAIh9C,EAASnoB,KAAK0sB,QAAQ4mC,MAAM2R,YAAYH,GACxC38C,GAAwB,WAAdo5E,IACS,UAAfA,GACA78D,EAAQ7kC,KAAK,oBAAoBiL,SACrCqd,EAAOpI,IAAI,WAAW,GACtBoI,EAAO8qH,sBAAuB,EAC9B9qH,EAAO68C,QAAU,KACjBhlE,KAAK0sB,QAAQnhB,QAAQ,oBAE7B,EAEAi4D,aAAc,SAAU34D,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAC/BoqC,EAAczgC,EAAQ7kC,KAAK,uBAAuByC,OAAOT,QAAQ,KAAM,IACvE0/F,EAAa78D,EAAQ/W,SAAS,wBAAwBnuB,KAAK,cAC3DslE,EAAY/iE,OAAO2iC,EAAQ7kC,KAAK,wBAAwByC,QAC5DoiC,EAAQ/W,SAAS,wBAAwBnuB,KAAK,aAAc,UAC5DklC,EAAQ7kC,KAAK,oBAAoB8tB,WAAWnuB,KAAK,aAAc,UAAU8C,KAAK,aAAiB,8CAC/FtC,KAAKszD,MAAMq+E,mBAAmB3xI,KAAKkY,IAAK4sD,EAAWK,GAAa,GAChE,IAAIh9C,EAASnoB,KAAK0sB,QAAQ4mC,MAAM2R,YAAYH,GACxC38C,GAAwB,UAAdo5E,IACS,UAAfA,GACA78D,EAAQ7kC,KAAK,oBAAoBiL,SACrCqd,EAAOpI,IAAI,WAAW,GACtBoI,EAAO8qH,sBAAuB,EAC9B9qH,EAAO68C,QAAU,KACjBhlE,KAAK0sB,QAAQnhB,QAAQ,oBAE7B,EAEAknI,OAAQ,SAAU7oI,EAAIgQ,EAAOs5H,EAAO/tE,EAAanmE,GAC7CA,EAAUA,GAAW,CAAC,EACtB,IAII+O,EAHAqlI,EAAexpI,GAAM5J,KAAKszD,MAAM9wD,IAAI,aACpCgwI,EAAkBxzI,EAAQwzI,gBAC1BiB,EAAaz0I,EAAQy0I,WAEzB,GAAItuE,EAAYxyD,MAAM,WAClBwyD,EAAcA,EAAYxyD,MAAM,WAAWvT,KAAK,SAC/C,CACD+lE,EAAc,GACdp3D,EAAQ,aAAiB,mDACzB,IAAIoa,EAASnoB,KAAK0sB,QAAQ4mC,MAAM2R,YAAYr7D,GACxCue,GAAmB,UAAT+qH,IACVA,EAAQ,SACRlzI,KAAKszD,MAAMq+E,mBAAmB3xI,KAAKkY,IAAKtO,EAAIu7D,GAAa,GAAO,EAChEh9C,EAAOpI,IAAI,WAAW,GACtBoI,EAAO8qH,sBAAuB,EAC9B9qH,EAAO68C,QAAU,KACjBhlE,KAAK0sB,QAAQnhB,QAAQ,oBAE7B,CAGA,OAFAinI,IAAoBA,EAAkBA,EAAgB7/H,MAAM,WAAWvT,KAAK,MACjE,GAAUs0I,yBAAyB,CAAC9pI,KAAGgQ,QAAMs5H,QAAM/tE,cAAaguE,eArBvD,EAqBsEC,eAAcZ,kBAAiBzkI,QAAO0lI,cAEpI,EAEAhwE,aAAc,SAAU54D,GACpB,IAAI65B,EAAU,GAAE75B,EAAG4C,QAAQstB,QAAQ,eAC/B+pC,EAAY/iE,OAAO2iC,EAAQ7kC,KAAK,wBAAwByC,QAC5D,GAAMyJ,QAAQiC,IAAI,aAAiB,uCAAwC,aAAiB,oCAAqC,CAAC82D,IAAa,KAAM,CAAE32D,eAAgB,aAAiB,gDAAgDoa,MAAMrgB,IAC1O,GAAIA,EAAQ,QAEDlI,KAAK8zB,MAAMmxC,YAAYH,GAC9B,IAAIlpB,EAAO57C,KAAK0sB,QAAQi/B,qBACpB/P,GAAQA,EAAK0X,eACN1X,EAAK0X,MAAMprC,QAAQ48C,GAC1BlpB,EAAK0X,MAAM4+E,cAAc,KAAM,MAAM,SAGrCt2F,EAAK0X,MAAM8R,mBAAmB,GAAG,GAAQlvC,GAAGmvC,gBAAiBP,GAErE,IAER,IAGJ,UAAgB3jD,SAASC,MAAMpX,OAAO,CAClC2X,WAAYxF,eAAgB/E,EAAOpY,GAC/BgB,KAAKglE,QAAU,GACfhlE,KAAK8zB,MAAQ90B,EAAQ80B,MACrB9zB,KAAKkjE,MAAQlkE,EAAQkkE,MACjBljE,KAAK8zB,MAAMtxB,IAAI,eACfxC,KAAK2zI,oBAEC3zI,KAAK4zI,yBACV5zI,KAAK6zI,aACP7zI,KAAK8zB,MAAMtxB,IAAI,mBACfxC,KAAK8zB,MAAMggH,gBACX9zI,KAAK+f,IAAI,iBAAiB,GAEjC,EAEA6zH,iBAAkB,WACd,OAAO5vH,QAAQzhB,IAAI,CACfguI,GAAUwD,0BACVxD,GAAUyD,2BACX35H,MAAMnS,IACL,IAAI+rI,EAAc/rI,EAAO,GACrBgsI,EAAiBhsI,EAAO,GAC5BlI,KAAKkjE,MAAM66B,IAAI,cAAek2C,GAC9Bj0I,KAAKkjE,MAAM66B,IAAI,iBAAkBm2C,GACjCl0I,KAAK8zB,MAAMpH,QAAQnhB,QAAQ,wBAC3BvL,KAAKm0I,cAAcF,EAAaC,EAAe,GAEvD,EAEAP,YAAa,WACT,IAAIM,EAAcvtH,KAAKC,MAAM3mB,KAAK8zB,MAAMtxB,IAAI,gBACxC0xI,EAAiBl0I,KAAK8zB,MAAMtxB,IAAI,kBAChCuwI,EAAS,GAAMl3H,wBAAwBo4H,EAAYlB,QACnDqB,EAAU,GAAMv4H,wBAAwBo4H,EAAYG,SACxDp0I,KAAKkjE,MAAM66B,IAAI,cAAe,CAACg1C,OAAQA,EAAQqB,QAASA,IACxDp0I,KAAKkjE,MAAM66B,IAAI,iBAAkBm2C,EACrC,EAEAC,cAAe,SAAUF,EAAaC,GAClC,IAAInB,EAAS,GAAM/2H,oBAAoBi4H,EAAYlB,QAC/CqB,EAAU,GAAMp4H,oBAAoBi4H,EAAYG,SACpDp0I,KAAK8zB,MAAM/Q,KAAK,cAAe2D,KAAK6rB,UAAU,CAACwgG,OAAQA,EAAQqB,QAASA,KACxEp0I,KAAK8zB,MAAM/Q,KAAK,iBAAkBmxH,EACtC,EAEAG,gBAAiBl4H,iBACb,IAAIm4H,EAAkB,GACtB,IAAK,IAAI9wI,EAAI,EAAGA,GAAK,GAAUhQ,cAAegQ,IAC1C8wI,EAAgBlzI,KAAKpB,KAAKu0I,eAAe/wI,IAK7C,OAFA8wI,EAAgBlzI,KAAKpB,KAAKw0I,qBAAqB,UAElCxwH,QAAQzhB,IAAI+xI,EAC7B,EAEAG,gBAAiBt4H,iBACb,IAAI02H,EAAM7yI,KAAK8zB,MAAMtxB,IAAI,gBACzB,GAAIqwI,EAAK,CACL,IAAIE,EAAS,GAAMl3H,wBAAwBg3H,EAAI6B,QAAQ3B,QACnDqB,EAAU,GAAMv4H,wBAAwBg3H,EAAI6B,QAAQN,SACpDO,EAAY,GAAM94H,wBAAwBg3H,EAAI8B,WAGlD,MAAO,CAACD,QAFM,CAAC3B,SAAQqB,WAENQ,MADL/B,EAAI+B,MACQD,YAC5B,CAEI,aAAa30I,KAAKw0I,qBAAqBx0I,KAAKglE,QAAQ,GAAG4vE,OAAS,EAExE,EAEAf,WAAY13H,iBACR,IAAI04H,EAAU70I,KAAK8zB,MAAM+gH,QAAQC,SACjC,GAAI3+H,OAAOC,KAAKy+H,GAAS5yI,QAAU,GAAUxO,kBAAmB,CAC5D,IAAK,IAAIo2G,KAAKgrC,EAAS,CACnB,IAAIjC,EAAKiC,EAAQhrC,GACbjgG,EAAKgpI,EAAGhpI,GACRmrI,EAASruH,KAAKC,MAAMisH,EAAGv8H,KACvB2+H,EAAU,GAAMn5H,wBAAwBk5H,EAAOX,SAE/Ca,EAAW,CAAClC,OADH,GAAMl3H,wBAAwBk5H,EAAOhC,QAClBqB,QAASY,GACzCh1I,KAAKglE,QAAQ5jE,KAAK,CAACwzI,MAAOhrI,EAAI8qI,QAASO,IACvCj1I,KAAKkjE,MAAMgyE,YAAYtrI,EAAIqrI,EAC/B,CACAj1I,KAAKm1I,iBACL,IAAItC,QAAY7yI,KAAKy0I,kBACrBz0I,KAAKglE,QAAQ5jE,KAAKyxI,GAClB7yI,KAAKkjE,MAAMkyE,kBAAkBvC,EAAI+B,MAAO/B,EAAI6B,QAChD,MAEI10I,KAAKq0I,kBAAkBh6H,MAAMw6H,IACzB70I,KAAKglE,QAAU6vE,EACf70I,KAAKm1I,gBAAgB,GAGjC,EAEAA,eAAgB,WACZ,IAAIN,EAAU70I,KAAK8zB,MAAMuhH,iBAAiBP,SAC1C,GAAI3+H,OAAOC,KAAKy+H,GAAS5yI,OACrB,IAAK,IAAI4nG,KAAKgrC,EAAS,CACnB,IAAIjC,EAAKiC,EAAQhrC,GACbjgG,EAAKgpI,EAAGhpI,GACRmrI,EAASruH,KAAKC,MAAMisH,EAAGv8H,KACvB+9H,EAAU,GAAMv4H,wBAAwBk5H,EAAOX,SAC/CrB,EAAS,GAAMl3H,wBAAwBk5H,EAAOhC,QAClD/yI,KAAKkjE,MAAMgyE,YAAYtrI,EAAI,CAACmpI,SAAQqB,WACxC,CAER,EAEAG,eAAgBp4H,eAAgBvS,GAC5B,IAAI4nI,QAAejB,GAAUgE,eAAe3qI,GAG5C,OAFA5J,KAAKkjE,MAAMgyE,YAAYtrI,EAAI4nI,EAAOkD,SAE3BlD,CACX,EAEAgD,qBAAsBr4H,eAAgBvS,GAClC,IAAI0rI,QAAiBt1I,KAAKkjE,MAAM4vE,qBAC5ByC,QAAqBhF,GAAUiE,qBAAqBc,EAAU1rI,GAKlE,OAHA5J,KAAKkjE,MAAMkyE,kBAAkBxrI,EAAI2rI,EAAab,SAC9C10I,KAAKw1I,kBAAkBD,GAEhBA,CACX,EAEAC,kBAAmB,SAAU3C,GACzB,IAAIE,EAAS,GAAM/2H,oBAAoB62H,EAAI6B,QAAQ3B,QAC/CqB,EAAU,GAAMp4H,oBAAoB62H,EAAI6B,QAAQN,SAChDO,EAAY,GAAM34H,oBAAoB62H,EAAI8B,WAG1Cc,EAAgB,CAACf,QAFP,CAAC3B,SAAQqB,WAEOQ,MADlB/B,EAAI+B,MACqBD,aACrC30I,KAAK8zB,MAAM/Q,KAAK,eAAgB0yH,EACpC,IAIJ,WAAiBt0H,SAASC,MAAMpX,OAAO,CACnC2X,WAAY,SAAU3iB,GAClBgB,KAAKjB,KAAOC,EAAQD,KACpBiB,KAAK8zB,MAAQ90B,EAAQ80B,KACzB,EAEAtxB,IAAK,SAAUoH,GAEX,OADc,GAAEyN,MAAMrX,KAAK8zB,MAAMtxB,IAAIxC,KAAKjB,OAC3B6K,EACnB,EAEAm0F,IAAK,SAAUg3C,GACX,IAAKA,EAAOnrI,GACR,OACJ,IAAIirI,EAAU,GAAEx9H,MAAMrX,KAAK8zB,MAAMtxB,IAAIxC,KAAKjB,OAC1C81I,EAAQE,EAAOnrI,IAAMmrI,EACrB/0I,KAAK8zB,MAAM/Q,KAAK/iB,KAAKjB,KAAM81I,EAC/B,EAEAC,OAAQ,WAEJ,OADc,GAAEz9H,MAAMrX,KAAK8zB,MAAMtxB,IAAIxC,KAAKjB,MAE9C,EAEAmS,OAAQ,SAAUtH,GACd,IAAKA,EACD,OACJ,IAAIirI,EAAU,GAAEx9H,MAAMrX,KAAK8zB,MAAMtxB,IAAIxC,KAAKjB,cACnC81I,EAAQjrI,GACf5J,KAAK8zB,MAAM/Q,KAAK/iB,KAAKjB,KAAM81I,EAC/B,IAGJ,UAAgB1zH,SAASC,MAAMpX,OAAO,CAClC2X,WAAY,SAAUvK,EAAOpY,GACzBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAK4J,GAAKwN,EAAMxN,GAChB5J,KAAKkY,IAAMd,EAAMc,IACjBlY,KAAKkjE,MAAQlkE,EAAQkkE,MACrBljE,KAAKglE,QAAU,KACfhlE,KAAKslD,QAAU,IAAIkrF,GAAsBp5H,EAAMc,IAAKd,EAAMxN,GAC9D,EAEA0oI,oBAAqB,WACjB,IAAI2B,EAAcj0I,KAAKwC,IAAI,MAC3B,GAAKyxI,EAIL,OAF8B,IAA1BA,EAAYh1H,aACZg1H,EAAcA,EAAY5wI,MAAM,IAC7BE,MAAMqP,KAAK,IAAIjP,WAAWswI,IAAc5iH,KAAIsiC,GAAKA,EAAE3xD,SAAS,IAAIgxI,SAAS,EAAG,OAAM5zI,KAAK,GAClG,EAEAs2I,aAAc,SAAU/hG,GACpB3zC,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMqiF,WAAW,CAC/Cp/H,GAAIvW,KAAKkY,IACTy7B,OAAQA,IACT,QACP,EAEAg/F,UAAWx2H,iBACP,OAAKnc,KAAK41I,gBAoCC,IAAI5xH,SAAQ,CAAC3b,EAAS4b,KACzBjkB,KAAK61I,YAAYttH,MAAK,EAAEqqH,KAAIC,MAAK3tE,SAC7B78D,EAAQ,CAACuqI,KAAIC,MAAK3tE,MAAI,IAE1BllE,KAAK61I,YAAY3xD,MAAK,KAClBjgE,GAAQ,GACV,KAzCNjkB,KAAK41I,iBAAkB,EACvB51I,KAAK61I,YAAc,IAAI,GAAExuI,SAClB,IAAI2c,SAAQ,CAAC3b,EAAS4b,KACzBjkB,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMo/E,cAAc,CAACx6H,IAAKlY,KAAKkY,IAAKtO,GAAI5J,KAAK4J,KAAMmsB,IACjF,IACI+/G,EADM,GAAE//G,GACMl2B,KAAK,YAAYG,KAAK4J,sBAAsB,GAAQssB,GAAGmvC,WACrE0wE,EAAOD,EAAQj2I,KAAK,OACpBgzI,EAAM,CAACjpI,GAAImsI,EAAKv2I,KAAK,MAAO6W,IAAK0/H,EAAKzzI,OAAQqyI,UAAWmB,EAAQj2I,KAAK,QAAQyC,QAC9E4iE,EAAK4wE,EAAQj2I,KAAK,MAAMyC,OAC5BtC,KAAKglE,QAAU,GACVE,GACDllE,KAAK+f,IAAI,KAAM,MACnB+1H,EAAQj2I,KAAK,cAAcC,MAAK,CAAC0D,EAAGovI,KAChC,IAAIoD,EAAM,GAAEpD,GACZ5yI,KAAKglE,QAAQ5jE,KAAK,CAACwI,GAAIosI,EAAIx2I,KAAK,MAAO6W,IAAK2/H,EAAI1zI,QAAQ,IAE5DtC,KAAK41I,iBAAkB,EACvB,IAAIhD,EAAK5yI,KAAKi2I,kBACTrD,GAKD5yI,KAAK61I,YAAYxtI,QAAQ,CAACuqI,KAAIC,MAAK3tE,OACnC78D,EAAQ,CAACuqI,KAAIC,MAAK3tE,SALlBllE,KAAK61I,YAAY5xH,SACjBA,IAKJ,IACD,KACCjkB,KAAK+f,IAAI,KAAM,MACf/f,KAAKglE,QAAU,GACfhlE,KAAK61I,YAAY5xH,SACjBjkB,KAAK41I,iBAAkB,EACvB3xH,GAAQ,GACV,IAYd,EAEAgyH,gBAAiB,WACb,IACIngH,EAAM91B,KAAKglE,QAAQ/iE,OAAS,EAC5BuB,EAAIlH,KAAKoI,MAFH,EAEepI,KAAK+W,UAAYyiB,EAAM,EAFtC,IAGV,OAAO91B,KAAKglE,QAAQxhE,EACxB,EAEA4a,QAASjC,eAAgB+5H,EAAY1E,GACjC,IACI,IAAiE2E,EAA7DC,EAAgB,IAAI1F,GAAc1wI,KAAKkjE,MAAOljE,KAAKslD,SAEvD,GAAIksF,EACA2E,QAAkBC,EAAcC,4BAA4BH,EAAY,cACvE,CACD,IAAKl2I,KAAKkjE,MAAMozE,WAAWt2I,KAAKslD,QAAQtjD,YAAa,CACjD,IAAI4qB,EAAU5sB,KAAKu2I,mBACf3pH,SACM5sB,KAAKkjE,MAAMszE,aAAax2I,KAAKslD,QAAQtjD,WAAY4qB,EAC/D,CACAupH,QAAkBC,EAAcK,sBAAsBP,EAAY,SACtE,CAEA,OAAOC,CAIX,CAFA,MAAOrkI,GACH,MAAMA,CACV,CACJ,EAEA4kI,UAAW,WAEP,OADS12I,KAAK0sB,QAAQ4mC,MAAMqjF,aAAan0I,IAAIpP,OAAO4M,KAAK4J,IAE7D,EAEA2sI,iBAAkB,WACd,OAAOv2I,KAAK0sB,QAAQ4mC,MAAMsjF,WAAW,UAAY52I,KAAKslD,QAAQtjD,WAClE,EAEAod,QAASjD,eAAgBg6H,GACrB,IACI,IAA4B,IAAxBn2I,KAAKwC,IAAI,YAAyBxC,KAAK4J,IAAM5J,KAAK0sB,QAAQ4mC,MAAM9wD,IAAI,aACpE,OAAO,KACX,IAAKxC,KAAKkjE,MAAMozE,WAAWt2I,KAAKslD,QAAQtjD,cAAgBhC,KAAKizI,qBAAsB,CAC/E,GAAIjzI,KAAKglE,UAAYhlE,KAAKglE,QAAQ/iE,OAC9B,OAAO,KAGX,GAFAjC,KAAKizI,sBAAuB,SACdjzI,KAAKw/B,cAEf,OAAO,IACf,CAEA,IAAI5S,EAAU5sB,KAAK42I,aACfrF,QAAmB3kH,EAAQxN,QAAQ+2H,GAEvC,MAAO,CACH3E,OAA4B,IAApBD,EAAW1tI,KACnB0tI,WAAYA,EACZD,SAAUtxI,KAAKslD,QAAQuxF,cAO/B,CALE,MAAO/kI,GAIL,OAHA,GAAQiU,IAAI,SAAUjU,GACtB,GAAQgU,KAAK,6CAA+C9lB,KAAKslD,QAAQuxF,eAElE,IACX,CACJ,EAEAr3G,YAAarjB,iBACT,IAAI,GAACy2H,EAAE,IAAEC,EAAG,GAAE3tE,SAAYllE,KAAK2yI,YAC3BmE,EAAY92I,KAAK02I,YACjB9sI,EAAK5J,KAAK4J,GACVktI,KACKjE,GAAOA,GAAOnsH,KAAK6rB,UAAUsgG,IAAQnsH,KAAK6rB,UAAUukG,EAAUjE,MAAQnsH,KAAK6rB,UAAU2yB,IAAOx+C,KAAK6rB,UAAUukG,EAAU5xE,KACtH0tE,EAAKkE,EAAUlE,GAKnB5yI,KAAK0sB,QAAQ4mC,MAAMqjF,aAAa54C,IAAI,CAACn0F,KAAIgpI,KAAIC,MAAK3tE,OACtDllE,KAAK+f,IAAI,CAAC,GAAM,GAAMlE,wBAAwB+2H,EAAGv8H,KAAM,GAAM,GAAMwF,wBAAwBqpD,KAC3FllE,KAAKmlE,YAAcnlE,KAAKsyI,sBACxB,IAAIj7B,EAAUr3G,KAAK0sB,QAAQ4mC,MAAMyjF,UAAU/2I,KAAKkY,IAAKtO,EAAI5J,KAAKmlE,aAE9D,OADAnlE,KAAK+f,IAAI,UAAWs3F,IACfr3G,KAAK4J,IAAM5J,KAAK0sB,QAAQ4mC,MAAM9wD,IAAI,eAA6B,IAAZ60G,KAExDr3G,KAAKg3I,cAAc,CACf9C,eAAgBnyI,OAAO6H,GACvBqqI,YAAa,GAAMp4H,wBAAwBqpD,GAC3CqwE,aAAc,CACVX,MAAO7yI,OAAO8wI,EAAIjpI,IAClBqtI,UAAW,GAAMp7H,wBAAwBg3H,EAAIx8H,KAC7Cs+H,UAAW,GAAM94H,wBAAwBg3H,EAAI8B,YAEjDnD,OAAQ,CACJoD,MAAO7yI,OAAO6wI,EAAGhpI,IACjBqtI,UAAW,GAAMp7H,wBAAwB+2H,EAAGv8H,SAG7C,EACX,EAEA2gI,cAAe,SAAUE,GAErB,OADAl3I,KAAK4sB,QAAU,IAAI6jH,GAAezwI,KAAKkjE,MAAOljE,KAAKslD,SAC5CtlD,KAAK4sB,QAAQoqH,cAAcE,EACtC,EAEArG,cAAe,WACX7wI,KAAKkjE,MAAM2tE,cAAc7wI,KAAKslD,QAAQtjD,YACtChC,KAAKo2I,cAAgB,IACzB,EAEAQ,WAAY,WAIR,OAHK52I,KAAKo2I,gBACNp2I,KAAKo2I,cAAgB,IAAI1F,GAAc1wI,KAAKkjE,MAAOljE,KAAKslD,UAErDtlD,KAAKo2I,aAChB,IAGJ,SAAej1H,SAAS0B,iBAAiB7Y,OAAO,CAC5CqX,SAAU,CACN81H,SAAU,CAAC,EACXlgC,aAAc,CAAC,EACf49B,QAAS,CAAC,EACVt7C,gBAAiB,EACjBo9C,aAAc,CAAC,EACftB,iBAAkB,CAAC,EACnBvwE,UAAW,IAGfv2C,YAAa,SAAUnX,EAAOpY,GAC1BgB,KAAKqjB,GAAG,mBAAoBrjB,KAAKo3I,kBAAmBp3I,MACpDA,KAAKqjB,GAAG,UAAWrjB,KAAKq3I,iBAAkBr3I,MAC1CA,KAAKilE,YAAc,CAAC,EACpBjlE,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKs3I,MAAQ,IAAI,SACZt3I,KAAKwC,IAAI,cACVxC,KAAK+f,IAAI,YAAa/f,KAAKu3I,oBAC/Bv3I,KAAKkjE,MAAQ,IAAI,uBACjBljE,KAAK0sB,QAAQrJ,GAAG,mBAAoBrjB,KAAK8zI,cAAe9zI,MACxDA,KAAK0sB,QAAQrJ,GAAG,kBAAmBrjB,KAAKw3I,oBAAqBx3I,MAC7DA,KAAKkjE,MAAM7/C,GAAG,iBAAkBrjB,KAAKy3I,aAAcz3I,MACnDA,KAAKkjE,MAAM7/C,GAAG,iBAAkBrjB,KAAK03I,aAAc13I,KACvD,EAEA23I,cAAe,WACX,IAAIR,EAAWn3I,KAAKwC,IAAI,YACxB,IAAK,IAAIy0D,KAAckgF,EAAU,CAC7B,IAAIvqH,EAAUuqH,EAASlgF,GACvBrqC,GAAW5sB,KAAKkjE,MAAM66B,IAAI9mC,EAAYrqC,EAC1C,CACJ,EAEAyqH,iBAAkB,WACVr3I,KAAKilE,aAAuD,GAAxC9uD,OAAOC,KAAKpW,KAAKilE,aAAahjE,QAClDjC,KAAK43I,kBACT53I,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAKgsH,aAC/C,EAEA4rB,gBAAiB,WACb,IAAI9yE,EAAY9kE,KAAKwC,IAAI,oBAClBxC,KAAKilE,YAAYH,GACxB,IAAIlpB,EAAO57C,KAAK0sB,QAAQi/B,qBACpB/P,GAAQA,EAAK0X,eACN1X,EAAK0X,MAAMprC,QAAQ48C,GAC1BlpB,EAAK0X,MAAM4+E,cAAc,KAAM,MAAM,SACrCt2F,EAAK0X,MAAM8R,mBAAmB,GAAG,GAAQlvC,GAAGmvC,gBAAiBP,GAErE,EAEAvS,YAAa,WACTvyD,KAAK60I,QAAU,IAAI,WAAe,CAAC91I,KAAM,UAAW+0B,MAAO9zB,OAC3DA,KAAK22I,aAAe,IAAI,WAAe,CAAC53I,KAAM,eAAgB+0B,MAAO9zB,OACrEA,KAAKq1I,iBAAmB,IAAI,WAAe,CAACt2I,KAAM,mBAAoB+0B,MAAO9zB,OAC7EA,KAAK4nI,gBAAkB,IAAI,qBAAyB,CAACh+H,GAAI,sBAAuB,CAC5E8iB,QAAS1sB,KAAK0sB,QACdrK,aAAc,oBAA0B,uBAAyBriB,KAAK0sB,QAAQlqB,IAAI,OAClF+f,MAAO,WAEXviB,KAAK+kE,OAAS,IAAI,UAAc,KAAM,CAAC7B,MAAOljE,KAAKkjE,MAAOpvC,MAAO9zB,OACjEA,KAAK+sB,WAAa/sB,KAAK0sB,QAAQK,WAC/B/sB,KAAK+rH,yBACL/rH,KAAK63I,WACT,EAEAhG,aAAc11H,iBACV,OAAKnc,KAAK83I,qBAuBC,IAAI9zH,SAAQ,CAAC3b,EAAS4b,KACzBjkB,KAAK+3I,iBAAiBxvH,MAAK,KACvBlgB,GAAS,GACX,KAzBNrI,KAAK83I,sBAAuB,EAC5B93I,KAAK+3I,iBAAmB,IAAI,GAAE1wI,SACvB,IAAI2c,SAAQ,CAAC3b,EAAS4b,KACzB,IAAI23B,EAAO57C,KAAK0sB,QAAQi/B,qBACpB/P,GACIA,EAAK0X,MACL1X,EAAK0X,MAAMy9E,eAAe,MAAOG,IAC7Bt1F,EAAK0X,MAAMprC,QAAU0zB,EAAK0X,MAAM69E,iBAAiB,GAAED,IACnDlxI,KAAK83I,sBAAuB,EAC5B93I,KAAK+3I,iBAAiB1vI,UACtBA,GAAS,IACV,WACCrI,KAAK83I,sBAAuB,EAC5B93I,KAAK+3I,iBAAiB1vI,UACtBA,GACJ,IAIJrI,KAAK83I,sBAAuB,CAAK,IASjD,EAEAnG,mBAAoB,SAAU18G,EAAS6vC,EAAWK,EAAakyC,GAC3D,IAAIJ,EAAe,GAAE5/F,MAAMrX,KAAKwC,IAAI,iBAC/By0G,EAAahiF,KACdgiF,EAAahiF,GAAW,CAAC,GAC7B,IAAI+iH,EAAuB/gC,EAAahiF,GACpC,GAAE/J,QAAQ8sH,KACVA,EAAuB,CAAC,GAC5BA,EAAqBlzE,GAAa,CAACK,cAAakyC,WAChDJ,EAAahiF,GAAW+iH,EACxBh4I,KAAK+iB,KAAK,eAAgBk0F,EAC9B,EAEA8/B,UAAW,SAAU7+H,EAAK4sD,EAAWK,GACjC,IAAI8xC,EAAe,GAAE5/F,MAAMrX,KAAKwC,IAAI,iBACpC,IAAKy0G,EAAa/+F,GACd,OACJ,IAAK++F,EAAa/+F,GAAK4sD,GACnB,OACJ,IAAIytE,EAAOt7B,EAAa/+F,GAAK4sD,GAC7B,OAAIytE,EACIA,EAAKptE,aAAeA,OACC/pD,IAAjBm3H,EAAKl7B,aACL,EAEOk7B,EAAKl7B,QAGT,UARf,CAUJ,EAEAoW,oBAAqB,SAAUp6D,GAC3B,GAAQttC,IAAI,WAAastC,GACzBrzD,KAAK+iB,KAAK,kBAAmBswC,EACjC,EAEAE,kBAAmB,WACf,OAAOvzD,KAAKwC,IAAI,kBACpB,EAEAq1I,UAAW,WACP,IAAI/yE,EAAY9kE,KAAKwC,IAAI,aACzB,GAAIxC,KAAK+sB,WAAY,CACjB,IAAIumC,EAAQtzD,KAAK0sB,QAAQi/B,qBAAqB2H,MAC9C,GAAIn9C,OAAOC,KAAKk9C,EAAMprC,SAASjmB,OAAQ,CACnC,IAAIkmB,EAASmrC,EAAMprC,QAAQ48C,GAC3B,IAAK38C,GAAUA,IAAWA,EAAOvO,OAAS5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,uBAAyB2lB,EAAOvO,OAAS5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,qBAAsB,CACzJ,IAAIoX,EAAQ5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,sBAAwB,OAAO,GAAMmW,YAAY,GAAI1F,MAAMkN,eACjGmzC,EAAM4+E,cAAcptE,EAAWlrD,GAAO,KAClC5Z,KAAK0sB,QAAQnhB,QAAQ,mBAAmB,GAEhD,MAEIvL,KAAK0sB,QAAQnhB,QAAQ,mBAC7B,MAEI+nD,EAAMy9E,eAAe,MAAOG,IACxBlxI,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMprC,QAAUorC,EAAM69E,iBAAiB,GAAED,IAC3E,IAAK,IAAI+G,KAAUj4I,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMprC,QAClDloB,KAAKilE,YAAYgzE,KAClBj4I,KAAKilE,YAAYgzE,GAAU,IAAI,UAAc,CAAC//H,IAAKlY,KAAK0sB,QAAQlqB,IAAI,OAAQoH,GAAIquI,GAAS,CAAEvrH,QAAS1sB,KAAK0sB,QAASw2C,MAAOljE,KAAKkjE,SAEtI,IAAI/6C,EAASmrC,EAAMprC,QAAQ48C,GAC3B,IAAK38C,GAAUA,IAAWA,EAAOvO,OAAS5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,uBAAyB2lB,EAAOvO,OAAS5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,qBAAsB,CACzJ,IAAIoX,EAAQ5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,sBAAwB,OAAO,GAAMmW,YAAY,GAAI1F,MAAMkN,eACjGmzC,EAAM4+E,cAAcptE,EAAWlrD,GAAO,KAClC5Z,KAAK0sB,QAAQnhB,QAAQ,mBAAmB,GAEhD,MAEIvL,KAAK0sB,QAAQnhB,QAAQ,mBAAmB,GAExD,CACJ,EAEA6rI,kBAAmB,WACfp3I,KAAK+iB,KAAK,YAAa/iB,KAAKwC,IAAI,aACpC,EAEA+0I,iBAAkB,WACd,GAAIv3I,KAAK0sB,QAAQlqB,IAAI,YAAcxC,KAAK0sB,QAAQlqB,IAAI,WAAWugD,WAAa/iD,KAAK0sB,QAAQlqB,IAAI,WAAWugD,UAAU9gD,QAAU,GAAKF,OAAO/B,KAAK0sB,QAAQlqB,IAAI,WAAWugD,UAAU1/C,MAAM,EAAE,IAClL,OAAOtB,OAAO/B,KAAK0sB,QAAQlqB,IAAI,WAAWugD,UAAU1/C,MAAM,EAAE,IAChE,IACIyyB,EAAMx5B,KAAKC,IAAI,EAAG,IAAM,EACxB27I,EAFM,EAEO57I,KAAK+W,UAAYyiB,EAAM,EAF9B,GAGV,OAAOx5B,KAAKoI,MAAMwzI,EACtB,EAEAjsC,cAAe,SAAU70F,EAAO6d,GACvBj1B,KAAK4nI,iBAEV5nI,KAAK4nI,gBAAgB37B,cAAc70F,EAAO6d,EAC9C,EAEA82F,uBAAwB,WACpB/rH,KAAK0sB,QAAQK,WAAW6J,cAAc52B,KAAKgsH,cAC3ChsH,KAAKgsH,aAAehsH,KAAK0sB,QAAQK,WAAW2J,YAAYxf,IACpDlX,KAAKosG,eAAel1F,IACb,IACR,KAAM,UAAW,KAAM,KAAM,KAAM,CAAC,WAAa,GACxD,EAEAkI,QAAS,SAAU6V,EAAS/d,GACxB,IAAIihI,EAAOn4I,KAAKg3G,QAAQ/hF,EAAQzyB,IAAI,QAChCg1E,EAAO,GAAEtgE,EAAQ0Z,QACjBwvE,EAAY5oB,EAAK7pD,SAAS,aAAanuB,KAAK,MAC5C6f,EAAY,GAAQ+/B,UAAUo4B,EAAK7pD,SAAS,YAAY,KAAO,GAInE,OAFAyyE,GAAapgG,KAAK4nI,gBAAgBC,WAAW5yG,EAASmrE,EAAW/gF,GAE1D84H,EAAK/4H,QAAQC,GAAWhF,MAAM+9H,IAEjC,IAAIC,EAAmB12F,OAAO,YAAa,CAAC1rB,MAAO,GAAQC,GAAGmvC,QACzDlyD,EAAE,SAAU,CACT+tF,IAAKlhG,KAAKwC,IAAI,aACdoX,MAAO5Z,KAAK0sB,QAAQlK,SAAShgB,IAAI,uBAErC81I,EAAS32F,OAAO,OAAQ,CAACzpC,IAAKlY,KAAK0sB,QAAQlqB,IAAI,SAEnD61I,EAAiBllI,EAAE,OAAQ,CAAE+E,IAAK+c,EAAQzyB,IAAI,SAE9C,IAAK,IAAI6T,KAAO+hI,EAAiBhiI,KAAM,CACnC,IAAIgB,EAAQ,CACRmhI,IAAKliI,EAAIi7H,SACTkH,SAAKp9H,GAEL/E,EAAIm7H,SACJp6H,EAAMohI,KAAM,GAGZL,EAAKjwH,QAAQ7R,EAAIi7H,UACjB+G,EAAiBllI,EAAE,MAAOiE,GAAO+N,EAAE3R,KAAK6C,EAAIk7H,WAAWriI,OAAOmnB,KAE9DiiH,EAAOnlI,EAAE,MAAOiE,GAAO+N,EAAE3R,KAAK6C,EAAIk7H,WAAWriI,OAAOmnB,IAE5D,CAkBA,OAjBAgiH,EAAiBhiH,KAAKC,MAAMgiH,EAAO1nH,QAEnCynH,EAAiBhiH,KAAKA,KACjBljB,EAAE,WAAWgS,EAAE,GAAMnJ,oBAAoBo8H,EAAiB75H,UAE/D,GAAErH,EAAQ0Z,QAAQ/wB,KAAK,YAAYqR,SAEnCgG,EAAQof,MAAM+hH,EAAiBznH,QAC/B1Z,EAAQmf,KAAKljB,EAAE,aAAc,CACzB8iB,MAAO,GAAQC,GAAGuiH,4BAClB7pE,UAAW,GAAQ14C,GAAGmvC,QAE1BnuD,EAAQmf,KAAKljB,EAAE,QAAS,CACpB8iB,MAAO,mBACRI,KACEljB,EAAE,QAAQgS,EAAE,gEAAgEkR,KAE1E,CAACnf,QAASA,EAASqqF,WAAY62C,EAAiB72C,WAAW,IACnEl5E,OAAOzC,IAAD,GAEb,EAEA8yH,WAAY,SAAUC,EAAIC,GACtB,IAAIC,EAAO,GAAExhI,MAAMshI,GAAKG,EAAO,GAAEzhI,MAAMuhI,GACvC,IAAK,IAAIhI,KAAKiI,SACHC,EAAKlI,GAEhB,IAAK,IAAIA,KAAKkI,SACHD,EAAKjI,GAEhB,OAAOz6H,OAAOC,KAAKyiI,GAAM52I,QAAUkU,OAAOC,KAAK0iI,GAAM72I,MACzD,EAEAyqH,uBAAwB,SAAUx1G,GAC9B,IAAKlX,KAAK0sB,QAAQ4mC,OAAUtzD,KAAK0sB,QAAQ4mC,OAAStzD,KAAKqkC,KAAOrkC,KAAK0sB,QAAQ4mC,MAAMjvB,IAC7E,OACJ,IAAIwyC,EAAW,GAAE3/D,GACbi5C,EAAW,GAAQtS,kBAAkBg5B,EAASr3E,KAAK,SACnD6Q,EAAOwmE,EAASh3E,KAAK,SAASL,KAAK,QACvC,GAAIq3E,EAASh3E,KAAK,gBAAkB,GAAQq2B,GAAGm2B,OAAS,YAAYpqD,OAAQ,CACxE,GAAIoO,GAAQ,GAAG,GAAQ6lB,GAAGmvC,gBAAiB,CACvC,IAAIn9C,EAAUloB,KAAK0sB,QAAQi/B,qBAAqB2H,MAAM69E,iBAAiBt6D,GACvE,GAAI1mB,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OAAQ,CACtC,IAAIu2I,EAAc/4I,KAAKilE,aAAe9uD,OAAOC,KAAKpW,KAAKilE,aAAahjE,OAChEy/E,EAAc1hF,KAAK04I,WAAW14I,KAAKilE,YAAa/8C,GACpDloB,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMprC,QAAUA,EAClD,IAAI48C,EAAY9kE,KAAKwC,IAAI,aACZxC,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMprC,QAAQ48C,GACzD4c,GACA1hF,KAAK0sB,QAAQnhB,QAAQ,mBAErBwtI,GAAer3D,GACf1hF,KAAK0sB,QAAQnhB,QAAQ,mBAE7B,KACK,CACD,IAAI4sI,EAAOn4I,KAAKg3G,QAAQ7mD,GACpB4oF,EAAcZ,EAAKjwH,SAAW/R,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,OACxDy/E,EAAc1hF,KAAK04I,WAAWP,EAAKjwH,QAASA,GAChDiwH,EAAKxH,cAAczoH,GACf6wH,GAAer3D,GACf1hF,KAAK0sB,QAAQnhB,QAAQ,mBAE7B,CACA,MACJ,CACA,GAAI8E,GAAQ,GAAG,GAAQ6lB,GAAGmvC,gBAAiB,CACvC,IAEqEl9C,EAFjEva,EAAQipE,EAASh3E,KAAK,cAAcqyB,QACpC4yC,EAAYl3D,EAAMpO,KAAK,MACvBs2I,EAAUloI,EAAM+f,SAAS,iBAAiB,GAAQuI,GAAGmvC,WACzD,GAAIlV,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OAAQ,CACtC,IAAI0lB,EAAUloB,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMprC,QAClDA,GAAWA,EAAQ48C,KACd9kE,KAAKilE,YAAYH,KAClB9kE,KAAKilE,YAAYH,GAAa,IAAI,UAAc,CAAC5sD,IAAKlY,KAAK0sB,QAAQlqB,IAAI,OAAQoH,GAAIk7D,GAAY,CAAEp4C,QAAS1sB,KAAK0sB,QAASw2C,MAAOljE,KAAKkjE,SACxI/6C,EAASnoB,KAAKilE,YAAYH,GAElC,KAAO,CACH,IAAIqzE,EAAOn4I,KAAKs3I,MAAM90I,IAAI2tD,GACtBgoF,IACAhwH,EAASgwH,EAAKjwH,QAAQ48C,GAE9B,CACA,GAAI38C,EAAQ,CACR,IAAI+8C,EAAK4wE,EAAQj2I,KAAK,MAAMyC,OACxB02I,EAAY7wH,EAAO3lB,IAAI,MAAOwiE,EAAU,GAC5C,IAAKE,EAED,YADA/8C,EAAOpI,IAAI,KAAM,MAGrB+1H,EAAQj2I,KAAK,cAAcC,MAAK,CAAC0D,EAAGovI,KAChC,IAAIoD,EAAM,GAAEpD,GACZ5tE,EAAQ5jE,KAAK,CAACwI,GAAIosI,EAAIx2I,KAAK,MAAO6W,IAAK2/H,EAAI1zI,QAAQ,IAEvD6lB,EAAO68C,QAAUA,EACjB78C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C/8C,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjC0G,IAAcA,EAAY,GAAMh9H,oBAAoBg9H,IAC/C,GAAE5tI,YAAY4tI,IAAcA,GAAa9zE,GAC1CllE,KAAK0sB,QAAQnhB,QAAQ,mBAC7B,CACJ,CACJ,CACJ,EAEAooB,mBAAoB,SAAUzc,EAASlY,EAASlO,GAC5CkO,EAAUA,GAAW,CAAC,EACtB,IAAI63E,EAAW,GAAE3/D,GACjB,GAAI2/D,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAWpjE,OAAQ,CAC5D40E,EAASh3E,KAAK,iBAAmB,GAAQq2B,GAAGC,IAAM,MAAMl0B,QACxD,GAAE+H,OAAOhL,EAAS,CACdquG,QAAQ,EACRj9C,aAAa,IAEjBymB,EAASh3E,KAAK,WAAa,GAAQq2B,GAAGg+B,QAAU,MAAMjyD,SACtDjD,EAAQuhG,eAAgB,GAE5B,IAAI/oB,EAAOX,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAW53C,SAC/DvV,GAAO,GAAQ2lC,kBAAkB25B,EAAKh4E,KAAK,WAAaQ,KAAK0sB,QAAQlqB,IAAI,OAAS,GAAQq7C,kBAAkB25B,EAAKh4E,KAAK,OAAS,GAAQq+C,kBAAkB25B,EAAKh4E,KAAK,WAAaR,EAAQmxD,SACxLl7B,EAAUj1B,KAAK0sB,QAAQ4I,SAAS9yB,IAAIxD,EAAQ83F,aAAe93F,EAAQ83F,aAAe5+E,GAClFq/D,EAAYC,EAAK7pD,SAAS,iBAAiB3tB,KAAK0sB,QAAQlqB,IAAI,YAAYhD,KAAK,MAC7Ey5I,EAAa1hE,GAAav3E,KAAK4nI,gBAAgBsR,WAAWjkH,EAASsiD,GAEvE,GAAI,GAAQ15B,kBAAkB25B,EAAKh4E,KAAK,UAAYQ,KAAK0sB,QAAQlqB,IAAI,QAAUxD,EAAQuhG,cACnF,OAEJ,GAAI04C,EAAY,CACZ,IAAKj6I,EAAQgiG,SAUT,OATAhiG,EAAQugB,WAAY,OACpBvf,KAAKm5I,WAAWtiE,GAAUx8D,MAAMknF,IAC5BviG,EAAQuiG,WAAaA,EACrB1qB,EAASh3E,KAAK,QAAQqR,SACtB2lE,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAWr0D,YAAYioI,GAChEj6I,EAAQolF,SAAWtzF,GACnBA,EAASuX,QAAQwuE,GACrB72E,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAS,GAAI73E,EAAQ,IAI9D,GAAIA,EAAQgiG,UAAYnqB,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,kBAAkB7lE,KAAK,QAAUQ,KAAKwC,IAAI,aAAc,CAC9HxD,EAAQugB,WAAY,EACpBs3D,EAASh3E,KAAK,QAAQqR,SACtB2lE,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAWr0D,YAAYioI,GACpE,IAAI/kJ,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,EAAS,aAC/C/gC,GAAQA,EAAKq/B,SAASmgD,iBAAiBmD,EAAU73E,GACjD,IAAImuH,EAAWj5H,EAAKq/B,SAAS1zB,MAAK+lB,GAAOA,EAAIpjB,IAAI,cAAgB+0E,GAAa3xD,EAAIpjB,IAAI,sBAAwB+0E,IAK9G,YAJI41C,IACAA,EAASptG,IAAI,oBAAqB82D,EAASh3E,KAAK,YAAYL,KAAK,UACjEtL,GAAQA,EAAK0gC,UAAUC,kBAAkB3gC,EAAK+kG,eAGtD,CACJ,CAEIj6F,EAAQgiG,SACRhhG,KAAKoe,QAAQlH,EAAQyW,SAAS,WAAWA,SAAS,WAAY3uB,GAASqb,MAAMstH,IACzE,GAAIA,EAAe,CACf3oI,EAAQugB,WAAY,EACpBg4D,GAAav3E,KAAK4nI,gBAAgBC,WAAW5yG,EAASsiD,EAAWowD,GACjE9wD,EAASh3E,KAAK,QAAQqR,SACtB2lE,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAWr0D,YAAY22H,GACpE,IAAIzzI,EAAO8L,KAAK0sB,QAAQgH,MAAMgC,QAAQT,EAAS,aAC/C/gC,GAAQA,EAAKq/B,SAASmgD,iBAAiBmD,EAAU73E,GACjD,IAAImuH,EAAWj5H,EAAKq/B,SAAS1zB,MAAK+lB,GAAOA,EAAIpjB,IAAI,cAAgB+0E,GAAa3xD,EAAIpjB,IAAI,sBAAwB+0E,IAC1G41C,IACAA,EAASptG,IAAI,oBAAqB82D,EAASh3E,KAAK,YAAYL,KAAK,UACjEtL,GAAQA,EAAK0gC,UAAUC,kBAAkB3gC,EAAK+kG,cAEtD,KAGJj5F,KAAKm5I,WAAWtiE,GAAUx8D,MAAMknF,IAC5BviG,EAAQuiG,WAAaA,EACdvhG,KAAKoe,QAAQlH,MACrBmD,MAAMstH,IACL,GAAIA,EACA3oI,EAAQugB,WAAY,EACpBg4D,GAAav3E,KAAK4nI,gBAAgBC,WAAW5yG,EAASsiD,EAAWowD,GACjE9wD,EAASh3E,KAAK,QAAQqR,aAErB,CACD,GAAsB,OAAlBy2H,EAEA,YADA3nI,KAAK0sB,QAAQgH,MAAMgC,QAAQT,EAAS,aAAaL,UAAUC,oBAG/D71B,EAAQ2vH,eAAgB,SACjB3vH,EAAQuiG,UACnB,CACA1qB,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAWr0D,YAAY22H,GAChE3oI,EAAQolF,SAAWujD,GAAiB72I,EACpCA,EAASuX,QAAQwuE,GACZ73E,EAAQolF,SAAWtzF,GACxBA,EAASmzB,SACbjkB,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAS,GAAI73E,EAAQ,IAC5DqpB,OAAOvW,IACS,wBAAXA,EAAE/S,QAEFC,EAAQm5F,YAAen5F,EAAQo6I,kBAInCp6I,EAAQ2vH,eAAgB,SACjB3vH,EAAQuiG,WACf1qB,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAWn0D,SACpDlS,EAAQolF,SAAWtzF,GACnBA,EAASmzB,SACbjkB,KAAK0sB,QAAQgH,MAAMC,mBAAmBkjD,EAAS,GAAI73E,IAR/CgB,KAAK2zB,mBAAmBkjD,EAAS,GAAI,GAAE7sE,OAAOhL,EAAS,CAACo6I,kBAAkB,KAQnB,IAG/Dp6I,EAAQolF,SAAWtzF,GACnBA,EAASmzB,QACjB,CACIjlB,EAAQolF,SAAWtzF,GACnBA,EAASmzB,QACjB,EAEAk6G,qBAAsBhiH,iBAClB,OAAO,IAAI6H,SAAQ,CAAC3b,EAAS4b,KACzB,IAAIs9E,GAAa,EACbrgE,EAAM,IAAI,GAAE75B,SAAYgV,EAAU,EAKtC,GAJA6kB,EAAI3Y,MAAMpD,IAEN9c,EADkB,OAAN8c,EAAa,aAAiB/J,IAAN+J,EAAkB,OAASA,EACjD,IAEdhP,OAAOC,KAAKpW,KAAKilE,aAAahjE,OAAQ,CACtCoa,EAAUlG,OAAOC,KAAKpW,KAAKilE,aAAahjE,OACxC,IAAK,IAAI6iE,KAAa9kE,KAAKilE,YAAa,CACpC,IAAI98C,EAASnoB,KAAKilE,YAAYH,GAC9B,GAAIA,GAAa9kE,KAAKwC,IAAI,aAK1B,GAAI2lB,EAAO3lB,IAAI,eAAgB,CAC3B,IAAI60G,EAAUr3G,KAAK+2I,UAAU/2I,KAAK0sB,QAAQlqB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBAC5D4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAC5B,MAAO,GAAIp5E,EAAO3lB,IAAI,MAAO,CACzB2lB,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjC,IAAIj7B,EAAUr3G,KAAK+2I,UAAU/2I,KAAK0sB,QAAQlqB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBAC5D4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAC5B,KAAO,CACH,GAAyB,OAArBp5E,EAAO3lB,IAAI,MAAgB,CAC3B6Z,KACCA,GAAW6kB,EAAI74B,QAAQk5F,GACxB,QACJ,CACAp5E,EAAOwqH,YAAYt4H,MAAK,EAAEu4H,KAAIC,MAAK3tE,SAC/B/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C/8C,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjC,IAAIj7B,EAAUr3G,KAAK+2I,UAAU/2I,KAAK0sB,QAAQlqB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBAC5D4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAAW,IACpCl5E,OAAM,KACLhM,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAAW,GAE3C,MAzCIllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAyChC,CACJ,MAEIvhG,KAAK6xI,eAAex3H,MAAK,KACrBra,KAAKw3I,sBAAsBn9H,MAAK,KAC5BgC,EAAUlG,OAAOC,KAAKpW,KAAKilE,aAAahjE,OACxC,IAAK,IAAI6iE,KAAa9kE,KAAKilE,YAAa,CACpC,GAAIH,GAAa9kE,KAAKwC,IAAI,aAAc,CACpC6Z,KACCA,GAAW6kB,EAAI74B,QAAQk5F,GACxB,QACJ,CACA,IAAIp5E,EAASnoB,KAAKilE,YAAYH,GAC9B,GAAI38C,EAAO3lB,IAAI,eAAgB,CAC3B,IAAI60G,EAAUr3G,KAAK+2I,UAAU/2I,KAAK0sB,QAAQlqB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBAC5D4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAC5B,MACIllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAEhC,IACF,GAEV,GAER,EAEA+8B,yBAA0B,SAAUrpG,GAChC,OAAO,IAAIjR,SAAQ,CAAC3b,EAAS4b,KACzB,IAAIs9E,GAAa,EACb42C,EAAOn4I,KAAKg3G,QAAQ/hF,EAAQzyB,IAAI,QAChC0+B,EAAM,IAAI,GAAE75B,SAAYgV,EAAU,EAMtC,GALA6kB,EAAI3Y,MAAMpD,IACN,IAAI+tH,EAAc,OAAN/tH,EAAa,aAAiB/J,IAAN+J,EAAkB,OAASA,EAC/D8P,EAAQ1pB,QAAQ,iBAAkB2nI,GAClC7qI,EAAQ6qI,EAAM,IAEd/8H,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,OAAQ,CAClCoa,EAAUlG,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,OACpC,IAAK,IAAI6iE,KAAaqzE,EAAKjwH,QAAS,CAChC,IAAIC,EAASgwH,EAAKjwH,QAAQ48C,GAC1B,GAAI38C,EAAO3lB,IAAI,eAAgB,CAC3B,IAAI60G,EAAUr3G,KAAK+2I,UAAU9hH,EAAQzyB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBACvD4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAC5B,MAAO,GAAIp5E,EAAO3lB,IAAI,MAAO,CACzB2lB,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjC,IAAIj7B,EAAUr3G,KAAK+2I,UAAU9hH,EAAQzyB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBACvD4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAC5B,KAAO,CACH,GAAyB,OAArBp5E,EAAO3lB,IAAI,MAAgB,CAC3B6Z,IACKA,IACwC,IAArClG,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,SAC1Bs/F,EAAa,OACjBrgE,EAAI74B,QAAQk5F,IAEhB,QACJ,CACAp5E,EAAOwqH,YAAYt4H,MAAK,EAAEu4H,KAAIC,MAAK3tE,SAC/B/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C/8C,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjC,IAAIj7B,EAAUr3G,KAAK+2I,UAAU9hH,EAAQzyB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBACvD4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IACA9V,EAAa,MACjBllF,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAAW,IACpCl5E,OAAM,KACLhM,IACKA,IACwC,IAArClG,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,SAC1Bs/F,EAAa,OACjBrgE,EAAI74B,QAAQk5F,GAChB,GAER,CACJ,CACJ,MACI42C,EAAKpH,iBAAiB12H,MAAK,KACvBgC,EAAUlG,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,QACnCoa,GAAW6kB,EAAI74B,QAAQ,OACxB,IAAK,IAAIy8D,KAAaqzE,EAAKjwH,QAAS,CAChC,IAAIC,EAASgwH,EAAKjwH,QAAQ48C,GAC1B38C,EAAOwqH,YAAYt4H,MAAK,EAAEu4H,KAAIC,MAAK3tE,SAC/B/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C/8C,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjC,IAAIj7B,EAAUr3G,KAAK+2I,UAAU9hH,EAAQzyB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,qBACvD4Y,IAAZi8F,GAAwC,OAAf9V,IACzBA,OAAanmF,GACD,OAAZi8F,IAEI9V,EADqC,IAArCprF,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,OACb,MAEA,MAErBoa,KACCA,GAAW6kB,EAAI74B,QAAQk5F,EAAW,IACpCl5E,OAAM,KACLhM,IACKA,IACwC,IAArClG,OAAOC,KAAK+hI,EAAKjwH,SAASjmB,SAC1Bs/F,EAAa,OACjBrgE,EAAI74B,QAAQk5F,GAChB,GAER,IAGR,GAER,EAEA43C,WAAYh9H,eAAgB06D,GACxB,IAAIW,EAAOX,EAASh3E,KAAK,oBAAoB,GAAQq2B,GAAGmvC,WAAW53C,SAC/D0iC,EAAW,GAAQtS,kBAAkB25B,EAAKh4E,KAAK,SAC/CuuH,EAAS,GAAQlwE,kBAAkB25B,EAAKh4E,KAAK,OAC7Cy1B,EAAUj1B,KAAK0sB,QAAQ4I,SAASsjC,aAAazI,IAAanwD,KAAK0sB,QAAQlqB,IAAI,OAASurH,EAAS59D,GAE7FkpF,QAAoBr5I,KAAKm+H,uBACzBmb,QAAwBt5I,KAAKs+H,yBAAyBrpG,GAC1D,GAAoB,UAAhBokH,GAA4C,SAAhBA,GAA8C,UAApBC,EACtD,OAAOD,EACJ,GAAwB,UAApBC,GAAmD,SAApBA,EACtC,OAAOA,EACJ,CACH,IAAIx0E,EAAY+R,EAASh3E,KAAK,oBAAoBL,KAAK,OAEnD2oB,EADOnoB,KAAKg3G,QAAQ/hF,EAAQzyB,IAAI,QAClB0lB,QAAQ48C,GAC1B,GAAI38C,GACIA,EAAO3lB,IAAI,eAAgB,CAE3B,IAAgB,IADFxC,KAAK+2I,UAAU9hH,EAAQzyB,IAAI,OAAQ2lB,EAAOve,GAAIue,EAAO3lB,IAAI,gBAEnE,MAAO,WAEf,CAEJ,OAAO,CACX,CACJ,EAEA4pG,eAAgB,SAAUl1F,GAGtB,GAAa,aAFE,GAAEA,GACG1X,KAAK,QAErB,OAAOQ,KAAK0sH,uBAAuBx1G,EAE3C,EAEAqiI,eAAgB,SAAUC,GACtB,IAAIC,EAAWD,EAAW7rH,SAAS,WAC/B+rH,EAAUF,EAAW7rH,SAAS,UAC9BpP,EAAU,GAAM1C,wBAAwB49H,EAASn3I,QAWrD,MAAO,CAAC4+F,IAVEn/F,OAAO23I,EAAQl6I,KAAK,QAUjB4W,KARFsjI,EAAQ75I,KAAK,OAAO2C,MAAM6uB,KAAI,SAASsoH,GAC9C,MAAO,CACHnI,OAAsC,SAA9B,GAAEmI,GAAYn6I,KAAK,OAC3B+xI,WAAY,GAAM11H,wBAAwB,GAAE89H,GAAYr3I,QACxDgvI,SAAUn0H,SAAS,GAAEw8H,GAAYn6I,KAAK,QAE9C,IAEmB+e,UACvB,EAEAy4F,QAAS,SAAU9+F,GAGf,OAFKlY,KAAKs3I,MAAM90I,IAAI0V,IAChBlY,KAAKs3I,MAAMvmG,OAAO,CAAC74B,OAAM,CAACwU,QAAQ1sB,KAAK0sB,UACpC1sB,KAAKs3I,MAAM90I,IAAI0V,EAC1B,EAEAkG,QAASjC,eAAgBjF,EAASlY,GAC9B,IAEIw6I,EAFA3iE,EAAW,GAAE3/D,GACbi5C,EAAW,GAAQtS,kBAAkBg5B,EAASr3E,KAAK,UAAYR,EAAQmxD,SAG3E,GAAI0mB,EAASh3E,KAAK,iBAAiB,GAAQq2B,GAAGC,IAAI,MAAMl0B,OAAQ,CAC5D,IAAI23I,EAAK/iE,EAASh3E,KAAK,WAAWqyB,QAClCi+B,EAAW,GAAQtS,kBAAkB+7F,EAAGp6I,KAAK,SAC7Cg6I,EAAa3iE,EAASlpD,SAAS,UAAUA,SAAS,aAAaA,SAAS,WAAWA,SAAS,oBAAoB,GAAQuI,GAAGmvC,UAC/H,MAEIm0E,EADK3iE,EAASh3E,KAAK,WAAW,GAAQq2B,GAAGg+B,QAAQ,MAAMjyD,OAC1C40E,EAASlpD,SAAS,WAAW,GAAQuI,GAAGg+B,aAAavmC,SAAS,aAAaA,SAAS,WAAWA,SAAS,oBAAoB,GAAQuI,GAAGmvC,WAGvIwR,EAASlpD,SAAS,oBAAoB,GAAQuI,GAAGmvC,WAElE,IAAIw0E,EAAgB75I,KAAKu5I,eAAeC,GACpClI,EAAWtxI,KAAKwC,IAAI,aAEpBs3I,EADiBD,EAAczjI,KAAKO,QAAO66H,GAAUA,EAAOF,UAAYA,IAC9C,GAC9B,IAAKwI,EACD,OAAO,KACX,IACIC,EADA5B,EAAOn4I,KAAKg3G,QAAQ7mD,GAExB,IACI4pF,QAAoB5B,EAAK/5H,QAAQy7H,EAAc34C,IAAK44C,EAAUvI,WAAYuI,EAAUtI,OAIxF,CAFA,MAAO1/H,GACH,MAAMA,CACV,CACA,IAAKioI,EACD,OACJ,IAAIt2C,EAAoBs2C,EAAY12I,MAAM,EAAG,IACzCib,EAAWy7H,EAAY12I,MAAM,IAEjC,OAAO,GAAMya,IAAIM,QAAQqlF,EAAmBnlF,EAAUu7H,EAAct7H,QACxE,EAEAy7H,SAAU,SAAU/9H,GAChB,OAAOzI,KAAKpgB,OAAOC,gBAAgB,IAAIsQ,WAAWsY,IACtD,EAEAg+H,QAAS,SAAUpH,EAAK3tE,EAAIg1E,GACxB,IAAKl6I,KAAK0sB,QAAQK,WACd,OACJ,IAAIotH,EAAan6I,KAAK0sB,QAAQi/B,qBAAqB2H,MAC/CuhF,EAAU,GACdqF,EAAI7nI,SAASugI,IACT,IAAIhpI,EAAKgpI,EAAGgC,MACR7B,EAAS,GAAM/2H,oBAAoB42H,EAAG8B,QAAQ3B,QAC9CqB,EAAU,GAAMp4H,oBAAoB42H,EAAG8B,QAAQN,SAC/C/9H,EAAMqQ,KAAK6rB,UAAU,CAACwgG,SAAQqB,YAC7BxB,EAAG+B,YACJE,EAAQzzI,KAAK,CAACwI,GAAIA,EAAIyM,IAAK08H,IAC3B/yI,KAAK60I,QAAQ92C,IAAI,CAACn0F,KAAIyM,QAC1B,IAEJ8jI,EAAWC,YAAW,KAClBD,EAAWrG,cAAc,CACrBjB,IAAK,CAACjpI,GAAIipI,EAAI+B,MAAOv+H,IAAK,GAAM2F,oBAAoB62H,EAAI6B,QAAQ3B,SAChEsH,KAAM,GAAMr+H,oBAAoB62H,EAAI8B,WACpCzvE,GAAK,GAAMlpD,oBAAoBkpD,GAC/Bg1E,IAAKrF,EACL/vE,UAAW9kE,KAAKwC,IAAI,cACtB,GAEV,EAEAi1I,aAAct7H,eAAgBvS,GAC1B,IAAK5J,KAAK0sB,QACN,OACJ,IAAIq4C,EAAS/kE,KAAK+kE,OACdu1E,EAAat6I,KAAK+kE,OAAOC,QAAQnlE,MAAKgqG,GAAKA,EAAE+qC,QAAUhrI,IAAOigG,EAAE8qC,YACpE,IAAK2F,EACD,OACJ,IAAIvH,EAAS,GAAM/2H,oBAAoBs+H,EAAW5F,QAAQ3B,QACtDqB,EAAU,GAAMp4H,oBAAoBs+H,EAAW5F,QAAQN,SACvD/9H,EAAMqQ,KAAK6rB,UAAU,CAACwgG,SAAQqB,YAC9B1xI,EAAM1C,KAAK+kE,OAAOC,QAAQ5gE,QAAQk2I,GAItC,GAHAv1E,EAAOC,QAAQ/qB,OAAOv3C,EAAK,GAC3B1C,KAAKq1I,iBAAiBt3C,IAAI,CAACn0F,KAAIyM,QAC/BrW,KAAK60I,QAAQ3jI,OAAOtH,GAChBm7D,EAAOC,QAAQ/iE,QAAU8iE,EAAOC,QAAQ/iE,OAAS,GAAUxO,kBAAmB,CAC9E,IAAI8mJ,EAAe,GAAU/mJ,cAAgBuxE,EAAOC,QAAQ/iE,OACxDu4I,EAAU,GAAE72E,OAAO,8CAAmD,SAAS1J,OAAO26E,MAC1F,IAAK,IAAIpxI,IAAMg3I,EAASA,EAAUD,EAAc/2I,UACtCxD,KAAK+kE,OAAOwvE,eAAe/wI,GACrCxD,KAAK0sB,QAAQ4mC,MAAMwgF,eACvB,MAEI9zI,KAAK0sB,QAAQ4mC,MAAMwgF,eAC3B,EAEA4D,aAAc,SAAUtgI,GACpB,IAAIxN,EAAKwN,EAAMxN,GACXgjB,EAAUxV,EAAMqjI,IAChBtD,EAAW,GAAE9/H,MAAMrX,KAAKwC,IAAI,aAChC,GAAE0oB,QAAQisH,KAAcA,EAAW,CAAC,GACpCA,EAASvtI,GAAMgjB,EACf5sB,KAAK+iB,KAAK,WAAYo0H,EAC1B,EAEAtG,cAAe,SAAUjnI,GACrB,IAAIutI,EAAW,GAAE9/H,MAAMrX,KAAKwC,IAAI,aAChC,GAAE0oB,QAAQisH,KAAcA,EAAW,CAAC,UAC7BA,EAASvtI,GAChB5J,KAAK+iB,KAAK,WAAYo0H,EAC1B,EAEAP,WAAY,SAAUhtI,GAElB,OADe,GAAEyN,MAAMrX,KAAKwC,IAAI,aAChBoH,EACpB,EAEAkqI,cAAe33H,iBACX,IAAKnc,KAAK+kE,OACN,OACJ,IAAI8tE,EAAM7yI,KAAK+kE,OAAOC,QAAQnlE,MAAK+yI,GAAMA,EAAG+B,YACxCzvE,QAAWllE,KAAKkjE,MAAM4vE,qBACtBoH,EAAMl6I,KAAK+kE,OAAOC,QACjB6tE,GAAQ3tE,EAIbllE,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMo/E,cAAc,CAACx6H,IAAKlY,KAAK0sB,QAAQlqB,IAAI,OAAQoH,GAAI5J,KAAKwC,IAAI,eAAe,KACzGxC,KAAKi6I,QAAQpH,EAAK3tE,EAAG6tE,OAAQmH,EAAI,IACjC5xH,IAC0C,KAArC,GAAEA,GAAKzoB,KAAK,SAASL,KAAK,SAC3BQ,KAAK0sB,QAAQi/B,qBAAqB2H,MAAMonF,kBAAiB,KACrD16I,KAAKi6I,QAAQpH,EAAK3tE,EAAG6tE,OAAQmH,EAAI,GACnC,IATVl6I,KAAK+f,IAAI,iBAAiB,EAWlC,EAEAy3H,oBAAqBr7H,iBACjB,OAAO,IAAI6H,SAAQ,CAAC3b,EAAS4b,KACzB,IAAI23B,EAAO57C,KAAK0sB,QAAQi/B,qBACxB,GAAI/P,GAAQA,EAAK0X,OAAS1X,EAAK0X,MAAMprC,QAAS,CAC1C,IAAK,IAAI0oH,KAAK5wI,KAAKilE,YACVrpB,EAAK0X,MAAMprC,QAAQ0oH,KACpB5wI,KAAK0sB,QAAQ4mC,MAAMu9E,cAAc,UAAY7wI,KAAKilE,YAAY2rE,GAAGtrF,QAAQtjD,mBAClEhC,KAAKilE,YAAY2rE,IAGhC,IAAIv0H,EAAUlG,OAAOC,KAAKwlC,EAAK0X,MAAMprC,SAASjmB,OAC9C,IAAK,IAAI6iE,KAAalpB,EAAK0X,MAAMprC,QAAS,CACjCloB,KAAKilE,YAAYH,KAClB9kE,KAAKilE,YAAYH,GAAa,IAAI,UAAc,CAC5C5sD,IAAKlY,KAAK0sB,QAAQlqB,IAAI,OACtBoH,GAAIk7D,GACL,CAACp4C,QAAS1sB,KAAK0sB,QAASw2C,MAAOljE,KAAKkjE,SAC3C,IAAI/6C,EAASnoB,KAAKilE,YAAYH,GAC1BlrD,EAAQgiC,EAAK0X,MAAMprC,QAAQ48C,GAAWlrD,MAC1C,GAAKuO,EAAO3lB,IAAI,MAiBJ2lB,EAAO3lB,IAAI,gBAKnB6Z,KACCA,GAAWhU,MALZ8f,EAAOpI,IAAI,cAAeoI,EAAOmqH,uBACjCj2H,KACCA,GAAWhU,SApBO,CACnB,GAAyB,OAArB8f,EAAO3lB,IAAI,MAAgB,CAC3B6Z,KACCA,GAAWhU,IACZ,QACJ,CACA8f,EAAOwqH,YAAYt4H,MAAK,EAAEu4H,KAAIC,MAAK3tE,SAC/B/8C,EAAOpI,IAAI,KAAM,GAAMlE,wBAAwBqpD,IAC/C,IAAIC,EAAch9C,EAAOmqH,sBACpBnqH,EAAO3lB,IAAI,gBAAkB2lB,EAAO3lB,IAAI,iBAAmB2iE,GAC5Dh9C,EAAOpI,IAAI,cAAeolD,GAC9B9oD,KACCA,GAAWhU,GAAS,IACtBggB,OAAM,KACLhM,KACCA,GAAWhU,GAAS,GAE7B,CAQAuR,GAASuO,EAAOpI,IAAI,QAASnG,EACjC,CACJ,IAER,IAGJ,qBAA2BuH,SAAS0B,iBAAiB7Y,OAAO,CACxDqX,SAAU,CACNkS,SAAU,CAAC,GAGf2lH,WAAY,SAAUjkH,EAASsiD,GAG3B,OAFe,GAAElgE,MAAMrX,KAAKwC,IAAI,aACAyyB,EAAQzyB,IAAI,SAAW,CAAC,GAChC+0E,EAC5B,EAEAswD,WAAY,SAAU5yG,EAASsiD,EAAWrgE,GACtC,IAAIqc,EAAW,GAAElc,MAAMrX,KAAKwC,IAAI,aAC5Bm4I,EAAmBpnH,EAAS0B,EAAQzyB,IAAI,SAAW,CAAC,EACxDm4I,EAAiBpjE,GAAargE,EAC9Bqc,EAAS0B,EAAQzyB,IAAI,QAAUm4I,EAC/B36I,KAAK+iB,KAAK,WAAYwQ,EAC1B,EAEAosE,cAAe,SAAUvoF,EAAO6d,GAC5B,IAAImrE,EAAYhpF,EAAMgpF,UAClB7sE,EAAW,GAAElc,MAAMrX,KAAKwC,IAAI,aAC5Bm4I,EAAmBpnH,EAAS0B,EAAQzyB,IAAI,SAAW,CAAC,SACjDm4I,EAAiBv6C,GACxB7sE,EAAS0B,EAAQzyB,IAAI,QAAUm4I,EAC/B36I,KAAK+iB,KAAK,WAAYwQ,EAC1B,EAEA04E,cAAe,SAAU70F,EAAO6d,GAC5B,IAAIsiD,EAAYngE,EAAMmgE,UAClB6oB,EAAYhpF,EAAMgpF,UAGlBlpF,GAFW,GAAEG,MAAMrX,KAAKwC,IAAI,aACAyyB,EAAQzyB,IAAI,SAAW,CAAC,GACzB49F,GAC3BA,GACApgG,KAAK2/F,cAAc,CAACS,aAAYnrE,GAChCsiD,GACAv3E,KAAK6nI,WAAW5yG,EAASsiD,EAAWrgE,EAC5C,IAGJ,uBAA6BiK,SAASC,MAAMpX,OAAO,CAC/C2X,WAAY,WACR3hB,KAAK46I,UAAY,CACbC,QAAS,EACTC,UAAW,GAEf96I,KAAKkjE,MAAQ,CAAC,CAClB,EAEA4vE,mBAAoB,WAChB,OAAO9uH,QAAQ3b,QAAQrI,KAAKwC,IAAI,eACpC,EAEAu4I,uBAAwB,WACpB,OAAO/2H,QAAQ3b,QAAQrI,KAAKwC,IAAI,kBACpC,EAEAu7F,IAAK,SAAU1nF,EAAKtL,GAChB,QAAYqQ,IAAR/E,QAA+B+E,IAAVrQ,GAA+B,OAARsL,GAA0B,OAAVtL,EAC5D,MAAM,IAAIiwI,MAAM,iCACpBh7I,KAAKkjE,MAAM7sD,GAAOtL,CACtB,EAEAvI,IAAK,SAAU6T,EAAK4kI,GAChB,GAAI5kI,QACA,MAAM,IAAI2kI,MAAM,6CACpB,OAAI3kI,KAAOrW,KAAKkjE,MACLljE,KAAKkjE,MAAM7sD,GAEX4kI,CAEf,EAEA/pI,OAAQ,SAAUmF,GACd,GAAIA,QACA,MAAM,IAAI2kI,MAAM,uDACbh7I,KAAKkjE,MAAM7sD,EACtB,EAEA6kI,kBAAmB,SAAUpvB,EAAYmoB,EAAakH,GAClD,GAAIrvB,QACA,MAAM,IAAIkvB,MAAM,sDAEpB,KAAM/G,aAAuBp3H,aACzB,MAAM,IAAIm+H,MAAM,6CAEpB,IAAI3jC,EAAUr3G,KAAKwC,IAAI,cAAgBspH,GACvC,YAAgB1wG,IAAZi8F,EACOrzF,QAAQ3b,SAAQ,GAEpB2b,QAAQ3b,QAAQ+yI,KAAKp5I,SAASiyI,KAAiBmH,KAAKp5I,SAASq1G,GACxE,EAEAgkC,gBAAiB,SAAUvvB,GACvB,GAAIA,QACA,MAAM,IAAIkvB,MAAM,oDACpB,OAAOh3H,QAAQ3b,QAAQrI,KAAKwC,IAAI,cAAgBspH,GACpD,EAEAwvB,aAAc,SAAUxvB,EAAYmoB,GAChC,GAAInoB,QACA,MAAM,IAAIkvB,MAAM,oDAEpB,IAAI11F,EAAU,IAAIkrF,GAAsB+K,WAAWzvB,GAE/C0vB,EAAWx7I,KAAKwC,IAAI,cAAgB8iD,EAAQm2F,WAGhD,OAFAz7I,KAAK+9F,IAAI,cAAgBz4C,EAAQm2F,UAAWxH,GAExCuH,GAAYt9I,UAAU8D,SAASiyI,KAAiB/1I,UAAU8D,SAASw5I,GAC5Dx3H,QAAQ3b,SAAQ,GAEhB2b,QAAQ3b,SAAQ,EAG/B,EAGAqzI,WAAY,SAAU9G,GAClB,IAAIr1I,EAAMS,KAAKwC,IAAI,iBAAmBoyI,GAItC,YAHYx5H,IAAR7b,IACAA,EAAM,CAACwzI,OAAQxzI,EAAIwzI,OAAQqB,QAAS70I,EAAI60I,UAErCpwH,QAAQ3b,QAAQ9I,EAC3B,EAEA21I,YAAa,SAAUN,EAAOF,GAC1B,OAAO1wH,QAAQ3b,QAAQrI,KAAK+9F,IAAI,iBAAmB62C,EAAOF,GAC9D,EAEA+C,aAAc,SAAU7C,GACpB50I,KAAKuL,QAAQ,iBAAkBqpI,EAEnC,EAGA+G,iBAAkB,SAAU/G,GACxB,IAAIr1I,EAAMS,KAAKwC,IAAI,oBAAsBoyI,GAIzC,YAHYx5H,IAAR7b,IACAA,EAAM,CAACwzI,OAAQxzI,EAAIwzI,OAAQqB,QAAS70I,EAAI60I,UAErCpwH,QAAQ3b,QAAQ9I,EAC3B,EAEA61I,kBAAmB,SAAUR,EAAOF,GAChC,OAAO1wH,QAAQ3b,QAAQrI,KAAK+9F,IAAI,oBAAsB62C,EAAOF,GACjE,EAEAkH,mBAAoB,SAAUhH,GAC1B,OAAO5wH,QAAQ3b,QAAQrI,KAAKkR,OAAO,oBAAsB0jI,GAC7D,EAEAiH,YAAa,SAAU/vB,GACnB,OAAO9nG,QAAQ3b,QAAQrI,KAAKwC,IAAI,UAAYspH,GAChD,EAEAwqB,WAAY,SAAUxqB,GAClB,QAAS9rH,KAAKwC,IAAI,UAAYspH,EAClC,EAEA0qB,aAAc,SAAU1qB,EAAYgwB,GAEhC,OADA97I,KAAKuL,QAAQ,iBAAkB,CAAC3B,GAAI,UAAYkiH,EAAY2uB,IAAKqB,IAC1D93H,QAAQ3b,QAAQrI,KAAK+9F,IAAI,UAAY+tB,EAAYgwB,GAC5D,EAEAjL,cAAe,SAAU/kB,GACrB,OAAO9nG,QAAQ3b,QAAQrI,KAAKkR,OAAO,UAAY46G,GACnD,EAEAiwB,eAAgB,SAAUjwB,GACtB,IAAIqrB,EAAW,GACf,IAAK,IAAIvtI,KAAM5J,KAAKkjE,MACZt5D,EAAGge,WAAW,UAAYkkG,IAC1BqrB,EAAS/1I,KAAK,CAACwI,GAAIA,EAAIgjB,QAAS5sB,KAAKkjE,MAAMt5D,KAGnD,OAAOoa,QAAQ3b,QAAQ8uI,EAC3B,EAEA6E,kBAAmB,SAAUlwB,GACzB,IAAK,IAAIliH,KAAM5J,KAAKkjE,MACZt5D,EAAGge,WAAW,UAAYkkG,WACnB9rH,KAAKkjE,MAAMt5D,GAG1B,OAAOoa,QAAQ3b,SACnB,IAGJ,0BAAgC,oBAAwB,CACpD0oB,UAAW,2BAEXE,OAAQ,CACJ,oBAAqB,cACrB,oBAAqB,yBAGzB1C,YAAa,SAAUvvB,GACnBgB,KAAK0sB,QAAU1tB,EAAQ0tB,QACvB1sB,KAAKohC,oBACLphC,KAAKD,IAAIJ,KAAK,GAAUs8I,aAAa,CAAC/jI,IAAKlY,KAAK0sB,QAAQlqB,IAAI,UAC5D,gCAAoCxC,KAAKD,KACzC,sBAA0B,iBAAkB,mCAC5C,MAAU,gBAAiBC,KAAK65B,gBAAiB75B,MACjDA,KAAK0sB,QAAQE,QAAQvJ,GAAG,mBAAoBrjB,KAAK46D,gBAAiB56D,MAClEA,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKohC,kBAAmBphC,MACjEA,KAAK0sB,QAAQlK,SAASa,GAAG,eAAgBrjB,KAAKk8I,cAAel8I,KACjE,EAEAohC,kBAAmB,WACf,IAAIv7B,EAAQ7F,KAAK0sB,QAAQlK,SAAShgB,IAAI,SACtCxC,KAAKD,IAAIP,KAAK,aAAcqG,EAChC,EAEAg0B,gBAAiB,WACR75B,KAAK0sB,QAAQ48G,0BAA4BtpI,KAAK0sB,QAAQ48G,yBAAyBjlG,MAAQrkC,KAAKqkC,MAEjGrkC,KAAKD,IAAI+K,SACT,gCAAoC9K,KAAKD,KACzC,sBAA0B,iBAAkB,mCAChD,EAEA66D,gBAAiB,WACR56D,KAAK0sB,QAAQC,eACd3sB,KAAKkL,OACb,EAEAixI,YAAa,WACTn8I,KAAK0sB,QAAQlK,SAASO,KAAK,SAAS,GACpC/iB,KAAKkL,QACLlL,KAAK0sB,QAAQ4mC,MAAQ,IAAI,SAAa,CAAC1pD,GAAI,SAAU,CACjD8iB,QAAS1sB,KAAK0sB,QACdrK,aAAc,oBAA0B,mBAAqBriB,KAAK0sB,QAAQlqB,IAAI,OAC9E+f,MAAO,WAEXnY,YAAW,KACPpK,KAAK0sB,QAAQ4mC,MAAMf,aAAa,GACjC,IACP,EAEA6pF,sBAAuB,WACnBp8I,KAAK0sB,QAAQlK,SAASO,KAAK,SAAS,GACpC/iB,KAAKkL,OACT,EAEAgxI,cAAe,WACPl8I,KAAK0sB,QAAQlK,SAAShgB,IAAI,UAC1BxC,KAAKkL,OACb,EAEAA,MAAO,WACHlL,KAAKuL,QAAQ,WAAavL,KAAKkR,SAC/BlR,KAAK0sB,QAAQ48G,8BAA2BluH,EACxC,sBAA0B,iBAAkB,kCAChD,IAGJ,0BAA6B,WACpBpb,KAAKwiB,SAAShgB,IAAI,WAEvBxC,KAAKszD,MAAQ,IAAI,SAAa,CAAC1pD,GAAI,SAAU,CACzC8iB,QAAS1sB,KACTqiB,aAAc,oBAA0B,mBAAqBriB,KAAKwC,IAAI,OACtE+f,MAAO,WAEf,IAEA,0BAA6B,WACpBviB,KAAKwiB,SAAShgB,IAAI,UAEvBxC,KAAKszD,MAAMf,aACf,IAAG,GAAM,GAET,YCpoEA,cAAkB8pF,GAAOjsG,GAAa,GAASoU,GAC3Cp9B,GAAUk1H,GAAWhnH,GAAU5B,GAAO62G,GAAWhzH,GAAUglI,GAAI,IACnE,EAAAC,EAAO1vI,OAAS,GAEhB,W,kBClBA,IAAIukB,EAAM,CACT,yBAA0B,OAI3B,SAASorH,EAAe5/F,GACvB,IAAIjzC,EAAK8yI,EAAsB7/F,GAC/B,OAAO8/F,EAAoB/yI,EAC5B,CACA,SAAS8yI,EAAsB7/F,GAC9B,IAAI8/F,EAAoBC,EAAEvrH,EAAKwrB,GAAM,CACpC,IAAI/qC,EAAI,IAAIkpI,MAAM,uBAAyBn+F,EAAM,KAEjD,MADA/qC,EAAEpR,KAAO,mBACHoR,CACP,CACA,OAAOuf,EAAIwrB,EACZ,CACA4/F,EAAermI,KAAO,WACrB,OAAOD,OAAOC,KAAKib,EACpB,EACAorH,EAAep0I,QAAUq0I,EACzBtvH,EAAOyvH,QAAUJ,EACjBA,EAAe7yI,GAAK,K,kBCtBpB,IAAIynB,EAAM,CACT,8BAA+B,MAC/B,sCAAuC,MACvC,kCAAmC,MACnC,kCAAmC,MACnC,gCAAiC,MACjC,qCAAsC,MACtC,8BAA+B,MAC/B,+BAAgC,MAChC,oCAAqC,MACrC,0CAA2C,KAC3C,uCAAwC,MACxC,wCAAyC,KACzC,6CAA8C,MAC9C,2BAA4B,MAC5B,iCAAkC,IAClC,gCAAiC,MACjC,iCAAkC,MAClC,6BAA8B,MAC9B,+BAAgC,MAChC,+BAAgC,MAChC,6BAA8B,MAC9B,wCAAyC,MACzC,uCAAwC,KACxC,mCAAoC,MACpC,gDAAiD,MACjD,oCAAqC,MACrC,kCAAmC,MACnC,2CAA4C,MAC5C,oBAAqB,MACrB,kCAAmC,MACnC,2BAA4B,MAC5B,2BAA4B,MAC5B,qBAAsB,MACtB,uCAAwC,MACxC,+BAAgC,MAChC,2BAA4B,KAC5B,2BAA4B,MAC5B,qCAAsC,MACtC,2BAA4B,MAC5B,gCAAiC,MACjC,uBAAwB,MACxB,sBAAuB,MACvB,qCAAsC,MACtC,2BAA4B,MAC5B,4BAA6B,MAC7B,oCAAqC,KACrC,yBAA0B,MAC1B,yBAA0B,MAC1B,gCAAiC,KACjC,2BAA4B,MAC5B,wBAAyB,MACzB,0CAA2C,MAC3C,kCAAmC,MACnC,6BAA8B,MAC9B,0CAA2C,MAC3C,iDAAkD,KAClD,wCAAyC,MACzC,gDAAiD,MACjD,8BAA+B,MAC/B,4BAA6B,MAC7B,sCAAuC,MACvC,mCAAoC,MACpC,4CAA6C,MAC7C,qCAAsC,MACtC,6BAA8B,MAC9B,qCAAsC,MACtC,oCAAqC,MACrC,kCAAmC,MACnC,sCAAuC,MACvC,8CAA+C,MAC/C,8CAA+C,MAC/C,8CAA+C,MAC/C,8CAA+C,MAC/C,8CAA+C,MAC/C,uCAAwC,MACxC,uCAAwC,MACxC,4CAA6C,MAC7C,uCAAwC,MACxC,iCAAkC,MAClC,6BAA8B,MAC9B,mCAAoC,MACpC,iCAAkC,MAClC,+BAAgC,MAChC,uCAAwC,KACxC,uCAAwC,MACxC,uCAAwC,MACxC,uCAAwC,MACxC,uCAAwC,MACxC,8BAA+B,MAC/B,sCAAuC,MACvC,+BAAgC,MAChC,0BAA2B,MAC3B,oCAAqC,MACrC,sCAAuC,MACvC,uCAAwC,MACxC,8BAA+B,MAC/B,2CAA4C,MAC5C,sCAAuC,MACvC,uCAAwC,MACxC,kCAAmC,MACnC,wCAAyC,MACzC,oCAAqC,MACrC,sCAAuC,MACvC,qCAAsC,MACtC,+BAAgC,MAChC,6BAA8B,KAC9B,2DAA4D,MAC5D,8CAA+C,MAC/C,mDAAoD,MACpD,yDAA0D,MAC1D,uDAAwD,MACxD,wCAAyC,MACzC,iDAAkD,MAClD,uDAAwD,MACxD,oDAAqD,MACrD,yDAA0D,MAC1D,0DAA2D,MAC3D,gDAAiD,MACjD,sDAAuD,MACvD,sDAAuD,MACvD,2CAA4C,MAC5C,iDAAkD,MAClD,yCAA0C,MAC1C,kDAAmD,MACnD,6DAA8D,MAC9D,uDAAwD,MACxD,6DAA8D,MAC9D,wDAAyD,KACzD,iDAAkD,MAClD,2CAA4C,MAC5C,uDAAwD,MACxD,6CAA8C,MAC9C,0DAA2D,MAC3D,qEAAsE,MACtE,+CAAgD,MAChD,oDAAqD,MACrD,yCAA0C,MAC1C,0CAA2C,MAC3C,6BAA8B,MAC9B,8BAA+B,MAC/B,iCAAkC,MAClC,yBAA0B,MAC1B,uCAAwC,MACxC,+CAAgD,MAChD,8BAA+B,MAC/B,mCAAoC,MACpC,6BAA8B,MAC9B,oCAAqC,MACrC,4BAA6B,KAC7B,8BAA+B,MAC/B,+BAAgC,MAChC,kCAAmC,MACnC,+BAAgC,MAChC,iCAAkC,MAClC,uCAAwC,MACxC,mDAAoD,MACpD,2CAA4C,MAC5C,0CAA2C,KAC3C,kCAAmC,MACnC,6BAA8B,MAC9B,6BAA8B,MAC9B,sBAAuB,MACvB,wBAAyB,MACzB,kBAAmB,MACnB,8BAA+B,MAC/B,yBAA0B,MAC1B,qBAAsB,MACtB,yBAA0B,MAC1B,iBAAkB,MAClB,0BAA2B,MAC3B,kBAAmB,KACnB,2BAA4B,MAC5B,oBAAqB,MACrB,qBAAsB,MACtB,0BAA2B,MAC3B,kCAAmC,MACnC,mCAAoC,MACpC,qBAAsB,MACtB,2BAA4B,MAC5B,mBAAoB,MACpB,4BAA6B,MAC7B,iCAAkC,MAClC,wBAAyB,MACzB,iCAAkC,MAClC,qBAAsB,MACtB,0BAA2B,MAC3B,kBAAmB,MACnB,2BAA4B,MAC5B,wBAAyB,KACzB,2BAA4B,MAC5B,sBAAuB,KACvB,+BAAgC,MAChC,wBAAyB,MACzB,sBAAuB,MACvB,kBAAmB,MACnB,8BAA+B,MAC/B,sBAAuB,MACvB,6BAA8B,MAC9B,0BAA2B,MAC3B,2BAA4B,MAC5B,0BAA2B,MAC3B,qBAAsB,MACtB,mBAAoB,MACpB,uBAAwB,KACxB,0BAA2B,MAC3B,wBAAyB,MACzB,mBAAoB,MACpB,mBAAoB,KACpB,iCAAkC,MAClC,4BAA6B,MAC7B,yBAA0B,MAC1B,kBAAmB,MACnB,gCAAiC,MACjC,wBAAyB,MACzB,gCAAiC,KACjC,sCAAuC,KACvC,2BAA4B,MAC5B,mBAAoB,MACpB,oBAAqB,MACrB,qBAAsB,MACtB,mBAAoB,MACpB,6CAA8C,MAC9C,yCAA0C,MAC1C,0CAA2C,MAC3C,iCAAkC,MAClC,oBAAqB,KACrB,kBAAmB,MACnB,0BAA2B,MAC3B,yBAA0B,MAC1B,iCAAkC,MAClC,yBAA0B,MAC1B,kBAAmB,MACnB,kBAAmB,MACnB,oBAAqB,MACrB,kCAAmC,MACnC,yBAA0B,MAC1B,iBAAkB,MAClB,4BAA6B,MAC7B,oBAAqB,MACrB,oBAAqB,MACrB,4BAA6B,MAC7B,+BAAgC,KAChC,6BAA8B,KAC9B,kBAAmB,MACnB,uBAAwB,MACxB,mBAAoB,MACpB,yBAA0B,MAC1B,gCAAiC,KACjC,wBAAyB,MACzB,4BAA6B,MAC7B,2BAA4B,MAC5B,kBAAmB,MACnB,qBAAsB,MACtB,0BAA2B,MAC3B,2BAA4B,OAI7B,SAASorH,EAAe5/F,GACvB,IAAIjzC,EAAK8yI,EAAsB7/F,GAC/B,OAAO8/F,EAAoB/yI,EAC5B,CACA,SAAS8yI,EAAsB7/F,GAC9B,IAAI8/F,EAAoBC,EAAEvrH,EAAKwrB,GAAM,CACpC,IAAI/qC,EAAI,IAAIkpI,MAAM,uBAAyBn+F,EAAM,KAEjD,MADA/qC,EAAEpR,KAAO,mBACHoR,CACP,CACA,OAAOuf,EAAIwrB,EACZ,CACA4/F,EAAermI,KAAO,WACrB,OAAOD,OAAOC,KAAKib,EACpB,EACAorH,EAAep0I,QAAUq0I,EACzBtvH,EAAOyvH,QAAUJ,EACjBA,EAAe7yI,GAAK,K,kBCpRpB,aAAmC,GAAK,IAAI,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,GAAG,GAAK,GAAG,QAAQ,GAAG,WAAW,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,IAAM,GAAG,GAAK,GAAG,QAAQ,EAAE,GAAK,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,GAAG,QAAQ,EAAE,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,IAAM,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,QAAQ,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,GAAG,QAAQ,EAAE,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,QAAQ,EAAE,GAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,IAAM,EAAE,IAAM,EAAE,QAAQ,GAAG,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,aAAa,EAAE,QAAQ,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsBgX,GAA6B,6B,iBCApvB,IAAIyQ,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,M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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"last-auth resource text-color-700\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n    {[ if (resource_obj) {]}\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[}]}\\n    <div class=\\\"token-indicator\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <!--<i title=\\\"Back to settings\\\" class=\\\"mdi mdi-arrow-left mdi-28px back-to-settings\\\"></i>-->\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"omemo-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-security\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}' class=\\\"settings-block-wrap omemo-info\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap manage-devices\\\">\\n                            <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>\\n                        </div>\\n                        <div class=\\\"setting-wrap purge-keys\\\">\\n                            <button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    {[ if (resource_obj) {]}\\n    <div class=\\\"last-auth resource\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[} else {]}\\n    <div class=\\\"last-auth\\\">{{last_auth}}</div>\\n    {[}]}\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border\\\"/>\\n<div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n    <div class=\\\"dropdown-button circle-avatar border-color ground-color-700 noselect\\\"/>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"{[if (show_label) {]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label\\\"))]}:</div>\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n{[}]}\\n<div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n    <div class=\\\"device-id\\\">\\n        <div class=\\\"label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}:</div>\\n        <div class=\\\"value\\\">{{id}}</div>\\n    </div>\\n</div>\\n<div class=\\\"fingerprint-wrap\\\">\\n    <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n        <div class=\\\"label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}:</div>\\n        <div class=\\\"value\\\">{{fingerprint}}</div>\\n    </div>\\n    {[if (error) {]}\\n    <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n    {[}]}\\n    {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons device-fingerprints-part\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n        {[if (delete_button){]}\\n        <div class=\\\"btn-main btn-flat btn-delete-fingerprint text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"storage\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-database\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__data_and_storage\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-wan\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_settings\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"developer\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-bug\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__developer\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"security\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-security\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"about\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-information\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__about\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"side-panel-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_side_panel\\\"))]}</div>\\n                            <div class=\\\"setting side-panel-setting radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"dark\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dark-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-dark-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_dark\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"light\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-light-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-light-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_light\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting side-panel-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"side_panel_blur_switch\\\"/>\\n                                    <label for=\\\"side_panel_blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                </div>\\n                                <div class=\\\"transparency-setting\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"transparency_switch\\\"/>\\n                                        <label for=\\\"transparency_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__checkbox_transparency\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"transparency\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    <span class=\\\"all-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n    <span class=\\\"msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item group-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__groups\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"message-group\\\"></svg>\\n    <span class=\\\"group-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__mentions\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-at\\\"></svg>\\n    <span class=\\\"mentions-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n    <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n</div>\\n\\n<div class=\\\"toolbar-item search hidden\\\" title='{[print(xabber.getString(\\\"search\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-searching\\\"></svg>\\n</div>\\n\\n<div class=\\\"add-something-wrap\\\">\\n    <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n    </div>\\n\\n    <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n        <div class=\\\"add-variant contact\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant public-groupchat\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant incognito-groupchat\\\">\\n            <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n            </svg>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant account\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"divider noselect\\\"></div>\\n\\n<div class=\\\"accounts-wrap\\\">\\n    <div class=\\\"accounts\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    {[if (SCREEN_ABOUT) {]}\\n    <div class=\\\"toolbar-item about\\\" title='{[print(xabber.getString(\\\"about\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-information\\\"></i>\\n    </div>\\n    {[}]}\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n        <img class=\\\"server-icon hidden\\\" src=\\\"./assets/images/BotIcon20x20@2x.png\\\">\\n        <img class=\\\"group-chat-icon hidden\\\" src=\\\"./assets/images/GroupchatIcon20x20@2x.png\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/account-outline</title>\\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/address-outline</title>\\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-off</title>\\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-sleep</title>\\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell</title>\\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/birthday-outline</title>\\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/blocked-add</title>\\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/blocked</title>\\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot-variant</title>\\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot</title>\\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call-outline</title>\\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call</title>\\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/camera-retake</title>\\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/cancel</title>\\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/channel</title>\\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-down</title>\\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-left-variant</title>\\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-right-variant</title>\\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/circles</title>\\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/clock-outline</title>\\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/close</title>\\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-gps</title>\\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-question</title>\\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs</title>\\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/description-outline</title>\\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/devices</title>\\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit-outline</title>\\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit</title>\\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/email-outline</title>\\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-audio</title>\\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-document</title>\\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-pdf</title>\\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-presentation</title>\\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-video</title>\\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-zip</title>\\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file</title>\\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname-outline</title>\\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname</title>\\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-incognito</title>\\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-invite</title>\\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-private</title>\\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-public</title>\\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/history</title>\\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/id-outline</title>\\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/image</title>\\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/index</title>\\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/information-outline</title>\\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/invite-outline</title>\\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/job-outline</title>\\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/link</title>\\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker-outline</title>\\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker</title>\\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/membership-outline</title>\\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/message-bookmark-outline</title>\\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/minus</title>\\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/mobile</title>\\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/palette</title>\\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pause</title>\\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-bottom-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-minimize</title>\\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-top-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned-circle-small</title>\\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned</title>\\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/play</title>\\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-float</title>\\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-full</title>\\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini-variant</title>\\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini</title>\\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/plus</title>\\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/qrcode</title>\\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/restrictions-outline</title>\\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss-variant</title>\\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss</title>\\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/saved-messages</title>\\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/search</title>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n        </mask>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/server</title>\\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/status-outline</title>\\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-from</title>\\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-to</title>\\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/circle/task</title>\\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/translate</title>\\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/video</title>\\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-high</title>\\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-off</title>\\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","var constants = {\n\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 25,\n    PING_SENDING_INTERVAL: 20,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 30000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    CLIENT_URL: 'https://www.xabber.com',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport VanillaQR from \"VanillaQR\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"assets/images/emoji/blank.gif\"' : '  src=\"assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (size.width > size.height) {\n        if (size.width > max_size) {\n            size.height *= max_size / size.width;\n            size.width = max_size;\n        }\n    } else {\n        if (size.height > max_size) {\n            size.width *= max_size / size.height;\n            size.height = max_size;\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml') {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options) {\n            return this.common(getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.cacheFavicons();\n        this.extendFunction();\n        this.check_config = new $.Deferred();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n        // setInterval(function() {\n        //     console.log(new Date());\n        // }, 5000)\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          console.log(query_transliterated);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    ps_settings: {theme: 'item-list'},\n    template: templates.toolbar,\n\n    events: {\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .chats\":                 \"showChats\",\n        \"click .group-chats\":           \"showGroupChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .search\":                \"showSearch\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .mentions\":              \"showMentions\",\n        \"click .settings\":              \"showSettings\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n        \"click .about\":                 \"showAbout\"\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n        this.$('.toolbar-icon').css('color', color);\n        this.$('.toolbar-icon path').css('fill', color);\n    },\n\n    onUpdatedScreen: function (name) {\n        if ((name === 'account_settings') || ((name === 'all-chats') &&\n            (this.$('.toolbar-item.all-chats').hasClass('active') ||\n                this.$('.toolbar-item.group-chats').hasClass('active') ||\n                this.$('.toolbar-item.chats').hasClass('active')||\n                this.$('.toolbar-item.account-item').hasClass('active')||\n                this.$('.toolbar-item.archive-chats').hasClass('active')))) {\n            return;\n        }\n        this.$('.toolbar-item').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'search', 'about'], name)) {\n            this.$('.toolbar-item.'+name).addClass('active');\n        }\n    },\n\n    showAllChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_all_chats');\n    },\n\n    showChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_chats');\n    },\n\n    showGroupChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.group-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_group_chats');\n    },\n\n    showArchive: function () {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats');\n    },\n\n    showChatsByAccount: function (account) {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.account-item[data-jid=\"' + account.get('jid') + '\"]').addClass('active');\n        xabber.body.setScreen('all-chats', {\n            right_contact_save: true\n        });\n        xabber.trigger('show_account_chats', [account]);\n    },\n\n    showSearch: function () {\n        xabber.body.setScreen('search');\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    showAbout: function () {\n        if (!xabber.about_view)\n            xabber.about_view = xabber.wide_panel.addChild('about', xabber.AboutView, {model: xabber});\n        xabber.body.setScreen('about');\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #transparency\": \"changeTransparency\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"change .background input[type=radio][name=side-panel]\": \"setSidePanelTheme\",\n        \"change #side_panel_blur_switch\": \"setSidePanelBlur\",\n        \"change #transparency_switch\": \"switchTransparency\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateSidePanelSetting();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    updateSidePanelSetting: function () {\n        let side_panel_settings = this.model.get('side_panel'),\n            transparency_switched = side_panel_settings.transparency !== false;\n        this.$('#side_panel_blur_switch')[0].checked = side_panel_settings.blur;\n        this.$('#transparency_switch')[0].checked = transparency_switched;\n        this.$('.transparency-setting .disabled').switchClass('hidden', transparency_switched);\n        this.$('#transparency')[0].value = transparency_switched ? side_panel_settings.transparency : constants.TRANSPARENCY_VALUE;\n        this.$(`#${this.cid}-${side_panel_settings.theme}-side-panel`)[0].checked = true;\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    setSidePanelTheme: function (ev) {\n        let value = ev.target.value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {theme: value}));\n        xabber.roster_view.updateTheme(value);\n    },\n\n    setSidePanelBlur: function () {\n        let value = this.$('#side_panel_blur_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {blur: value}));\n        xabber.roster_view.updateBlur(value);\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    switchTransparency: function () {\n        let is_switched = this.$('#transparency_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel'),\n            value = is_switched ? constants.TRANSPARENCY_VALUE : false;\n        this.$('.transparency-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#transparency')[0].value = constants.TRANSPARENCY_VALUE;\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeTransparency: function () {\n        let value = this.$('#transparency')[0].value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url = './background-patterns.xml';\n        } else {\n            request.url = './background-images.xml';\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev.target.closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'https://xabber.com/protocol/synchronization#chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.settings_right.children.account_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function () {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('description').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address});\n                });\n                this.x_tokens_list = tokens_list;\n                this.settings_right && this.settings_right.updateXTokens();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (encrypted, callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: (encrypted && this.omemo) ? this.omemo.getRetractVersion() : this.retraction_version};\n            encrypted && (query_options.type = 'encrypted');\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQFast(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings) {\n            this.show_settings_after_delete = show_settings;\n            xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster.deleteDataBase();\n            this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .circle-avatar': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"filter_chats\", this.setActive, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showSettings: function () {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        this.model.showSettings();\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    filterChats: function (ev) {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        ev.stopPropagation();\n        xabber.chats_view.showChatsByAccount(this.model);\n        this.model.trigger('filter_chats');\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    setActive: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active');\n        this.$el.addClass('active');\n    }\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"click .last-auth.resource\": \"showResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .omemo-info .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete-fingerprint': \"deleteDevice\",\n        \"click .omemo-info .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            if (options.block_name === 'media-gallery') {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.media-gallery-button.dropdown-button').dropdown(dropdown_settings);\n\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.omemo-settings-wrap .setting-wrap.manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.omemo-settings-wrap .setting-wrap.manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.omemo-settings-wrap .setting-wrap.manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    trustDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.trustDevice(ev);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.ignoreDevice(ev);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.ignoreDevice(ev);\n        }\n    },\n\n    deleteDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.deleteDevice(ev);\n        }\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        this.$('.panel-content-wrap .tokens .orphaned-fingerprints-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list), 'last_auth').each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n        });\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.renderOwnDevices(this.$('.panel-content-wrap .tokens .tokens-wrap'));\n        } else\n            this.$('.panel-content-wrap .tokens .orphaned-fingerprints').addClass(\"hidden\");\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n            this.renderAllXTokens();\n        }\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token'))\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n            this.model.getAllXTokens();\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens();\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (this.model.omemo) {\n            has_keys = Object.keys(this.model.omemo.get('prekeys')).length;\n        } else {\n            let omemo = new xabber.Omemo({id: 'omemo'}, {\n                account: this.model,\n                storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                fetch: 'before'\n            });\n            has_keys = Object.keys(omemo.get('prekeys')).length;\n            omemo.destroy();\n        }\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', !has_keys);\n        if (!this.model.omemo){\n            this.$('.omemo-settings-wrap .setting-wrap.manage-devices').addClass('hidden2');\n        }\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n                this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', true);\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n            file = new File([blob], \"avatar\", {\n                type: \"image/png\",\n            });\n        file.generated = true;\n        file.base64 = blob;\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-name one-line\"/>')\n                .append('<div class=\"supports\"/>');\n    },\n\n    _initialize: function () {\n        this.render();\n        this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    }\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n            if (namespace === Strophe.NS.AUTH_DEVICES)\n                self.account.getAllXTokens();\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        })\n\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 25)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 20)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 25)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 20)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                if (this.get('in_roster')) {\n                    this.updateCachedInfo();\n                }\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        let roster_info = {\n            jid: this.get('jid'),\n            in_roster: this.get('in_roster'),\n            groups: this.get('groups'),\n            subscription: this.get('subscription'),\n            roster_name: this.get('roster_name'),\n            subscription_request_out: this.get('subscription_request_out'),\n            subscription_request_in: this.get('subscription_request_in'),\n            name: this.get('name'),\n            vcard_updated: this.get('vcard_updated')\n        }, full_jid = this.get('full_jid');\n        if (this.get('photo_hash') || this.get('image'))\n            _.extend(roster_info, {\n                photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                avatar_priority: this.get('avatar_priority'),\n                avatar: this.get('image')\n            });\n        if (full_jid)\n            roster_info.resource = Strophe.getResourceFromJid(full_jid);\n        this.account.cached_roster.putInRoster(roster_info);\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item);\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        this.removeFromRoster();\n                        let chat = this.account.chats.getChat(this);\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        let chat = this.account.chats.getChat(this);\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    sendPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n        this._sending_present_interval = setInterval(() => {\n            this.account.sendPres(pres);\n        }, constants.PRESENT_INTERVAL);\n    },\n\n    sendNotPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#not-present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                this.removeFromRoster();\n                let chat = this.account.chats.getChat(this);\n                if (!this.get('sync_deleted')){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                    this.destroy();\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n        getMessageByStanzaId: function (stanza_id, callback) {\n            let queryid = uuid(),\n                account = this.account,\n                is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection,\n                iq = $iq({type: 'set', to: this.get('full_jid') || this.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                    .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                    .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                    .c('value').t(Strophe.NS.MAM).up().up()\n                    .c('field', {'var': '{urn:xmpp:sid:0}stanza-id'})\n                    .c('value').t(stanza_id);\n            let handler = conn.addHandler((message) => {\n                let $msg = $(message);\n                if ($msg.find('result').attr('queryid') === queryid)\n                    callback && callback($msg);\n                return true;\n            }, Strophe.NS.MAM);\n            this.account.sendIQFast(iq, () => {\n                    conn.deleteHandler(handler);\n                }, () => {\n                    conn.deleteHandler(handler);\n                }\n            );\n        },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && options.encrypted)    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(options.encrypted).up().up();\n        }\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && !options.encrypted)    {\n            if (options.filter_image)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t(options.filter_image).up().up();\n            if (options.filter_video)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t(options.filter_video).up().up();\n            if (options.filter_voice)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t(options.filter_voice).up().up();\n            if (options.filter_files){\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_sticker`})\n                    .c('value').t('false').up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [];\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id'),\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.main-info .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.main-info .buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        this.messagesFileRequest({}, () => {\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        });\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.$el.html(\"<div class='gallery-files files'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.$el.html(\"<div class='gallery-files voice'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block .tabs').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.find('id').text();\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.get('jid'), id);\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            this.blockInvitation();\n            contact.getMyInfo();\n            contact.sendPresent();\n            this.openChat();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field.updateValue(true);\n        this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n        });\n        this.model.getBlockedParticipants((response) => {\n            this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n            });\n            this.model.getBlockedParticipants((response) => {\n                this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION};\n        if (!options.after) {\n            if (options.stamp)\n                request_attrs.stamp = options.stamp;\n            else if (this.account.last_msg_timestamp && !is_first_sync)\n                request_attrs.stamp = this.account.last_msg_timestamp * 1000;\n        }\n        delete(options.stamp);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync);\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (conv.account_conversation_type.includes(jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,};\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if ($group_metadata.length) {\n            contact.participants && contact.participants.createFromStanza($group_metadata.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`));\n        }\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.set('sync_type', type);\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (is_group_chat) {\n            if (request_with_stamp && !is_first_sync) {\n                if (chat.retraction_version < msg_retraction_version)\n                    chat.trigger(\"get_retractions_list\");\n            } else\n                chat.retraction_version = msg_retraction_version;\n        }\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last'),\n            encrypted_retract_version = $(iq).find('query conversation[type=\"encrypted\"]').first().children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            retract_version = $(iq).find('query conversation[type=\"chat\"]').first().children(`metadata[node=\"${Strophe.NS.REWRITE}\"]`).children('retract').attr('version');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        if (!_.isUndefined(encrypted_retract_version) && this.account.omemo && this.account.omemo.getRetractVersion() < encrypted_retract_version)\n            this.account.getAllMessageRetractions(true);\n        if (request_with_stamp) {\n            if (this.account.retraction_version < retract_version)\n                this.account.getAllMessageRetractions();\n        } else {\n            this.account.retraction_version = retract_version;\n        }\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        let dfd = new $.Deferred();\n        dfd.done((is_cached) => {\n            this.account.cached_sync_conversations.putInCachedConversations({\n                account_conversation_type: 'last_sync_timestamp',\n                timestamp: sync_timestamp,\n            });\n            xabber.chats_view.hideChatsFeedback();\n            if (!request_with_stamp)\n                this.account.chats.getSavedChat();\n            if (is_first_sync)\n                this.account.set('first_sync', sync_timestamp);\n            if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n                //\n            }\n            else if ($(iq).find('conversation').length) {\n                if (!synchronization_with_stamp) {\n                    this.syncFromServer({max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after});\n                }\n                else {\n                    this.account.get('last_sync') && this.syncFromServer({stamp: this.account.get('last_sync'), max: constants.SYNCHRONIZATION_RSM_MAX}, true);\n                }\n            }\n        });\n        if (is_first_sync)\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                let synced_conversations = $(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray();\n                res = res.filter(item => !synced_conversations.includes(item.account_conversation_type));\n                this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                dfd.resolve(true);\n            });\n        else{\n            this.syncConversations(iq, request_with_stamp);\n            dfd.resolve();\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        this.isVisible() && this.parent.updateScrollBar();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        this.parent.updateScrollBar();\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterRightView = xabber.RosterView.extend({\n    className: 'roster-right-container container',\n    template: templates.roster_right,\n    ps_settings: {theme: 'roster-right'},\n    account_roster_view: xabber.AccountRosterRightView,\n\n    events: {\n        \"click .collapsed-wrap\": \"expand\",\n        \"mouseleave .expanded-wrap\": \"collaps\"\n    },\n\n    __initialize: function () {\n        this.updateCounter();\n        this.updateTheme();\n        this.updateBlur();\n        this.updateTransparency();\n        this.model.on(\"activate deactivate destroy\", this.updateCounter, this);\n        this.data.on(\"change\", this.updateLayout, this);\n        let pinned = this._settings.get('pinned');\n        this.data.set({expanded: false, pinned: false});\n    },\n\n    updateTheme: function (theme) {\n        theme = theme || xabber.settings.side_panel.theme;\n        this.$el.attr('data-theme', theme);\n        this.updateTransparency();\n    },\n\n    updateTransparency: function (transparency) {\n        transparency = transparency || xabber.settings.side_panel.transparency;\n        if (xabber.settings.side_panel.theme == 'dark')\n            this.$el.css('background-color', `rgba(0, 0, 0, ${1 - transparency/100})`);\n        else\n            this.$el.css('background-color', `rgba(255, 255, 255, ${1 - transparency/100})`);\n    },\n\n    updateBlur: function (blur) {\n        blur = _.isUndefined(blur) ? xabber.settings.side_panel.blur : blur;\n        this.$el.switchClass('with-blur', blur);\n    },\n\n    expand: function () {\n        this.data.set('expanded', true);\n    },\n\n    collaps: function () {\n        if (!this.data.get('pinned'))\n            this.data.set('expanded', false);\n    },\n\n    updateLayout: function () {\n        let changed = this.data.changed;\n        if (_.has(changed, 'expanded') || _.has(changed, 'pinned')) {\n            xabber.trigger('update_layout', {roster_state_changed: true});\n        }\n    },\n\n    updateCounter: function () {\n        this.$('.all-contacts-counter').text(\n            _.reduce(this.children, function (counter, view) {\n                return counter + view.roster.length;\n            }, 0)\n        );\n    },\n\n    onListChanged: function () {\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el = this.model.account.settings_right.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.pushInRoster({name: name, groups: groups}, () => {\n                contact.pres('subscribe');\n                contact.trigger('presence', contact, 'subscribe_from');\n                contact.trigger(\"open_chat\", contact, {right_force_close: true});\n            }, function () {\n                contact.destroy();\n            });\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        this.resources.reset();\n        this.contacts.each(function (contact) {\n            contact.resources.reset();\n            contact.resetStatus();\n        });\n        this.cached_roster.getAllFromRoster((roster_items) => {\n            $(roster_items).each((idx, roster_item) => {\n                if (roster_item.jid === 'roster_version'){\n                    return;\n                }\n                this.contacts.mergeContact(roster_item);\n            });\n            if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                let options = {};\n                this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                    let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                    !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                    last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                    this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                    this.roster.getRoster();\n                });\n            }\n            else {\n                this.roster.getRoster();\n            }\n            this.blocklist.getFromServer();\n        });\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    this.roster.registerHandler();\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.roster_view = this.body.addChild('roster', this.RosterRightView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_contact_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);//34\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`)\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if (options.replaced && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio')) {\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n            });\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQFast(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else\n            return this.messages.createFromStanza($message, options);\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id);\n        if (message) {\n            if (options.searched_messages)\n                message.set('searched_message', false);\n            let stanza_id = message.get('stanza_id');\n            this.messages_view = new xabber.MessageContextView({\n                contact: this.contact,\n                mention_context: options.mention,\n                model: this,\n                stanza_id_context: stanza_id,\n                encrypted: options.encrypted\n            });\n            this.account.context_messages.add(message);\n            this.messages_view.messagesRequest({after: stanza_id}, () => {\n                let screen = 'all-chats';\n                if (options.mention)\n                    screen = 'mentions';\n                else if (options.message)\n                    screen = xabber.body.screen.get('name');\n                xabber.body.setScreen(screen, {\n                    right: 'message_context',\n                    model: this,\n                }, {\n                    right_contact_save: true\n                });\n            });\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg)\n                enc_chat.receiveCarbonsMarker($marker);\n            return;\n        }\n        if (msg_idx > -1) {\n            this.set('const_unread', 0);\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {id: (this.get('group_chat') && contact_stanza_id || stanza_id), xmlns: Strophe.NS.REWRITE, symmetric: symmetric, by: this.account.get('jid')});\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {id: user_id, xmlns: Strophe.NS.REWRITE, symmetric: true});\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {xmlns: Strophe.NS.REWRITE, symmetric: symmetric};\n        !is_group_chat && (retract_attrs.conversation = this.get('jid'));\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 ){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            return;\n        }\n        msg || (msg = this.model.last_message);\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: false,\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max)\n                      this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\n  xabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if (this.model.sync_created && this.model.last_message){\n            this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n      render: function () {\n          this.cancelSearch();\n          this.scrollToBottom();\n          this.onScroll();\n          this.updateContactStatus();\n          this.updateWaveforms();\n          this.onUpdatePlyr();\n          if (this.contact) {\n              this.contact.get('group_chat') && this.updatePinnedMessage();\n              this.subscription_buttons.render();\n          }\n      },\n\n      openDevicesWindow: function () {\n          if (!this.account.omemo)\n              return;\n          let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n          peer.fingerprints.open();\n      },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n      onTrustedChanged: function (message) {\n          let trusted = message.get('trusted'),\n              $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n          (trusted === null) && (trusted = 'none');\n          $message.attr('data-trust', trusted);\n      },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both'&& this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n            this.onScroll();\n            this.readMessages();\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active)\n                this.contact.sendPresent();\n            else\n                this.contact.sendNotPresent();\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n            }\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    onScrollY: function () {\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    onScroll: function () {\n        if (!this.isVisible())\n            return;\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        this._prev_scrolltop = this._scrolltop || 0;\n        this._scrolltop = this.getScrollTop();\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n    },\n\n    backToBottom: function () {\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && this.model.get('encrypted'))    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(this.model.get('encrypted')).up().up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                    console.log('got result')\n                    console.log(iq);\n                    console.log(res);\n                    console.log(messages);\n                    func_conn.deleteHandler(handler);\n                    clearTimeout(_delete_handler_timeout);\n                    clearInterval(_interval);\n                    handler = null;\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    func_conn.deleteHandler(handler);\n                    clearTimeout(_delete_handler_timeout);\n                    clearInterval(_interval);\n                    handler = null;\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                console.log('interval');\n                console.log(is_fast);\n                conn && console.log(conn.connected);\n                if (!conn){\n                    clearInterval(_interval);\n                    return;\n                }\n                if (conn.connected){\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n            this.MAMRequest(query, (success, messages, rsm) => {\n                    clearTimeout(this._load_history_timeout);\n                    this._loading_history = false;\n                    this.hideHistoryFeedback();\n                    if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                        this.getMessageArchive({after: rsm.last}, {missed_history: true});\n                    if (this.model.get('group_chat')) {\n                        if (this.contact && !this.contact.my_info)\n                            this.contact.getMyInfo();\n                    }\n                    else {\n                        if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                            this.contact.getLastSeen();\n                    }\n                    if ((messages.length < query.max) && success) {\n                        this.model.set('history_loaded', true);\n                    }\n                    if (options.previous_history || !this.model.get('first_archive_id')) {\n                        rsm.first && this.model.set('first_archive_id', rsm.first);\n                    }\n                    if (options.last_history || !this.model.get('last_archive_id')) {\n                        rsm.last && this.model.set('last_archive_id', rsm.last);\n                    }\n                    _.each(messages, function (message) {\n                        let loaded_message = account.chats.receiveChatMessage(message,\n                            _.extend({is_archived: true}, options)\n                        );\n                        if (loaded_message) counter++;\n                    });\n                    if (options.previous_history && !this.model.get('displayed_sent') && this.model.messages.length) {\n                        let last_msg = this.model.messages.models[this.model.messages.length - 1];\n                        if (last_msg)\n                            if (!last_msg.isSenderMe() && this.model.get('active') && this.model.get('display')) {\n                                this.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                                this.model.set('displayed_sent', true);\n                            }\n                    }\n                    if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                        this.getMessageArchive(_.extend(query, {\n                            max: xabber.settings.mam_messages_limit,\n                            before: this.model.get('first_archive_id') || ''\n                        }), {previous_history: true});\n                    }\n                }, (err) => {\n                    if (options.previous_history) {\n                        this._loading_history = false;\n                        this.showHistoryFeedback(true);\n                    }\n                }\n            );\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (this.isVisible()) {\n            if (is_scrolled_to_bottom || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (!(message.get('synced_from_server') || message.get('is_archived'))) {\n            if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                message.set('is_unread', !(this.model.get('display') && xabber.get('focused')));\n                if (!message.get('is_unread'))\n                    this.model.sendMarker(message.get('msgid'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n                if (!xabber.get('focused')) {\n                    if (this.model.get('saved') || this.model.isMuted())\n                        message.set('muted', true);\n                    else if (!message.get('synced_invitation_from_server'))\n                        this.notifyMessage(message);\n                }\n                this.model.setMessagesDisplayed(message.get('timestamp'));\n            }\n            if (this.contact && this.model.get('archived'))\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n    },\n\n\n      decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom(),\n            unique_id = message.get('unique_id');\n          if (this.model.get('encrypted') || message.get('encrypted') || force) {\n              let images = message.get('images') || [];\n              if (images.length) {\n                  images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = [];\n                          if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                              $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          else\n                              $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              }\n              let fwd_msgs = message.get('forwarded_message') || [];\n              fwd_msgs.forEach((fwd_msg) => {\n                  let fwd_images = fwd_msg.get('images') || [],\n                      fwd_unique_id = fwd_msg.get('unique_id');\n                  fwd_images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] .fwd-message[data-uniqueid=\"${fwd_unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              });\n          }\n      },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            $message.insertAfter(this.$('.chat-message').eq(index - 1));\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);//переделать на выбор из всех\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('is_trusted'))\n            $message.attr('data-trust', attrs.is_trusted);\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    if (video_file.key){\n                        player.key = video_file.key;\n                        video_file.type && (player.type = video_file.type);\n                    }\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n      attentionMessage: function () {\n          let notification = xabber.popupNotification({\n              title: this.contact.get('name'),\n              text: xabber.getString(\"chats_attention\"),\n              icon: this.contact.cached_image.url\n          });\n          notification.onclick = () => {\n              window.focus();\n              this.model.trigger('open');\n          };\n          let sound = xabber.settings.sound_on_attention;\n          xabber.playAudio(sound);\n      },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n      msgCallback: function (msg_sending_timestamp, message) {\n          this.bottom.click_counter = 0;\n          this.bottom.setDefaultPlaceholder();\n          if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n              setTimeout(() => {\n                  if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                      message.set('state', constants.MSG_SENT);\n                  } else {\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {\n                          (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                      });\n                      setTimeout(() => {\n                          if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                              message.set('state', constants.MSG_ERROR);\n                      }, 5000);\n                  }\n              }, 1000);\n          }\n          else {\n              let _pending_time = 5, was_reconnecting;\n              if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                  was_reconnecting = true;\n              if (this.account.session.get('reconnecting'))\n                  was_reconnecting = true;\n              this.account.session.once('change:reconnecting', () => {\n                  console.log('change reconnecting');\n                  console.log(this.account.session.get('reconnecting'));\n                  was_reconnecting = true;\n              })\n              let _interval = setInterval(() => {\n                  console.log(was_reconnecting);\n                  if (_pending_time >= 10 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                      console.log('ping on message pending');\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                          console.log('message initiated reconnection');\n                          console.log(message);\n                          this.account.connection.disconnect();\n                      }, 5000);\n                  }\n                  if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                      message.set('state', constants.MSG_ERROR);\n                      clearInterval(_interval);\n                  }\n                  else if (message.get('state') !== constants.MSG_PENDING)\n                      clearInterval(_interval);\n                  _pending_time += 10;\n              }, 10000);\n          }\n      },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.onload = xhr.onerror = xhr.onabort = function () {\n                if (this.status === 200) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = JSON.parse(this.response)\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            if (!is_error) {\n                                xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                xhr_requests[files_count].is_uploading = true;\n                                xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                            }\n                        });\n                    }\n                } else {\n                    if (this.status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && this.status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (this.status === 500)\n                            response_text = this.statusText;\n                        else if (this.status === 400){\n                            response_text = JSON.parse(this.response).error;\n                            error_status = JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        if (!is_error) {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (this.status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (this.status === 0) && (message.get('files')[idx] = null);\n                        files_count++;\n                        if (this.status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    if (!is_error) {\n                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                        xhr_requests[files_count].is_uploading = true;\n                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    if (!is_error) {\n                        xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                        xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'))\n                        xhr_requests[0].is_uploading = true;\n                        xhr_requests[0].send(xhr_requests[0].formData);\n                    }\n                });\n            }\n        }\n\n    },\n\n      encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n      },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('videos', videos);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server');\n        if (is_unread && !is_synced) {\n            this.model.messages_unread.add(message);\n            this.model.recountUnread();\n        } else {\n            this.model.messages_unread.remove(message);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            if (msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == 'encrypted';\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            console.log(chat.retracted_msg_id_list);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (retract_version > this.account.retraction_version) {\n                if (chat.get('encrypted') && this.account.omemo)\n                    this.account.omemo.cacheRetractVersion(retract_version);\n                else\n                    this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n\n        if ($message.find('device[xmlns=\"' + Strophe.NS.AUTH_DEVICES + '\"]').length && !options.is_archived) {\n            this.account.getAllXTokens();\n        }\n\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n                let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    xabber.chats_view.updateScreenAllChats();\n                    contact.sendPresent();\n                    contact.trigger(\"open_chat\", contact);\n                    if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                        let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                            .c('item', {jid: group_jid + '/' + moment.now()});\n                        this.account.sendIQFast(iq_set_blocking);\n                    }\n                });\n            }, () => {\n                this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item.unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item.active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null, right: undefined},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('all-chats') && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('account-item') && (view.model.get('saved') || (view.account.get('jid') === active_toolbar.attr('data-jid'))) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded') && (view.model.messages.length < 20)) {\n                view.content.loadPreviousHistory();\n            }\n            if (!view.model.get('displayed_sent') && view.model.messages.length) {\n                let last_msg = view.model.messages.models[view.model.messages.length - 1];\n                if (last_msg)\n                    if (!last_msg.isSenderMe() && (view.model.get('unread') || view.model.get('const_unread'))) {\n                        view.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                        view.model.set('displayed_sent', true);\n                    }\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            xabber.body.setScreen((options.screen || 'all-chats'), {\n                right: 'chat',\n                clear_search: options.clear_search,\n                chat_item: view,\n                blocked: view.model.get('blocked')\n            },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        xabber.chats_view.scrollTo(scrolled_top);\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active')\n            .filter('.all-chats').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap').html(\"\");\n        this.saved_chat = false;\n        xabber.chats_view.$('.chat-list-wrap .chat-item').each((idx, item) => {\n            let id = $(item).data('id'),\n                chat = this.account.chats.get(id);\n            if (chat) {\n                if (id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = $(item).clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap').append($(item).clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = './assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((is_contact_trusted) => {\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                if (!this.omemo_devices)\n                    this.omemo_devices = new xabber.Fingerprints({model: this.account.omemo});\n                this.omemo_devices.open();\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        target.focus();\n        range.detach(); // optimization\n        target.scrollTop = target.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted)\n        list = _.difference(list, this.currently_loaded_link_references)\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new MediaRecorder(stream),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                    mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob(chunks, { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks.push(e.data);\n                    stream.getTracks().forEach(track => track.stop() );\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea();\n        this.$('.mentions-list').html(\"\").hide();\n        $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n            let emoji = emoji_item.innerText;\n            this.account.chat_settings.updateLastEmoji(emoji);\n        });\n        let content_concat = [];\n        if (text.length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            $rich_textarea.flushRichTextarea();\n            return;\n        }\n        if (text.length) {\n            this.quill.getContents().forEach((content) => {\n                if (content.attributes) {\n                    let content_attrs = [],\n                        start_idx = content_concat.length,\n                        end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                    for (let attr in content.attributes)\n                        (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                    if (content_attrs.indexOf('mention') > -1) {\n                        let mention_idx = content_attrs.indexOf('mention'),\n                            is_gc = this.contact.get('group_chat'),\n                            target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                        content_attrs.splice(mention_idx, mention_idx + 1);\n                        target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                        mentions.push({\n                            start: start_idx,\n                            end: end_idx,\n                            target: target,\n                            is_gc: is_gc\n                        });\n                    }\n                    if (content.attributes.blockquote) {\n                        if (content_concat.length) {\n                            Array.from(content.insert).forEach((ins) => {\n                                let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                    quote_end_idx = content_concat.length;\n                                blockquotes.push({\n                                    marker: constants.QUOTE_MARKER,\n                                    start: quote_start_idx,\n                                    end: quote_end_idx + constants.QUOTE_MARKER.length\n                                });\n                                text = Array.from(_.escape(text));\n\n                                if (quote_start_idx === quote_end_idx) {\n                                    text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                }\n                                else {\n                                    text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                }\n                                (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                text[quote_end_idx - 1] += '\\n';\n\n                                text = _.unescape(text.join(\"\"));\n                                content_concat = Array.from(content_concat.join(\"\"));\n\n                                markup_references.forEach((markup_ref) => {\n                                    if (markup_ref.start >= quote_start_idx) {\n                                        markup_ref.start += constants.QUOTE_MARKER.length;\n                                        markup_ref.end += constants.QUOTE_MARKER.length;\n                                    }\n                                });\n\n                                content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                            })\n                        }\n                    }\n                    content_attrs.length && markup_references.push({\n                        start: start_idx,\n                        end: end_idx,\n                        markup: content_attrs\n                    });\n                }\n                if (content.insert && content.insert.emoji) {\n                    content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                }\n                else if (content.attributes && content.attributes.blockquote) {\n                }\n                else\n                    content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n            });\n        }\n        let start_length = text.length;\n        text = text.trimStart();\n        if (start_length > text.length) {\n            let delta = start_length - text.length;\n            mentions.forEach((mention) => {\n                mention.start -= delta;\n                mention.end -= delta;\n            });\n            markup_references.forEach((markup_reference) => {\n                markup_reference.start -= delta;\n                markup_reference.end -= delta;\n            });\n            blockquotes.forEach((blockquote) => {\n                blockquote.start -= delta;\n                blockquote.end -= delta;\n            });\n        }\n        if (link_references && link_references.length) {\n            link_references = link_references.filter(item => item.original_text);\n            link_references.forEach((link_reference) => {\n                if (link_reference && link_reference.original_text) {\n                    link_reference.start = text.indexOf(link_reference.original_text);\n                    if (link_reference.start != -1) {\n                        link_reference.start = 0;\n                        link_reference.end = 0;\n                    }\n                }\n            });\n        }\n        this.removeAllLinkReferences();\n        this.link_reference_exempted = [];\n        this.removeAllFileSnippets();\n        text = text.trimEnd();\n        $rich_textarea.flushRichTextarea();\n        this.quill.focus();\n        this.displayMicrophone();\n        if (this.edit_message) {\n            this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            $rich_textarea.placeCaretAtEnd();\n            return;\n        }\n        if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n            if (this.model.get('saved') && this.fwd_messages.length && !text)\n                this.fwd_messages.forEach((message) => {\n                    this.view.onSubmit(\"\", [message]);\n                });\n            else\n                this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n        }\n        this.unsetForwardedMessages();\n        xabber.chats_view.clearSearch();\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n        $rich_textarea.placeCaretAtEnd();\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {xmlns: Strophe.NS.REWRITE, id: stanza_id}),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.sendPresence();\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            this.roster && this.roster.syncFromServer({stamp: last_msg_timestamp * 1000}, false, true);\n            this.roster && this.roster.getRoster();\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.readMessages();\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function () {\n        this.chats_view.showAllChats();\n    }, this);\n\n    this.on(\"show_account_chats\", function (ev, account) {\n        this.chats_view.showChatsByAccount(account);\n    }, this);\n\n    this.on(\"show_archive_chats\", function () {\n        this.chats_view.showArchiveChats();\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n            contact.sendPresent();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        if (this.roster_view.isVisible()) {\n            this.updateRosterLayout(options);\n        }\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateRosterLayout = function (options) {\n        let width = this.body.$el.width(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM,\n            is_tiny = width < constants.WIDTH_TINY,\n            expanded = this.roster_view.data.get('expanded'),\n            pinned = this.roster_view.data.get('pinned');\n        this.roster_view.$('.collapsed-wrap').hideIf(expanded);\n        this.roster_view.$('.expanded-wrap').showIf(expanded);\n        this.roster_view.$('.btn-pin').hide();\n        if (is_narrow && pinned) {\n            this.roster_view.data.set({expanded: false, pinned: false});\n            return;\n        }\n        let roster_width,\n            panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 50,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow || pinned)) {\n            panel_width = 1536;\n            roster_width = 300;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n            roster_width = 250;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n            roster_width = (width - toolbar_width - 20) * 2 / 9;\n        }\n        if (!expanded) {\n            roster_width = is_wide ? 48 : 44;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        let panel_gap = (width - panel_width) / 2,\n            left_gap = panel_gap - toolbar_width,\n            right_gap = panel_gap - roster_width;\n        this.roster_view.$('.expanded-wrap').switchClass('solid',\n                (!pinned && (!is_wide || right_gap < 0)));\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.roster_view.setCustomCss({width: roster_width});\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n    },\n\n    renderOwnDevices: function ($elem) {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices, $elem);\n            this.updateOwnFingerprint($elem);\n        });\n    },\n\n    render: function () {\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices, $elem) {\n        let devices_count = _.keys(devices).length,\n            $container = $elem,\n            device_tokens_id_list = [];\n        $container.find('.all-sessions .token-wrap').each((idx, item) => {\n            device_tokens_id_list.push({device_id: Number($(item).attr('data-token-uid').slice(0,8)), $elem: $(item)});\n        });\n        $container.find('.orphaned-fingerprints').addClass(\"hidden\");\n        for (let device_id in devices) {\n            let device = devices[device_id],\n                device_token_id = device_tokens_id_list.find(obj => {\n                    return obj.device_id == Number(device_id);\n                }),\n                $device_container;\n            if (device_id == this.omemo.get('device_id'))\n                continue;\n            if (device_token_id)\n                $device_container = device_token_id.$elem;\n            else {\n                $device_container = $('<div class=\"token-wrap\"></div>')\n                $container.find('.orphaned-fingerprints .orphaned-fingerprints-wrap').append($device_container);\n                $container.find('.orphaned-fingerprints').removeClass(\"hidden\");\n            }\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                options.show_label = !device_token_id ? true : false;\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $device_container.find('.device-fingerprints-part').remove();\n                $device_container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                $device_container.find('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        options.show_label = !device_token_id ? true : false;\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $device_container.find('.device-fingerprints-part').remove();\n                        $device_container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                        $device_container.find('.dropdown-button').dropdown({\n                            inDuration: 100,\n                            outDuration: 100,\n                            constrainWidth: false,\n                            hover: false,\n                            container: this.$('.fingerprints-content')[0],\n                            alignment: 'left'\n                        });\n                    }\n                }, () => {\n                });\n            }\n        };\n    },\n\n    updateOwnFingerprint: async function ($elem) {\n        let omemo = this.account.omemo,\n            $container = $elem.find('.current-session .token-wrap');\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    $container.find('.device-fingerprints-part').remove();\n                    $container.append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    $container.find('.device-fingerprints-part').remove();\n                    $container.append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        $container.find('.device-fingerprints-part').remove();\n                        $container.append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    $container.find('.device-fingerprints-part').remove();\n                    $container.append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            fingerprint = $target.find('.fingerprint .value').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id .value').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.account.omemo.own_devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            fingerprint = $target.find('.fingerprint .value').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id .value').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.account.omemo.own_devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = true,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            show_label = options.show_label,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);ж\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_devices_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error, show_label});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            device_id = Number($target.find('div.device-id .value').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                // $target.detach(); // что-то придумать с удалением\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        // $target.detach(); // что-то придумать с удалением\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle();\n           this.set('resend_bundle', false);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey)\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on('device_published', this.publishBundle, this);\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    omemo.publishDevice(device_id, label, () => {\n                        this.account.trigger('device_published');\n                    });\n                }\n                else\n                    this.account.trigger('device_published');\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        omemo.publishDevice(device_id, label, () => {\n                            this.account.trigger('device_published');\n                        });\n                    }\n                    else\n                        this.account.trigger('device_published');\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied)\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve(trust);\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                else\n                                    is_trusted = null;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            });\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(xabber.accounts.connected[0].omemo.bundle.preKeys, 'keyId').last().keyId;\n            for (let i = ++last_id; last_id + missing_keys; i++)\n                await this.bundle.generatePreKey(i);\n            this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function () {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            return;\n        }\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, () => {\n                this.publish(spk, ik.pubKey, pks);\n            }, (err) => {\n                if (($(err).find('error').attr('code') == 404))\n                    this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                        this.publish(spk, ik.pubKey, pks);\n                    });\n            });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 1161,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":65,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":67,\"is\":0,\"it\":72,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":19,\"no\":0,\"oc\":13,\"pa-IN\":0,\"pl\":66,\"pt-BR\":71,\"pt-PT\":15,\"qya-AA\":0,\"ro\":16,\"ru\":69,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":28,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":38,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":13,\"yo\":0,\"zh-CN\":38,\"zh-TW\":11,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.3.68\",\"version_description\":\"fixed on edit error on empty output messages list in chat\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constants","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","CLIENT_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","Strophe","evaluate","interpolate","templates","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","includes","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","clientHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","cacheFavicons","extendFunction","check_config","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","Promise","reject","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","console","warn","log","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","notifications","notifications_private","notifications_group","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","module","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollTop","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","offsetTop","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","new_attrs","stamp","uniqueId","isScreen","right","right_force_close","right_contact","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","showAllChats","closest","is_active","showChats","showGroupChats","showArchive","showChatsByAccount","right_contact_save","showSearch","showContacts","showMentions","showSettings","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","showAbout","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","top","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","once","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","content","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","updateSidePanelSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","side_panel_settings","transparency_switched","cid","jumpToBlock","$tab","$elem","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","setSidePanelTheme","setSidePanelBlur","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","switchTransparency","is_switched","changeNotificationsVolume","volume","sound","changeTransparency","changeVignetting","switchVignetting","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","screen_name","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","innerWidth","innerHeight","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","_main_interval_worker","terminate","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","settings_right","account_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","last_auth","ip_address","ip","x_tokens_list","updateXTokens","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","omemo","getRetractVersion","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","block_name","has_settings_right","settings_left","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","onloadend","b64","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","container","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","dropdown_settings","store","showResources","resource_id","hideResources","trustDevice","omemo_own_devices","ignoreDevice","deleteDevice","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","$cur_token_html","current_token_item","$token_html","token_item","renderOwnDevices","has_keys","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","openBlockWindow","block","blockContact","unblockSelected","blocklist","deselectBlocked","global_settings_item","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","stop","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","acc_settings_left","Container","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","supports","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","GEOLOC","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","groups","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","chat_settings","b64_sha1","updateCachedInfo","is_deleted","out_request","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","sendPresent","_sending_present_interval","sendNotPresent","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","$msg","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","references","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","showQRCode","qrcode","noBorder","domElement","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","updateForParticipant","delegateEvents","filter_type","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","media_items_empty","messages_count","msg_items","fail","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","groupchat_settings","resetParticipantsList","resetParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","getMessages","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","removeParticipantFromList","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","participant_info","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","groups_settings","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","retracted_msg_id_list","putInCachedConversations","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","last_message","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","encrypted_retract_version","retract_version","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","synced_conversations","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_right","updateTheme","updateTransparency","updateLayout","pinned","expand","collaps","roster_state_changed","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","clearStorage","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","RosterRightView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","participant_message","echo_msg","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","getConversationType","SYNCHRONIZATION_REGULAR_CHAT","message_counter","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","wheelPropagation","loading_history","history_loaded","first_msg_id","last_msg_id","_scrolltop","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","_prev_scrolltop","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","onChangedReadState","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","showDayIndicator","indicator_idx","opacity_value","$chatday_indicator","$messages","indicator","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","getMessageArchive","previous_history","_load_history_timeout","last_history","last_msg","last_archive_id","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","fwd_images","fwd_unique_id","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","video_file","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","setRequestHeader","response_text","error_status","statusText","files_","file_new_format","imgContent","video_attrs","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","msg_item","active_right_screen","participant_msg_item","is_encrypted","$retracted_msg","retracted_msg_id","cacheRetractVersion","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","not_encrypted","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","showPlaceholder","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","group_chats_pinned","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","all_chats","all_chats_pinned","message_item","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","MediaRecorder","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","marker","markup_ref","start_length","delta","markup_reference","editMessage","setText","msg_author","image_preview","$img_html_preview","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","cached_messages","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","updateHeight","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateRosterLayout","is_wide","is_narrow","roster_width","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","right_contact_panel_styles","right_contact_panel_saveable","panel_gap","right_gap","wide","placeholders","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","padStart","is_session_initiated","trust","delete_button","edit_setting","fingerprint_item","device_tokens_id_list","$device_container","device_token_id","show_label","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}