{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,0jD,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,4DCAA,uoH,6DCAA,k8E,6DCAA,k6B,2DCAA,o2B,6DCAA,miL,6DCAA,8wiB,6DCAA,+jD,6DCAA,mf,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,svE,6DCAA,0pE,4DCAA,w9B,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,i8xD,6DCAA,2hI,6DCAA,uS,6DCAA,qpO,6DCAA,mzC,4DCAA,6hD,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,qrB,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,miE,6DCAA,6e,6DCAA,0J,6DCAA,0sE,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,oR,6DCAA,iR,6DCAA,ujI,6DCAA,6xO,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,07R,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,+qD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,wwB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,49B,6DCAA,4iC,6DCAA,yiC,6DCAA,q/B,6DCAA,i5B,6DCAA,mrC,6DCAA,ksC,6DCAA,m+B,6DCAA,0rC,6DCAA,kpD,6DCAA,4/B,4DCAA,u8B,6DCAA,4qC,6DCAA,oqC,6DCAA,q5B,6DCAA,olB,6DCAA,qsB,6DCAA,2mB,6DCAA,oxC,6DCAA,85B,6DCAA,onB,6DCAA,6gC,6DCAA,6oC,6DCAA,i4B,6DCAA,2xB,6DCAA,k7B,6DCAA,6xB,6DCAA,yqB,6DCAA,2sB,4DCAA,gqB,6DCAA,svB,4DCAA,6yC,6DCAA,y5B,6DCAA,uyB,6DCAA,szB,6DCAA,mpB,6DCAA,qlC,6DCAA,siC,6DCAA,2kD,6DCAA,q0B,6DCAA,o7E,6DCAA,gkC,6DCAA,m6B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,s/B,6DCAA,osB,4DCAA,otD,6DCAA,s5B,6DCAA,0rC,6DCAA,i8B,6DCAA,k4B,6DCAA,kjC,6DCAA,y6B,4DCAA,g7C,4DCAA,mvB,6DCAA,svB,6DCAA,siB,6DCAA,yqB,6DCAA,i4C,6DCAA,+jB,6DCAA,izB,6DCAA,k/B,6DCAA,yyB,6DCAA,i/B,4DCAA,q8B,6DCAA,4hB,6DCAA,w7B,6DCAA,ymC,6DCAA,qsB,6DCAA,gxB,6DCAA,ioB,6DCAA,6xL,6DCAA,g/B,6DCAA,q/C,6DCAA,y6B,6DCAA,qvC,6DCAA,6vC,6DCAA,gsC,6DCAA,uyB,6DCAA,88B,4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EVG,OAAQ,CACJJ,IAAK,4CACLC,KAAM,cAEVI,UAAW,CACPL,IAAK,kCACLC,KAAM,yBAEVK,WAAY,CACRN,IAAK,mCACLC,KAAM,0BAIdM,mBAAoB,CAChBC,IAAK,CACDR,IAAK,wCACLC,KAAM,yBAEVQ,IAAK,CACDT,IAAK,sCACLC,KAAM,mBAEVF,GAAI,CACAC,IAAK,0CACLC,KAAM,cAIdS,gBAAiB,SAAUC,GACvB,MAAO,CACH,kBAAqB,+CACrB,iBAAoB,8CACpB,mBAAsB,gDACtB,gBAAmB,6CACnB,kBAAqB,+CACrB,OAAU,oCACV,QAAW,qCACX,MAAS,oCACXA,EACN,EAEAC,aAAc,OACdC,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,GAAI,sBACJ,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QA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,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAA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AAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAC5tJ,OAAU,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAA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AE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAA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,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsBgX,GAA6B,6B,iBCApvB,IAAImQ,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MA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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./templates/accounts/emojis.txt","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.txt$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"last-auth resource text-color-700\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n    {[ if (resource_obj) {]}\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[}]}\\n    <div class=\\\"token-indicator\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <!--<i title=\\\"Back to settings\\\" class=\\\"mdi mdi-arrow-left mdi-28px back-to-settings\\\"></i>-->\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"omemo-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-security\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}' class=\\\"settings-block-wrap omemo-info\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap manage-devices\\\">\\n                            <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>\\n                        </div>\\n                        <div class=\\\"setting-wrap purge-keys\\\">\\n                            <button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    {[ if (resource_obj) {]}\\n    <div class=\\\"last-auth resource\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[} else {]}\\n    <div class=\\\"last-auth\\\">{{last_auth}}</div>\\n    {[}]}\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border\\\"/>\\n<div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n    <div class=\\\"dropdown-button circle-avatar border-color ground-color-700 noselect\\\"/>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"{[if (show_label) {]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label\\\"))]}:</div>\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n{[}]}\\n<div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n    <div class=\\\"device-id\\\">\\n        <div class=\\\"label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}:</div>\\n        <div class=\\\"value\\\">{{id}}</div>\\n    </div>\\n</div>\\n<div class=\\\"fingerprint-wrap\\\">\\n    <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">\\n        <div class=\\\"label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}:</div>\\n        <div class=\\\"value\\\">{{fingerprint}}</div>\\n    </div>\\n    {[if (error) {]}\\n    <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n    {[}]}\\n    {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n        {[if (delete_button){]}\\n        <div class=\\\"btn-main btn-flat btn-delete-fingerprint text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"storage\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-database\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__data_and_storage\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-wan\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_settings\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"developer\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-bug\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__developer\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"security\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-security\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"about\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-information\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__about\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"side-panel-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_side_panel\\\"))]}</div>\\n                            <div class=\\\"setting side-panel-setting radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"dark\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dark-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-dark-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_dark\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"light\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-light-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-light-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_light\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting side-panel-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"side_panel_blur_switch\\\"/>\\n                                    <label for=\\\"side_panel_blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                </div>\\n                                <div class=\\\"transparency-setting\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"transparency_switch\\\"/>\\n                                        <label for=\\\"transparency_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__checkbox_transparency\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"transparency\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    <span class=\\\"all-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n    <span class=\\\"msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item group-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__groups\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"message-group\\\"></svg>\\n    <span class=\\\"group-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__mentions\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-at\\\"></svg>\\n    <span class=\\\"mentions-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n    <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n</div>\\n\\n<div class=\\\"toolbar-item search hidden\\\" title='{[print(xabber.getString(\\\"search\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-searching\\\"></svg>\\n</div>\\n\\n<div class=\\\"add-something-wrap\\\">\\n    <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n    </div>\\n\\n    <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n        <div class=\\\"add-variant contact\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant public-groupchat\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant incognito-groupchat\\\">\\n            <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n            </svg>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant account\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"divider noselect\\\"></div>\\n\\n<div class=\\\"accounts-wrap\\\">\\n    <div class=\\\"accounts\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    {[if (SCREEN_ABOUT) {]}\\n    <div class=\\\"toolbar-item about\\\" title='{[print(xabber.getString(\\\"about\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-information\\\"></i>\\n    </div>\\n    {[}]}\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n        <img class=\\\"server-icon hidden\\\" src=\\\"./assets/images/BotIcon20x20@2x.png\\\">\\n        <img class=\\\"group-chat-icon hidden\\\" src=\\\"./assets/images/GroupchatIcon20x20@2x.png\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/account-outline</title>\\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/address-outline</title>\\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-off</title>\\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-sleep</title>\\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell</title>\\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/birthday-outline</title>\\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/blocked-add</title>\\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/blocked</title>\\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot-variant</title>\\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot</title>\\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call-outline</title>\\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call</title>\\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/camera-retake</title>\\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/cancel</title>\\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/channel</title>\\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-down</title>\\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-left-variant</title>\\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-right-variant</title>\\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/circles</title>\\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/clock-outline</title>\\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/close</title>\\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-gps</title>\\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-question</title>\\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs</title>\\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/description-outline</title>\\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/devices</title>\\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit-outline</title>\\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit</title>\\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/email-outline</title>\\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-audio</title>\\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-document</title>\\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-pdf</title>\\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-presentation</title>\\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-video</title>\\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-zip</title>\\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file</title>\\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname-outline</title>\\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname</title>\\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-incognito</title>\\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-invite</title>\\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-private</title>\\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-public</title>\\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/history</title>\\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/id-outline</title>\\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/image</title>\\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/index</title>\\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/information-outline</title>\\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/invite-outline</title>\\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/job-outline</title>\\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/link</title>\\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker-outline</title>\\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker</title>\\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/membership-outline</title>\\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/message-bookmark-outline</title>\\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/minus</title>\\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/mobile</title>\\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/palette</title>\\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pause</title>\\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-bottom-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-minimize</title>\\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-top-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned-circle-small</title>\\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned</title>\\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/play</title>\\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-float</title>\\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-full</title>\\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini-variant</title>\\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini</title>\\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/plus</title>\\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/qrcode</title>\\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/restrictions-outline</title>\\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss-variant</title>\\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss</title>\\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/saved-messages</title>\\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/search</title>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n        </mask>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/server</title>\\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/status-outline</title>\\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-from</title>\\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-to</title>\\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/circle/task</title>\\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/translate</title>\\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/video</title>\\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-high</title>\\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-off</title>\\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = \"[\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"😀\\\"\\n            ],\\n            [\\n                \\\"😁\\\"\\n            ],\\n            [\\n                \\\"😂\\\"\\n            ],\\n            [\\n                \\\"🤣\\\"\\n            ],\\n            [\\n                \\\"😃\\\"\\n            ],\\n            [\\n                \\\"😄\\\"\\n            ],\\n            [\\n                \\\"😅\\\"\\n            ],\\n            [\\n                \\\"😆\\\"\\n            ],\\n            [\\n                \\\"😉\\\"\\n            ],\\n            [\\n                \\\"😊\\\"\\n            ],\\n            [\\n                \\\"😋\\\"\\n            ],\\n            [\\n                \\\"😎\\\"\\n            ],\\n            [\\n                \\\"😍\\\"\\n            ],\\n            [\\n                \\\"😘\\\"\\n            ],\\n            [\\n                \\\"😗\\\"\\n            ],\\n            [\\n                \\\"😙\\\"\\n            ],\\n            [\\n                \\\"😚\\\"\\n            ],\\n            [\\n                \\\"☺️\\\"\\n            ],\\n            [\\n                \\\"🙂\\\"\\n            ],\\n            [\\n                \\\"🤗\\\"\\n            ],\\n            [\\n                \\\"🤩\\\"\\n            ],\\n            [\\n                \\\"🤔\\\"\\n            ],\\n            [\\n                \\\"🤨\\\"\\n            ],\\n            [\\n                \\\"😐\\\"\\n            ],\\n            [\\n                \\\"😑\\\"\\n            ],\\n            [\\n                \\\"😶\\\"\\n            ],\\n            [\\n                \\\"🙄\\\"\\n            ],\\n            [\\n                \\\"😏\\\"\\n            ],\\n            [\\n                \\\"😣\\\"\\n            ],\\n            [\\n                \\\"😥\\\"\\n            ],\\n            [\\n                \\\"😮\\\"\\n            ],\\n            [\\n                \\\"🤐\\\"\\n            ],\\n            [\\n                \\\"😯\\\"\\n            ],\\n            [\\n                \\\"😪\\\"\\n            ],\\n            [\\n                \\\"😫\\\"\\n            ],\\n            [\\n                \\\"😴\\\"\\n            ],\\n            [\\n                \\\"😌\\\"\\n            ],\\n            [\\n                \\\"😛\\\"\\n            ],\\n            [\\n                \\\"😜\\\"\\n            ],\\n            [\\n                \\\"😝\\\"\\n            ],\\n            [\\n                \\\"🤤\\\"\\n            ],\\n            [\\n                \\\"😒\\\"\\n            ],\\n            [\\n                \\\"😓\\\"\\n            ],\\n            [\\n                \\\"😔\\\"\\n            ],\\n            [\\n                \\\"😕\\\"\\n            ],\\n            [\\n                \\\"🙃\\\"\\n            ],\\n            [\\n                \\\"🤑\\\"\\n            ],\\n            [\\n                \\\"😲\\\"\\n            ],\\n            [\\n                \\\"☹️\\\"\\n            ],\\n            [\\n                \\\"🙁\\\"\\n            ],\\n            [\\n                \\\"😖\\\"\\n            ],\\n            [\\n                \\\"😞\\\"\\n            ],\\n            [\\n                \\\"😟\\\"\\n            ],\\n            [\\n                \\\"😤\\\"\\n            ],\\n            [\\n                \\\"😢\\\"\\n            ],\\n            [\\n                \\\"😭\\\"\\n            ],\\n            [\\n                \\\"😦\\\"\\n            ],\\n            [\\n                \\\"😧\\\"\\n            ],\\n            [\\n                \\\"😨\\\"\\n            ],\\n            [\\n                \\\"😩\\\"\\n            ],\\n            [\\n                \\\"🤯\\\"\\n            ],\\n            [\\n                \\\"😬\\\"\\n            ],\\n            [\\n                \\\"😰\\\"\\n            ],\\n            [\\n                \\\"😱\\\"\\n            ],\\n            [\\n                \\\"😳\\\"\\n            ],\\n            [\\n                \\\"🤪\\\"\\n            ],\\n            [\\n                \\\"😵\\\"\\n            ],\\n            [\\n                \\\"😡\\\"\\n            ],\\n            [\\n                \\\"😠\\\"\\n            ],\\n            [\\n                \\\"🤬\\\"\\n            ],\\n            [\\n                \\\"😷\\\"\\n            ],\\n            [\\n                \\\"🤒\\\"\\n            ],\\n            [\\n                \\\"🤕\\\"\\n            ],\\n            [\\n                \\\"🤢\\\"\\n            ],\\n            [\\n                \\\"🤮\\\"\\n            ],\\n            [\\n                \\\"🤧\\\"\\n            ],\\n            [\\n                \\\"😇\\\"\\n            ],\\n            [\\n                \\\"🤠\\\"\\n            ],\\n            [\\n                \\\"🤡\\\"\\n            ],\\n            [\\n                \\\"🤥\\\"\\n            ],\\n            [\\n                \\\"🤫\\\"\\n            ],\\n            [\\n                \\\"🤭\\\"\\n            ],\\n            [\\n                \\\"🧐\\\"\\n            ],\\n            [\\n                \\\"🤓\\\"\\n            ],\\n            [\\n                \\\"😈\\\"\\n            ],\\n            [\\n                \\\"👿\\\"\\n            ],\\n            [\\n                \\\"👹\\\"\\n            ],\\n            [\\n                \\\"👺\\\"\\n            ],\\n            [\\n                \\\"💀\\\"\\n            ],\\n            [\\n                \\\"👻\\\"\\n            ],\\n            [\\n                \\\"👽\\\"\\n            ],\\n            [\\n                \\\"🤖\\\"\\n            ],\\n            [\\n                \\\"💩\\\"\\n            ],\\n            [\\n                \\\"😺\\\"\\n            ],\\n            [\\n                \\\"😸\\\"\\n            ],\\n            [\\n                \\\"😹\\\"\\n            ],\\n            [\\n                \\\"😻\\\"\\n            ],\\n            [\\n                \\\"😼\\\"\\n            ],\\n            [\\n                \\\"😽\\\"\\n            ],\\n            [\\n                \\\"🙀\\\"\\n            ],\\n            [\\n                \\\"😿\\\"\\n            ],\\n            [\\n                \\\"😾\\\"\\n            ],\\n            [\\n                \\\"🤲\\\",\\n                \\\"🤲🏻\\\",\\n                \\\"🤲🏼\\\",\\n                \\\"🤲🏽\\\",\\n                \\\"🤲🏾\\\",\\n                \\\"🤲🏿\\\"\\n            ],\\n            [\\n                \\\"👐\\\",\\n                \\\"👐🏻\\\",\\n                \\\"👐🏼\\\",\\n                \\\"👐🏽\\\",\\n                \\\"👐🏾\\\",\\n                \\\"👐🏿\\\"\\n            ],\\n            [\\n                \\\"🙌\\\",\\n                \\\"🙌🏻\\\",\\n                \\\"🙌🏼\\\",\\n                \\\"🙌🏽\\\",\\n                \\\"🙌🏾\\\",\\n                \\\"🙌🏿\\\"\\n            ],\\n            [\\n                \\\"👏\\\",\\n                \\\"👏🏻\\\",\\n                \\\"👏🏼\\\",\\n                \\\"👏🏽\\\",\\n                \\\"👏🏾\\\",\\n                \\\"👏🏿\\\"\\n            ],\\n            [\\n                \\\"👍\\\",\\n                \\\"👍🏻\\\",\\n                \\\"👍🏼\\\",\\n                \\\"👍🏽\\\",\\n                \\\"👍🏾\\\",\\n                \\\"👍🏿\\\"\\n            ],\\n            [\\n                \\\"👎\\\",\\n                \\\"👎🏻\\\",\\n                \\\"👎🏼\\\",\\n                \\\"👎🏽\\\",\\n                \\\"👎🏾\\\",\\n                \\\"👎🏿\\\"\\n            ],\\n            [\\n                \\\"👊\\\",\\n                \\\"👊🏻\\\",\\n                \\\"👊🏼\\\",\\n                \\\"👊🏽\\\",\\n                \\\"👊🏾\\\",\\n                \\\"👊🏿\\\"\\n            ],\\n            [\\n                \\\"✊\\\",\\n                \\\"✊🏻\\\",\\n                \\\"✊🏼\\\",\\n                \\\"✊🏽\\\",\\n                \\\"✊🏾\\\",\\n                \\\"✊🏿\\\"\\n            ],\\n            [\\n                \\\"🤛\\\",\\n                \\\"🤛🏻\\\",\\n                \\\"🤛🏼\\\",\\n                \\\"🤛🏽\\\",\\n                \\\"🤛🏾\\\",\\n                \\\"🤛🏿\\\"\\n            ],\\n            [\\n                \\\"🤜\\\",\\n                \\\"🤜🏻\\\",\\n                \\\"🤜🏼\\\",\\n                \\\"🤜🏽\\\",\\n                \\\"🤜🏾\\\",\\n                \\\"🤜🏿\\\"\\n            ],\\n            [\\n                \\\"🤞\\\",\\n                \\\"🤞🏻\\\",\\n                \\\"🤞🏼\\\",\\n                \\\"🤞🏽\\\",\\n                \\\"🤞🏾\\\",\\n                \\\"🤞🏿\\\"\\n            ],\\n            [\\n                \\\"✌\\\",\\n                \\\"✌🏻\\\",\\n                \\\"✌🏼\\\",\\n                \\\"✌🏽\\\",\\n                \\\"✌🏾\\\",\\n                \\\"✌🏿\\\"\\n            ],\\n            [\\n                \\\"🤟\\\",\\n                \\\"🤟🏻\\\",\\n                \\\"🤟🏼\\\",\\n                \\\"🤟🏽\\\",\\n                \\\"🤟🏾\\\",\\n                \\\"🤟🏿\\\"\\n            ],\\n            [\\n                \\\"🤘\\\",\\n                \\\"🤘🏻\\\",\\n                \\\"🤘🏼\\\",\\n                \\\"🤘🏽\\\",\\n                \\\"🤘🏾\\\",\\n                \\\"🤘🏿\\\"\\n            ],\\n            [\\n                \\\"👌\\\",\\n                \\\"👌🏻\\\",\\n                \\\"👌🏼\\\",\\n                \\\"👌🏽\\\",\\n                \\\"👌🏾\\\",\\n                \\\"👌🏿\\\"\\n            ],\\n            [\\n                \\\"👈\\\",\\n                \\\"👈🏻\\\",\\n                \\\"👈🏼\\\",\\n                \\\"👈🏽\\\",\\n                \\\"👈🏾\\\",\\n                \\\"👈🏿\\\"\\n            ],\\n            [\\n                \\\"👉\\\",\\n                \\\"👉🏻\\\",\\n                \\\"👉🏼\\\",\\n                \\\"👉🏽\\\",\\n                \\\"👉🏾\\\",\\n                \\\"👉🏿\\\"\\n            ],\\n            [\\n                \\\"👆\\\",\\n                \\\"👆🏻\\\",\\n                \\\"👆🏼\\\",\\n                \\\"👆🏽\\\",\\n                \\\"👆🏾\\\",\\n                \\\"👆🏿\\\"\\n            ],\\n            [\\n                \\\"👇\\\",\\n                \\\"👇🏻\\\",\\n                \\\"👇🏼\\\",\\n                \\\"👇🏽\\\",\\n                \\\"👇🏾\\\",\\n                \\\"👇🏿\\\"\\n            ],\\n            [\\n                \\\"☝\\\",\\n                \\\"☝🏻\\\",\\n                \\\"☝🏼\\\",\\n                \\\"☝🏽\\\",\\n                \\\"☝🏾\\\",\\n                \\\"☝🏿\\\"\\n            ],\\n            [\\n                \\\"✋\\\",\\n                \\\"✋🏻\\\",\\n                \\\"✋🏼\\\",\\n                \\\"✋🏽\\\",\\n                \\\"✋🏾\\\",\\n                \\\"✋🏿\\\"\\n            ],\\n            [\\n                \\\"🤚\\\",\\n                \\\"🤚🏻\\\",\\n                \\\"🤚🏼\\\",\\n                \\\"🤚🏽\\\",\\n                \\\"🤚🏾\\\",\\n                \\\"🤚🏿\\\"\\n            ],\\n            [\\n                \\\"🖐\\\",\\n                \\\"🖐🏻\\\",\\n                \\\"🖐🏼\\\",\\n                \\\"🖐🏽\\\",\\n                \\\"🖐🏾\\\",\\n                \\\"🖐🏿\\\"\\n            ],\\n            [\\n                \\\"🖖\\\",\\n                \\\"🖖🏻\\\",\\n                \\\"🖖🏼\\\",\\n                \\\"🖖🏽\\\",\\n                \\\"🖖🏾\\\",\\n                \\\"🖖🏿\\\"\\n            ],\\n            [\\n                \\\"👋\\\",\\n                \\\"👋🏻\\\",\\n                \\\"👋🏼\\\",\\n                \\\"👋🏽\\\",\\n                \\\"👋🏾\\\",\\n                \\\"👋🏿\\\"\\n            ],\\n            [\\n                \\\"🤙\\\",\\n                \\\"🤙🏻\\\",\\n                \\\"🤙🏼\\\",\\n                \\\"🤙🏽\\\",\\n                \\\"🤙🏾\\\",\\n                \\\"🤙🏿\\\"\\n            ],\\n            [\\n                \\\"💪\\\",\\n                \\\"💪🏻\\\",\\n                \\\"💪🏼\\\",\\n                \\\"💪🏽\\\",\\n                \\\"💪🏾\\\",\\n                \\\"💪🏿\\\"\\n            ],\\n            [\\n                \\\"🖕\\\",\\n                \\\"🖕🏻\\\",\\n                \\\"🖕🏼\\\",\\n                \\\"🖕🏽\\\",\\n                \\\"🖕🏾\\\",\\n                \\\"🖕🏿\\\"\\n            ],\\n            [\\n                \\\"✍\\\",\\n                \\\"✍🏻\\\",\\n                \\\"✍🏼\\\",\\n                \\\"✍🏽\\\",\\n                \\\"✍🏾\\\",\\n                \\\"✍🏿\\\"\\n            ],\\n            [\\n                \\\"🙏\\\",\\n                \\\"🙏🏻\\\",\\n                \\\"🙏🏼\\\",\\n                \\\"🙏🏽\\\",\\n                \\\"🙏🏾\\\",\\n                \\\"🙏🏿\\\"\\n            ],\\n            [\\n                \\\"💍\\\"\\n            ],\\n            [\\n                \\\"💄\\\"\\n            ],\\n            [\\n                \\\"💋\\\"\\n            ],\\n            [\\n                \\\"👄\\\"\\n            ],\\n            [\\n                \\\"👅\\\"\\n            ],\\n            [\\n                \\\"👂\\\",\\n                \\\"👂🏻\\\",\\n                \\\"👂🏼\\\",\\n                \\\"👂🏽\\\",\\n                \\\"👂🏾\\\",\\n                \\\"👂🏿\\\"\\n            ],\\n            [\\n                \\\"👃\\\",\\n                \\\"👃🏻\\\",\\n                \\\"👃🏼\\\",\\n                \\\"👃🏽\\\",\\n                \\\"👃🏾\\\",\\n                \\\"👃🏿\\\"\\n            ],\\n            [\\n                \\\"👣\\\"\\n            ],\\n            [\\n                \\\"👁\\\"\\n            ],\\n            [\\n                \\\"👀\\\"\\n            ],\\n            [\\n                \\\"🧠\\\"\\n            ],\\n            [\\n                \\\"🗣\\\"\\n            ],\\n            [\\n                \\\"👤\\\"\\n            ],\\n            [\\n                \\\"👥\\\"\\n            ],\\n            [\\n                \\\"👶\\\",\\n                \\\"👶🏻\\\",\\n                \\\"👶🏼\\\",\\n                \\\"👶🏽\\\",\\n                \\\"👶🏾\\\",\\n                \\\"👶🏿\\\"\\n            ],\\n            [\\n                \\\"👧\\\",\\n                \\\"👧🏻\\\",\\n                \\\"👧🏼\\\",\\n                \\\"👧🏽\\\",\\n                \\\"👧🏾\\\",\\n                \\\"👧🏿\\\"\\n            ],\\n            [\\n                \\\"🧒\\\",\\n                \\\"🧒🏻\\\",\\n                \\\"🧒🏼\\\",\\n                \\\"🧒🏽\\\",\\n                \\\"🧒🏾\\\",\\n                \\\"🧒🏿\\\"\\n            ],\\n            [\\n                \\\"👦\\\",\\n                \\\"👦🏻\\\",\\n                \\\"👦🏼\\\",\\n                \\\"👦🏽\\\",\\n                \\\"👦🏾\\\",\\n                \\\"👦🏿\\\"\\n            ],\\n            [\\n                \\\"👩\\\",\\n                \\\"👩🏻\\\",\\n                \\\"👩🏼\\\",\\n                \\\"👩🏽\\\",\\n                \\\"👩🏾\\\",\\n                \\\"👩🏿\\\"\\n            ],\\n            [\\n                \\\"🧑\\\",\\n                \\\"🧑🏻\\\",\\n                \\\"🧑🏼\\\",\\n                \\\"🧑🏽\\\",\\n                \\\"🧑🏾\\\",\\n                \\\"🧑🏿\\\"\\n            ],\\n            [\\n                \\\"👨\\\",\\n                \\\"👨🏻\\\",\\n                \\\"👨🏼\\\",\\n                \\\"👨🏽\\\",\\n                \\\"👨🏾\\\",\\n                \\\"👨🏿\\\"\\n            ],\\n            [\\n                \\\"👱‍♀️\\\",\\n                \\\"👱🏻‍♀️\\\",\\n                \\\"👱🏼‍♀️\\\",\\n                \\\"👱🏽‍♀️\\\",\\n                \\\"👱🏾‍♀️\\\",\\n                \\\"👱🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"👱\\\",\\n                \\\"👱🏻\\\",\\n                \\\"👱🏼\\\",\\n                \\\"👱🏽\\\",\\n                \\\"👱🏾\\\",\\n                \\\"👱🏿\\\"\\n            ],\\n            [\\n                \\\"🧔\\\",\\n                \\\"🧔🏻\\\",\\n                \\\"🧔🏼\\\",\\n                \\\"🧔🏽\\\",\\n                \\\"🧔🏾\\\",\\n                \\\"🧔🏿\\\"\\n            ],\\n            [\\n                \\\"👵\\\",\\n                \\\"👵🏻\\\",\\n                \\\"👵🏼\\\",\\n                \\\"👵🏽\\\",\\n                \\\"👵🏾\\\",\\n                \\\"👵🏿\\\"\\n            ],\\n            [\\n                \\\"🧓\\\",\\n                \\\"🧓🏻\\\",\\n                \\\"🧓🏼\\\",\\n                \\\"🧓🏽\\\",\\n                \\\"🧓🏾\\\",\\n                \\\"🧓🏿\\\"\\n            ],\\n            [\\n                \\\"👴\\\",\\n                \\\"👴🏻\\\",\\n                \\\"👴🏼\\\",\\n                \\\"👴🏽\\\",\\n                \\\"👴🏾\\\",\\n                \\\"👴🏿\\\"\\n            ],\\n            [\\n                \\\"👲\\\",\\n                \\\"👲🏻\\\",\\n                \\\"👲🏼\\\",\\n                \\\"👲🏽\\\",\\n                \\\"👲🏾\\\",\\n                \\\"👲🏿\\\"\\n            ],\\n            [\\n                \\\"👳‍♀️\\\",\\n                \\\"👳🏻‍♀️\\\",\\n                \\\"👳🏼‍♀️\\\",\\n                \\\"👳🏽‍♀️\\\",\\n                \\\"👳🏾‍♀️\\\",\\n                \\\"👳🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"👳️\\\",\\n                \\\"👳🏻\\\",\\n                \\\"👳🏼️\\\",\\n                \\\"👳🏽️\\\",\\n                \\\"👳🏾️\\\",\\n                \\\"👳🏿️\\\"\\n            ],\\n            [\\n                \\\"🧕\\\",\\n                \\\"🧕🏻\\\",\\n                \\\"🧕🏼\\\",\\n                \\\"🧕🏽\\\",\\n                \\\"🧕🏾\\\",\\n                \\\"🧕🏿\\\"\\n            ],\\n            [\\n                \\\"👮‍♀️\\\",\\n                \\\"👮🏻‍♀️\\\",\\n                \\\"👮🏼‍♀️\\\",\\n                \\\"👮🏽‍♀️\\\",\\n                \\\"👮🏾‍♀️\\\",\\n                \\\"👮🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"👮\\\",\\n                \\\"👮🏻\\\",\\n                \\\"👮🏼\\\",\\n                \\\"👮🏽\\\",\\n                \\\"👮🏾\\\",\\n                \\\"👮🏿\\\"\\n            ],\\n            [\\n                \\\"👷‍♀️\\\",\\n                \\\"👷🏻‍♀️\\\",\\n                \\\"👷🏼‍♀️\\\",\\n                \\\"👷🏽‍♀️\\\",\\n                \\\"👷🏾‍♀️\\\",\\n                \\\"👷🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"👷\\\",\\n                \\\"👷🏻\\\",\\n                \\\"👷🏼\\\",\\n                \\\"👷🏽\\\",\\n                \\\"👷🏾\\\",\\n                \\\"👷🏿\\\"\\n            ],\\n            [\\n                \\\"💂‍♀️\\\",\\n                \\\"💂🏻‍♀️\\\",\\n                \\\"💂🏼‍♀️\\\",\\n                \\\"💂🏽‍♀️\\\",\\n                \\\"💂🏾‍♀️\\\",\\n                \\\"💂🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"💂\\\",\\n                \\\"💂🏻\\\",\\n                \\\"💂🏼\\\",\\n                \\\"💂🏽\\\",\\n                \\\"💂🏾\\\",\\n                \\\"💂🏿\\\"\\n            ],\\n            [\\n                \\\"🕵️‍♀️\\\",\\n                \\\"🕵🏻‍♀️\\\",\\n                \\\"🕵🏼‍♀️\\\",\\n                \\\"🕵🏽‍♀️\\\",\\n                \\\"🕵🏾‍♀️\\\",\\n                \\\"🕵🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🕵\\\",\\n                \\\"🕵🏻\\\",\\n                \\\"🕵🏼\\\",\\n                \\\"🕵🏽\\\",\\n                \\\"🕵🏾\\\",\\n                \\\"🕵🏿\\\"\\n            ],\\n            [\\n                \\\"👩‍⚕️\\\",\\n                \\\"👩🏻‍⚕️\\\",\\n                \\\"👩🏼‍⚕️\\\",\\n                \\\"👩🏽‍⚕️\\\",\\n                \\\"👩🏾‍⚕️\\\",\\n                \\\"👩🏿‍⚕️\\\"\\n            ],\\n            [\\n                \\\"👨‍⚕️\\\",\\n                \\\"👨🏻‍⚕️\\\",\\n                \\\"👨🏼‍⚕️\\\",\\n                \\\"👨🏽‍⚕️\\\",\\n                \\\"👨🏾‍⚕️\\\",\\n                \\\"👨🏿‍⚕️\\\"\\n            ],\\n            [\\n                \\\"👩‍🌾\\\",\\n                \\\"👩🏻‍🌾\\\",\\n                \\\"👩🏼‍🌾\\\",\\n                \\\"👩🏽‍🌾\\\",\\n                \\\"👩🏾‍🌾\\\",\\n                \\\"👩🏿‍🌾\\\"\\n            ],\\n            [\\n                \\\"👨‍🌾\\\",\\n                \\\"👨🏻‍🌾\\\",\\n                \\\"👨🏼‍🌾\\\",\\n                \\\"👨🏽‍🌾\\\",\\n                \\\"👨🏾‍🌾\\\",\\n                \\\"👨🏿‍🌾\\\"\\n            ],\\n            [\\n                \\\"👩‍🍳\\\",\\n                \\\"👩🏻‍🍳\\\",\\n                \\\"👩🏼‍🍳\\\",\\n                \\\"👩🏽‍🍳\\\",\\n                \\\"👩🏾‍🍳\\\",\\n                \\\"👩🏿‍🍳\\\"\\n            ],\\n            [\\n                \\\"👨‍🍳\\\",\\n                \\\"👨🏻‍🍳\\\",\\n                \\\"👨🏼‍🍳\\\",\\n                \\\"👨🏽‍🍳\\\",\\n                \\\"👨🏾‍🍳\\\",\\n                \\\"👨🏿‍🍳\\\"\\n            ],\\n            [\\n                \\\"👩‍🎓\\\",\\n                \\\"👩🏻‍🎓\\\",\\n                \\\"👩🏼‍🎓\\\",\\n                \\\"👩🏽‍🎓\\\",\\n                \\\"👩🏾‍🎓\\\",\\n                \\\"👩🏿‍🎓\\\"\\n            ],\\n            [\\n                \\\"👨‍🎓\\\",\\n                \\\"👨🏻‍🎓\\\",\\n                \\\"👨🏼‍🎓\\\",\\n                \\\"👨🏽‍🎓\\\",\\n                \\\"👨🏾‍🎓\\\",\\n                \\\"👨🏿‍🎓\\\"\\n            ],\\n            [\\n                \\\"👩‍🎤\\\",\\n                \\\"👩🏻‍🎤\\\",\\n                \\\"👩🏼‍🎤\\\",\\n                \\\"👩🏽‍🎤\\\",\\n                \\\"👩🏾‍🎤\\\",\\n                \\\"👩🏿‍🎤\\\"\\n            ],\\n            [\\n                \\\"👨‍🎤\\\",\\n                \\\"👨🏻‍🎤\\\",\\n                \\\"👨🏼‍🎤\\\",\\n                \\\"👨🏽‍🎤\\\",\\n                \\\"👨🏾‍🎤\\\",\\n                \\\"👨🏿‍🎤\\\"\\n            ],\\n            [\\n                \\\"👩‍🏫\\\",\\n                \\\"👩🏻‍🏫\\\",\\n                \\\"👩🏼‍🏫\\\",\\n                \\\"👩🏽‍🏫\\\",\\n                \\\"👩🏾‍🏫\\\",\\n                \\\"👩🏿‍🏫\\\"\\n            ],\\n            [\\n                \\\"👨‍🏫\\\",\\n                \\\"👨🏻‍🏫\\\",\\n                \\\"👨🏼‍🏫\\\",\\n                \\\"👨🏽‍🏫\\\",\\n                \\\"👨🏾‍🏫\\\",\\n                \\\"👨🏿‍🏫\\\"\\n            ],\\n            [\\n                \\\"👩‍🏭\\\",\\n                \\\"👩🏻‍🏭\\\",\\n                \\\"👩🏼‍🏭\\\",\\n                \\\"👩🏽‍🏭\\\",\\n                \\\"👩🏾‍🏭\\\",\\n                \\\"👩🏿‍🏭\\\"\\n            ],\\n            [\\n                \\\"👨‍🏭\\\",\\n                \\\"👨🏻‍🏭\\\",\\n                \\\"👨🏼‍🏭\\\",\\n                \\\"👨🏽‍🏭\\\",\\n                \\\"👨🏾‍🏭\\\",\\n                \\\"👨🏿‍🏭\\\"\\n            ],\\n            [\\n                \\\"👩‍💻\\\",\\n                \\\"👩🏻‍💻\\\",\\n                \\\"👩🏼‍💻\\\",\\n                \\\"👩🏽‍💻\\\",\\n                \\\"👩🏾‍💻\\\",\\n                \\\"👩🏿‍💻\\\"\\n            ],\\n            [\\n                \\\"👨‍💻\\\",\\n                \\\"👨🏻‍💻\\\",\\n                \\\"👨🏼‍💻\\\",\\n                \\\"👨🏽‍💻\\\",\\n                \\\"👨🏾‍💻\\\",\\n                \\\"👨🏿‍💻\\\"\\n            ],\\n            [\\n                \\\"👩‍💼\\\",\\n                \\\"👩🏻‍💼\\\",\\n                \\\"👩🏼‍💼\\\",\\n                \\\"👩🏽‍💼\\\",\\n                \\\"👩🏾‍💼\\\",\\n                \\\"👩🏿‍💼\\\"\\n            ],\\n            [\\n                \\\"👨‍💼\\\",\\n                \\\"👨🏻‍💼\\\",\\n                \\\"👨🏼‍💼\\\",\\n                \\\"👨🏽‍💼\\\",\\n                \\\"👨🏾‍💼\\\",\\n                \\\"👨🏿‍💼\\\"\\n            ],\\n            [\\n                \\\"👩‍🔧\\\",\\n                \\\"👩🏻‍🔧\\\",\\n                \\\"👩🏼‍🔧\\\",\\n                \\\"👩🏽‍🔧\\\",\\n                \\\"👩🏾‍🔧\\\",\\n                \\\"👩🏿‍🔧\\\"\\n            ],\\n            [\\n                \\\"👨‍🔧\\\",\\n                \\\"👨🏻‍🔧\\\",\\n                \\\"👨🏼‍🔧\\\",\\n                \\\"👨🏽‍🔧\\\",\\n                \\\"👨🏾‍🔧\\\",\\n                \\\"👨🏿‍🔧\\\"\\n            ],\\n            [\\n                \\\"👩‍🔬\\\",\\n                \\\"👩🏻‍🔬\\\",\\n                \\\"👩🏼‍🔬\\\",\\n                \\\"👩🏽‍🔬\\\",\\n                \\\"👩🏾‍🔬\\\",\\n                \\\"👩🏿‍🔬\\\"\\n            ],\\n            [\\n                \\\"👨‍🔬\\\",\\n                \\\"👨🏻‍🔬\\\",\\n                \\\"👨🏼‍🔬\\\",\\n                \\\"👨🏽‍🔬\\\",\\n                \\\"👨🏾‍🔬\\\",\\n                \\\"👨🏿‍🔬\\\"\\n            ],\\n            [\\n                \\\"👩‍🎨\\\",\\n                \\\"👩🏻‍🎨\\\",\\n                \\\"👩🏼‍🎨\\\",\\n                \\\"👩🏽‍🎨\\\",\\n                \\\"👩🏾‍🎨\\\",\\n                \\\"👩🏿‍🎨\\\"\\n            ],\\n            [\\n                \\\"👨‍🎨\\\",\\n                \\\"👨🏻‍🎨\\\",\\n                \\\"👨🏼‍🎨\\\",\\n                \\\"👨🏽‍🎨\\\",\\n                \\\"👨🏾‍🎨\\\",\\n                \\\"👨🏿‍🎨\\\"\\n            ],\\n            [\\n                \\\"👩‍🚒\\\",\\n                \\\"👩🏻‍🚒\\\",\\n                \\\"👩🏼‍🚒\\\",\\n                \\\"👩🏽‍🚒\\\",\\n                \\\"👩🏾‍🚒\\\",\\n                \\\"👩🏿‍🚒\\\"\\n            ],\\n            [\\n                \\\"👨‍🚒\\\",\\n                \\\"👨🏻‍🚒\\\",\\n                \\\"👨🏼‍🚒\\\",\\n                \\\"👨🏽‍🚒\\\",\\n                \\\"👨🏾‍🚒\\\",\\n                \\\"👨🏿‍🚒\\\"\\n            ],\\n            [\\n                \\\"👩‍✈️\\\",\\n                \\\"👩🏻‍✈️\\\",\\n                \\\"👩🏼‍✈️\\\",\\n                \\\"👩🏽‍✈️\\\",\\n                \\\"👩🏾‍✈️\\\",\\n                \\\"👩🏿‍✈️\\\"\\n            ],\\n            [\\n                \\\"👨‍✈️\\\",\\n                \\\"👨🏻‍✈️\\\",\\n                \\\"👨🏼‍✈️\\\",\\n                \\\"👨🏽‍✈️\\\",\\n                \\\"👨🏾‍✈️\\\",\\n                \\\"👨🏿‍✈️\\\"\\n            ],\\n            [\\n                \\\"👩‍🚀\\\",\\n                \\\"👩🏻‍🚀\\\",\\n                \\\"👩🏼‍🚀\\\",\\n                \\\"👩🏽‍🚀\\\",\\n                \\\"👩🏾‍🚀\\\",\\n                \\\"👩🏿‍🚀\\\"\\n            ],\\n            [\\n                \\\"👨‍🚀\\\",\\n                \\\"👨🏻‍🚀\\\",\\n                \\\"👨🏼‍🚀\\\",\\n                \\\"👨🏽‍🚀\\\",\\n                \\\"👨🏾‍🚀\\\",\\n                \\\"👨🏿‍🚀\\\"\\n            ],\\n            [\\n                \\\"👩‍⚖️\\\",\\n                \\\"👩🏻‍⚖️\\\",\\n                \\\"👩🏼‍⚖️\\\",\\n                \\\"👩🏽‍⚖️\\\",\\n                \\\"👩🏾‍⚖️\\\",\\n                \\\"👩🏿‍⚖️\\\"\\n            ],\\n            [\\n                \\\"👨‍⚖️\\\",\\n                \\\"👨🏻‍⚖️\\\",\\n                \\\"👨🏼‍⚖️\\\",\\n                \\\"👨🏽‍⚖️\\\",\\n                \\\"👨🏾‍⚖️\\\",\\n                \\\"👨🏿‍⚖️\\\"\\n            ],\\n            [\\n                \\\"👰\\\",\\n                \\\"👰🏻\\\",\\n                \\\"👰🏼\\\",\\n                \\\"👰🏽\\\",\\n                \\\"👰🏾\\\",\\n                \\\"👰🏿\\\"\\n            ],\\n            [\\n                \\\"🤵\\\",\\n                \\\"🤵🏻\\\",\\n                \\\"🤵🏼\\\",\\n                \\\"🤵🏽\\\",\\n                \\\"🤵🏾\\\",\\n                \\\"🤵🏿\\\"\\n            ],\\n            [\\n                \\\"👸\\\",\\n                \\\"👸🏻\\\",\\n                \\\"👸🏼\\\",\\n                \\\"👸🏽\\\",\\n                \\\"👸🏾\\\",\\n                \\\"👸🏿\\\"\\n            ],\\n            [\\n                \\\"🤴\\\",\\n                \\\"🤴🏻\\\",\\n                \\\"🤴🏼\\\",\\n                \\\"🤴🏽\\\",\\n                \\\"🤴🏾\\\",\\n                \\\"🤴🏿\\\"\\n            ],\\n            [\\n                \\\"🤶\\\",\\n                \\\"🤶🏻\\\",\\n                \\\"🤶🏼\\\",\\n                \\\"🤶🏽\\\",\\n                \\\"🤶🏾\\\",\\n                \\\"🤶🏿\\\"\\n            ],\\n            [\\n                \\\"🎅\\\",\\n                \\\"🎅🏻\\\",\\n                \\\"🎅🏼\\\",\\n                \\\"🎅🏽\\\",\\n                \\\"🎅🏾\\\",\\n                \\\"🎅🏿\\\"\\n            ],\\n            [\\n                \\\"🧙‍♀️\\\",\\n                \\\"🧙🏻‍♀️\\\",\\n                \\\"🧙🏼‍♀️\\\",\\n                \\\"🧙🏽‍♀️\\\",\\n                \\\"🧙🏾‍♀️\\\",\\n                \\\"🧙🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧙‍♂️\\\",\\n                \\\"🧙🏻‍♂️\\\",\\n                \\\"🧙🏼‍♂️\\\",\\n                \\\"🧙🏽‍♂️\\\",\\n                \\\"🧙🏾‍♂️\\\",\\n                \\\"🧙🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧝‍♀️\\\",\\n                \\\"🧝🏻‍♀️\\\",\\n                \\\"🧝🏼‍♀️\\\",\\n                \\\"🧝🏽‍♀️\\\",\\n                \\\"🧝🏾‍♀️\\\",\\n                \\\"🧝🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧝‍♂️\\\",\\n                \\\"🧝🏻‍♂️\\\",\\n                \\\"🧝🏼‍♂️\\\",\\n                \\\"🧝🏽‍♂️\\\",\\n                \\\"🧝🏾‍♂️\\\",\\n                \\\"🧝🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧛‍♀️\\\",\\n                \\\"🧛🏻‍♀️\\\",\\n                \\\"🧛🏼‍♀️\\\",\\n                \\\"🧛🏽‍♀️\\\",\\n                \\\"🧛🏾‍♀️\\\",\\n                \\\"🧛🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧛‍♂️\\\",\\n                \\\"🧛🏻‍♂️\\\",\\n                \\\"🧛🏼‍♂️\\\",\\n                \\\"🧛🏽‍♂️\\\",\\n                \\\"🧛🏾‍♂️\\\",\\n                \\\"🧛🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧟‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧟‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧞‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧞‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧜‍♀️\\\",\\n                \\\"🧜🏻‍♀️\\\",\\n                \\\"🧜🏼‍♀️\\\",\\n                \\\"🧜🏽‍♀️\\\",\\n                \\\"🧜🏾‍♀️\\\",\\n                \\\"🧜🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧜‍♂️\\\",\\n                \\\"🧜🏻‍♂️\\\",\\n                \\\"🧜🏼‍♂️\\\",\\n                \\\"🧜🏽‍♂️\\\",\\n                \\\"🧜🏾‍♂️\\\",\\n                \\\"🧜🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧚‍♀️\\\",\\n                \\\"🧚🏻‍♀️\\\",\\n                \\\"🧚🏼‍♀️\\\",\\n                \\\"🧚🏽‍♀️\\\",\\n                \\\"🧚🏾‍♀️\\\",\\n                \\\"🧚🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧚‍♂️\\\",\\n                \\\"🧚🏻‍♂️\\\",\\n                \\\"🧚🏼‍♂️\\\",\\n                \\\"🧚🏽‍♂️\\\",\\n                \\\"🧚🏾‍♂️\\\",\\n                \\\"🧚🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"👼\\\",\\n                \\\"👼🏻\\\",\\n                \\\"👼🏼\\\",\\n                \\\"👼🏽\\\",\\n                \\\"👼🏾\\\",\\n                \\\"👼🏿\\\"\\n            ],\\n            [\\n                \\\"🤰\\\",\\n                \\\"🤰🏻\\\",\\n                \\\"🤰🏼\\\",\\n                \\\"🤰🏽\\\",\\n                \\\"🤰🏾\\\",\\n                \\\"🤰🏿\\\"\\n            ],\\n            [\\n                \\\"🤱\\\",\\n                \\\"🤱🏻\\\",\\n                \\\"🤱🏼\\\",\\n                \\\"🤱🏽\\\",\\n                \\\"🤱🏾\\\",\\n                \\\"🤱🏿\\\"\\n            ],\\n            [\\n                \\\"🙇‍♀️\\\",\\n                \\\"🙇🏻‍♀️\\\",\\n                \\\"🙇🏼‍♀️\\\",\\n                \\\"🙇🏽‍♀️\\\",\\n                \\\"🙇🏾‍♀️\\\",\\n                \\\"🙇🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🙇\\\",\\n                \\\"🙇🏻\\\",\\n                \\\"🙇🏼\\\",\\n                \\\"🙇🏽\\\",\\n                \\\"🙇🏾\\\",\\n                \\\"🙇🏿\\\"\\n            ],\\n            [\\n                \\\"💁\\\",\\n                \\\"💁🏻\\\",\\n                \\\"💁🏼\\\",\\n                \\\"💁🏽\\\",\\n                \\\"💁🏾\\\",\\n                \\\"💁🏿\\\"\\n            ],\\n            [\\n                \\\"💁‍♂️\\\",\\n                \\\"💁🏻‍♂️\\\",\\n                \\\"💁🏼‍♂️\\\",\\n                \\\"💁🏽‍♂️\\\",\\n                \\\"💁🏾‍♂️\\\",\\n                \\\"💁🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🙅\\\",\\n                \\\"🙅🏻\\\",\\n                \\\"🙅🏼\\\",\\n                \\\"🙅🏽\\\",\\n                \\\"🙅🏾\\\",\\n                \\\"🙅🏿\\\"\\n            ],\\n            [\\n                \\\"🙅‍♂️\\\",\\n                \\\"🙅🏻‍♂️\\\",\\n                \\\"🙅🏼‍♂️\\\",\\n                \\\"🙅🏽‍♂️\\\",\\n                \\\"🙅🏾‍♂️\\\",\\n                \\\"🙅🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🙆\\\",\\n                \\\"🙆🏻\\\",\\n                \\\"🙆🏼\\\",\\n                \\\"🙆🏽\\\",\\n                \\\"🙆🏾\\\",\\n                \\\"🙆🏿\\\"\\n            ],\\n            [\\n                \\\"🙆‍♂️\\\",\\n                \\\"🙆🏻‍♂️\\\",\\n                \\\"🙆🏼‍♂️\\\",\\n                \\\"🙆🏽‍♂️\\\",\\n                \\\"🙆🏾‍♂️\\\",\\n                \\\"🙆🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🙋\\\",\\n                \\\"🙋🏻\\\",\\n                \\\"🙋🏼\\\",\\n                \\\"🙋🏽\\\",\\n                \\\"🙋🏾\\\",\\n                \\\"🙋🏿\\\"\\n            ],\\n            [\\n                \\\"🙋‍♂️\\\",\\n                \\\"🙋🏻‍♂️\\\",\\n                \\\"🙋🏼‍♂️\\\",\\n                \\\"🙋🏽‍♂️\\\",\\n                \\\"🙋🏾‍♂️\\\",\\n                \\\"🙋🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🤦‍♀️\\\",\\n                \\\"🤦🏻‍♀️\\\",\\n                \\\"🤦🏼‍♀️\\\",\\n                \\\"🤦🏽‍♀️\\\",\\n                \\\"🤦🏾‍♀️\\\",\\n                \\\"🤦🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤦‍♂️\\\",\\n                \\\"🤦🏻‍♂️\\\",\\n                \\\"🤦🏼‍♂️\\\",\\n                \\\"🤦🏽‍♂️\\\",\\n                \\\"🤦🏾‍♂️\\\",\\n                \\\"🤦🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🤷\\\",\\n                \\\"🤷🏻‍♀️\\\",\\n                \\\"🤷🏼‍♀️\\\",\\n                \\\"🤷🏽‍♀️\\\",\\n                \\\"🤷🏾‍♀️\\\",\\n                \\\"🤷🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤷‍♂️\\\",\\n                \\\"🤷🏻‍♂️\\\",\\n                \\\"🤷🏼‍♂️\\\",\\n                \\\"🤷🏽‍♂️\\\",\\n                \\\"🤷🏾‍♂️\\\",\\n                \\\"🤷🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🙎\\\",\\n                \\\"🙎🏻\\\",\\n                \\\"🙎🏼\\\",\\n                \\\"🙎🏽\\\",\\n                \\\"🙎🏾\\\",\\n                \\\"🙎🏿\\\"\\n            ],\\n            [\\n                \\\"🙎‍♂️\\\",\\n                \\\"🙎🏻‍♂️\\\",\\n                \\\"🙎🏼‍♂️\\\",\\n                \\\"🙎🏽‍♂️\\\",\\n                \\\"🙎🏾‍♂️\\\",\\n                \\\"🙎🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🙍\\\",\\n                \\\"🙍🏻\\\",\\n                \\\"🙍🏼\\\",\\n                \\\"🙍🏽\\\",\\n                \\\"🙍🏾\\\",\\n                \\\"🙍🏿\\\"\\n            ],\\n            [\\n                \\\"🙍‍♂️\\\",\\n                \\\"🙍🏻‍♂️\\\",\\n                \\\"🙍🏼‍♂️\\\",\\n                \\\"🙍🏽‍♂️\\\",\\n                \\\"🙍🏾‍♂️\\\",\\n                \\\"🙍🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"💇\\\",\\n                \\\"💇🏻\\\",\\n                \\\"💇🏼\\\",\\n                \\\"💇🏽\\\",\\n                \\\"💇🏾\\\",\\n                \\\"💇🏿\\\"\\n            ],\\n            [\\n                \\\"💇‍♂️\\\",\\n                \\\"💇🏻‍♂️\\\",\\n                \\\"💇🏼‍♂️\\\",\\n                \\\"💇🏽‍♂️\\\",\\n                \\\"💇🏾‍♂️\\\",\\n                \\\"💇🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"💆\\\",\\n                \\\"💆🏻\\\",\\n                \\\"💆🏼\\\",\\n                \\\"💆🏽\\\",\\n                \\\"💆🏾\\\",\\n                \\\"💆🏿\\\"\\n            ],\\n            [\\n                \\\"💆‍♂️\\\",\\n                \\\"💆🏻‍♂️\\\",\\n                \\\"💆🏼‍♂️\\\",\\n                \\\"💆🏽‍♂️\\\",\\n                \\\"💆🏾‍♂️\\\",\\n                \\\"💆🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧖‍♀\\\"\\n            ],\\n            [\\n                \\\"🧖‍♂\\\"\\n            ],\\n            [\\n                \\\"💅\\\",\\n                \\\"💅🏻\\\",\\n                \\\"💅🏼\\\",\\n                \\\"💅🏽\\\",\\n                \\\"💅🏾\\\",\\n                \\\"💅🏿\\\"\\n            ],\\n            [\\n                \\\"🤳\\\",\\n                \\\"🤳🏻\\\",\\n                \\\"🤳🏼\\\",\\n                \\\"🤳🏽\\\",\\n                \\\"🤳🏾\\\",\\n                \\\"🤳🏿\\\"\\n            ],\\n            [\\n                \\\"🕴\\\",\\n                \\\"🕴🏻\\\",\\n                \\\"🕴🏼\\\",\\n                \\\"🕴🏼\\\",\\n                \\\"🕴🏾\\\",\\n                \\\"🕴🏿\\\"\\n            ],\\n            [\\n                \\\"💃\\\",\\n                \\\"💃🏻\\\",\\n                \\\"💃🏼\\\",\\n                \\\"💃🏽\\\",\\n                \\\"💃🏾\\\",\\n                \\\"💃🏿\\\"\\n            ],\\n            [\\n                \\\"🕺\\\",\\n                \\\"🕺🏻\\\",\\n                \\\"🕺🏼\\\",\\n                \\\"🕺🏽\\\",\\n                \\\"🕺🏾\\\",\\n                \\\"🕺🏿\\\"\\n            ],\\n            [\\n                \\\"👯‍♀\\\"\\n            ],\\n            [\\n                \\\"👯‍♂\\\"\\n            ],\\n            [\\n                \\\"🚶‍♀️\\\",\\n                \\\"🚶🏻‍♀️\\\",\\n                \\\"🚶🏼‍♀️\\\",\\n                \\\"🚶🏽‍♀️\\\",\\n                \\\"🚶🏾‍♀️\\\",\\n                \\\"🚶🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🚶\\\",\\n                \\\"🚶🏻\\\",\\n                \\\"🚶🏼\\\",\\n                \\\"🚶🏽\\\",\\n                \\\"🚶🏾\\\",\\n                \\\"🚶🏿\\\"\\n            ],\\n            [\\n                \\\"🏃‍♀️\\\",\\n                \\\"🏃🏻‍♀️\\\",\\n                \\\"🏃🏼‍♀️\\\",\\n                \\\"🏃🏽‍♀️\\\",\\n                \\\"🏃🏾‍♀️\\\",\\n                \\\"🏃🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🏃\\\",\\n                \\\"🏃🏻\\\",\\n                \\\"🏃🏼\\\",\\n                \\\"🏃🏽\\\",\\n                \\\"🏃🏾\\\",\\n                \\\"🏃🏿\\\"\\n            ],\\n            [\\n                \\\"👫\\\"\\n            ],\\n            [\\n                \\\"👭\\\"\\n            ],\\n            [\\n                \\\"👬\\\"\\n            ],\\n            [\\n                \\\"💑\\\"\\n            ],\\n            [\\n                \\\"👩‍❤️‍👩\\\"\\n            ],\\n            [\\n                \\\"👨‍❤️‍👨\\\"\\n            ],\\n            [\\n                \\\"💏\\\"\\n            ],\\n            [\\n                \\\"👩‍❤️‍💋‍👩\\\"\\n            ],\\n            [\\n                \\\"👨‍❤️‍💋‍👨\\\"\\n            ],\\n            [\\n                \\\"👪\\\"\\n            ],\\n            [\\n                \\\"👨‍👩‍👧\\\"\\n            ],\\n            [\\n                \\\"👨‍👩‍👧‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👩‍👦‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👩‍👧‍👧\\\"\\n            ],\\n            [\\n                \\\"👩‍👩‍👦\\\"\\n            ],\\n            [\\n                \\\"👩‍👩‍👧\\\"\\n            ],\\n            [\\n                \\\"👩‍👩‍👧‍👦\\\"\\n            ],\\n            [\\n                \\\"👩‍👩‍👦‍👦\\\"\\n            ],\\n            [\\n                \\\"👩‍👩‍👧‍👧\\\"\\n            ],\\n            [\\n                \\\"👨‍👨‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👨‍👧\\\"\\n            ],\\n            [\\n                \\\"👨‍👨‍👧‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👨‍👦‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👨‍👧‍👧\\\"\\n            ],\\n            [\\n                \\\"👩‍👦\\\"\\n            ],\\n            [\\n                \\\"👩‍👧\\\"\\n            ],\\n            [\\n                \\\"👩‍👧‍👦\\\"\\n            ],\\n            [\\n                \\\"👩‍👦‍👦\\\"\\n            ],\\n            [\\n                \\\"👩‍👧‍👧\\\"\\n            ],\\n            [\\n                \\\"👨‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👧\\\"\\n            ],\\n            [\\n                \\\"👨‍👧‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👦‍👦\\\"\\n            ],\\n            [\\n                \\\"👨‍👧‍👧\\\"\\n            ],\\n            [\\n                \\\"🧥\\\"\\n            ],\\n            [\\n                \\\"👚\\\"\\n            ],\\n            [\\n                \\\"👕\\\"\\n            ],\\n            [\\n                \\\"👖\\\"\\n            ],\\n            [\\n                \\\"👔\\\"\\n            ],\\n            [\\n                \\\"👗\\\"\\n            ],\\n            [\\n                \\\"👙\\\"\\n            ],\\n            [\\n                \\\"👘\\\"\\n            ],\\n            [\\n                \\\"👠\\\"\\n            ],\\n            [\\n                \\\"👡\\\"\\n            ],\\n            [\\n                \\\"👢\\\"\\n            ],\\n            [\\n                \\\"👞\\\"\\n            ],\\n            [\\n                \\\"👟\\\"\\n            ],\\n            [\\n                \\\"🧦\\\"\\n            ],\\n            [\\n                \\\"🧤\\\"\\n            ],\\n            [\\n                \\\"🧣\\\"\\n            ],\\n            [\\n                \\\"🎩\\\"\\n            ],\\n            [\\n                \\\"🧢\\\"\\n            ],\\n            [\\n                \\\"👒\\\"\\n            ],\\n            [\\n                \\\"🎓\\\"\\n            ],\\n            [\\n                \\\"⛑\\\"\\n            ],\\n            [\\n                \\\"👑\\\"\\n            ],\\n            [\\n                \\\"👝\\\"\\n            ],\\n            [\\n                \\\"👛\\\"\\n            ],\\n            [\\n                \\\"👜\\\"\\n            ],\\n            [\\n                \\\"💼\\\"\\n            ],\\n            [\\n                \\\"🎒\\\"\\n            ],\\n            [\\n                \\\"👓\\\"\\n            ],\\n            [\\n                \\\"🕶\\\"\\n            ],\\n            [\\n                \\\"🌂\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"smileysAndPeople\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"🐶\\\"\\n            ],\\n            [\\n                \\\"🐱\\\"\\n            ],\\n            [\\n                \\\"🐭\\\"\\n            ],\\n            [\\n                \\\"🐹\\\"\\n            ],\\n            [\\n                \\\"🐰\\\"\\n            ],\\n            [\\n                \\\"🦊\\\"\\n            ],\\n            [\\n                \\\"🐻\\\"\\n            ],\\n            [\\n                \\\"🐼\\\"\\n            ],\\n            [\\n                \\\"🐨\\\"\\n            ],\\n            [\\n                \\\"🐯\\\"\\n            ],\\n            [\\n                \\\"🦁\\\"\\n            ],\\n            [\\n                \\\"🐮\\\"\\n            ],\\n            [\\n                \\\"🐷\\\"\\n            ],\\n            [\\n                \\\"🐽\\\"\\n            ],\\n            [\\n                \\\"🐸\\\"\\n            ],\\n            [\\n                \\\"🐵\\\"\\n            ],\\n            [\\n                \\\"🙈\\\"\\n            ],\\n            [\\n                \\\"🙉\\\"\\n            ],\\n            [\\n                \\\"🙊\\\"\\n            ],\\n            [\\n                \\\"🐒\\\"\\n            ],\\n            [\\n                \\\"🐔\\\"\\n            ],\\n            [\\n                \\\"🐧\\\"\\n            ],\\n            [\\n                \\\"🐦\\\"\\n            ],\\n            [\\n                \\\"🐤\\\"\\n            ],\\n            [\\n                \\\"🐣\\\"\\n            ],\\n            [\\n                \\\"🐥\\\"\\n            ],\\n            [\\n                \\\"🦆\\\"\\n            ],\\n            [\\n                \\\"🦅\\\"\\n            ],\\n            [\\n                \\\"🦉\\\"\\n            ],\\n            [\\n                \\\"🦇\\\"\\n            ],\\n            [\\n                \\\"🐺\\\"\\n            ],\\n            [\\n                \\\"🐗\\\"\\n            ],\\n            [\\n                \\\"🐴\\\"\\n            ],\\n            [\\n                \\\"🦄\\\"\\n            ],\\n            [\\n                \\\"🐝\\\"\\n            ],\\n            [\\n                \\\"🐛\\\"\\n            ],\\n            [\\n                \\\"🦋\\\"\\n            ],\\n            [\\n                \\\"🐌\\\"\\n            ],\\n            [\\n                \\\"🐚\\\"\\n            ],\\n            [\\n                \\\"🐞\\\"\\n            ],\\n            [\\n                \\\"🐜\\\"\\n            ],\\n            [\\n                \\\"🦗\\\"\\n            ],\\n            [\\n                \\\"🕷\\\"\\n            ],\\n            [\\n                \\\"🕸\\\"\\n            ],\\n            [\\n                \\\"🦂\\\"\\n            ],\\n            [\\n                \\\"🐢\\\"\\n            ],\\n            [\\n                \\\"🐍\\\"\\n            ],\\n            [\\n                \\\"🦎\\\"\\n            ],\\n            [\\n                \\\"🦖\\\"\\n            ],\\n            [\\n                \\\"🦕\\\"\\n            ],\\n            [\\n                \\\"🐙\\\"\\n            ],\\n            [\\n                \\\"🦑\\\"\\n            ],\\n            [\\n                \\\"🦐\\\"\\n            ],\\n            [\\n                \\\"🦀\\\"\\n            ],\\n            [\\n                \\\"🐡\\\"\\n            ],\\n            [\\n                \\\"🐠\\\"\\n            ],\\n            [\\n                \\\"🐟\\\"\\n            ],\\n            [\\n                \\\"🐬\\\"\\n            ],\\n            [\\n                \\\"🐳\\\"\\n            ],\\n            [\\n                \\\"🐋\\\"\\n            ],\\n            [\\n                \\\"🦈\\\"\\n            ],\\n            [\\n                \\\"🐊\\\"\\n            ],\\n            [\\n                \\\"🐅\\\"\\n            ],\\n            [\\n                \\\"🐆\\\"\\n            ],\\n            [\\n                \\\"🦓\\\"\\n            ],\\n            [\\n                \\\"🦍\\\"\\n            ],\\n            [\\n                \\\"🐘\\\"\\n            ],\\n            [\\n                \\\"🦏\\\"\\n            ],\\n            [\\n                \\\"🐪\\\"\\n            ],\\n            [\\n                \\\"🐫\\\"\\n            ],\\n            [\\n                \\\"🦒\\\"\\n            ],\\n            [\\n                \\\"🐃\\\"\\n            ],\\n            [\\n                \\\"🐂\\\"\\n            ],\\n            [\\n                \\\"🐄\\\"\\n            ],\\n            [\\n                \\\"🐎\\\"\\n            ],\\n            [\\n                \\\"🐖\\\"\\n            ],\\n            [\\n                \\\"🐏\\\"\\n            ],\\n            [\\n                \\\"🐑\\\"\\n            ],\\n            [\\n                \\\"🐐\\\"\\n            ],\\n            [\\n                \\\"🦌\\\"\\n            ],\\n            [\\n                \\\"🐕\\\"\\n            ],\\n            [\\n                \\\"🐩\\\"\\n            ],\\n            [\\n                \\\"🐈\\\"\\n            ],\\n            [\\n                \\\"🐓\\\"\\n            ],\\n            [\\n                \\\"🦃\\\"\\n            ],\\n            [\\n                \\\"🕊\\\"\\n            ],\\n            [\\n                \\\"🐇\\\"\\n            ],\\n            [\\n                \\\"🐁\\\"\\n            ],\\n            [\\n                \\\"🐀\\\"\\n            ],\\n            [\\n                \\\"🐿\\\"\\n            ],\\n            [\\n                \\\"🦔\\\"\\n            ],\\n            [\\n                \\\"🐾\\\"\\n            ],\\n            [\\n                \\\"🐉\\\"\\n            ],\\n            [\\n                \\\"🐲\\\"\\n            ],\\n            [\\n                \\\"🌵\\\"\\n            ],\\n            [\\n                \\\"🎄\\\"\\n            ],\\n            [\\n                \\\"🌲\\\"\\n            ],\\n            [\\n                \\\"🌳\\\"\\n            ],\\n            [\\n                \\\"🌴\\\"\\n            ],\\n            [\\n                \\\"🌱\\\"\\n            ],\\n            [\\n                \\\"🌿\\\"\\n            ],\\n            [\\n                \\\"☘️\\\"\\n            ],\\n            [\\n                \\\"🍀\\\"\\n            ],\\n            [\\n                \\\"🎍\\\"\\n            ],\\n            [\\n                \\\"🎋\\\"\\n            ],\\n            [\\n                \\\"🍃\\\"\\n            ],\\n            [\\n                \\\"🍂\\\"\\n            ],\\n            [\\n                \\\"🍁\\\"\\n            ],\\n            [\\n                \\\"🍄\\\"\\n            ],\\n            [\\n                \\\"🌾\\\"\\n            ],\\n            [\\n                \\\"💐\\\"\\n            ],\\n            [\\n                \\\"🌷\\\"\\n            ],\\n            [\\n                \\\"🌹\\\"\\n            ],\\n            [\\n                \\\"🥀\\\"\\n            ],\\n            [\\n                \\\"🌺\\\"\\n            ],\\n            [\\n                \\\"🌸\\\"\\n            ],\\n            [\\n                \\\"🌼\\\"\\n            ],\\n            [\\n                \\\"🌻\\\"\\n            ],\\n            [\\n                \\\"🌞\\\"\\n            ],\\n            [\\n                \\\"🌝\\\"\\n            ],\\n            [\\n                \\\"🌛\\\"\\n            ],\\n            [\\n                \\\"🌜\\\"\\n            ],\\n            [\\n                \\\"🌚\\\"\\n            ],\\n            [\\n                \\\"🌕\\\"\\n            ],\\n            [\\n                \\\"🌖\\\"\\n            ],\\n            [\\n                \\\"🌗\\\"\\n            ],\\n            [\\n                \\\"🌘\\\"\\n            ],\\n            [\\n                \\\"🌑\\\"\\n            ],\\n            [\\n                \\\"🌒\\\"\\n            ],\\n            [\\n                \\\"🌓\\\"\\n            ],\\n            [\\n                \\\"🌔\\\"\\n            ],\\n            [\\n                \\\"🌙\\\"\\n            ],\\n            [\\n                \\\"🌎\\\"\\n            ],\\n            [\\n                \\\"🌍\\\"\\n            ],\\n            [\\n                \\\"🌏\\\"\\n            ],\\n            [\\n                \\\"💫\\\"\\n            ],\\n            [\\n                \\\"⭐️\\\"\\n            ],\\n            [\\n                \\\"🌟\\\"\\n            ],\\n            [\\n                \\\"✨\\\"\\n            ],\\n            [\\n                \\\"⚡️\\\"\\n            ],\\n            [\\n                \\\"☄️\\\"\\n            ],\\n            [\\n                \\\"💥\\\"\\n            ],\\n            [\\n                \\\"🔥\\\"\\n            ],\\n            [\\n                \\\"🌪\\\"\\n            ],\\n            [\\n                \\\"🌈\\\"\\n            ],\\n            [\\n                \\\"☀️\\\"\\n            ],\\n            [\\n                \\\"🌤\\\"\\n            ],\\n            [\\n                \\\"⛅️\\\"\\n            ],\\n            [\\n                \\\"🌥\\\"\\n            ],\\n            [\\n                \\\"☁️\\\"\\n            ],\\n            [\\n                \\\"🌦\\\"\\n            ],\\n            [\\n                \\\"🌧\\\"\\n            ],\\n            [\\n                \\\"⛈\\\"\\n            ],\\n            [\\n                \\\"🌩\\\"\\n            ],\\n            [\\n                \\\"🌨\\\"\\n            ],\\n            [\\n                \\\"❄️\\\"\\n            ],\\n            [\\n                \\\"☃️\\\"\\n            ],\\n            [\\n                \\\"⛄️\\\"\\n            ],\\n            [\\n                \\\"🌬\\\"\\n            ],\\n            [\\n                \\\"💨\\\"\\n            ],\\n            [\\n                \\\"💧\\\"\\n            ],\\n            [\\n                \\\"💦\\\"\\n            ],\\n            [\\n                \\\"☔️\\\"\\n            ],\\n            [\\n                \\\"☂️\\\"\\n            ],\\n            [\\n                \\\"🌊\\\"\\n            ],\\n            [\\n                \\\"🌫\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"animalsAndNature\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"🍏\\\"\\n            ],\\n            [\\n                \\\"🍎\\\"\\n            ],\\n            [\\n                \\\"🍐\\\"\\n            ],\\n            [\\n                \\\"🍊\\\"\\n            ],\\n            [\\n                \\\"🍋\\\"\\n            ],\\n            [\\n                \\\"🍌\\\"\\n            ],\\n            [\\n                \\\"🍉\\\"\\n            ],\\n            [\\n                \\\"🍇\\\"\\n            ],\\n            [\\n                \\\"🍓\\\"\\n            ],\\n            [\\n                \\\"🍈\\\"\\n            ],\\n            [\\n                \\\"🍒\\\"\\n            ],\\n            [\\n                \\\"🍑\\\"\\n            ],\\n            [\\n                \\\"🍍\\\"\\n            ],\\n            [\\n                \\\"🥥\\\"\\n            ],\\n            [\\n                \\\"🥝\\\"\\n            ],\\n            [\\n                \\\"🍅\\\"\\n            ],\\n            [\\n                \\\"🍆\\\"\\n            ],\\n            [\\n                \\\"🥑\\\"\\n            ],\\n            [\\n                \\\"🥦\\\"\\n            ],\\n            [\\n                \\\"🥒\\\"\\n            ],\\n            [\\n                \\\"🌶\\\"\\n            ],\\n            [\\n                \\\"🌽\\\"\\n            ],\\n            [\\n                \\\"🥕\\\"\\n            ],\\n            [\\n                \\\"🥔\\\"\\n            ],\\n            [\\n                \\\"🍠\\\"\\n            ],\\n            [\\n                \\\"🥐\\\"\\n            ],\\n            [\\n                \\\"🍞\\\"\\n            ],\\n            [\\n                \\\"🥖\\\"\\n            ],\\n            [\\n                \\\"🥨\\\"\\n            ],\\n            [\\n                \\\"🧀\\\"\\n            ],\\n            [\\n                \\\"🥚\\\"\\n            ],\\n            [\\n                \\\"🍳\\\"\\n            ],\\n            [\\n                \\\"🥞\\\"\\n            ],\\n            [\\n                \\\"🥓\\\"\\n            ],\\n            [\\n                \\\"🥩\\\"\\n            ],\\n            [\\n                \\\"🍗\\\"\\n            ],\\n            [\\n                \\\"🍖\\\"\\n            ],\\n            [\\n                \\\"🌭\\\"\\n            ],\\n            [\\n                \\\"🍔\\\"\\n            ],\\n            [\\n                \\\"🍟\\\"\\n            ],\\n            [\\n                \\\"🍕\\\"\\n            ],\\n            [\\n                \\\"🥪\\\"\\n            ],\\n            [\\n                \\\"🥙\\\"\\n            ],\\n            [\\n                \\\"🌮\\\"\\n            ],\\n            [\\n                \\\"🌯\\\"\\n            ],\\n            [\\n                \\\"🥗\\\"\\n            ],\\n            [\\n                \\\"🥘\\\"\\n            ],\\n            [\\n                \\\"🥫\\\"\\n            ],\\n            [\\n                \\\"🍝\\\"\\n            ],\\n            [\\n                \\\"🍜\\\"\\n            ],\\n            [\\n                \\\"🍲\\\"\\n            ],\\n            [\\n                \\\"🍛\\\"\\n            ],\\n            [\\n                \\\"🍣\\\"\\n            ],\\n            [\\n                \\\"🍱\\\"\\n            ],\\n            [\\n                \\\"🥟\\\"\\n            ],\\n            [\\n                \\\"🍤\\\"\\n            ],\\n            [\\n                \\\"🍙\\\"\\n            ],\\n            [\\n                \\\"🍚\\\"\\n            ],\\n            [\\n                \\\"🍘\\\"\\n            ],\\n            [\\n                \\\"🍥\\\"\\n            ],\\n            [\\n                \\\"🥠\\\"\\n            ],\\n            [\\n                \\\"🍢\\\"\\n            ],\\n            [\\n                \\\"🍡\\\"\\n            ],\\n            [\\n                \\\"🍧\\\"\\n            ],\\n            [\\n                \\\"🍨\\\"\\n            ],\\n            [\\n                \\\"🍦\\\"\\n            ],\\n            [\\n                \\\"🥧\\\"\\n            ],\\n            [\\n                \\\"🍰\\\"\\n            ],\\n            [\\n                \\\"🎂\\\"\\n            ],\\n            [\\n                \\\"🍮\\\"\\n            ],\\n            [\\n                \\\"🍭\\\"\\n            ],\\n            [\\n                \\\"🍬\\\"\\n            ],\\n            [\\n                \\\"🍫\\\"\\n            ],\\n            [\\n                \\\"🍿\\\"\\n            ],\\n            [\\n                \\\"🍩\\\"\\n            ],\\n            [\\n                \\\"🍪\\\"\\n            ],\\n            [\\n                \\\"🌰\\\"\\n            ],\\n            [\\n                \\\"🥜\\\"\\n            ],\\n            [\\n                \\\"🍯\\\"\\n            ],\\n            [\\n                \\\"🥛\\\"\\n            ],\\n            [\\n                \\\"🍼\\\"\\n            ],\\n            [\\n                \\\"☕️\\\"\\n            ],\\n            [\\n                \\\"🍵\\\"\\n            ],\\n            [\\n                \\\"🥤\\\"\\n            ],\\n            [\\n                \\\"🍶\\\"\\n            ],\\n            [\\n                \\\"🍺\\\"\\n            ],\\n            [\\n                \\\"🍻\\\"\\n            ],\\n            [\\n                \\\"🥂\\\"\\n            ],\\n            [\\n                \\\"🍷\\\"\\n            ],\\n            [\\n                \\\"🥃\\\"\\n            ],\\n            [\\n                \\\"🍸\\\"\\n            ],\\n            [\\n                \\\"🍹\\\"\\n            ],\\n            [\\n                \\\"🍾\\\"\\n            ],\\n            [\\n                \\\"🥄\\\"\\n            ],\\n            [\\n                \\\"🍴\\\"\\n            ],\\n            [\\n                \\\"🍽\\\"\\n            ],\\n            [\\n                \\\"🥣\\\"\\n            ],\\n            [\\n                \\\"🥡\\\"\\n            ],\\n            [\\n                \\\"🥢\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"foodAndDrink\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"⚽️\\\"\\n            ],\\n            [\\n                \\\"🏀\\\"\\n            ],\\n            [\\n                \\\"🏈\\\"\\n            ],\\n            [\\n                \\\"⚾️\\\"\\n            ],\\n            [\\n                \\\"🎾\\\"\\n            ],\\n            [\\n                \\\"🏐\\\"\\n            ],\\n            [\\n                \\\"🏉\\\"\\n            ],\\n            [\\n                \\\"🎱\\\"\\n            ],\\n            [\\n                \\\"🏓\\\"\\n            ],\\n            [\\n                \\\"🏸\\\"\\n            ],\\n            [\\n                \\\"🥅\\\"\\n            ],\\n            [\\n                \\\"🏒\\\"\\n            ],\\n            [\\n                \\\"🏑\\\"\\n            ],\\n            [\\n                \\\"🏏\\\"\\n            ],\\n            [\\n                \\\"⛳️\\\"\\n            ],\\n            [\\n                \\\"🏹\\\"\\n            ],\\n            [\\n                \\\"🎣\\\"\\n            ],\\n            [\\n                \\\"🥊\\\"\\n            ],\\n            [\\n                \\\"🥋\\\"\\n            ],\\n            [\\n                \\\"🎽\\\"\\n            ],\\n            [\\n                \\\"⛸\\\"\\n            ],\\n            [\\n                \\\"🥌\\\"\\n            ],\\n            [\\n                \\\"🛷\\\"\\n            ],\\n            [\\n                \\\"🎿\\\"\\n            ],\\n            [\\n                \\\"⛷\\\"\\n            ],\\n            [\\n                \\\"🏂\\\"\\n            ],\\n            [\\n                \\\"🏋️‍♀️\\\",\\n                \\\"🏋🏻‍♀️\\\",\\n                \\\"🏋🏼‍♀️\\\",\\n                \\\"🏋🏽‍♀️\\\",\\n                \\\"🏋🏾‍♀️\\\",\\n                \\\"🏋🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🏋️‍♂️\\\",\\n                \\\"🏋🏻‍♂️\\\",\\n                \\\"🏋🏼‍♂️\\\",\\n                \\\"🏋🏽‍♂️\\\",\\n                \\\"🏋🏾‍♂️\\\",\\n                \\\"🏋🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🤼‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤼‍♂️\\\"\\n            ],\\n            [\\n                \\\"🤸‍♀️\\\",\\n                \\\"🤸🏻‍♀️\\\",\\n                \\\"🤸🏼‍♀️\\\",\\n                \\\"🤸🏽‍♀️\\\",\\n                \\\"🤸🏾‍♀️\\\",\\n                \\\"🤸🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤸‍♂️\\\",\\n                \\\"🤸🏻‍♂️\\\",\\n                \\\"🤸🏼‍♂️\\\",\\n                \\\"🤸🏽‍♂️\\\",\\n                \\\"🤸🏾‍♂️\\\",\\n                \\\"🤸🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"⛹️‍♀️\\\",\\n                \\\"⛹🏻‍♀️\\\",\\n                \\\"⛹🏼‍♀️\\\",\\n                \\\"⛹🏽‍♀️\\\",\\n                \\\"⛹🏾‍♀️\\\",\\n                \\\"⛹🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"⛹️‍♂️\\\",\\n                \\\"⛹🏻‍♂️\\\",\\n                \\\"⛹🏼‍♂️\\\",\\n                \\\"⛹🏽‍♂️\\\",\\n                \\\"⛹🏾‍♂️\\\",\\n                \\\"⛹🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🤺️\\\"\\n            ],\\n            [\\n                \\\"🤾‍♀️\\\",\\n                \\\"🤾🏻‍♀️\\\",\\n                \\\"🤾🏼‍♀️\\\",\\n                \\\"🤾🏾‍♀️\\\",\\n                \\\"🤾🏾‍♀️\\\",\\n                \\\"🤾🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤾‍♂️\\\",\\n                \\\"🤾🏻‍♂️\\\",\\n                \\\"🤾🏼‍♂️\\\",\\n                \\\"🤾🏽‍♂️\\\",\\n                \\\"🤾🏾‍♂️\\\",\\n                \\\"🤾🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🏌️‍♀️\\\",\\n                \\\"🏌🏻‍♀️\\\",\\n                \\\"🏌🏼‍♀️\\\",\\n                \\\"🏌🏽‍♀️\\\",\\n                \\\"🏌🏾‍♀️\\\",\\n                \\\"🏌🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🏌️‍♂️\\\",\\n                \\\"🏌🏻‍♂️\\\",\\n                \\\"🏌🏼‍♂️\\\",\\n                \\\"🏌🏽‍♂️\\\",\\n                \\\"🏌🏾‍♂️\\\",\\n                \\\"🏌🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🏇\\\",\\n                \\\"🏇🏻\\\",\\n                \\\"🏇🏼\\\",\\n                \\\"🏇🏽\\\",\\n                \\\"🏇🏾\\\",\\n                \\\"🏇🏿\\\"\\n            ],\\n            [\\n                \\\"🧘‍♀️\\\",\\n                \\\"🧘🏻‍♀️\\\",\\n                \\\"🧘🏼‍♀️\\\",\\n                \\\"🧘🏽‍♀️\\\",\\n                \\\"🧘🏾‍♀️\\\",\\n                \\\"🧘🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧘‍♂️\\\",\\n                \\\"🧘🏻‍♂️\\\",\\n                \\\"🧘🏼‍♂️\\\",\\n                \\\"🧘🏽‍♂️\\\",\\n                \\\"🧘🏾‍♂️\\\",\\n                \\\"🧘🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🏄‍♀️\\\",\\n                \\\"🏄🏻‍♀️\\\",\\n                \\\"🏄🏼‍♀️\\\",\\n                \\\"🏄🏽‍♀️\\\",\\n                \\\"🏄🏾‍♀️\\\",\\n                \\\"🏄🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🏄‍♂️\\\",\\n                \\\"🏄🏻‍♂️\\\",\\n                \\\"🏄🏼‍♂️\\\",\\n                \\\"🏄🏽‍♂️\\\",\\n                \\\"🏄🏾‍♂️\\\",\\n                \\\"🏄🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🏊‍♀️\\\",\\n                \\\"🏊🏻‍♀️\\\",\\n                \\\"🏊🏼‍♀️\\\",\\n                \\\"🏊🏽‍♀️\\\",\\n                \\\"🏊🏾‍♀️\\\",\\n                \\\"🏊🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🏊‍♂️\\\",\\n                \\\"🏊🏻‍♂️\\\",\\n                \\\"🏊🏼‍♂️\\\",\\n                \\\"🏊🏽‍♂️\\\",\\n                \\\"🏊🏾‍♂️\\\",\\n                \\\"🏊🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🤽‍♀️\\\",\\n                \\\"🤽🏻‍♀️\\\",\\n                \\\"🤽🏼‍♀️\\\",\\n                \\\"🤽🏽‍♀️\\\",\\n                \\\"🤽🏾‍♀️\\\",\\n                \\\"🤽🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤽‍♂️\\\",\\n                \\\"🤽🏻‍♂️\\\",\\n                \\\"🤽🏼‍♂️\\\",\\n                \\\"🤽🏽‍♂️\\\",\\n                \\\"🤽🏾‍♂️\\\",\\n                \\\"🤽🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🚣‍♀️\\\",\\n                \\\"🚣🏻‍♀️\\\",\\n                \\\"🚣🏼‍♀️\\\",\\n                \\\"🚣🏽‍♀️\\\",\\n                \\\"🚣🏾‍♀️\\\",\\n                \\\"🚣🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🚣‍♂️\\\",\\n                \\\"🚣🏻‍♂️\\\",\\n                \\\"🚣🏼‍♂️\\\",\\n                \\\"🚣🏽‍♂️\\\",\\n                \\\"🚣🏾‍♂️\\\",\\n                \\\"🚣🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🧗‍♀️\\\",\\n                \\\"🧗🏻‍♀️\\\",\\n                \\\"🧗🏼‍♀️\\\",\\n                \\\"🧗🏽‍♀️\\\",\\n                \\\"🧗🏾‍♀️\\\",\\n                \\\"🧗🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🧗‍♂️\\\",\\n                \\\"🧗🏻‍♂️\\\",\\n                \\\"🧗🏼‍♂️\\\",\\n                \\\"🧗🏽‍♂️\\\",\\n                \\\"🧗🏾‍♂️\\\",\\n                \\\"🧗🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🚵‍♀️\\\",\\n                \\\"🚵🏻‍♀️\\\",\\n                \\\"🚵🏼‍♀️\\\",\\n                \\\"🚵🏽‍♀️\\\",\\n                \\\"🚵🏾‍♀️\\\",\\n                \\\"🚵🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🚵‍♂️\\\",\\n                \\\"🚵🏻‍♂️\\\",\\n                \\\"🚵🏼‍♂️\\\",\\n                \\\"🚵🏽‍♂️\\\",\\n                \\\"🚵🏾‍♂️\\\",\\n                \\\"🚵🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🚴‍♀️\\\",\\n                \\\"🚴🏻‍♀️\\\",\\n                \\\"🚴🏼‍♀️\\\",\\n                \\\"🚴🏽‍♀️\\\",\\n                \\\"🚴🏾‍♀️\\\",\\n                \\\"🚴🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🚴‍♂️\\\",\\n                \\\"🚴🏻‍♂️\\\",\\n                \\\"🚴🏼‍♂️\\\",\\n                \\\"🚴🏽‍♂️\\\",\\n                \\\"🚴🏾‍♂️\\\",\\n                \\\"🚴🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🏆\\\"\\n            ],\\n            [\\n                \\\"🥇\\\"\\n            ],\\n            [\\n                \\\"🥈\\\"\\n            ],\\n            [\\n                \\\"🥉\\\"\\n            ],\\n            [\\n                \\\"🏅\\\"\\n            ],\\n            [\\n                \\\"🎖\\\"\\n            ],\\n            [\\n                \\\"🏵\\\"\\n            ],\\n            [\\n                \\\"🎗\\\"\\n            ],\\n            [\\n                \\\"🎫\\\"\\n            ],\\n            [\\n                \\\"🎟\\\"\\n            ],\\n            [\\n                \\\"🎪\\\"\\n            ],\\n            [\\n                \\\"🤹‍♀️\\\",\\n                \\\"🤹🏻‍♀️\\\",\\n                \\\"🤹🏼‍♀️\\\",\\n                \\\"🤹🏽‍♀️\\\",\\n                \\\"🤹🏾‍♀️\\\",\\n                \\\"🤹🏿‍♀️\\\"\\n            ],\\n            [\\n                \\\"🤹‍♂️\\\",\\n                \\\"🤹🏻‍♂️\\\",\\n                \\\"🤹🏼‍♂️\\\",\\n                \\\"🤹🏽‍♂️\\\",\\n                \\\"🤹🏾‍♂️\\\",\\n                \\\"🤹🏿‍♂️\\\"\\n            ],\\n            [\\n                \\\"🎭\\\"\\n            ],\\n            [\\n                \\\"🎨\\\"\\n            ],\\n            [\\n                \\\"🎬\\\"\\n            ],\\n            [\\n                \\\"🎤\\\"\\n            ],\\n            [\\n                \\\"🎧\\\"\\n            ],\\n            [\\n                \\\"🎼\\\"\\n            ],\\n            [\\n                \\\"🎹\\\"\\n            ],\\n            [\\n                \\\"🥁\\\"\\n            ],\\n            [\\n                \\\"🎷\\\"\\n            ],\\n            [\\n                \\\"🎺\\\"\\n            ],\\n            [\\n                \\\"🎸\\\"\\n            ],\\n            [\\n                \\\"🎻\\\"\\n            ],\\n            [\\n                \\\"🎲\\\"\\n            ],\\n            [\\n                \\\"🎯\\\"\\n            ],\\n            [\\n                \\\"🎳\\\"\\n            ],\\n            [\\n                \\\"🎮\\\"\\n            ],\\n            [\\n                \\\"🎰\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"activity\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"🚗\\\"\\n            ],\\n            [\\n                \\\"🚕\\\"\\n            ],\\n            [\\n                \\\"🚙\\\"\\n            ],\\n            [\\n                \\\"🚌\\\"\\n            ],\\n            [\\n                \\\"🚎\\\"\\n            ],\\n            [\\n                \\\"🏎\\\"\\n            ],\\n            [\\n                \\\"🚓\\\"\\n            ],\\n            [\\n                \\\"🚑\\\"\\n            ],\\n            [\\n                \\\"🚒\\\"\\n            ],\\n            [\\n                \\\"🚐\\\"\\n            ],\\n            [\\n                \\\"🚚\\\"\\n            ],\\n            [\\n                \\\"🚛\\\"\\n            ],\\n            [\\n                \\\"🚜\\\"\\n            ],\\n            [\\n                \\\"🛴\\\"\\n            ],\\n            [\\n                \\\"🚲\\\"\\n            ],\\n            [\\n                \\\"🛵\\\"\\n            ],\\n            [\\n                \\\"🏍\\\"\\n            ],\\n            [\\n                \\\"🚨\\\"\\n            ],\\n            [\\n                \\\"🚔\\\"\\n            ],\\n            [\\n                \\\"🚍\\\"\\n            ],\\n            [\\n                \\\"🚘\\\"\\n            ],\\n            [\\n                \\\"🚖\\\"\\n            ],\\n            [\\n                \\\"🚡\\\"\\n            ],\\n            [\\n                \\\"🚠\\\"\\n            ],\\n            [\\n                \\\"🚟\\\"\\n            ],\\n            [\\n                \\\"🚃\\\"\\n            ],\\n            [\\n                \\\"🚋\\\"\\n            ],\\n            [\\n                \\\"🚞\\\"\\n            ],\\n            [\\n                \\\"🚝\\\"\\n            ],\\n            [\\n                \\\"🚄\\\"\\n            ],\\n            [\\n                \\\"🚅\\\"\\n            ],\\n            [\\n                \\\"🚈\\\"\\n            ],\\n            [\\n                \\\"🚂\\\"\\n            ],\\n            [\\n                \\\"🚆\\\"\\n            ],\\n            [\\n                \\\"🚇\\\"\\n            ],\\n            [\\n                \\\"🚊\\\"\\n            ],\\n            [\\n                \\\"🚉\\\"\\n            ],\\n            [\\n                \\\"✈️\\\"\\n            ],\\n            [\\n                \\\"🛫\\\"\\n            ],\\n            [\\n                \\\"🛬\\\"\\n            ],\\n            [\\n                \\\"🛩\\\"\\n            ],\\n            [\\n                \\\"💺\\\"\\n            ],\\n            [\\n                \\\"🛰\\\"\\n            ],\\n            [\\n                \\\"🚀\\\"\\n            ],\\n            [\\n                \\\"🛸\\\"\\n            ],\\n            [\\n                \\\"🚁\\\"\\n            ],\\n            [\\n                \\\"🛶\\\"\\n            ],\\n            [\\n                \\\"⛵️\\\"\\n            ],\\n            [\\n                \\\"🚤\\\"\\n            ],\\n            [\\n                \\\"🛥\\\"\\n            ],\\n            [\\n                \\\"🛳\\\"\\n            ],\\n            [\\n                \\\"⛴\\\"\\n            ],\\n            [\\n                \\\"🚢\\\"\\n            ],\\n            [\\n                \\\"⚓️\\\"\\n            ],\\n            [\\n                \\\"⛽️\\\"\\n            ],\\n            [\\n                \\\"🚧\\\"\\n            ],\\n            [\\n                \\\"🚦\\\"\\n            ],\\n            [\\n                \\\"🚥\\\"\\n            ],\\n            [\\n                \\\"🚏\\\"\\n            ],\\n            [\\n                \\\"🗺\\\"\\n            ],\\n            [\\n                \\\"🗿\\\"\\n            ],\\n            [\\n                \\\"🗽\\\"\\n            ],\\n            [\\n                \\\"🗼\\\"\\n            ],\\n            [\\n                \\\"🏰\\\"\\n            ],\\n            [\\n                \\\"🏯\\\"\\n            ],\\n            [\\n                \\\"🏟\\\"\\n            ],\\n            [\\n                \\\"🎡\\\"\\n            ],\\n            [\\n                \\\"🎢\\\"\\n            ],\\n            [\\n                \\\"🎠\\\"\\n            ],\\n            [\\n                \\\"⛲️\\\"\\n            ],\\n            [\\n                \\\"⛱\\\"\\n            ],\\n            [\\n                \\\"🏖\\\"\\n            ],\\n            [\\n                \\\"🏝\\\"\\n            ],\\n            [\\n                \\\"🏜\\\"\\n            ],\\n            [\\n                \\\"🌋\\\"\\n            ],\\n            [\\n                \\\"⛰\\\"\\n            ],\\n            [\\n                \\\"🏔\\\"\\n            ],\\n            [\\n                \\\"🗻\\\"\\n            ],\\n            [\\n                \\\"🏕\\\"\\n            ],\\n            [\\n                \\\"⛺️\\\"\\n            ],\\n            [\\n                \\\"🏠\\\"\\n            ],\\n            [\\n                \\\"🏡\\\"\\n            ],\\n            [\\n                \\\"🏘\\\"\\n            ],\\n            [\\n                \\\"🏚\\\"\\n            ],\\n            [\\n                \\\"🏗\\\"\\n            ],\\n            [\\n                \\\"🏭\\\"\\n            ],\\n            [\\n                \\\"🏢\\\"\\n            ],\\n            [\\n                \\\"🏬\\\"\\n            ],\\n            [\\n                \\\"🏣\\\"\\n            ],\\n            [\\n                \\\"🏤\\\"\\n            ],\\n            [\\n                \\\"🏥\\\"\\n            ],\\n            [\\n                \\\"🏦\\\"\\n            ],\\n            [\\n                \\\"🏨\\\"\\n            ],\\n            [\\n                \\\"🏪\\\"\\n            ],\\n            [\\n                \\\"🏫\\\"\\n            ],\\n            [\\n                \\\"🏩\\\"\\n            ],\\n            [\\n                \\\"💒\\\"\\n            ],\\n            [\\n                \\\"🏛\\\"\\n            ],\\n            [\\n                \\\"⛪️\\\"\\n            ],\\n            [\\n                \\\"🕌\\\"\\n            ],\\n            [\\n                \\\"🕍\\\"\\n            ],\\n            [\\n                \\\"🕋\\\"\\n            ],\\n            [\\n                \\\"⛩\\\"\\n            ],\\n            [\\n                \\\"🛤\\\"\\n            ],\\n            [\\n                \\\"🛣\\\"\\n            ],\\n            [\\n                \\\"🗾\\\"\\n            ],\\n            [\\n                \\\"🎑\\\"\\n            ],\\n            [\\n                \\\"🏞\\\"\\n            ],\\n            [\\n                \\\"🌅\\\"\\n            ],\\n            [\\n                \\\"🌄\\\"\\n            ],\\n            [\\n                \\\"🌠\\\"\\n            ],\\n            [\\n                \\\"🎇\\\"\\n            ],\\n            [\\n                \\\"🎆\\\"\\n            ],\\n            [\\n                \\\"🌇\\\"\\n            ],\\n            [\\n                \\\"🌆\\\"\\n            ],\\n            [\\n                \\\"🏙\\\"\\n            ],\\n            [\\n                \\\"🌃\\\"\\n            ],\\n            [\\n                \\\"🌌\\\"\\n            ],\\n            [\\n                \\\"🌉\\\"\\n            ],\\n            [\\n                \\\"🌁\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"travelAndPlaces\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"⌚️\\\"\\n            ],\\n            [\\n                \\\"📱\\\"\\n            ],\\n            [\\n                \\\"📲\\\"\\n            ],\\n            [\\n                \\\"💻\\\"\\n            ],\\n            [\\n                \\\"⌨️\\\"\\n            ],\\n            [\\n                \\\"🖥\\\"\\n            ],\\n            [\\n                \\\"🖨\\\"\\n            ],\\n            [\\n                \\\"🖱\\\"\\n            ],\\n            [\\n                \\\"🖲\\\"\\n            ],\\n            [\\n                \\\"🕹\\\"\\n            ],\\n            [\\n                \\\"🗜\\\"\\n            ],\\n            [\\n                \\\"💽\\\"\\n            ],\\n            [\\n                \\\"💾\\\"\\n            ],\\n            [\\n                \\\"💿\\\"\\n            ],\\n            [\\n                \\\"📀\\\"\\n            ],\\n            [\\n                \\\"📼\\\"\\n            ],\\n            [\\n                \\\"📷\\\"\\n            ],\\n            [\\n                \\\"📸\\\"\\n            ],\\n            [\\n                \\\"📹\\\"\\n            ],\\n            [\\n                \\\"🎥\\\"\\n            ],\\n            [\\n                \\\"📽\\\"\\n            ],\\n            [\\n                \\\"🎞\\\"\\n            ],\\n            [\\n                \\\"📞\\\"\\n            ],\\n            [\\n                \\\"☎️\\\"\\n            ],\\n            [\\n                \\\"📟\\\"\\n            ],\\n            [\\n                \\\"📠\\\"\\n            ],\\n            [\\n                \\\"📺\\\"\\n            ],\\n            [\\n                \\\"📻\\\"\\n            ],\\n            [\\n                \\\"🎙\\\"\\n            ],\\n            [\\n                \\\"🎚\\\"\\n            ],\\n            [\\n                \\\"🎛\\\"\\n            ],\\n            [\\n                \\\"⏱\\\"\\n            ],\\n            [\\n                \\\"⏲\\\"\\n            ],\\n            [\\n                \\\"⏰\\\"\\n            ],\\n            [\\n                \\\"🕰\\\"\\n            ],\\n            [\\n                \\\"⌛️\\\"\\n            ],\\n            [\\n                \\\"⏳\\\"\\n            ],\\n            [\\n                \\\"📡\\\"\\n            ],\\n            [\\n                \\\"🔋\\\"\\n            ],\\n            [\\n                \\\"🔌\\\"\\n            ],\\n            [\\n                \\\"💡\\\"\\n            ],\\n            [\\n                \\\"🔦\\\"\\n            ],\\n            [\\n                \\\"🕯\\\"\\n            ],\\n            [\\n                \\\"🗑\\\"\\n            ],\\n            [\\n                \\\"🛢\\\"\\n            ],\\n            [\\n                \\\"💸\\\"\\n            ],\\n            [\\n                \\\"💵\\\"\\n            ],\\n            [\\n                \\\"💴\\\"\\n            ],\\n            [\\n                \\\"💶\\\"\\n            ],\\n            [\\n                \\\"💷\\\"\\n            ],\\n            [\\n                \\\"💰\\\"\\n            ],\\n            [\\n                \\\"💳\\\"\\n            ],\\n            [\\n                \\\"💎\\\"\\n            ],\\n            [\\n                \\\"⚖️\\\"\\n            ],\\n            [\\n                \\\"🔧\\\"\\n            ],\\n            [\\n                \\\"🔨\\\"\\n            ],\\n            [\\n                \\\"⚒\\\"\\n            ],\\n            [\\n                \\\"🛠\\\"\\n            ],\\n            [\\n                \\\"⛏\\\"\\n            ],\\n            [\\n                \\\"🔩\\\"\\n            ],\\n            [\\n                \\\"⚙️\\\"\\n            ],\\n            [\\n                \\\"⛓\\\"\\n            ],\\n            [\\n                \\\"🔫\\\"\\n            ],\\n            [\\n                \\\"💣\\\"\\n            ],\\n            [\\n                \\\"🔪\\\"\\n            ],\\n            [\\n                \\\"🗡\\\"\\n            ],\\n            [\\n                \\\"⚔️\\\"\\n            ],\\n            [\\n                \\\"🛡\\\"\\n            ],\\n            [\\n                \\\"🚬\\\"\\n            ],\\n            [\\n                \\\"⚰️\\\"\\n            ],\\n            [\\n                \\\"⚱️\\\"\\n            ],\\n            [\\n                \\\"🏺\\\"\\n            ],\\n            [\\n                \\\"🔮\\\"\\n            ],\\n            [\\n                \\\"📿\\\"\\n            ],\\n            [\\n                \\\"💈\\\"\\n            ],\\n            [\\n                \\\"⚗️\\\"\\n            ],\\n            [\\n                \\\"🔭\\\"\\n            ],\\n            [\\n                \\\"🔬\\\"\\n            ],\\n            [\\n                \\\"🕳\\\"\\n            ],\\n            [\\n                \\\"💊\\\"\\n            ],\\n            [\\n                \\\"💉\\\"\\n            ],\\n            [\\n                \\\"🌡\\\"\\n            ],\\n            [\\n                \\\"🚽\\\"\\n            ],\\n            [\\n                \\\"🚰\\\"\\n            ],\\n            [\\n                \\\"🚿\\\"\\n            ],\\n            [\\n                \\\"🛁\\\"\\n            ],\\n            [\\n                \\\"🛀\\\"\\n            ],\\n            [\\n                \\\"🛀🏻\\\"\\n            ],\\n            [\\n                \\\"🛀🏼\\\"\\n            ],\\n            [\\n                \\\"🛀🏽\\\"\\n            ],\\n            [\\n                \\\"🛀🏾\\\"\\n            ],\\n            [\\n                \\\"🛀🏿\\\"\\n            ],\\n            [\\n                \\\"🛎\\\"\\n            ],\\n            [\\n                \\\"🔑\\\"\\n            ],\\n            [\\n                \\\"🗝\\\"\\n            ],\\n            [\\n                \\\"🚪\\\"\\n            ],\\n            [\\n                \\\"🛋\\\"\\n            ],\\n            [\\n                \\\"🛏\\\"\\n            ],\\n            [\\n                \\\"🛌\\\"\\n            ],\\n            [\\n                \\\"🖼\\\"\\n            ],\\n            [\\n                \\\"🛍\\\"\\n            ],\\n            [\\n                \\\"🛒\\\"\\n            ],\\n            [\\n                \\\"🎁\\\"\\n            ],\\n            [\\n                \\\"🎈\\\"\\n            ],\\n            [\\n                \\\"🎏\\\"\\n            ],\\n            [\\n                \\\"🎀\\\"\\n            ],\\n            [\\n                \\\"🎊\\\"\\n            ],\\n            [\\n                \\\"🎉\\\"\\n            ],\\n            [\\n                \\\"🎎\\\"\\n            ],\\n            [\\n                \\\"🏮\\\"\\n            ],\\n            [\\n                \\\"🎐\\\"\\n            ],\\n            [\\n                \\\"✉️\\\"\\n            ],\\n            [\\n                \\\"📩\\\"\\n            ],\\n            [\\n                \\\"📨\\\"\\n            ],\\n            [\\n                \\\"📧\\\"\\n            ],\\n            [\\n                \\\"💌\\\"\\n            ],\\n            [\\n                \\\"📥\\\"\\n            ],\\n            [\\n                \\\"📤\\\"\\n            ],\\n            [\\n                \\\"📦\\\"\\n            ],\\n            [\\n                \\\"🏷\\\"\\n            ],\\n            [\\n                \\\"📪\\\"\\n            ],\\n            [\\n                \\\"📫\\\"\\n            ],\\n            [\\n                \\\"📬\\\"\\n            ],\\n            [\\n                \\\"📭\\\"\\n            ],\\n            [\\n                \\\"📮\\\"\\n            ],\\n            [\\n                \\\"📯\\\"\\n            ],\\n            [\\n                \\\"📜\\\"\\n            ],\\n            [\\n                \\\"📃\\\"\\n            ],\\n            [\\n                \\\"📄\\\"\\n            ],\\n            [\\n                \\\"📑\\\"\\n            ],\\n            [\\n                \\\"📊\\\"\\n            ],\\n            [\\n                \\\"📈\\\"\\n            ],\\n            [\\n                \\\"📉\\\"\\n            ],\\n            [\\n                \\\"🗒\\\"\\n            ],\\n            [\\n                \\\"🗓\\\"\\n            ],\\n            [\\n                \\\"📆\\\"\\n            ],\\n            [\\n                \\\"📅\\\"\\n            ],\\n            [\\n                \\\"📇\\\"\\n            ],\\n            [\\n                \\\"🗃\\\"\\n            ],\\n            [\\n                \\\"🗳\\\"\\n            ],\\n            [\\n                \\\"🗄\\\"\\n            ],\\n            [\\n                \\\"📋\\\"\\n            ],\\n            [\\n                \\\"📁\\\"\\n            ],\\n            [\\n                \\\"📂\\\"\\n            ],\\n            [\\n                \\\"🗂\\\"\\n            ],\\n            [\\n                \\\"🗞\\\"\\n            ],\\n            [\\n                \\\"📰\\\"\\n            ],\\n            [\\n                \\\"📓\\\"\\n            ],\\n            [\\n                \\\"📔\\\"\\n            ],\\n            [\\n                \\\"📒\\\"\\n            ],\\n            [\\n                \\\"📕\\\"\\n            ],\\n            [\\n                \\\"📗\\\"\\n            ],\\n            [\\n                \\\"📘\\\"\\n            ],\\n            [\\n                \\\"📙\\\"\\n            ],\\n            [\\n                \\\"📚\\\"\\n            ],\\n            [\\n                \\\"📖\\\"\\n            ],\\n            [\\n                \\\"🔖\\\"\\n            ],\\n            [\\n                \\\"🔗\\\"\\n            ],\\n            [\\n                \\\"📎\\\"\\n            ],\\n            [\\n                \\\"🖇\\\"\\n            ],\\n            [\\n                \\\"📐\\\"\\n            ],\\n            [\\n                \\\"📏\\\"\\n            ],\\n            [\\n                \\\"📌\\\"\\n            ],\\n            [\\n                \\\"📍\\\"\\n            ],\\n            [\\n                \\\"✂️\\\"\\n            ],\\n            [\\n                \\\"🖊\\\"\\n            ],\\n            [\\n                \\\"🖋\\\"\\n            ],\\n            [\\n                \\\"✒️\\\"\\n            ],\\n            [\\n                \\\"🖌\\\"\\n            ],\\n            [\\n                \\\"🖍\\\"\\n            ],\\n            [\\n                \\\"📝\\\"\\n            ],\\n            [\\n                \\\"✏️\\\"\\n            ],\\n            [\\n                \\\"🔍\\\"\\n            ],\\n            [\\n                \\\"🔎\\\"\\n            ],\\n            [\\n                \\\"🔏\\\"\\n            ],\\n            [\\n                \\\"🔐\\\"\\n            ],\\n            [\\n                \\\"🔒\\\"\\n            ],\\n            [\\n                \\\"🔓\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"objects\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"❤️\\\"\\n            ],\\n            [\\n                \\\"🧡\\\"\\n            ],\\n            [\\n                \\\"💛\\\"\\n            ],\\n            [\\n                \\\"💚\\\"\\n            ],\\n            [\\n                \\\"💙\\\"\\n            ],\\n            [\\n                \\\"💜\\\"\\n            ],\\n            [\\n                \\\"🖤\\\"\\n            ],\\n            [\\n                \\\"💔\\\"\\n            ],\\n            [\\n                \\\"❣️\\\"\\n            ],\\n            [\\n                \\\"💕\\\"\\n            ],\\n            [\\n                \\\"💞\\\"\\n            ],\\n            [\\n                \\\"💓\\\"\\n            ],\\n            [\\n                \\\"💗\\\"\\n            ],\\n            [\\n                \\\"💖\\\"\\n            ],\\n            [\\n                \\\"💘\\\"\\n            ],\\n            [\\n                \\\"💝\\\"\\n            ],\\n            [\\n                \\\"💟\\\"\\n            ],\\n            [\\n                \\\"☮️\\\"\\n            ],\\n            [\\n                \\\"✝️\\\"\\n            ],\\n            [\\n                \\\"☪️\\\"\\n            ],\\n            [\\n                \\\"🕉\\\"\\n            ],\\n            [\\n                \\\"☸️\\\"\\n            ],\\n            [\\n                \\\"✡️\\\"\\n            ],\\n            [\\n                \\\"🔯\\\"\\n            ],\\n            [\\n                \\\"🕎\\\"\\n            ],\\n            [\\n                \\\"☯️\\\"\\n            ],\\n            [\\n                \\\"☦️\\\"\\n            ],\\n            [\\n                \\\"🛐\\\"\\n            ],\\n            [\\n                \\\"⛎\\\"\\n            ],\\n            [\\n                \\\"♈️\\\"\\n            ],\\n            [\\n                \\\"♉️\\\"\\n            ],\\n            [\\n                \\\"♊️\\\"\\n            ],\\n            [\\n                \\\"♋️\\\"\\n            ],\\n            [\\n                \\\"♌️\\\"\\n            ],\\n            [\\n                \\\"♍️\\\"\\n            ],\\n            [\\n                \\\"♎️\\\"\\n            ],\\n            [\\n                \\\"♏️\\\"\\n            ],\\n            [\\n                \\\"♐️\\\"\\n            ],\\n            [\\n                \\\"♑️\\\"\\n            ],\\n            [\\n                \\\"♒️\\\"\\n            ],\\n            [\\n                \\\"♓️\\\"\\n            ],\\n            [\\n                \\\"🆔\\\"\\n            ],\\n            [\\n                \\\"⚛️\\\"\\n            ],\\n            [\\n                \\\"🉑\\\"\\n            ],\\n            [\\n                \\\"☢️\\\"\\n            ],\\n            [\\n                \\\"☣️\\\"\\n            ],\\n            [\\n                \\\"📴\\\"\\n            ],\\n            [\\n                \\\"📳\\\"\\n            ],\\n            [\\n                \\\"🈶\\\"\\n            ],\\n            [\\n                \\\"🈚️\\\"\\n            ],\\n            [\\n                \\\"🈸\\\"\\n            ],\\n            [\\n                \\\"🈺\\\"\\n            ],\\n            [\\n                \\\"🈷️\\\"\\n            ],\\n            [\\n                \\\"✴️\\\"\\n            ],\\n            [\\n                \\\"🆚\\\"\\n            ],\\n            [\\n                \\\"💮\\\"\\n            ],\\n            [\\n                \\\"🉐\\\"\\n            ],\\n            [\\n                \\\"㊙️\\\"\\n            ],\\n            [\\n                \\\"㊗️\\\"\\n            ],\\n            [\\n                \\\"🈴\\\"\\n            ],\\n            [\\n                \\\"🈵\\\"\\n            ],\\n            [\\n                \\\"🈹\\\"\\n            ],\\n            [\\n                \\\"🈲\\\"\\n            ],\\n            [\\n                \\\"🅰️\\\"\\n            ],\\n            [\\n                \\\"🅱️\\\"\\n            ],\\n            [\\n                \\\"🆎\\\"\\n            ],\\n            [\\n                \\\"🆑\\\"\\n            ],\\n            [\\n                \\\"🅾️\\\"\\n            ],\\n            [\\n                \\\"🆘\\\"\\n            ],\\n            [\\n                \\\"❌\\\"\\n            ],\\n            [\\n                \\\"⭕️\\\"\\n            ],\\n            [\\n                \\\"🛑\\\"\\n            ],\\n            [\\n                \\\"⛔️\\\"\\n            ],\\n            [\\n                \\\"📛\\\"\\n            ],\\n            [\\n                \\\"🚫\\\"\\n            ],\\n            [\\n                \\\"💯\\\"\\n            ],\\n            [\\n                \\\"💢\\\"\\n            ],\\n            [\\n                \\\"♨️\\\"\\n            ],\\n            [\\n                \\\"🚷\\\"\\n            ],\\n            [\\n                \\\"🚯\\\"\\n            ],\\n            [\\n                \\\"🚳\\\"\\n            ],\\n            [\\n                \\\"🚱\\\"\\n            ],\\n            [\\n                \\\"🔞\\\"\\n            ],\\n            [\\n                \\\"📵\\\"\\n            ],\\n            [\\n                \\\"🚭\\\"\\n            ],\\n            [\\n                \\\"❗️\\\"\\n            ],\\n            [\\n                \\\"❕\\\"\\n            ],\\n            [\\n                \\\"❓\\\"\\n            ],\\n            [\\n                \\\"❔\\\"\\n            ],\\n            [\\n                \\\"‼️\\\"\\n            ],\\n            [\\n                \\\"⁉️\\\"\\n            ],\\n            [\\n                \\\"🔅\\\"\\n            ],\\n            [\\n                \\\"🔆\\\"\\n            ],\\n            [\\n                \\\"〽️\\\"\\n            ],\\n            [\\n                \\\"⚠️\\\"\\n            ],\\n            [\\n                \\\"🚸\\\"\\n            ],\\n            [\\n                \\\"🔱\\\"\\n            ],\\n            [\\n                \\\"⚜️\\\"\\n            ],\\n            [\\n                \\\"🔰\\\"\\n            ],\\n            [\\n                \\\"♻️\\\"\\n            ],\\n            [\\n                \\\"✅\\\"\\n            ],\\n            [\\n                \\\"🈯️\\\"\\n            ],\\n            [\\n                \\\"💹\\\"\\n            ],\\n            [\\n                \\\"❇️\\\"\\n            ],\\n            [\\n                \\\"✳️\\\"\\n            ],\\n            [\\n                \\\"❎\\\"\\n            ],\\n            [\\n                \\\"🌐\\\"\\n            ],\\n            [\\n                \\\"💠\\\"\\n            ],\\n            [\\n                \\\"Ⓜ️\\\"\\n            ],\\n            [\\n                \\\"🌀\\\"\\n            ],\\n            [\\n                \\\"💤\\\"\\n            ],\\n            [\\n                \\\"🏧\\\"\\n            ],\\n            [\\n                \\\"🚾\\\"\\n            ],\\n            [\\n                \\\"♿️\\\"\\n            ],\\n            [\\n                \\\"🅿️\\\"\\n            ],\\n            [\\n                \\\"🈳\\\"\\n            ],\\n            [\\n                \\\"🈂️\\\"\\n            ],\\n            [\\n                \\\"🛂\\\"\\n            ],\\n            [\\n                \\\"🛃\\\"\\n            ],\\n            [\\n                \\\"🛄\\\"\\n            ],\\n            [\\n                \\\"🛅\\\"\\n            ],\\n            [\\n                \\\"🚹\\\"\\n            ],\\n            [\\n                \\\"🚺\\\"\\n            ],\\n            [\\n                \\\"🚼\\\"\\n            ],\\n            [\\n                \\\"🚻\\\"\\n            ],\\n            [\\n                \\\"🚮\\\"\\n            ],\\n            [\\n                \\\"🎦\\\"\\n            ],\\n            [\\n                \\\"📶\\\"\\n            ],\\n            [\\n                \\\"🈁\\\"\\n            ],\\n            [\\n                \\\"🔣\\\"\\n            ],\\n            [\\n                \\\"ℹ️\\\"\\n            ],\\n            [\\n                \\\"🔤\\\"\\n            ],\\n            [\\n                \\\"🔡\\\"\\n            ],\\n            [\\n                \\\"🔠\\\"\\n            ],\\n            [\\n                \\\"🆖\\\"\\n            ],\\n            [\\n                \\\"🆗\\\"\\n            ],\\n            [\\n                \\\"🆙\\\"\\n            ],\\n            [\\n                \\\"🆒\\\"\\n            ],\\n            [\\n                \\\"🆕\\\"\\n            ],\\n            [\\n                \\\"🆓\\\"\\n            ],\\n            [\\n                \\\"0️⃣\\\"\\n            ],\\n            [\\n                \\\"1️⃣\\\"\\n            ],\\n            [\\n                \\\"2️⃣\\\"\\n            ],\\n            [\\n                \\\"3️⃣\\\"\\n            ],\\n            [\\n                \\\"4️⃣\\\"\\n            ],\\n            [\\n                \\\"5️⃣\\\"\\n            ],\\n            [\\n                \\\"6️⃣\\\"\\n            ],\\n            [\\n                \\\"7️⃣\\\"\\n            ],\\n            [\\n                \\\"8️⃣\\\"\\n            ],\\n            [\\n                \\\"9️⃣\\\"\\n            ],\\n            [\\n                \\\"🔟\\\"\\n            ],\\n            [\\n                \\\"🔢\\\"\\n            ],\\n            [\\n                \\\"#️⃣\\\"\\n            ],\\n            [\\n                \\\"*️⃣\\\"\\n            ],\\n            [\\n                \\\"⏏️\\\"\\n            ],\\n            [\\n                \\\"▶️\\\"\\n            ],\\n            [\\n                \\\"⏸\\\"\\n            ],\\n            [\\n                \\\"⏯\\\"\\n            ],\\n            [\\n                \\\"⏹\\\"\\n            ],\\n            [\\n                \\\"⏺\\\"\\n            ],\\n            [\\n                \\\"⏭\\\"\\n            ],\\n            [\\n                \\\"⏮\\\"\\n            ],\\n            [\\n                \\\"⏩\\\"\\n            ],\\n            [\\n                \\\"⏪\\\"\\n            ],\\n            [\\n                \\\"⏫\\\"\\n            ],\\n            [\\n                \\\"⏬\\\"\\n            ],\\n            [\\n                \\\"◀️\\\"\\n            ],\\n            [\\n                \\\"🔼\\\"\\n            ],\\n            [\\n                \\\"🔽\\\"\\n            ],\\n            [\\n                \\\"➡️\\\"\\n            ],\\n            [\\n                \\\"⬅️\\\"\\n            ],\\n            [\\n                \\\"⬆️\\\"\\n            ],\\n            [\\n                \\\"⬇️\\\"\\n            ],\\n            [\\n                \\\"↗️\\\"\\n            ],\\n            [\\n                \\\"↘️\\\"\\n            ],\\n            [\\n                \\\"↙️\\\"\\n            ],\\n            [\\n                \\\"↖️\\\"\\n            ],\\n            [\\n                \\\"↕️\\\"\\n            ],\\n            [\\n                \\\"↔️\\\"\\n            ],\\n            [\\n                \\\"↪️\\\"\\n            ],\\n            [\\n                \\\"↩️\\\"\\n            ],\\n            [\\n                \\\"⤴️\\\"\\n            ],\\n            [\\n                \\\"⤵️\\\"\\n            ],\\n            [\\n                \\\"🔀\\\"\\n            ],\\n            [\\n                \\\"🔁\\\"\\n            ],\\n            [\\n                \\\"🔂\\\"\\n            ],\\n            [\\n                \\\"🔄\\\"\\n            ],\\n            [\\n                \\\"🔃\\\"\\n            ],\\n            [\\n                \\\"🎵\\\"\\n            ],\\n            [\\n                \\\"🎶\\\"\\n            ],\\n            [\\n                \\\"➕\\\"\\n            ],\\n            [\\n                \\\"➖\\\"\\n            ],\\n            [\\n                \\\"➗\\\"\\n            ],\\n            [\\n                \\\"✖️\\\"\\n            ],\\n            [\\n                \\\"💲\\\"\\n            ],\\n            [\\n                \\\"💱\\\"\\n            ],\\n            [\\n                \\\"™️\\\"\\n            ],\\n            [\\n                \\\"©️\\\"\\n            ],\\n            [\\n                \\\"®️\\\"\\n            ],\\n            [\\n                \\\"〰️\\\"\\n            ],\\n            [\\n                \\\"➰\\\"\\n            ],\\n            [\\n                \\\"➿\\\"\\n            ],\\n            [\\n                \\\"🔚\\\"\\n            ],\\n            [\\n                \\\"🔙\\\"\\n            ],\\n            [\\n                \\\"🔛\\\"\\n            ],\\n            [\\n                \\\"🔝\\\"\\n            ],\\n            [\\n                \\\"🔜\\\"\\n            ],\\n            [\\n                \\\"✔️\\\"\\n            ],\\n            [\\n                \\\"☑️\\\"\\n            ],\\n            [\\n                \\\"🔘\\\"\\n            ],\\n            [\\n                \\\"⚪️\\\"\\n            ],\\n            [\\n                \\\"⚫️\\\"\\n            ],\\n            [\\n                \\\"🔴\\\"\\n            ],\\n            [\\n                \\\"🔵\\\"\\n            ],\\n            [\\n                \\\"🔺\\\"\\n            ],\\n            [\\n                \\\"🔻\\\"\\n            ],\\n            [\\n                \\\"🔸\\\"\\n            ],\\n            [\\n                \\\"🔹\\\"\\n            ],\\n            [\\n                \\\"🔶\\\"\\n            ],\\n            [\\n                \\\"🔷\\\"\\n            ],\\n            [\\n                \\\"🔳\\\"\\n            ],\\n            [\\n                \\\"🔲\\\"\\n            ],\\n            [\\n                \\\"▪️\\\"\\n            ],\\n            [\\n                \\\"▫️\\\"\\n            ],\\n            [\\n                \\\"◾️\\\"\\n            ],\\n            [\\n                \\\"◽️\\\"\\n            ],\\n            [\\n                \\\"◼️\\\"\\n            ],\\n            [\\n                \\\"◻️\\\"\\n            ],\\n            [\\n                \\\"⬛️\\\"\\n            ],\\n            [\\n                \\\"⬜️\\\"\\n            ],\\n            [\\n                \\\"🔈\\\"\\n            ],\\n            [\\n                \\\"🔇\\\"\\n            ],\\n            [\\n                \\\"🔉\\\"\\n            ],\\n            [\\n                \\\"🔊\\\"\\n            ],\\n            [\\n                \\\"🔔\\\"\\n            ],\\n            [\\n                \\\"🔕\\\"\\n            ],\\n            [\\n                \\\"📣\\\"\\n            ],\\n            [\\n                \\\"📢\\\"\\n            ],\\n            [\\n                \\\"👁‍🗨\\\"\\n            ],\\n            [\\n                \\\"💬\\\"\\n            ],\\n            [\\n                \\\"💭\\\"\\n            ],\\n            [\\n                \\\"🗯\\\"\\n            ],\\n            [\\n                \\\"♠️\\\"\\n            ],\\n            [\\n                \\\"♣️\\\"\\n            ],\\n            [\\n                \\\"♥️\\\"\\n            ],\\n            [\\n                \\\"♦️\\\"\\n            ],\\n            [\\n                \\\"🃏\\\"\\n            ],\\n            [\\n                \\\"🎴\\\"\\n            ],\\n            [\\n                \\\"🀄️\\\"\\n            ],\\n            [\\n                \\\"🕐\\\"\\n            ],\\n            [\\n                \\\"🕑\\\"\\n            ],\\n            [\\n                \\\"🕒\\\"\\n            ],\\n            [\\n                \\\"🕓\\\"\\n            ],\\n            [\\n                \\\"🕔\\\"\\n            ],\\n            [\\n                \\\"🕕\\\"\\n            ],\\n            [\\n                \\\"🕖\\\"\\n            ],\\n            [\\n                \\\"🕗\\\"\\n            ],\\n            [\\n                \\\"🕘\\\"\\n            ],\\n            [\\n                \\\"🕙\\\"\\n            ],\\n            [\\n                \\\"🕚\\\"\\n            ],\\n            [\\n                \\\"🕛\\\"\\n            ],\\n            [\\n                \\\"🕜\\\"\\n            ],\\n            [\\n                \\\"🕝\\\"\\n            ],\\n            [\\n                \\\"🕞\\\"\\n            ],\\n            [\\n                \\\"🕟\\\"\\n            ],\\n            [\\n                \\\"🕠\\\"\\n            ],\\n            [\\n                \\\"🕡\\\"\\n            ],\\n            [\\n                \\\"🕢\\\"\\n            ],\\n            [\\n                \\\"🕣\\\"\\n            ],\\n            [\\n                \\\"🕤\\\"\\n            ],\\n            [\\n                \\\"🕥\\\"\\n            ],\\n            [\\n                \\\"🕦\\\"\\n            ],\\n            [\\n                \\\"🕧\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"symbols\\\"\\n    },\\n    {\\n        \\\"emojis\\\": [\\n            [\\n                \\\"🏳️\\\"\\n            ],\\n            [\\n                \\\"🏴\\\"\\n            ],\\n            [\\n                \\\"🏁\\\"\\n            ],\\n            [\\n                \\\"🚩\\\"\\n            ],\\n            [\\n                \\\"🏳️‍🌈\\\"\\n            ],\\n            [\\n                \\\"🇦🇫\\\"\\n            ],\\n            [\\n                \\\"🇦🇽\\\"\\n            ],\\n            [\\n                \\\"🇦🇱\\\"\\n            ],\\n            [\\n                \\\"🇩🇿\\\"\\n            ],\\n            [\\n                \\\"🇦🇸\\\"\\n            ],\\n            [\\n                \\\"🇦🇩\\\"\\n            ],\\n            [\\n                \\\"🇦🇴\\\"\\n            ],\\n            [\\n                \\\"🇦🇮\\\"\\n            ],\\n            [\\n                \\\"🇦🇶\\\"\\n            ],\\n            [\\n                \\\"🇦🇬\\\"\\n            ],\\n            [\\n                \\\"🇦🇷\\\"\\n            ],\\n            [\\n                \\\"🇦🇲\\\"\\n            ],\\n            [\\n                \\\"🇦🇼\\\"\\n            ],\\n            [\\n                \\\"🇦🇺\\\"\\n            ],\\n            [\\n                \\\"🇦🇹\\\"\\n            ],\\n            [\\n                \\\"🇦🇿\\\"\\n            ],\\n            [\\n                \\\"🇧🇸\\\"\\n            ],\\n            [\\n                \\\"🇧🇭\\\"\\n            ],\\n            [\\n                \\\"🇧🇩\\\"\\n            ],\\n            [\\n                \\\"🇧🇧\\\"\\n            ],\\n            [\\n                \\\"🇧🇾\\\"\\n            ],\\n            [\\n                \\\"🇧🇪\\\"\\n            ],\\n            [\\n                \\\"🇧🇿\\\"\\n            ],\\n            [\\n                \\\"🇧🇯\\\"\\n            ],\\n            [\\n                \\\"🇧🇲\\\"\\n            ],\\n            [\\n                \\\"🇧🇹\\\"\\n            ],\\n            [\\n                \\\"🇧🇴\\\"\\n            ],\\n            [\\n                \\\"🇧🇦\\\"\\n            ],\\n            [\\n                \\\"🇧🇼\\\"\\n            ],\\n            [\\n                \\\"🇧🇷\\\"\\n            ],\\n            [\\n                \\\"🇮🇴\\\"\\n            ],\\n            [\\n                \\\"🇻🇬\\\"\\n            ],\\n            [\\n                \\\"🇧🇳\\\"\\n            ],\\n            [\\n                \\\"🇧🇬\\\"\\n            ],\\n            [\\n                \\\"🇧🇫\\\"\\n            ],\\n            [\\n                \\\"🇧🇮\\\"\\n            ],\\n            [\\n                \\\"🇰🇭\\\"\\n            ],\\n            [\\n                \\\"🇨🇲\\\"\\n            ],\\n            [\\n                \\\"🇨🇦\\\"\\n            ],\\n            [\\n                \\\"🇮🇨\\\"\\n            ],\\n            [\\n                \\\"🇨🇻\\\"\\n            ],\\n            [\\n                \\\"🇧🇶\\\"\\n            ],\\n            [\\n                \\\"🇰🇾\\\"\\n            ],\\n            [\\n                \\\"🇨🇫\\\"\\n            ],\\n            [\\n                \\\"🇹🇩\\\"\\n            ],\\n            [\\n                \\\"🇨🇱\\\"\\n            ],\\n            [\\n                \\\"🇨🇳\\\"\\n            ],\\n            [\\n                \\\"🇨🇽\\\"\\n            ],\\n            [\\n                \\\"🇨🇨\\\"\\n            ],\\n            [\\n                \\\"🇨🇴\\\"\\n            ],\\n            [\\n                \\\"🇰🇲\\\"\\n            ],\\n            [\\n                \\\"🇨🇬\\\"\\n            ],\\n            [\\n                \\\"🇨🇩\\\"\\n            ],\\n            [\\n                \\\"🇨🇰\\\"\\n            ],\\n            [\\n                \\\"🇨🇷\\\"\\n            ],\\n            [\\n                \\\"🇨🇮\\\"\\n            ],\\n            [\\n                \\\"🇭🇷\\\"\\n            ],\\n            [\\n                \\\"🇨🇺\\\"\\n            ],\\n            [\\n                \\\"🇨🇼\\\"\\n            ],\\n            [\\n                \\\"🇨🇾\\\"\\n            ],\\n            [\\n                \\\"🇨🇿\\\"\\n            ],\\n            [\\n                \\\"🇩🇰\\\"\\n            ],\\n            [\\n                \\\"🇩🇯\\\"\\n            ],\\n            [\\n                \\\"🇩🇲\\\"\\n            ],\\n            [\\n                \\\"🇩🇴\\\"\\n            ],\\n            [\\n                \\\"🇪🇨\\\"\\n            ],\\n            [\\n                \\\"🇪🇬\\\"\\n            ],\\n            [\\n                \\\"🇸🇻\\\"\\n            ],\\n            [\\n                \\\"🇬🇶\\\"\\n            ],\\n            [\\n                \\\"🇪🇷\\\"\\n            ],\\n            [\\n                \\\"🇪🇪\\\"\\n            ],\\n            [\\n                \\\"🇪🇹\\\"\\n            ],\\n            [\\n                \\\"🇪🇺\\\"\\n            ],\\n            [\\n                \\\"🇫🇰\\\"\\n            ],\\n            [\\n                \\\"🇫🇴\\\"\\n            ],\\n            [\\n                \\\"🇫🇯\\\"\\n            ],\\n            [\\n                \\\"🇫🇮\\\"\\n            ],\\n            [\\n                \\\"🇫🇷\\\"\\n            ],\\n            [\\n                \\\"🇬🇫\\\"\\n            ],\\n            [\\n                \\\"🇵🇫\\\"\\n            ],\\n            [\\n                \\\"🇹🇫\\\"\\n            ],\\n            [\\n                \\\"🇬🇦\\\"\\n            ],\\n            [\\n                \\\"🇬🇲\\\"\\n            ],\\n            [\\n                \\\"🇬🇪\\\"\\n            ],\\n            [\\n                \\\"🇩🇪\\\"\\n            ],\\n            [\\n                \\\"🇬🇭\\\"\\n            ],\\n            [\\n                \\\"🇬🇮\\\"\\n            ],\\n            [\\n                \\\"🇬🇷\\\"\\n            ],\\n            [\\n                \\\"🇬🇱\\\"\\n            ],\\n            [\\n                \\\"🇬🇩\\\"\\n            ],\\n            [\\n                \\\"🇬🇵\\\"\\n            ],\\n            [\\n                \\\"🇬🇺\\\"\\n            ],\\n            [\\n                \\\"🇬🇹\\\"\\n            ],\\n            [\\n                \\\"🇬🇬\\\"\\n            ],\\n            [\\n                \\\"🇬🇳\\\"\\n            ],\\n            [\\n                \\\"🇬🇼\\\"\\n            ],\\n            [\\n                \\\"🇬🇾\\\"\\n            ],\\n            [\\n                \\\"🇭🇹\\\"\\n            ],\\n            [\\n                \\\"🇭🇳\\\"\\n            ],\\n            [\\n                \\\"🇭🇰\\\"\\n            ],\\n            [\\n                \\\"🇭🇺\\\"\\n            ],\\n            [\\n                \\\"🇮🇸\\\"\\n            ],\\n            [\\n                \\\"🇮🇳\\\"\\n            ],\\n            [\\n                \\\"🇮🇩\\\"\\n            ],\\n            [\\n                \\\"🇮🇷\\\"\\n            ],\\n            [\\n                \\\"🇮🇶\\\"\\n            ],\\n            [\\n                \\\"🇮🇪\\\"\\n            ],\\n            [\\n                \\\"🇮🇲\\\"\\n            ],\\n            [\\n                \\\"🇮🇱\\\"\\n            ],\\n            [\\n                \\\"🇮🇹\\\"\\n            ],\\n            [\\n                \\\"🇯🇲\\\"\\n            ],\\n            [\\n                \\\"🇯🇵\\\"\\n            ],\\n            [\\n                \\\"🎌\\\"\\n            ],\\n            [\\n                \\\"🇯🇪\\\"\\n            ],\\n            [\\n                \\\"🇯🇴\\\"\\n            ],\\n            [\\n                \\\"🇰🇿\\\"\\n            ],\\n            [\\n                \\\"🇰🇪\\\"\\n            ],\\n            [\\n                \\\"🇰🇮\\\"\\n            ],\\n            [\\n                \\\"🇽🇰\\\"\\n            ],\\n            [\\n                \\\"🇰🇼\\\"\\n            ],\\n            [\\n                \\\"🇰🇬\\\"\\n            ],\\n            [\\n                \\\"🇱🇦\\\"\\n            ],\\n            [\\n                \\\"🇱🇻\\\"\\n            ],\\n            [\\n                \\\"🇱🇧\\\"\\n            ],\\n            [\\n                \\\"🇱🇸\\\"\\n            ],\\n            [\\n                \\\"🇱🇷\\\"\\n            ],\\n            [\\n                \\\"🇱🇾\\\"\\n            ],\\n            [\\n                \\\"🇱🇮\\\"\\n            ],\\n            [\\n                \\\"🇱🇹\\\"\\n            ],\\n            [\\n                \\\"🇱🇺\\\"\\n            ],\\n            [\\n                \\\"🇲🇴\\\"\\n            ],\\n            [\\n                \\\"🇲🇰\\\"\\n            ],\\n            [\\n                \\\"🇲🇬\\\"\\n            ],\\n            [\\n                \\\"🇲🇼\\\"\\n            ],\\n            [\\n                \\\"🇲🇾\\\"\\n            ],\\n            [\\n                \\\"🇲🇻\\\"\\n            ],\\n            [\\n                \\\"🇲🇱\\\"\\n            ],\\n            [\\n                \\\"🇲🇹\\\"\\n            ],\\n            [\\n                \\\"🇲🇭\\\"\\n            ],\\n            [\\n                \\\"🇲🇶\\\"\\n            ],\\n            [\\n                \\\"🇲🇷\\\"\\n            ],\\n            [\\n                \\\"🇲🇺\\\"\\n            ],\\n            [\\n                \\\"🇾🇹\\\"\\n            ],\\n            [\\n                \\\"🇲🇽\\\"\\n            ],\\n            [\\n                \\\"🇫🇲\\\"\\n            ],\\n            [\\n                \\\"🇲🇩\\\"\\n            ],\\n            [\\n                \\\"🇲🇨\\\"\\n            ],\\n            [\\n                \\\"🇲🇳\\\"\\n            ],\\n            [\\n                \\\"🇲🇪\\\"\\n            ],\\n            [\\n                \\\"🇲🇸\\\"\\n            ],\\n            [\\n                \\\"🇲🇦\\\"\\n            ],\\n            [\\n                \\\"🇲🇿\\\"\\n            ],\\n            [\\n                \\\"🇲🇲\\\"\\n            ],\\n            [\\n                \\\"🇳🇦\\\"\\n            ],\\n            [\\n                \\\"🇳🇷\\\"\\n            ],\\n            [\\n                \\\"🇳🇵\\\"\\n            ],\\n            [\\n                \\\"🇳🇱\\\"\\n            ],\\n            [\\n                \\\"🇳🇨\\\"\\n            ],\\n            [\\n                \\\"🇳🇿\\\"\\n            ],\\n            [\\n                \\\"🇳🇮\\\"\\n            ],\\n            [\\n                \\\"🇳🇪\\\"\\n            ],\\n            [\\n                \\\"🇳🇬\\\"\\n            ],\\n            [\\n                \\\"🇳🇺\\\"\\n            ],\\n            [\\n                \\\"🇳🇫\\\"\\n            ],\\n            [\\n                \\\"🇰🇵\\\"\\n            ],\\n            [\\n                \\\"🇲🇵\\\"\\n            ],\\n            [\\n                \\\"🇳🇴\\\"\\n            ],\\n            [\\n                \\\"🇴🇲\\\"\\n            ],\\n            [\\n                \\\"🇵🇰\\\"\\n            ],\\n            [\\n                \\\"🇵🇼\\\"\\n            ],\\n            [\\n                \\\"🇵🇸\\\"\\n            ],\\n            [\\n                \\\"🇵🇦\\\"\\n            ],\\n            [\\n                \\\"🇵🇬\\\"\\n            ],\\n            [\\n                \\\"🇵🇾\\\"\\n            ],\\n            [\\n                \\\"🇵🇪\\\"\\n            ],\\n            [\\n                \\\"🇵🇭\\\"\\n            ],\\n            [\\n                \\\"🇵🇳\\\"\\n            ],\\n            [\\n                \\\"🇵🇱\\\"\\n            ],\\n            [\\n                \\\"🇵🇹\\\"\\n            ],\\n            [\\n                \\\"🇵🇷\\\"\\n            ],\\n            [\\n                \\\"🇶🇦\\\"\\n            ],\\n            [\\n                \\\"🇷🇪\\\"\\n            ],\\n            [\\n                \\\"🇷🇴\\\"\\n            ],\\n            [\\n                \\\"🇷🇺\\\"\\n            ],\\n            [\\n                \\\"🇷🇼\\\"\\n            ],\\n            [\\n                \\\"🇼🇸\\\"\\n            ],\\n            [\\n                \\\"🇸🇲\\\"\\n            ],\\n            [\\n                \\\"🇸🇦\\\"\\n            ],\\n            [\\n                \\\"🇸🇳\\\"\\n            ],\\n            [\\n                \\\"🇷🇸\\\"\\n            ],\\n            [\\n                \\\"🇸🇨\\\"\\n            ],\\n            [\\n                \\\"🇸🇱\\\"\\n            ],\\n            [\\n                \\\"🇸🇬\\\"\\n            ],\\n            [\\n                \\\"🇸🇽\\\"\\n            ],\\n            [\\n                \\\"🇸🇰\\\"\\n            ],\\n            [\\n                \\\"🇸🇮\\\"\\n            ],\\n            [\\n                \\\"🇬🇸\\\"\\n            ],\\n            [\\n                \\\"🇸🇧\\\"\\n            ],\\n            [\\n                \\\"🇸🇴\\\"\\n            ],\\n            [\\n                \\\"🇿🇦\\\"\\n            ],\\n            [\\n                \\\"🇰🇷\\\"\\n            ],\\n            [\\n                \\\"🇸🇸\\\"\\n            ],\\n            [\\n                \\\"🇪🇸\\\"\\n            ],\\n            [\\n                \\\"🇱🇰\\\"\\n            ],\\n            [\\n                \\\"🇧🇱\\\"\\n            ],\\n            [\\n                \\\"🇸🇭\\\"\\n            ],\\n            [\\n                \\\"🇰🇳\\\"\\n            ],\\n            [\\n                \\\"🇱🇨\\\"\\n            ],\\n            [\\n                \\\"🇵🇲\\\"\\n            ],\\n            [\\n                \\\"🇻🇨\\\"\\n            ],\\n            [\\n                \\\"🇸🇩\\\"\\n            ],\\n            [\\n                \\\"🇸🇷\\\"\\n            ],\\n            [\\n                \\\"🇸🇿\\\"\\n            ],\\n            [\\n                \\\"🇸🇪\\\"\\n            ],\\n            [\\n                \\\"🇨🇭\\\"\\n            ],\\n            [\\n                \\\"🇸🇾\\\"\\n            ],\\n            [\\n                \\\"🇹🇼\\\"\\n            ],\\n            [\\n                \\\"🇹🇯\\\"\\n            ],\\n            [\\n                \\\"🇹🇿\\\"\\n            ],\\n            [\\n                \\\"🇹🇭\\\"\\n            ],\\n            [\\n                \\\"🇹🇱\\\"\\n            ],\\n            [\\n                \\\"🇹🇬\\\"\\n            ],\\n            [\\n                \\\"🇹🇰\\\"\\n            ],\\n            [\\n                \\\"🇹🇴\\\"\\n            ],\\n            [\\n                \\\"🇹🇹\\\"\\n            ],\\n            [\\n                \\\"🇹🇳\\\"\\n            ],\\n            [\\n                \\\"🇹🇷\\\"\\n            ],\\n            [\\n                \\\"🇹🇲\\\"\\n            ],\\n            [\\n                \\\"🇹🇨\\\"\\n            ],\\n            [\\n                \\\"🇹🇻\\\"\\n            ],\\n            [\\n                \\\"🇻🇮\\\"\\n            ],\\n            [\\n                \\\"🇺🇬\\\"\\n            ],\\n            [\\n                \\\"🇺🇦\\\"\\n            ],\\n            [\\n                \\\"🇦🇪\\\"\\n            ],\\n            [\\n                \\\"🇬🇧\\\"\\n            ],\\n            [\\n                \\\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\\\"\\n            ],\\n            [\\n                \\\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\\\"\\n            ],\\n            [\\n                \\\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\\\"\\n            ],\\n            [\\n                \\\"🇺🇸\\\"\\n            ],\\n            [\\n                \\\"🇺🇾\\\"\\n            ],\\n            [\\n                \\\"🇺🇿\\\"\\n            ],\\n            [\\n                \\\"🇻🇺\\\"\\n            ],\\n            [\\n                \\\"🇻🇦\\\"\\n            ],\\n            [\\n                \\\"🇻🇪\\\"\\n            ],\\n            [\\n                \\\"🇻🇳\\\"\\n            ],\\n            [\\n                \\\"🇼🇫\\\"\\n            ],\\n            [\\n                \\\"🇪🇭\\\"\\n            ],\\n            [\\n                \\\"🇾🇪\\\"\\n            ],\\n            [\\n                \\\"🇿🇲\\\"\\n            ],\\n            [\\n                \\\"🇿🇼\\\"\\n            ]\\n        ],\\n        \\\"type\\\": \\\"flags\\\"\\n    }\\n]\\n\";","var constants = {\n\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 25,\n    PING_SENDING_INTERVAL: 20,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 30000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, T2dnUwACAAAAAAAAAAAjaKehAAAAAEAjsCsBKoB0aGVvcmEDAgEACwAJAACwAACQAAAAAAAZAAAAAQAAAQAAAQADDUAA2E9nZ1MAAgAAAAAAAAAAlksvwgAAAABKGTdzAR4Bdm9yYmlzAAAAAAKAuwAAAAAAAIC1AQAAAAAAuAFPZ2dTAAAAAAAAAAAAACNop6EBAAAAPZIZjg41////////////////kIF0aGVvcmENAAAATGF2ZjU1LjMzLjEwMAEAAAAVAAAAZW5jb2Rlcj1MYXZmNTUuMzMuMTAwgnRoZW9yYb7NKPe5zWsYtalJShBznOYxjFKUpCEIMYxiEIQhCEAAAAAAAAAAAAARba5TZ5LI/FYS/Hg5W2zmKvVoq1QoEykkWhD+eTmbjWZTCXiyVSmTiSSCGQh8PB2OBqNBgLxWKhQJBGIhCHw8HAyGAsFAiDgVFtrlNnksj8VhL8eDlbbOYq9WirVCgTKSRaEP55OZuNZlMJeLJVKZOJJIIZCHw8HY4Go0GAvFYqFAkEYiEIfDwcDIYCwUCIOBQLDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8MDA8SFBQVDQ0OERIVFRQODg8SFBUVFQ4QERMUFRUVEBEUFRUVFRUSExQVFRUVFRQVFRUVFRUVFRUVFRUVFRUQDAsQFBkbHA0NDhIVHBwbDg0QFBkcHBwOEBMWGx0dHBETGRwcHh4dFBgbHB0eHh0bHB0dHh4eHh0dHR0eHh4dEAsKEBgoMz0MDA4TGjo8Nw4NEBgoOUU4DhEWHTNXUD4SFiU6RG1nTRgjN0BRaHFcMUBOV2d5eGVIXF9icGRnYxMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMSEhUZGhoaGhIUFhoaGhoaFRYZGhoaGhoZGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaERIWHyQkJCQSFBgiJCQkJBYYISQkJCQkHyIkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJBESGC9jY2NjEhUaQmNjY2MYGjhjY2NjYy9CY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2MVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVEhISFRcYGRsSEhUXGBkbHBIVFxgZGxwdFRcYGRscHR0XGBkbHB0dHRgZGxwdHR0eGRscHR0dHh4bHB0dHR4eHhERERQXGhwgEREUFxocICIRFBcaHCAiJRQXGhwgIiUlFxocICIlJSUaHCAiJSUlKRwgIiUlJSkqICIlJSUpKioQEBAUGBwgKBAQFBgcICgwEBQYHCAoMEAUGBwgKDBAQBgcICgwQEBAHCAoMEBAQGAgKDBAQEBggCgwQEBAYICAB8Xlx0fV7c7D8vrrAaZid8hRvB1RN7csxFuo43wH7lEkS9wbGS+tVSNMyuxdiECcjB7R1Ml85htasNjKpSvPt3D8k7iGmZXYuxBC+RR4arUGxkvH5y7mJXR7R5Jwn3VUhBiuap91VIrsaCM5TSg9o867khwMrWY2+cP4rwvBLzt/wnHaYe0edSRMYC6tZmU1BrvhktIUf2gXoU8bHMuyNA7lB7R51ym213sFcFKowIviT/i0Wscg+4RDubX+4haRsMxZWgN05K5FD3bzqS9VSVCPM4TpWs2C43ihFdgaSByeKHu3Xf/2TG8tgpB7PAtOs7jixWYw+Ayo5GjUTSybX/1KW52RxYfB8nBNLJtHgt4DPq6BZWBFpjyZX/1KW5Ca0evOwG1EX/A9j5fQm5hOz6W2CtcCaWTXTFAeZO71VIgCTX69y9TiaXag3Os2ES1DcLKw0/xR5HfnCqkpQF0Z1kxKNfhZWLycml2keduHMQh3HubB/pbUUoCK5wxetZRZWPJF/bdyE21H2YjMOhP/pkthqKUCOEWVm68+1J5n7ahES5sOhaZPdOC5j4kc91FVIsrF8ofe+A2on/16Z4RiKQZcMU3NouO9N4YAvrWaiA6h4bfLqhTitbnnJ2iPSVRNJH+aZGE+YXzq7Ah/OncW2K59AKamlocOUYTSvaJPNcjDfMGrmG9pOV2MbgI9v3B3ECZ7RLJ51UpzMn0C1huA87Ngom9lkiaw3t5yvFZmDl1HpkuP+PiqlawgD69jAT5Nxr2i6cwiytcwHhK2KJvZI9C1m/4VUil8RvO/ydxmgsFdzdgGpMbUeyyRNOi1k5hMb6hVSMuTrOE/xuDhGExQ219l07sV2kG5fOEnkWHwgqUkbvC0P2KTytY4nHLqJDc3DMGlDbX2aXK/4UuJxizaIkZITS7a3HN5374PrVlYKIcP9xl1BUKqQ7aAml2k1o5uGcN8A+tPz1HF1YVnmE7cyx4FIiUA2ml1k0hX9HB7l4tMO+R9YrMWcf5Anub1BZXUp3Ce4jBM21l0kyhcF/vg6FGeHa345MYv4BVSciTJhj5AbuD2K0dfIXc4jKAbazaS53rv1lYqpIVr2fcgcPox4u/WVnRfJ25GGING2s2cqjKIVUtwGbRtrljLd9CQOHhewUTfiKxWk7Olr2dHyIKlLgejEbasmmdGF/dhuhVrU9xGi6Hksgm/+5Bw813T3mJyRNqIYGdYspVZFzQ6dhNLJ7H+fYWh8Q+cMbzLc/O0evM4srXGjpECaXaT2jApqM4LRavgPnH7ecDRQSErabX3zC4EcXfOVZZUpYs3UIfMsKVR+6hgFzHhvWWWl4EqZtrJpHnyeO0T2icPrqVRyyDRKmbayexv7wdolGfh1hwtsK4G5jDOIHz/lTULUM47PaBmNJm2ssmTq+ssXeHBjgij3G5P+u5QVFIGQ21TNM5aGOHbqKssQ/HiM9kvcWjdCtF6gZNMzbXFhNP2gV2FNQi+OpOR+S+3RvOBVSOr+E5hjyPrQho7/QDNEG2qRNLpHl6WVl3m4p3POFvwEWUN0ByvCQTSttdM48H7tjQWVk73qoUvhiSDbVK0mzyohbuHXofmEaK/xXYJ+Vq7tBUN6lMAdrouC3p96IS8kMzbVK0myY4f+HKdRGsrG9SlDwEfQkXsGLIbapmmcv/sA5TrqC36t4sRdjylU4JC9KwG2plM0zxuT2iFFzAPXyj9ZWRu+tx5UpFv0jn0gQrKyMF5MyaZsDbXG7/qIdp0tHG4jOQumLzBliaZttaLfZFUBSOu7FaUn/+IXETfwUj2E0o6gJ2HB/l8N7jFnzWWBESErabWPvy9bUKqS4y78CME0rbXSTNFRf8H7r1wwxQbltish5nFVIRkhKaTNtc6L3LHAh8+B2yi/tHvXG4nusVwAKMb/0/MCmoWrvASDM0mbay5YRI+7CtC96OPtxudDEyTGmbbWVRgkvR8qaiA8+rLCft7cW8H8UI3E8nzmJVSQIT3+0srHfUbgKA21ZNM8WEy+W7wbj9OuBpm21MKGWN80kaA5PZfoSqkRPLa1h31wIEjiUhcnX/e5VSWVkQnPhtqoYXrjLFpn7M8tjB17xSqfWgoA21StJpM48eSG+5A/dsGUQn8sV7impA4dQjxPyrsBfHd8tUGBIJWkxtrnljE3eu/xTUO/nVsA9I4uVlZ5uQvy9IwYjbWUmaZ5XE9HAWVkXUKmoI3y4vDKZpnKNtccJHK2iA83ej+fvgI3KR9P6qpG/kBCUdxHFisLkq8aZttTCZlj/b0G8XoLX/3fHhZWCVcMsWmZtqmYXz0cpOiBHCqpKUZu76iICRxYVuSULpmF/421MsWmfyhbP4ew1FVKAjFlY437JXImUTm2r/4ZYtMy61hf16RPJIRA8tU1BDc5/JzAkEzTM21lyx7sK9wojRX/OHXoOv05IDbUymaZyscL7qlMA8c/CiK3csceqzuOEU1EPpbz4QEahIShpm21MJmWN924f98WKyf51EEYBli0zNtUzC+6X9P9ysrU1CHyA3RJFFr1w67HpyULT+YMsWmZtquYXz97oKil44sI1bpL8hRSDeMkhiIBwOgxwZ5Fs6+5M+NdH+3Kjv0sreSqqRvGSQxEA4HQY4M8i2dfcmfGuj/blR36WVvJVVI3jJIYiAcDoMcGeRbOvuTPjXR/tyo79LK3kqqkVUnCfqAES8EzTM21lykY4Q+LKxby+9F3ZHR/uC2OGpS9cv6BZXAebhckMGIymaZm2st8/B38i6A/n58pVLKwfURet4UBwSF6UaZttSZljhd2jW9BZWcrX0/hG4Sdt/SBCdH6UMJmWK80zba3URKaik8iB9PR2459CuyOAbi0/GWLTMmYXm2t0vUkNQhRPVldKpAN5HgHyZfdOtGuj/YxwZ5S8u3CjqMgQoyQJRdawvJlE530/+sVg21c8GWLTPf3yJVSVUoCMWVjjfslciZRObav/hli0zLrWF/XpE8khT2dnUwAAAAAAAAAAAACWSy/CAQAAAB7oAsQRNv///////////////////wcDdm9yYmlzDQAAAExhdmY1NS4zMy4xMDABAAAAFQAAAGVuY29kZXI9TGF2ZjU1LjMzLjEwMAEFdm9yYmlzJUJDVgEAQAAAJHMYKkalcxaEEBpCUBnjHELOa+wZQkwRghwyTFvLJXOQIaSgQohbKIHQkFUAAEAAAIdBeBSEikEIIYQlPViSgyc9CCGEiDl4FIRpQQghhBBCCCGEEEIIIYRFOWiSgydBCB2E4zA4DIPlOPgchEU5WBCDJ0HoIIQPQriag6w5CCGEJDVIUIMGOegchMIsKIqCxDC4FoQENSiMguQwyNSDC0KImoNJNfgahGdBeBaEaUEIIYQkQUiQgwZByBiERkFYkoMGObgUhMtBqBqEKjkIH4QgNGQVAJAAAKCiKIqiKAoQGrIKAMgAABBAURTHcRzJkRzJsRwLCA1ZBQAAAQAIAACgSIqkSI7kSJIkWZIlWZIlWZLmiaosy7Isy7IsyzIQGrIKAEgAAFBRDEVxFAcIDVkFAGQAAAigOIqlWIqlaIrniI4IhIasAgCAAAAEAAAQNENTPEeURM9UVde2bdu2bdu2bdu2bdu2bVuWZRkIDVkFAEAAABDSaWapBogwAxkGQkNWAQAIAACAEYowxIDQkFUAAEAAAIAYSg6iCa0535zjoFkOmkqxOR2cSLV5kpuKuTnnnHPOyeacMc4555yinFkMmgmtOeecxKBZCpoJrTnnnCexedCaKq0555xxzulgnBHGOeecJq15kJqNtTnnnAWtaY6aS7E555xIuXlSm0u1Oeecc84555xzzjnnnOrF6RycE84555yovbmWm9DFOeecT8bp3pwQzjnnnHPOOeecc84555wgNGQVAAAEAEAQho1h3CkI0udoIEYRYhoy6UH36DAJGoOcQurR6GiklDoIJZVxUkonCA1ZBQAAAgBACCGFFFJIIYUUUkghhRRiiCGGGHLKKaeggkoqqaiijDLLLLPMMssss8w67KyzDjsMMcQQQyutxFJTbTXWWGvuOeeag7RWWmuttVJKKaWUUgpCQ1YBACAAAARCBhlkkFFIIYUUYogpp5xyCiqogNCQVQAAIACAAAAAAE/yHNERHdERHdERHdERHdHxHM8RJVESJVESLdMyNdNTRVV1ZdeWdVm3fVvYhV33fd33fd34dWFYlmVZlmVZlmVZlmVZlmVZliA0ZBUAAAIAACCEEEJIIYUUUkgpxhhzzDnoJJQQCA1ZBQAAAgAIAAAAcBRHcRzJkRxJsiRL0iTN0ixP8zRPEz1RFEXTNFXRFV1RN21RNmXTNV1TNl1VVm1Xlm1btnXbl2Xb933f933f933f933f931dB0JDVgEAEgAAOpIjKZIiKZLjOI4kSUBoyCoAQAYAQAAAiuIojuM4kiRJkiVpkmd5lqiZmumZniqqQGjIKgAAEABAAAAAAAAAiqZ4iql4iqh4juiIkmiZlqipmivKpuy6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6ruu6rguEhqwCACQAAHQkR3IkR1IkRVIkR3KA0JBVAIAMAIAAABzDMSRFcizL0jRP8zRPEz3REz3TU0VXdIHQkFUAACAAgAAAAAAAAAzJsBTL0RxNEiXVUi1VUy3VUkXVU1VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVU3TNE0TCA1ZCQCQAQCQEFMtLcaaCYskYtJqq6BjDFLspbFIKme1t8oxhRi1XhqHlFEQe6kkY4pBzC2k0CkmrdZUQoUUpJhjKhVSDlIgNGSFABCaAeBwHECyLECyLAAAAAAAAACQNA3QPA+wNA8AAAAAAAAAJE0DLE8DNM8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDSNEDzPEDzPAAAAAAAAADQPA/wPBHwRBEAAAAAAAAALM8DNNEDPFEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDSNEDzPEDzPAAAAAAAAACwPA/whFBqyIgCIEwBwSBIkCZIEzQNIlgVNg6bBNAGSZUHToGkwTQAAAAAAAAAAAAAkTYOmQdMgigBJ06Bp0DSIIgAAAAAAAAAAAACSpkHToGkQRYCkadA0aBpEEQAAAAAAAAAAAADPNCGKEEWYJsAzTYgiRBGmCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYcAAACDChDBQasiIAiBMAcDiKZQEAgOM4lgUAAI7jWBYAAFiWJYoAAGBZmigCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABhwAAAIMKEMFBqyEgCIAgBwKIplAcexLOA4lgUkybIAlgXQPICmAUQRAAgAAChwAAAIsEFTYnGAQkNWAgBRAAAGxbEsTRNFkqRpmieKJEnTPE8UaZrneZ5pwvM8zzQhiqJomhBFUTRNmKZpqiowTVUVAABQ4AAAEGCDpsTiAIWGrAQAQgIAHIpiWZrmeZ4niqapmiRJ0zxPFEXRNE1TVUmSpnmeKIqiaZqmqrIsTfM8URRF01RVVYWmeZ4oiqJpqqrqwvM8TxRF0TRV1XXheZ4niqJomqrquhBFUTRN01RNVXVdIIqmaZqqqqquC0RPFE1TVV3XdYHniaJpqqqrui4QTdNUVVV1XVkGmKZpqqrryjJAVVXVdV1XlgGqqqqu67qyDFBV13VdWZZlAK7rurIsywIAAA4cAAACjKCTjCqLsNGECw9AoSErAoAoAADAGKYUU8owJiGkEBrGJIQUQiYlpdJSqiCkUlIpFYRUSiolo5RSailVEFIpqZQKQiollVIAANiBAwDYgYVQaMhKACAPAIAwRinGGHNOIqQUY845JxFSijHnnJNKMeacc85JKRlzzDnnpJTOOeecc1JK5pxzzjkppXPOOeeclFJK55xzTkopJYTOQSellNI555wTAABU4AAAEGCjyOYEI0GFhqwEAFIBAAyOY1ma5nmiaJqWJGma53meKJqmJkma5nmeJ4qqyfM8TxRF0TRVled5niiKommqKtcVRdM0TVVVXbIsiqZpmqrqujBN01RV13VdmKZpqqrrui5sW1VV1XVlGbatqqrqurIMXNd1ZdmWgSy7ruzasgAA8AQHAKACG1ZHOCkaCyw0ZCUAkAEAQBiDkEIIIWUQQgohhJRSCAkAABhwAAAIMKEMFBqyEgBIBQAAjLHWWmuttdZAZ6211lprrYDMWmuttdZaa6211lprrbXWUmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaay2llFJKKaWUUkoppZRSSimllFJKBQD6VTgA+D/YsDrCSdFYYKEhKwGAcAAAwBilGHMMQimlVAgx5px0VFqLsUKIMeckpNRabMVzzkEoIZXWYiyecw5CKSnFVmNRKYRSUkottliLSqGjklJKrdVYjDGppNZai63GYoxJKbTUWosxFiNsTam12GqrsRhjayottBhjjMUIX2RsLabaag3GCCNbLC3VWmswxhjdW4ultpqLMT742lIsMdZcAAB3gwMARIKNM6wknRWOBhcashIACAkAIBBSijHGGHPOOeekUow55pxzDkIIoVSKMcaccw5CCCGUjDHmnHMQQgghhFJKxpxzEEIIIYSQUuqccxBCCCGEEEopnXMOQgghhBBCKaWDEEIIIYQQSiilpBRCCCGEEEIIqaSUQgghhFJCKCGVlFIIIYQQQiklpJRSCiGEUkIIoYSUUkophRBCCKWUklJKKaUSSgklhBJSKSmlFEoIIZRSSkoppVRKCaGEEkopJaWUUkohhBBKKQUAABw4AAAEGEEnGVUWYaMJFx6AQkNWAgBkAACQopRSKS1FgiKlGKQYS0YVc1BaiqhyDFLNqVLOIOYklogxhJSTVDLmFEIMQuocdUwpBi2VGELGGKTYckuhcw4AAABBAICAkAAAAwQFMwDA4ADhcxB0AgRHGwCAIERmiETDQnB4UAkQEVMBQGKCQi4AVFhcpF1cQJcBLujirgMhBCEIQSwOoIAEHJxwwxNveMINTtApKnUgAAAAAAAMAPAAAJBcABER0cxhZGhscHR4fICEiIyQCAAAAAAAFwB8AAAkJUBERDRzGBkaGxwdHh8gISIjJAEAgAACAAAAACCAAAQEBAAAAAAAAgAAAAQET2dnUwAAQAAAAAAAAAAjaKehAgAAAEhTii0BRjLV6A+997733vvfe+997733vvfG+8fePvH3j7x94+8fePvH3j7x94+8fePvH3j7x94+8fePvH3gAAAAAAAAAAXm5PqUgABPZ2dTAABLAAAAAAAAACNop6EDAAAAIOuvQAsAAAAAAAAAAAAAAE9nZ1MAAEADAAAAAAAAI2inoQQAAAB/G0m4ATg/8A+997733vvfe+997733vvfK+8B94D7wAB94AAAAD8Kl94D7wH3gAD7wAAAAH4VABem0+pSAAE9nZ1MAAEsDAAAAAAAAI2inoQUAAABc3zKaCwAAAAAAAAAAAAAAT2dnUwAEQAYAAAAAAAAjaKehBgAAAOytEQUBOD/wD733vvfe+997733vvfe+98r7wH3gPvAAH3gAAAAPwqX3gPvAfeAAPvAAAAAfhUAF6bT6lIAAT2dnUwAAQL4AAAAAAACWSy/CAgAAAHsqKaIxAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAKDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg5PZ2dTAAQAxAAAAAAAAJZLL8IDAAAABLWpWwIBAQ4O',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    CLIENT_URL: 'https://www.xabber.com',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"qrcode\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = _.template(require('~/templates/'+path.join('/')+'.txt')),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = function (data) {\n            return insertSvg(tpl(data));\n        };\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"assets/images/emoji/blank.gif\"' : '  src=\"assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (size.width > size.height) {\n        if (size.width > max_size) {\n            size.height *= max_size / size.width;\n            size.width = max_size;\n        }\n    } else {\n        if (size.height > max_size) {\n            size.width *= max_size / size.height;\n            size.height = max_size;\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml') {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options) {\n            return this.common(getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.cacheFavicons();\n        this.extendFunction();\n        this.check_config = new $.Deferred();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n        // setInterval(function() {\n        //     console.log(new Date());\n        // }, 5000)\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          console.log(query_transliterated);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    ps_settings: {theme: 'item-list'},\n    template: templates.toolbar,\n\n    events: {\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .chats\":                 \"showChats\",\n        \"click .group-chats\":           \"showGroupChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .search\":                \"showSearch\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .mentions\":              \"showMentions\",\n        \"click .settings\":              \"showSettings\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n        \"click .about\":                 \"showAbout\"\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n        this.$('.toolbar-icon').css('color', color);\n        this.$('.toolbar-icon path').css('fill', color);\n    },\n\n    onUpdatedScreen: function (name) {\n        if ((name === 'account_settings') || ((name === 'all-chats') &&\n            (this.$('.toolbar-item.all-chats').hasClass('active') ||\n                this.$('.toolbar-item.group-chats').hasClass('active') ||\n                this.$('.toolbar-item.chats').hasClass('active')||\n                this.$('.toolbar-item.account-item').hasClass('active')||\n                this.$('.toolbar-item.archive-chats').hasClass('active')))) {\n            return;\n        }\n        this.$('.toolbar-item').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'search', 'about'], name)) {\n            this.$('.toolbar-item.'+name).addClass('active');\n        }\n    },\n\n    showAllChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_all_chats');\n    },\n\n    showChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_chats');\n    },\n\n    showGroupChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.group-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_group_chats');\n    },\n\n    showArchive: function () {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats');\n    },\n\n    showChatsByAccount: function (account) {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.account-item[data-jid=\"' + account.get('jid') + '\"]').addClass('active');\n        xabber.body.setScreen('all-chats', {\n            right_contact_save: true\n        });\n        xabber.trigger('show_account_chats', [account]);\n    },\n\n    showSearch: function () {\n        xabber.body.setScreen('search');\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    showAbout: function () {\n        if (!xabber.about_view)\n            xabber.about_view = xabber.wide_panel.addChild('about', xabber.AboutView, {model: xabber});\n        xabber.body.setScreen('about');\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #transparency\": \"changeTransparency\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"change .background input[type=radio][name=side-panel]\": \"setSidePanelTheme\",\n        \"change #side_panel_blur_switch\": \"setSidePanelBlur\",\n        \"change #transparency_switch\": \"switchTransparency\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateSidePanelSetting();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    updateSidePanelSetting: function () {\n        let side_panel_settings = this.model.get('side_panel'),\n            transparency_switched = side_panel_settings.transparency !== false;\n        this.$('#side_panel_blur_switch')[0].checked = side_panel_settings.blur;\n        this.$('#transparency_switch')[0].checked = transparency_switched;\n        this.$('.transparency-setting .disabled').switchClass('hidden', transparency_switched);\n        this.$('#transparency')[0].value = transparency_switched ? side_panel_settings.transparency : constants.TRANSPARENCY_VALUE;\n        this.$(`#${this.cid}-${side_panel_settings.theme}-side-panel`)[0].checked = true;\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    setSidePanelTheme: function (ev) {\n        let value = ev.target.value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {theme: value}));\n        xabber.roster_view.updateTheme(value);\n    },\n\n    setSidePanelBlur: function () {\n        let value = this.$('#side_panel_blur_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {blur: value}));\n        xabber.roster_view.updateBlur(value);\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    switchTransparency: function () {\n        let is_switched = this.$('#transparency_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel'),\n            value = is_switched ? constants.TRANSPARENCY_VALUE : false;\n        this.$('.transparency-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#transparency')[0].value = constants.TRANSPARENCY_VALUE;\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeTransparency: function () {\n        let value = this.$('#transparency')[0].value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url = './background-patterns.xml';\n        } else {\n            request.url = './background-images.xml';\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev.target.closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'https://xabber.com/protocol/synchronization#chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.settings_right.children.account_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function () {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('description').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address});\n                });\n                this.x_tokens_list = tokens_list;\n                this.settings_right && this.settings_right.updateXTokens();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (encrypted, callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: (encrypted && this.omemo) ? this.omemo.getRetractVersion() : this.retraction_version};\n            encrypted && (query_options.type = 'encrypted');\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQFast(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings) {\n            this.show_settings_after_delete = show_settings;\n            xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster.deleteDataBase();\n            this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .circle-avatar': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"filter_chats\", this.setActive, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showSettings: function () {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        this.model.showSettings();\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    filterChats: function (ev) {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        ev.stopPropagation();\n        xabber.chats_view.showChatsByAccount(this.model);\n        this.model.trigger('filter_chats');\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    setActive: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active');\n        this.$el.addClass('active');\n    }\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"click .last-auth.resource\": \"showResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .omemo-info .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete-fingerprint': \"deleteDevice\",\n        \"click .omemo-info .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            if (options.block_name === 'media-gallery') {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.media-gallery-button.dropdown-button').dropdown(dropdown_settings);\n\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.omemo-settings-wrap .setting-wrap.manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.omemo-settings-wrap .setting-wrap.manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.omemo-settings-wrap .setting-wrap.manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    trustDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.trustDevice(ev);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.ignoreDevice(ev);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.ignoreDevice(ev);\n        }\n    },\n\n    deleteDevice: function (ev) {\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.deleteDevice(ev);\n        }\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        this.$('.panel-content-wrap .tokens .orphaned-fingerprints-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list), 'last_auth').each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n        });\n        if (this.model.omemo){\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            this.omemo_own_devices.renderOwnDevices(this.$('.panel-content-wrap .tokens .tokens-wrap'));\n        } else\n            this.$('.panel-content-wrap .tokens .orphaned-fingerprints').addClass(\"hidden\");\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n            this.renderAllXTokens();\n        }\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token'))\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n            this.model.getAllXTokens();\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens();\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (this.model.omemo) {\n            has_keys = Object.keys(this.model.omemo.get('prekeys')).length;\n        } else {\n            let omemo = new xabber.Omemo({id: 'omemo'}, {\n                account: this.model,\n                storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                fetch: 'before'\n            });\n            has_keys = Object.keys(omemo.get('prekeys')).length;\n            omemo.destroy();\n        }\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', !has_keys);\n        if (!this.model.omemo){\n            this.$('.omemo-settings-wrap .setting-wrap.manage-devices').addClass('hidden2');\n        }\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n                this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', true);\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n            file = new File([blob], \"avatar\", {\n                type: \"image/png\",\n            });\n        file.generated = true;\n        file.base64 = blob;\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = JSON.parse(templates.emojis());\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-name one-line\"/>')\n                .append('<div class=\"supports\"/>');\n    },\n\n    _initialize: function () {\n        this.render();\n        this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    }\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n            if (namespace === Strophe.NS.AUTH_DEVICES)\n                self.account.getAllXTokens();\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        })\n\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    this.connection.deleteTimedHandler(this._ping_handler);\n    this._ping_handler = this.connection.addTimedHandler(1000, () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 25)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            return false;\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 20)) {\n            this.connection.ping.ping(this.get('jid'));\n        }\n        return true;\n    });\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    this.fast_connection.deleteTimedHandler(this._fast_ping_handler);\n    this._fast_ping_handler = this.fast_connection.addTimedHandler(1000, () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 25)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            return false;\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 20)) {\n            this.fast_connection.ping.ping(this.fast_connection.jid);\n        }\n        return true;\n    });\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                if (this.get('in_roster')) {\n                    this.updateCachedInfo();\n                }\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        let roster_info = {\n            jid: this.get('jid'),\n            in_roster: this.get('in_roster'),\n            groups: this.get('groups'),\n            subscription: this.get('subscription'),\n            roster_name: this.get('roster_name'),\n            subscription_request_out: this.get('subscription_request_out'),\n            subscription_request_in: this.get('subscription_request_in'),\n            name: this.get('name'),\n            vcard_updated: this.get('vcard_updated')\n        }, full_jid = this.get('full_jid');\n        if (this.get('photo_hash') || this.get('image'))\n            _.extend(roster_info, {\n                photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                avatar_priority: this.get('avatar_priority'),\n                avatar: this.get('image')\n            });\n        if (full_jid)\n            roster_info.resource = Strophe.getResourceFromJid(full_jid);\n        this.account.cached_roster.putInRoster(roster_info);\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item);\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        this.removeFromRoster();\n                        let chat = this.account.chats.getChat(this);\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        let chat = this.account.chats.getChat(this);\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    sendPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n        this._sending_present_interval = setInterval(() => {\n            this.account.sendPres(pres);\n        }, constants.PRESENT_INTERVAL);\n    },\n\n    sendNotPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#not-present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                this.removeFromRoster();\n                let chat = this.account.chats.getChat(this);\n                if (!this.get('sync_deleted')){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                    this.destroy();\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n        getMessageByStanzaId: function (stanza_id, callback) {\n            let queryid = uuid(),\n                account = this.account,\n                is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection,\n                iq = $iq({type: 'set', to: this.get('full_jid') || this.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                    .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                    .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                    .c('value').t(Strophe.NS.MAM).up().up()\n                    .c('field', {'var': '{urn:xmpp:sid:0}stanza-id'})\n                    .c('value').t(stanza_id);\n            let handler = conn.addHandler((message) => {\n                let $msg = $(message);\n                if ($msg.find('result').attr('queryid') === queryid)\n                    callback && callback($msg);\n                return true;\n            }, Strophe.NS.MAM);\n            this.account.sendIQFast(iq, () => {\n                    conn.deleteHandler(handler);\n                }, () => {\n                    conn.deleteHandler(handler);\n                }\n            );\n        },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && options.encrypted)    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(options.encrypted).up().up();\n        }\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && !options.encrypted)    {\n            if (options.filter_image)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t(options.filter_image).up().up();\n            if (options.filter_video)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t(options.filter_video).up().up();\n            if (options.filter_voice)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t(options.filter_voice).up().up();\n            if (options.filter_files){\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_sticker`})\n                    .c('value').t('false').up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [];\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id'),\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.main-info .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.main-info .buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        this.messagesFileRequest({}, () => {\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        });\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.$el.html(\"<div class='gallery-files files'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.$el.html(\"<div class='gallery-files voice'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block .tabs').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.find('id').text();\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.get('jid'), id);\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            this.blockInvitation();\n            contact.getMyInfo();\n            contact.sendPresent();\n            this.openChat();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field.updateValue(true);\n        this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n        });\n        this.model.getBlockedParticipants((response) => {\n            this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n            });\n            this.model.getBlockedParticipants((response) => {\n                this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION};\n        if (!options.after) {\n            if (options.stamp)\n                request_attrs.stamp = options.stamp;\n            else if (this.account.last_msg_timestamp)\n                request_attrs.stamp = this.account.last_msg_timestamp * 1000;\n        }\n        delete(options.stamp);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync);\n        });\n    },\n\n    syncCachedConversations: function (conv_list, request_with_stamp, is_first_sync) {\n        $(conv_list).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,};\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            }\n            else{\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if ($group_metadata.length) {\n            contact.participants && contact.participants.createFromStanza($group_metadata.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`));\n        }\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.set('sync_type', type);\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (is_group_chat) {\n            if (request_with_stamp && !is_first_sync) {\n                if (chat.retraction_version < msg_retraction_version)\n                    chat.trigger(\"get_retractions_list\");\n            } else\n                chat.retraction_version = msg_retraction_version;\n        }\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last'),\n            encrypted_retract_version = $(iq).find('query conversation[type=\"encrypted\"]').first().children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            retract_version = $(iq).find('query conversation[type=\"chat\"]').first().children(`metadata[node=\"${Strophe.NS.REWRITE}\"]`).children('retract').attr('version');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        if (!_.isUndefined(encrypted_retract_version) && this.account.omemo && this.account.omemo.getRetractVersion() < encrypted_retract_version)\n            this.account.getAllMessageRetractions(true);\n        if (request_with_stamp) {\n            if (this.account.retraction_version < retract_version)\n                this.account.getAllMessageRetractions();\n        } else {\n            this.account.retraction_version = retract_version;\n        }\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        let dfd = new $.Deferred();\n        dfd.done((is_cached) => {\n            this.account.cached_sync_conversations.putInCachedConversations({\n                account_conversation_type: 'last_sync_timestamp',\n                timestamp: sync_timestamp,\n            });\n            xabber.chats_view.hideChatsFeedback();\n            if (!request_with_stamp)\n                this.account.chats.getSavedChat();\n            if (is_first_sync)\n                this.account.set('first_sync', sync_timestamp);\n            if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n                //\n            }\n            else if ($(iq).find('conversation').length) {\n                if (!synchronization_with_stamp) {\n                    this.syncFromServer({max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after});\n                }\n                else {\n                    this.account.get('last_sync') && this.syncFromServer({stamp: this.account.get('last_sync'), max: constants.SYNCHRONIZATION_RSM_MAX}, true);\n                }\n            }\n        });\n        if (is_first_sync)\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                let synced_conversations = $(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray();\n                res = res.filter(item => !synced_conversations.includes(item.account_conversation_type));\n                this.syncCachedConversations(res, request_with_stamp, is_first_sync);\n                this.syncConversations(iq, request_with_stamp, is_first_sync);\n                dfd.resolve(true);\n            });\n        else{\n            this.syncConversations(iq, request_with_stamp);\n            dfd.resolve();\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        this.isVisible() && this.parent.updateScrollBar();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        this.parent.updateScrollBar();\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterRightView = xabber.RosterView.extend({\n    className: 'roster-right-container container',\n    template: templates.roster_right,\n    ps_settings: {theme: 'roster-right'},\n    account_roster_view: xabber.AccountRosterRightView,\n\n    events: {\n        \"click .collapsed-wrap\": \"expand\",\n        \"mouseleave .expanded-wrap\": \"collaps\"\n    },\n\n    __initialize: function () {\n        this.updateCounter();\n        this.updateTheme();\n        this.updateBlur();\n        this.updateTransparency();\n        this.model.on(\"activate deactivate destroy\", this.updateCounter, this);\n        this.data.on(\"change\", this.updateLayout, this);\n        let pinned = this._settings.get('pinned');\n        this.data.set({expanded: false, pinned: false});\n    },\n\n    updateTheme: function (theme) {\n        theme = theme || xabber.settings.side_panel.theme;\n        this.$el.attr('data-theme', theme);\n        this.updateTransparency();\n    },\n\n    updateTransparency: function (transparency) {\n        transparency = transparency || xabber.settings.side_panel.transparency;\n        if (xabber.settings.side_panel.theme == 'dark')\n            this.$el.css('background-color', `rgba(0, 0, 0, ${1 - transparency/100})`);\n        else\n            this.$el.css('background-color', `rgba(255, 255, 255, ${1 - transparency/100})`);\n    },\n\n    updateBlur: function (blur) {\n        blur = _.isUndefined(blur) ? xabber.settings.side_panel.blur : blur;\n        this.$el.switchClass('with-blur', blur);\n    },\n\n    expand: function () {\n        this.data.set('expanded', true);\n    },\n\n    collaps: function () {\n        if (!this.data.get('pinned'))\n            this.data.set('expanded', false);\n    },\n\n    updateLayout: function () {\n        let changed = this.data.changed;\n        if (_.has(changed, 'expanded') || _.has(changed, 'pinned')) {\n            xabber.trigger('update_layout', {roster_state_changed: true});\n        }\n    },\n\n    updateCounter: function () {\n        this.$('.all-contacts-counter').text(\n            _.reduce(this.children, function (counter, view) {\n                return counter + view.roster.length;\n            }, 0)\n        );\n    },\n\n    onListChanged: function () {\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el = this.model.account.settings_right.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.pushInRoster({name: name, groups: groups}, () => {\n                contact.pres('subscribe');\n                contact.trigger('presence', contact, 'subscribe_from');\n                contact.trigger(\"open_chat\", contact, {right_force_close: true});\n            }, function () {\n                contact.destroy();\n            });\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        this.resources.reset();\n        this.contacts.each(function (contact) {\n            contact.resources.reset();\n            contact.resetStatus();\n        });\n        this.cached_roster.getAllFromRoster((roster_items) => {\n            $(roster_items).each((idx, roster_item) => {\n                if (roster_item.jid === 'roster_version'){\n                    return;\n                }\n                this.contacts.mergeContact(roster_item);\n            });\n            if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                let options = {};\n                this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                    let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                    !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                    last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                    this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                    this.roster.getRoster();\n                });\n            }\n            else {\n                this.roster.getRoster();\n            }\n            this.blocklist.getFromServer();\n        });\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    this.roster.registerHandler();\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.roster_view = this.body.addChild('roster', this.RosterRightView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_contact_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);//34\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`)\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if (options.replaced && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio')) {\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n            });\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQFast(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else\n            return this.messages.createFromStanza($message, options);\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id);\n        if (message) {\n            if (options.searched_messages)\n                message.set('searched_message', false);\n            let stanza_id = message.get('stanza_id');\n            this.messages_view = new xabber.MessageContextView({\n                contact: this.contact,\n                mention_context: options.mention,\n                model: this,\n                stanza_id_context: stanza_id,\n                encrypted: options.encrypted\n            });\n            this.account.context_messages.add(message);\n            this.messages_view.messagesRequest({after: stanza_id}, () => {\n                let screen = 'all-chats';\n                if (options.mention)\n                    screen = 'mentions';\n                else if (options.message)\n                    screen = xabber.body.screen.get('name');\n                xabber.body.setScreen(screen, {\n                    right: 'message_context',\n                    model: this,\n                }, {\n                    right_contact_save: true\n                });\n            });\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg)\n                enc_chat.receiveCarbonsMarker($marker);\n            return;\n        }\n        if (msg_idx > -1) {\n            this.set('const_unread', 0);\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {id: (this.get('group_chat') && contact_stanza_id || stanza_id), xmlns: Strophe.NS.REWRITE, symmetric: symmetric, by: this.account.get('jid')});\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {id: user_id, xmlns: Strophe.NS.REWRITE, symmetric: true});\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {xmlns: Strophe.NS.REWRITE, symmetric: symmetric};\n        !is_group_chat && (retract_attrs.conversation = this.get('jid'));\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 ){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            return;\n        }\n        msg || (msg = this.model.last_message);\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: false,\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max)\n                      this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\n  xabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if (this.model.sync_created && this.model.last_message){\n            this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n      render: function () {\n          this.cancelSearch();\n          this.scrollToBottom();\n          this.onScroll();\n          this.updateContactStatus();\n          this.updateWaveforms();\n          this.onUpdatePlyr();\n          if (this.contact) {\n              this.contact.get('group_chat') && this.updatePinnedMessage();\n              this.subscription_buttons.render();\n          }\n      },\n\n      openDevicesWindow: function () {\n          if (!this.account.omemo)\n              return;\n          let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n          peer.fingerprints.open();\n      },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n      onTrustedChanged: function (message) {\n          let trusted = message.get('trusted'),\n              $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n          (trusted === null) && (trusted = 'none');\n          $message.attr('data-trust', trusted);\n      },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both'&& this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n            this.onScroll();\n            this.readMessages();\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active)\n                this.contact.sendPresent();\n            else\n                this.contact.sendNotPresent();\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n            }\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    onScrollY: function () {\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    onScroll: function () {\n        if (!this.isVisible())\n            return;\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        this._prev_scrolltop = this._scrolltop || 0;\n        this._scrolltop = this.getScrollTop();\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n    },\n\n    backToBottom: function () {\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && this.model.get('encrypted'))    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(this.model.get('encrypted')).up().up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            console.log(iq)\n            console.log(conn)\n            console.log(conn.connected)\n            let connected_deferred = new $.Deferred();\n            connected_deferred.done(function() {\n                let handler = conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let callb = function (res) {\n                    console.log(iq);\n                    console.log(res);\n                    console.log(messages);\n                    conn.deleteHandler(handler);\n                    handler = null;\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    handler = null;\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n                account.once('send_pending_messages', () => {\n                    console.log('send_pending_archive_iq');\n                    console.log(iq);\n                    if (Boolean(handler)) {\n                        let pending_deferred = new $.Deferred();\n                        account.chats.onStartedMAMRequest(pending_deferred);\n                        conn.deleteHandler(handler);\n                        conn = is_fast && account.fast_connection ? account.fast_connection : account.connection;\n                        pending_deferred.done(function() {\n                            console.log('initiated pending archive iq');\n                            console.log(iq)\n                            console.log(conn)\n                            console.log(conn.connected)\n                            let connected_pending_deferred = new $.Deferred();\n                            connected_pending_deferred.done(function() {\n                                handler = conn.addHandler(function (message) {\n                                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                                        let $msg = $(message);\n                                        if ($msg.find('result').attr('queryid') === queryid) {\n                                            messages.push(message);\n                                        }\n                                    }\n                                    else {\n                                        messages = [];\n                                        success = false;\n                                    }\n                                    return true;\n                                }, Strophe.NS.MAM);\n                                if (is_fast)\n                                    account.sendFast(iq, callb, errb);\n                                else\n                                    account.sendIQ(iq, callb, errb);\n                            });\n                            if (conn.connected)\n                                connected_pending_deferred.resolve();\n                            else {\n                                let _pending_time = 1,\n                                _interval = setInterval(() => {\n                                    if (conn.connected || _pending_time >= 11){\n                                        clearInterval(_interval);\n                                        connected_pending_deferred.resolve();\n                                    }\n                                    _pending_time += 1;\n                                }, 1000);\n                            }\n                        });\n                    }\n                })\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            });\n            if (conn.connected)\n                connected_deferred.resolve();\n            else {\n                let _pending_time = 1,\n                _interval = setInterval(() => {\n                    if (conn.connected || _pending_time >= 11){\n                        clearInterval(_interval);\n                        connected_deferred.resolve();\n                    }\n                    _pending_time += 1;\n                }, 1000);\n            }\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n            this.MAMRequest(query, (success, messages, rsm) => {\n                    clearTimeout(this._load_history_timeout);\n                    this._loading_history = false;\n                    this.hideHistoryFeedback();\n                    if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                        this.getMessageArchive({after: rsm.last}, {missed_history: true});\n                    if (this.model.get('group_chat')) {\n                        if (this.contact && !this.contact.my_info)\n                            this.contact.getMyInfo();\n                    }\n                    else {\n                        if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                            this.contact.getLastSeen();\n                    }\n                    if ((messages.length < query.max) && success) {\n                        this.model.set('history_loaded', true);\n                    }\n                    if (options.previous_history || !this.model.get('first_archive_id')) {\n                        rsm.first && this.model.set('first_archive_id', rsm.first);\n                    }\n                    if (options.last_history || !this.model.get('last_archive_id')) {\n                        rsm.last && this.model.set('last_archive_id', rsm.last);\n                    }\n                    _.each(messages, function (message) {\n                        let loaded_message = account.chats.receiveChatMessage(message,\n                            _.extend({is_archived: true}, options)\n                        );\n                        if (loaded_message) counter++;\n                    });\n                    if (options.previous_history && !this.model.get('displayed_sent') && this.model.messages.length) {\n                        let last_msg = this.model.messages.models[this.model.messages.length - 1];\n                        if (last_msg)\n                            if (!last_msg.isSenderMe() && this.model.get('active') && this.model.get('display')) {\n                                this.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                                this.model.set('displayed_sent', true);\n                            }\n                    }\n                    if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                        this.getMessageArchive(_.extend(query, {\n                            max: xabber.settings.mam_messages_limit,\n                            before: this.model.get('first_archive_id') || ''\n                        }), {previous_history: true});\n                    }\n                }, (err) => {\n                    if (options.previous_history) {\n                        this._loading_history = false;\n                        this.showHistoryFeedback(true);\n                    }\n                }\n            );\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (this.isVisible()) {\n            if (is_scrolled_to_bottom || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (!(message.get('synced_from_server') || message.get('is_archived'))) {\n            if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                message.set('is_unread', !(this.model.get('display') && xabber.get('focused')));\n                if (!message.get('is_unread'))\n                    this.model.sendMarker(message.get('msgid'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n                if (!xabber.get('focused')) {\n                    if (this.model.get('saved') || this.model.isMuted())\n                        message.set('muted', true);\n                    else if (!message.get('synced_invitation_from_server'))\n                        this.notifyMessage(message);\n                }\n                this.model.setMessagesDisplayed(message.get('timestamp'));\n            }\n            if (this.contact && this.model.get('archived'))\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n    },\n\n\n      decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom(),\n            unique_id = message.get('unique_id');\n          if (this.model.get('encrypted') || message.get('encrypted') || force) {\n              let images = message.get('images') || [];\n              if (images.length) {\n                  images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = [];\n                          if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                              $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          else\n                              $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              }\n              let fwd_msgs = message.get('forwarded_message') || [];\n              fwd_msgs.forEach((fwd_msg) => {\n                  let fwd_images = fwd_msg.get('images') || [],\n                      fwd_unique_id = fwd_msg.get('unique_id');\n                  fwd_images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] .fwd-message[data-uniqueid=\"${fwd_unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              });\n          }\n      },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            $message.insertAfter(this.$('.chat-message').eq(index - 1));\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);//переделать на выбор из всех\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('is_trusted'))\n            $message.attr('data-trust', attrs.is_trusted);\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    if (video_file.key){\n                        player.key = video_file.key;\n                        video_file.type && (player.type = video_file.type);\n                    }\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n      attentionMessage: function () {\n          let notification = xabber.popupNotification({\n              title: this.contact.get('name'),\n              text: xabber.getString(\"chats_attention\"),\n              icon: this.contact.cached_image.url\n          });\n          notification.onclick = () => {\n              window.focus();\n              this.model.trigger('open');\n          };\n          let sound = xabber.settings.sound_on_attention;\n          xabber.playAudio(sound);\n      },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n      msgCallback: function (msg_sending_timestamp, message) {\n          this.bottom.click_counter = 0;\n          this.bottom.setDefaultPlaceholder();\n          if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n              setTimeout(() => {\n                  if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                      message.set('state', constants.MSG_SENT);\n                  } else {\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {\n                          (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                      });\n                      setTimeout(() => {\n                          if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                              message.set('state', constants.MSG_ERROR);\n                      }, 5000);\n                  }\n              }, 1000);\n          }\n          else {\n              let _pending_time = 5, was_reconnecting;\n              if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                  was_reconnecting = true;\n              if (this.account.session.get('reconnecting'))\n                  was_reconnecting = true;\n              this.account.session.once('change:reconnecting', () => {\n                  console.log('change reconnecting');\n                  console.log(this.account.session.get('reconnecting'));\n                  was_reconnecting = true;\n              })\n              let _interval = setInterval(() => {\n                  console.log(was_reconnecting);\n                  if (_pending_time >= 10 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                      console.log('ping on message pending');\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                          console.log('message initiated reconnection');\n                          console.log(message);\n                          this.account.connection.disconnect();\n                      }, 5000);\n                  }\n                  if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                      message.set('state', constants.MSG_ERROR);\n                      clearInterval(_interval);\n                  }\n                  else if (message.get('state') !== constants.MSG_PENDING)\n                      clearInterval(_interval);\n                  _pending_time += 10;\n              }, 10000);\n          }\n      },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.onload = xhr.onerror = xhr.onabort = function () {\n                if (this.status === 200) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = JSON.parse(this.response)\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            if (!is_error) {\n                                xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                xhr_requests[files_count].is_uploading = true;\n                                xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                            }\n                        });\n                    }\n                } else {\n                    if (this.status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && this.status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (this.status === 500)\n                            response_text = this.statusText;\n                        else if (this.status === 400){\n                            response_text = JSON.parse(this.response).error;\n                            error_status = JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        if (!is_error) {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (this.status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (this.status === 0) && (message.get('files')[idx] = null);\n                        files_count++;\n                        if (this.status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    if (!is_error) {\n                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                        xhr_requests[files_count].is_uploading = true;\n                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    if (!is_error) {\n                        xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                        xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'))\n                        xhr_requests[0].is_uploading = true;\n                        xhr_requests[0].send(xhr_requests[0].formData);\n                    }\n                });\n            }\n        }\n\n    },\n\n      encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n      },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('videos', videos);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server');\n        if (is_unread && !is_synced) {\n            this.model.messages_unread.add(message);\n            this.model.recountUnread();\n        } else {\n            this.model.messages_unread.remove(message);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            if (msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == 'encrypted';\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            console.log(chat.retracted_msg_id_list);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (retract_version > this.account.retraction_version) {\n                if (chat.get('encrypted') && this.account.omemo)\n                    this.account.omemo.cacheRetractVersion(retract_version);\n                else\n                    this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n\n        if ($message.find('device[xmlns=\"' + Strophe.NS.AUTH_DEVICES + '\"]').length && !options.is_archived) {\n            this.account.getAllXTokens();\n        }\n\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n                let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    xabber.chats_view.updateScreenAllChats();\n                    contact.sendPresent();\n                    contact.trigger(\"open_chat\", contact);\n                    if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                        let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                            .c('item', {jid: group_jid + '/' + moment.now()});\n                        this.account.sendIQFast(iq_set_blocking);\n                    }\n                });\n            }, () => {\n                this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item.unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item.active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null, right: undefined},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('all-chats') && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('account-item') && (view.model.get('saved') || (view.account.get('jid') === active_toolbar.attr('data-jid'))) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded') && (view.model.messages.length < 20)) {\n                view.content.loadPreviousHistory();\n            }\n            if (!view.model.get('displayed_sent') && view.model.messages.length) {\n                let last_msg = view.model.messages.models[view.model.messages.length - 1];\n                if (last_msg)\n                    if (!last_msg.isSenderMe() && (view.model.get('unread') || view.model.get('const_unread'))) {\n                        view.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                        view.model.set('displayed_sent', true);\n                    }\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            xabber.body.setScreen((options.screen || 'all-chats'), {\n                right: 'chat',\n                clear_search: options.clear_search,\n                chat_item: view,\n                blocked: view.model.get('blocked')\n            },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        xabber.chats_view.scrollTo(scrolled_top);\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active')\n            .filter('.all-chats').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap').html(\"\");\n        this.saved_chat = false;\n        xabber.chats_view.$('.chat-list-wrap .chat-item').each((idx, item) => {\n            let id = $(item).data('id'),\n                chat = this.account.chats.get(id);\n            if (chat) {\n                if (id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = $(item).clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap').append($(item).clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = './assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((is_contact_trusted) => {\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                if (!this.omemo_devices)\n                    this.omemo_devices = new xabber.Fingerprints({model: this.account.omemo});\n                this.omemo_devices.open();\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        target.focus();\n        range.detach(); // optimization\n        target.scrollTop = target.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n\n            }\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted)\n        list = _.difference(list, this.currently_loaded_link_references)\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new MediaRecorder(stream),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                    mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob(chunks, { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks.push(e.data);\n                    stream.getTracks().forEach(track => track.stop() );\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea();\n        this.$('.mentions-list').html(\"\").hide();\n        $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n            let emoji = emoji_item.innerText;\n            this.account.chat_settings.updateLastEmoji(emoji);\n        });\n        let content_concat = [];\n        if (text.length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            $rich_textarea.flushRichTextarea();\n            return;\n        }\n        if (text.length) {\n            this.quill.getContents().forEach((content) => {\n                if (content.attributes) {\n                    let content_attrs = [],\n                        start_idx = content_concat.length,\n                        end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                    for (let attr in content.attributes)\n                        (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                    if (content_attrs.indexOf('mention') > -1) {\n                        let mention_idx = content_attrs.indexOf('mention'),\n                            is_gc = this.contact.get('group_chat'),\n                            target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                        content_attrs.splice(mention_idx, mention_idx + 1);\n                        target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                        mentions.push({\n                            start: start_idx,\n                            end: end_idx,\n                            target: target,\n                            is_gc: is_gc\n                        });\n                    }\n                    if (content.attributes.blockquote) {\n                        if (content_concat.length) {\n                            Array.from(content.insert).forEach((ins) => {\n                                let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                    quote_end_idx = content_concat.length;\n                                blockquotes.push({\n                                    marker: constants.QUOTE_MARKER,\n                                    start: quote_start_idx,\n                                    end: quote_end_idx + constants.QUOTE_MARKER.length\n                                });\n                                text = Array.from(_.escape(text));\n\n                                if (quote_start_idx === quote_end_idx) {\n                                    text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                }\n                                else {\n                                    text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                }\n                                (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                text[quote_end_idx - 1] += '\\n';\n\n                                text = _.unescape(text.join(\"\"));\n                                content_concat = Array.from(content_concat.join(\"\"));\n\n                                markup_references.forEach((markup_ref) => {\n                                    if (markup_ref.start >= quote_start_idx) {\n                                        markup_ref.start += constants.QUOTE_MARKER.length;\n                                        markup_ref.end += constants.QUOTE_MARKER.length;\n                                    }\n                                });\n\n                                content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                            })\n                        }\n                    }\n                    content_attrs.length && markup_references.push({\n                        start: start_idx,\n                        end: end_idx,\n                        markup: content_attrs\n                    });\n                }\n                if (content.insert && content.insert.emoji) {\n                    content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                }\n                else if (content.attributes && content.attributes.blockquote) {\n                }\n                else\n                    content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n            });\n        }\n        let start_length = text.length;\n        text = text.trimStart();\n        if (start_length > text.length) {\n            let delta = start_length - text.length;\n            mentions.forEach((mention) => {\n                mention.start -= delta;\n                mention.end -= delta;\n            });\n            markup_references.forEach((markup_reference) => {\n                markup_reference.start -= delta;\n                markup_reference.end -= delta;\n            });\n            blockquotes.forEach((blockquote) => {\n                blockquote.start -= delta;\n                blockquote.end -= delta;\n            });\n        }\n        if (link_references && link_references.length) {\n            link_references = link_references.filter(item => item.original_text);\n            link_references.forEach((link_reference) => {\n                if (link_reference && link_reference.original_text) {\n                    link_reference.start = text.indexOf(link_reference.original_text);\n                    if (link_reference.start != -1) {\n                        link_reference.start = 0;\n                        link_reference.end = 0;\n                    }\n                }\n            });\n        }\n        this.removeAllLinkReferences();\n        this.link_reference_exempted = [];\n        this.removeAllFileSnippets();\n        text = text.trimEnd();\n        $rich_textarea.flushRichTextarea();\n        this.quill.focus();\n        this.displayMicrophone();\n        if (this.edit_message) {\n            this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            $rich_textarea.placeCaretAtEnd();\n            return;\n        }\n        if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n            if (this.model.get('saved') && this.fwd_messages.length && !text)\n                this.fwd_messages.forEach((message) => {\n                    this.view.onSubmit(\"\", [message]);\n                });\n            else\n                this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n        }\n        this.unsetForwardedMessages();\n        xabber.chats_view.clearSearch();\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n        $rich_textarea.placeCaretAtEnd();\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content'),\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {xmlns: Strophe.NS.REWRITE, id: stanza_id}),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.sendPresence();\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            this.roster && this.roster.syncFromServer({stamp: last_msg_timestamp * 1000}, false, true);\n            this.roster && this.roster.getRoster();\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.readMessages();\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function () {\n        this.chats_view.showAllChats();\n    }, this);\n\n    this.on(\"show_account_chats\", function (ev, account) {\n        this.chats_view.showChatsByAccount(account);\n    }, this);\n\n    this.on(\"show_archive_chats\", function () {\n        this.chats_view.showArchiveChats();\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n            contact.sendPresent();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        if (this.roster_view.isVisible()) {\n            this.updateRosterLayout(options);\n        }\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateRosterLayout = function (options) {\n        let width = this.body.$el.width(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM,\n            is_tiny = width < constants.WIDTH_TINY,\n            expanded = this.roster_view.data.get('expanded'),\n            pinned = this.roster_view.data.get('pinned');\n        this.roster_view.$('.collapsed-wrap').hideIf(expanded);\n        this.roster_view.$('.expanded-wrap').showIf(expanded);\n        this.roster_view.$('.btn-pin').hide();\n        if (is_narrow && pinned) {\n            this.roster_view.data.set({expanded: false, pinned: false});\n            return;\n        }\n        let roster_width,\n            panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 50,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow || pinned)) {\n            panel_width = 1536;\n            roster_width = 300;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n            roster_width = 250;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n            roster_width = (width - toolbar_width - 20) * 2 / 9;\n        }\n        if (!expanded) {\n            roster_width = is_wide ? 48 : 44;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        let panel_gap = (width - panel_width) / 2,\n            left_gap = panel_gap - toolbar_width,\n            right_gap = panel_gap - roster_width;\n        this.roster_view.$('.expanded-wrap').switchClass('solid',\n                (!pinned && (!is_wide || right_gap < 0)));\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.roster_view.setCustomCss({width: roster_width});\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n    },\n\n    renderOwnDevices: function ($elem) {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices, $elem);\n            this.updateOwnFingerprint($elem);\n        });\n    },\n\n    render: function () {\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices, $elem) {\n        let devices_count = _.keys(devices).length,\n            $container = $elem,\n            device_tokens_id_list = [];\n        $container.find('.all-sessions .token-wrap').each((idx, item) => {\n            device_tokens_id_list.push({device_id: Number($(item).attr('data-token-uid').slice(0,8)), $elem: $(item)});\n        });\n        $container.find('.orphaned-fingerprints').addClass(\"hidden\");\n        for (let device_id in devices) {\n            let device = devices[device_id],\n                device_token_id = device_tokens_id_list.find(obj => {\n                    return obj.device_id == Number(device_id);\n                }),\n                $device_container;\n            if (device_id == this.omemo.get('device_id'))\n                continue;\n            if (device_token_id)\n                $device_container = device_token_id.$elem;\n            else {\n                $device_container = $('<div class=\"token-wrap\"></div>')\n                $container.find('.orphaned-fingerprints .orphaned-fingerprints-wrap').append($device_container);\n                $container.find('.orphaned-fingerprints').removeClass(\"hidden\");\n            }\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                options.show_label = !device_token_id ? true : false;\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $device_container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                $device_container.find('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        options.show_label = !device_token_id ? true : false;\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $device_container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                        $device_container.find('.dropdown-button').dropdown({\n                            inDuration: 100,\n                            outDuration: 100,\n                            constrainWidth: false,\n                            hover: false,\n                            container: this.$('.fingerprints-content')[0],\n                            alignment: 'left'\n                        });\n                    }\n                }, () => {\n                });\n            }\n        };\n    },\n\n    updateOwnFingerprint: async function ($elem) {\n        let omemo = this.account.omemo,\n            $container = $elem.find('.current-session .token-wrap');\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    $container.append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    $container.append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    $container.append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            fingerprint = $target.find('.fingerprint .value').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id .value').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.account.omemo.own_devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            fingerprint = $target.find('.fingerprint .value').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id .value').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.account.omemo.own_devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = true,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            show_label = options.show_label,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);ж\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_devices_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error, show_label});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            device_id = Number($target.find('div.device-id .value').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                // $target.detach(); // что-то придумать с удалением\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        // $target.detach(); // что-то придумать с удалением\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle();\n           this.set('resend_bundle', false);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey)\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on('device_published', this.publishBundle, this);\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    omemo.publishDevice(device_id, label, () => {\n                        this.account.trigger('device_published');\n                    });\n                }\n                else\n                    this.account.trigger('device_published');\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        omemo.publishDevice(device_id, label, () => {\n                            this.account.trigger('device_published');\n                        });\n                    }\n                    else\n                        this.account.trigger('device_published');\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied)\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve(trust);\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                else\n                                    is_trusted = null;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            });\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(xabber.accounts.connected[0].omemo.bundle.preKeys, 'keyId').last().keyId;\n            for (let i = ++last_id; last_id + missing_keys; i++)\n                await this.bundle.generatePreKey(i);\n            this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function () {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            return;\n        }\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, () => {\n                this.publish(spk, ik.pubKey, pks);\n            }, (err) => {\n                if (($(err).find('error').attr('code') == 404))\n                    this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                        this.publish(spk, ik.pubKey, pks);\n                    });\n            });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.txt\": 24058\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90255;","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 1161,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":65,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":67,\"is\":0,\"it\":72,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":19,\"no\":0,\"oc\":13,\"pa-IN\":0,\"pl\":66,\"pt-BR\":71,\"pt-PT\":15,\"qya-AA\":0,\"ro\":16,\"ru\":69,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":28,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":38,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":13,\"yo\":0,\"zh-CN\":38,\"zh-TW\":11,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.3.58\",\"version_description\":\"fixed loader for json files\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","constants","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","CLIENT_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","xabber_i18next","xabber_i18next_sprintf","sha256","magnificPopup","Strophe","evaluate","interpolate","templates","insertSvg","html","$html","find","each","$el","this","svg_name","data","removeClass","addClass","attr","svg","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","is_svg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","includes","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","clientHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","cacheFavicons","extendFunction","check_config","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","lang","language","loadTranslations","Promise","reject","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","console","warn","log","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","notifications","notifications_private","notifications_group","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollTop","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","offsetTop","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","connection","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","new_attrs","stamp","uniqueId","isScreen","right","right_force_close","right_contact","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","showAllChats","closest","is_active","showChats","showGroupChats","showArchive","showChatsByAccount","right_contact_save","showSearch","showContacts","showMentions","showSettings","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","showAbout","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","top","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","once","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","content","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","updateSidePanelSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","side_panel_settings","transparency_switched","cid","jumpToBlock","$tab","$elem","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","setSidePanelTheme","setSidePanelBlur","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","switchTransparency","is_switched","changeNotificationsVolume","volume","sound","changeTransparency","changeVignetting","switchVignetting","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","screen_name","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","innerWidth","innerHeight","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","is_fast","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","settings_right","account_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","last_auth","ip_address","ip","x_tokens_list","updateXTokens","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","omemo","getRetractVersion","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","activate","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","block_name","has_settings_right","settings_left","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","onloadend","b64","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","container","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","dropdown_settings","store","showResources","resource_id","hideResources","trustDevice","omemo_own_devices","ignoreDevice","deleteDevice","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","$cur_token_html","current_token_item","$token_html","token_item","renderOwnDevices","has_keys","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","openBlockWindow","block","blockContact","unblockSelected","blocklist","deselectBlocked","global_settings_item","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","stop","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","acc_settings_left","Container","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","supports","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","GEOLOC","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","deleteTimedHandler","_ping_handler","addTimedHandler","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_fast_ping_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","groups","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","chat_settings","b64_sha1","updateCachedInfo","is_deleted","out_request","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","sendPresent","_sending_present_interval","sendNotPresent","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","$msg","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","references","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","showQRCode","qrcode","VanillaQR","noBorder","domElement","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","updateForParticipant","delegateEvents","filter_type","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","media_items_empty","messages_count","msg_items","fail","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","groupchat_settings","resetParticipantsList","resetParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","getMessages","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","removeParticipantFromList","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","participant_info","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","groups_settings","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","onSyncIQ","last_version_sync","syncCachedConversations","conv_list","request_with_stamp","syncConversation","conversation","parseXML","saved","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","retracted_msg_id_list","putInCachedConversations","account_conversation_type","updateEncryptedChat","updateMutedList","removeFromCachedConversations","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","last_message","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","encrypted_retract_version","retract_version","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","synced_conversations","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_right","updateTheme","updateTransparency","updateLayout","pinned","expand","collaps","roster_state_changed","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","clearStorage","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","RosterRightView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","participant_message","echo_msg","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","getConversationType","SYNCHRONIZATION_REGULAR_CHAT","message_counter","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","wheelPropagation","loading_history","history_loaded","first_msg_id","last_msg_id","_scrolltop","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","_prev_scrolltop","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","onChangedReadState","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","showDayIndicator","indicator_idx","opacity_value","$chatday_indicator","$messages","indicator","is_saved","connected_deferred","pending_deferred","connected_pending_deferred","_pending_time","_interval","getMessageArchive","previous_history","_load_history_timeout","last_history","last_msg","last_archive_id","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","fwd_images","fwd_unique_id","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","video_file","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","setRequestHeader","response_text","error_status","statusText","files_","file_new_format","imgContent","video_attrs","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","msg_item","active_right_screen","participant_msg_item","is_encrypted","$retracted_msg","retracted_msg_id","cacheRetractVersion","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","not_encrypted","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","showPlaceholder","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","group_chats_pinned","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","all_chats","all_chats_pinned","message_item","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","MediaRecorder","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","marker","markup_ref","start_length","delta","markup_reference","editMessage","setText","msg_author","image_preview","$img_html_preview","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","cached_messages","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","updateHeight","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","_get_msg_handler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateRosterLayout","is_wide","is_narrow","roster_width","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","right_contact_panel_styles","right_contact_panel_saveable","panel_gap","right_gap","wide","placeholders","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","padStart","is_session_initiated","trust","delete_button","edit_setting","fingerprint_item","device_tokens_id_list","$device_container","device_token_id","show_label","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}